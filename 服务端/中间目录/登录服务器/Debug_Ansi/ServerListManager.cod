; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\登录服务器\ServerListManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	?data@CPlex@@QAEPAXXZ				; CPlex::data
PUBLIC	??0CGameListItem@NServerListManager@@IAE@XZ	; NServerListManager::CGameListItem::CGameListItem
PUBLIC	??0CGameTypeItem@NServerListManager@@QAE@XZ	; NServerListManager::CGameTypeItem::CGameTypeItem
PUBLIC	??0CGameKindItem@NServerListManager@@QAE@XZ	; NServerListManager::CGameKindItem::CGameKindItem
PUBLIC	??0CGameNodeItem@NServerListManager@@QAE@XZ	; NServerListManager::CGameNodeItem::CGameNodeItem
PUBLIC	??0CGamePageItem@NServerListManager@@QAE@XZ	; NServerListManager::CGamePageItem::CGamePageItem
PUBLIC	??0CGameServerItem@NServerListManager@@QAE@XZ	; NServerListManager::CGameServerItem::CGameServerItem
PUBLIC	??0?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@H@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>
PUBLIC	?Lookup@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameTypeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::Lookup
PUBLIC	??A?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::operator[]
PUBLIC	?SetAt@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameTypeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::SetAt
PUBLIC	?RemoveKey@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameTypeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetAssocAt
PUBLIC	??1?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>
PUBLIC	?Serialize@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::Serialize
PUBLIC	?Dump@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::Dump
PUBLIC	?AssertValid@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UBEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::AssertValid
PUBLIC	??_G?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::`scalar deleting destructor'
PUBLIC	??0?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@H@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>
PUBLIC	?Lookup@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Lookup
PUBLIC	??A?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::operator[]
PUBLIC	?SetAt@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::SetAt
PUBLIC	?RemoveKey@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetAssocAt
PUBLIC	??1?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>
PUBLIC	?Serialize@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Serialize
PUBLIC	?Dump@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Dump
PUBLIC	?AssertValid@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UBEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::AssertValid
PUBLIC	??_G?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::`scalar deleting destructor'
PUBLIC	??0?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@H@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>
PUBLIC	?Lookup@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameNodeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::Lookup
PUBLIC	??A?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::operator[]
PUBLIC	?SetAt@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameNodeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::SetAt
PUBLIC	?RemoveKey@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameNodeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetAssocAt
PUBLIC	??1?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>
PUBLIC	?Serialize@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::Serialize
PUBLIC	?Dump@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::Dump
PUBLIC	?AssertValid@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UBEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::AssertValid
PUBLIC	??_G?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::`scalar deleting destructor'
PUBLIC	??0?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@H@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>
PUBLIC	?Lookup@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGamePageItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::Lookup
PUBLIC	??A?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::operator[]
PUBLIC	?SetAt@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGamePageItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::SetAt
PUBLIC	?RemoveKey@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGamePageItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetAssocAt
PUBLIC	??1?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>
PUBLIC	?Serialize@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::Serialize
PUBLIC	?Dump@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::Dump
PUBLIC	?AssertValid@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UBEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::AssertValid
PUBLIC	??_G?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::`scalar deleting destructor'
PUBLIC	??0?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@H@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>
PUBLIC	?Lookup@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameServerItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::Lookup
PUBLIC	??A?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::operator[]
PUBLIC	?SetAt@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameServerItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::SetAt
PUBLIC	?RemoveKey@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameServerItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetAssocAt
PUBLIC	??1?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>
PUBLIC	?Serialize@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::Serialize
PUBLIC	?Dump@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::Dump
PUBLIC	?AssertValid@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UBEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::AssertValid
PUBLIC	??_G?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAE@XZ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>
PUBLIC	??1?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::~CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>
PUBLIC	?GetCount@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameTypeItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::Add
PUBLIC	?ElementAt@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameTypeItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXXZ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAE@XZ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>
PUBLIC	??1?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::~CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>
PUBLIC	?GetCount@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameKindItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::Add
PUBLIC	?ElementAt@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameKindItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXXZ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAE@XZ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>
PUBLIC	??1?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::~CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>
PUBLIC	?GetCount@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameNodeItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::Add
PUBLIC	?ElementAt@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameNodeItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXXZ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAE@XZ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>
PUBLIC	??1?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::~CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>
PUBLIC	?GetCount@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGamePageItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::Add
PUBLIC	?ElementAt@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGamePageItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXXZ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAE@XZ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>
PUBLIC	??1?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::~CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>
PUBLIC	?GetCount@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameServerItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::Add
PUBLIC	?ElementAt@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameServerItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXXZ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::`scalar deleting destructor'
PUBLIC	??0CServerListManager@NServerListManager@@QAE@XZ ; NServerListManager::CServerListManager::CServerListManager
PUBLIC	??1CServerListManager@NServerListManager@@UAE@XZ ; NServerListManager::CServerListManager::~CServerListManager
PUBLIC	?ResetServerList@CServerListManager@NServerListManager@@QAEXXZ ; NServerListManager::CServerListManager::ResetServerList
PUBLIC	?CleanKernelItem@CServerListManager@NServerListManager@@QAEXXZ ; NServerListManager::CServerListManager::CleanKernelItem
PUBLIC	?CleanServerItem@CServerListManager@NServerListManager@@QAEXXZ ; NServerListManager::CServerListManager::CleanServerItem
PUBLIC	?DisuseKernelItem@CServerListManager@NServerListManager@@QAEXXZ ; NServerListManager::CServerListManager::DisuseKernelItem
PUBLIC	?DisuseServerItem@CServerListManager@NServerListManager@@QAEXXZ ; NServerListManager::CServerListManager::DisuseServerItem
PUBLIC	?CollectOnlineInfo@CServerListManager@NServerListManager@@QAEK_N@Z ; NServerListManager::CServerListManager::CollectOnlineInfo
PUBLIC	?CollectOnlineInfo@CServerListManager@NServerListManager@@QAEKG_N@Z ; NServerListManager::CServerListManager::CollectOnlineInfo
PUBLIC	?CollectSetPlayer@CServerListManager@NServerListManager@@QAEKG@Z ; NServerListManager::CServerListManager::CollectSetPlayer
PUBLIC	?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z ; NServerListManager::CServerListManager::InsertGameType
PUBLIC	?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z ; NServerListManager::CServerListManager::InsertGameKind
PUBLIC	?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z ; NServerListManager::CServerListManager::InsertGameNode
PUBLIC	?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z ; NServerListManager::CServerListManager::InsertGamePage
PUBLIC	?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z ; NServerListManager::CServerListManager::InsertGameServer
PUBLIC	?DeleteGameType@CServerListManager@NServerListManager@@QAE_NG@Z ; NServerListManager::CServerListManager::DeleteGameType
PUBLIC	?DeleteGameKind@CServerListManager@NServerListManager@@QAE_NG@Z ; NServerListManager::CServerListManager::DeleteGameKind
PUBLIC	?DeleteGameNode@CServerListManager@NServerListManager@@QAE_NG@Z ; NServerListManager::CServerListManager::DeleteGameNode
PUBLIC	?DeleteGamePage@CServerListManager@NServerListManager@@QAE_NG@Z ; NServerListManager::CServerListManager::DeleteGamePage
PUBLIC	?DeleteGameServer@CServerListManager@NServerListManager@@QAE_NG@Z ; NServerListManager::CServerListManager::DeleteGameServer
PUBLIC	?EmunGameTypeItem@CServerListManager@NServerListManager@@QAEPAVCGameTypeItem@2@AAPAU__POSITION@@@Z ; NServerListManager::CServerListManager::EmunGameTypeItem
PUBLIC	?EmunGameKindItem@CServerListManager@NServerListManager@@QAEPAVCGameKindItem@2@AAPAU__POSITION@@@Z ; NServerListManager::CServerListManager::EmunGameKindItem
PUBLIC	?EmunGameNodeItem@CServerListManager@NServerListManager@@QAEPAVCGameNodeItem@2@AAPAU__POSITION@@@Z ; NServerListManager::CServerListManager::EmunGameNodeItem
PUBLIC	?EmunGamePageItem@CServerListManager@NServerListManager@@QAEPAVCGamePageItem@2@AAPAU__POSITION@@@Z ; NServerListManager::CServerListManager::EmunGamePageItem
PUBLIC	?EmunGameServerItem@CServerListManager@NServerListManager@@QAEPAVCGameServerItem@2@AAPAU__POSITION@@@Z ; NServerListManager::CServerListManager::EmunGameServerItem
PUBLIC	?SearchGameType@CServerListManager@NServerListManager@@QAEPAVCGameTypeItem@2@G@Z ; NServerListManager::CServerListManager::SearchGameType
PUBLIC	?SearchGameKind@CServerListManager@NServerListManager@@QAEPAVCGameKindItem@2@G@Z ; NServerListManager::CServerListManager::SearchGameKind
PUBLIC	?SearchGameNode@CServerListManager@NServerListManager@@QAEPAVCGameNodeItem@2@G@Z ; NServerListManager::CServerListManager::SearchGameNode
PUBLIC	?SearchGamePage@CServerListManager@NServerListManager@@QAEPAVCGamePageItem@2@G@Z ; NServerListManager::CServerListManager::SearchGamePage
PUBLIC	?SearchGameServer@CServerListManager@NServerListManager@@QAEPAVCGameServerItem@2@G@Z ; NServerListManager::CServerListManager::SearchGameServer
PUBLIC	??_GCServerListManager@NServerListManager@@UAEPAXI@Z ; NServerListManager::CServerListManager::`scalar deleting destructor'
PUBLIC	??0CPair@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::CAssoc::CAssoc
PUBLIC	??$HashKey@G@@YGIG@Z				; HashKey<unsigned short>
PUBLIC	??$CompareElements@GG@@YGHPBG0@Z		; CompareElements<unsigned short,unsigned short>
PUBLIC	??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z	; SerializeElements<unsigned short>
PUBLIC	??$SerializeElements@PAVCGameTypeItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameTypeItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGameTypeItem *>
PUBLIC	??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z	; DumpElements<unsigned short>
PUBLIC	??$DumpElements@PAVCGameTypeItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameTypeItem@NServerListManager@@H@Z ; DumpElements<NServerListManager::CGameTypeItem *>
PUBLIC	??0CPair@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::CAssoc::CAssoc
PUBLIC	??$SerializeElements@PAVCGameKindItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameKindItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGameKindItem *>
PUBLIC	??$DumpElements@PAVCGameKindItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameKindItem@NServerListManager@@H@Z ; DumpElements<NServerListManager::CGameKindItem *>
PUBLIC	??0CPair@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::CAssoc::CAssoc
PUBLIC	??$SerializeElements@PAVCGameNodeItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameNodeItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGameNodeItem *>
PUBLIC	??$DumpElements@PAVCGameNodeItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameNodeItem@NServerListManager@@H@Z ; DumpElements<NServerListManager::CGameNodeItem *>
PUBLIC	??0CPair@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::CAssoc::CAssoc
PUBLIC	??$SerializeElements@PAVCGamePageItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGamePageItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGamePageItem *>
PUBLIC	??$DumpElements@PAVCGamePageItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGamePageItem@NServerListManager@@H@Z ; DumpElements<NServerListManager::CGamePageItem *>
PUBLIC	??0CPair@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::CAssoc::CAssoc
PUBLIC	??$SerializeElements@PAVCGameServerItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameServerItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGameServerItem *>
PUBLIC	??$DumpElements@PAVCGameServerItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameServerItem@NServerListManager@@H@Z ; DumpElements<NServerListManager::CGameServerItem *>
PUBLIC	??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_05PLCFPPOI@with?5@			; `string'
PUBLIC	??_C@_09HCLNAIDE@?5elements@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_7?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::`vftable'
PUBLIC	??_7?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::`vftable'
PUBLIC	??_7?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::`vftable'
PUBLIC	??_7?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::`vftable'
PUBLIC	??_7?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::`vftable'
PUBLIC	??_7?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::`vftable'
PUBLIC	??_7?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::`vftable'
PUBLIC	??_7?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::`vftable'
PUBLIC	??_7?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::`vftable'
PUBLIC	??_7?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::`vftable'
PUBLIC	??_7CServerListManager@NServerListManager@@6B@	; NServerListManager::CServerListManager::`vftable'
PUBLIC	?__LINE__Var@?0???1CServerListManager@NServerListManager@@UAE@XZ@4JA ; `NServerListManager::CServerListManager::~CServerListManager'::`1'::__LINE__Var
PUBLIC	??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	?__LINE__Var@?0??InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z@4JA ; `NServerListManager::CServerListManager::InsertGameType'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z@4JA ; `NServerListManager::CServerListManager::InsertGameKind'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z@4JA ; `NServerListManager::CServerListManager::InsertGameNode'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z@4JA ; `NServerListManager::CServerListManager::InsertGamePage'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z@4JA ; `NServerListManager::CServerListManager::InsertGameServer'::`1'::__LINE__Var
PUBLIC	??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_C@_03OHJIHPJH@?6?7?$FL@			; `string'
PUBLIC	??_C@_04OAFLPOMH@?$FN?5?$DN?5@			; `string'
PUBLIC	??_R4?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@@8 ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@@8 ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@@8 ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@@8 ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@@8 ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CServerListManager@NServerListManager@@6B@	; NServerListManager::CServerListManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCServerListManager@NServerListManager@@@8 ; NServerListManager::CServerListManager `RTTI Type Descriptor'
PUBLIC	??_R3CServerListManager@NServerListManager@@8	; NServerListManager::CServerListManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CServerListManager@NServerListManager@@8	; NServerListManager::CServerListManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CServerListManager@NServerListManager@@8 ; NServerListManager::CServerListManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__ldiv:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z:PROC ; AfxAssertValidObject
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	??1CObject@@UAE@XZ:PROC				; CObject::~CObject
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
EXTRN	??0CObject@@IAE@XZ:PROC				; CObject::CObject
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	?AssertValid@CObject@@UBEXXZ:PROC		; CObject::AssertValid
EXTRN	?Dump@CObject@@UBEXAAVCDumpContext@@@Z:PROC	; CObject::Dump
EXTRN	?AfxIsValidAddress@@YGHPBXIH@Z:PROC		; AfxIsValidAddress
EXTRN	??_U@YAPAXIPBDH@Z:PROC				; operator new[]
EXTRN	?IsStoring@CArchive@@QBEHXZ:PROC		; CArchive::IsStoring
EXTRN	?EnsureRead@CArchive@@QAEXPAXI@Z:PROC		; CArchive::EnsureRead
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?GetDepth@CDumpContext@@QBEHXZ:PROC		; CDumpContext::GetDepth
EXTRN	??6CDumpContext@@QAEAAV0@PBD@Z:PROC		; CDumpContext::operator<<
EXTRN	??6CDumpContext@@QAEAAV0@H@Z:PROC		; CDumpContext::operator<<
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	?FreeDataChain@CPlex@@QAEXXZ:PROC		; CPlex::FreeDataChain
EXTRN	??_E?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z:PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::`vector deleting destructor'
EXTRN	??_E?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z:PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::`vector deleting destructor'
EXTRN	??_E?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z:PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::`vector deleting destructor'
EXTRN	??_E?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z:PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::`vector deleting destructor'
EXTRN	??_E?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z:PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z:PROC ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z:PROC ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z:PROC ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z:PROC ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z:PROC ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::`vector deleting destructor'
EXTRN	??_ECServerListManager@NServerListManager@@UAEPAXI@Z:PROC ; NServerListManager::CServerListManager::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@CServerListManager@NServerListManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CServerListManager@NServerListManager@@8 DD FLAT:??_R0?AVCServerListManager@NServerListManager@@@8 ; NServerListManager::CServerListManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CServerListManager@NServerListManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CServerListManager@NServerListManager@@8
rdata$r	SEGMENT
??_R2CServerListManager@NServerListManager@@8 DD FLAT:??_R1A@?0A@EA@CServerListManager@NServerListManager@@8 ; NServerListManager::CServerListManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CServerListManager@NServerListManager@@8
rdata$r	SEGMENT
??_R3CServerListManager@NServerListManager@@8 DD 00H	; NServerListManager::CServerListManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CServerListManager@NServerListManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCServerListManager@NServerListManager@@@8
data$r	SEGMENT
??_R0?AVCServerListManager@NServerListManager@@@8 DD FLAT:??_7type_info@@6B@ ; NServerListManager::CServerListManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCServerListManager@NServerListManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CServerListManager@NServerListManager@@6B@
rdata$r	SEGMENT
??_R4CServerListManager@NServerListManager@@6B@ DD 00H	; NServerListManager::CServerListManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCServerListManager@NServerListManager@@@8
	DD	FLAT:??_R3CServerListManager@NServerListManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@8 DD FLAT:??_R0?AV?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R2?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R3?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@8 DD 00H ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@@8
data$r	SEGMENT
??_R0?AV?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPA'
	DB	'V12@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@6B@ DD 00H ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@@8
	DD	FLAT:??_R3?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@8 DD FLAT:??_R0?AV?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R2?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R3?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@8 DD 00H ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@@8
data$r	SEGMENT
??_R0?AV?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV1'
	DB	'2@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@6B@ DD 00H ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@@8
	DD	FLAT:??_R3?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@8 DD FLAT:??_R0?AV?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R2?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R3?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@8 DD 00H ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@@8
data$r	SEGMENT
??_R0?AV?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV1'
	DB	'2@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@6B@ DD 00H ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@@8
	DD	FLAT:??_R3?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@8 DD FLAT:??_R0?AV?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R2?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R3?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@8 DD 00H ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@@8
data$r	SEGMENT
??_R0?AV?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV1'
	DB	'2@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@6B@ DD 00H ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@@8
	DD	FLAT:??_R3?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@8 DD FLAT:??_R0?AV?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R2?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@8 ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@8
rdata$r	SEGMENT
??_R3?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@8 DD 00H ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@@8
data$r	SEGMENT
??_R0?AV?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV1'
	DB	'2@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@6B@ DD 00H ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@@8
	DD	FLAT:??_R3?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@8 DD FLAT:??_R0?AV?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@@8 ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@8 DD 00H ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAVCGameServerItem@NServerListManager@@AB'
	DB	'QAV12@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@6B@ DD 00H ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@@8
	DD	FLAT:??_R3?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@8 DD FLAT:??_R0?AV?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@@8 ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@8 DD 00H ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQA'
	DB	'V12@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@6B@ DD 00H ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@@8
	DD	FLAT:??_R3?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@8 DD FLAT:??_R0?AV?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@@8 ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@8 DD 00H ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQA'
	DB	'V12@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@6B@ DD 00H ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@@8
	DD	FLAT:??_R3?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@8 DD FLAT:??_R0?AV?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@@8 ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@8 DD 00H ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQA'
	DB	'V12@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@6B@ DD 00H ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@@8
	DD	FLAT:??_R3?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@8 DD FLAT:??_R0?AV?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@@8 ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@8 ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@8 DD 00H ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQA'
	DB	'V12@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@6B@ DD 00H ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@@8
	DD	FLAT:??_R3?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@8
rdata$r	ENDS
;	COMDAT ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
CONST	SEGMENT
??_C@_04OAFLPOMH@?$FN?5?$DN?5@ DB '] = ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OHJIHPJH@?6?7?$FL@
CONST	SEGMENT
??_C@_03OHJIHPJH@?6?7?$FL@ DB 0aH, 09H, '[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\a'
	DB	'rray.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z@4JA DD 0267H ; `NServerListManager::CServerListManager::InsertGameServer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z@4JA DD 023dH ; `NServerListManager::CServerListManager::InsertGamePage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z@4JA DD 0213H ; `NServerListManager::CServerListManager::InsertGameNode'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z@4JA DD 01e9H ; `NServerListManager::CServerListManager::InsertGameKind'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z@4JA DD 01bfH ; `NServerListManager::CServerListManager::InsertGameType'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0b5H, 0c7H, 0c2H, 0bcH, 0b7H, 0feH, 0ceH, 0f1H, 0c6H
	DB	0f7H, '\serverlistmanager.cpp', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???1CServerListManager@NServerListManager@@UAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CServerListManager@NServerListManager@@UAE@XZ@4JA DD 04dH ; `NServerListManager::CServerListManager::~CServerListManager'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7CServerListManager@NServerListManager@@6B@
CONST	SEGMENT
??_7CServerListManager@NServerListManager@@6B@ DD FLAT:??_R4CServerListManager@NServerListManager@@6B@ ; NServerListManager::CServerListManager::`vftable'
	DD	FLAT:??_ECServerListManager@NServerListManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@6B@ DD FLAT:??_R4?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@6B@ DD FLAT:??_R4?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@6B@ DD FLAT:??_R4?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@6B@ DD FLAT:??_R4?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@6B@ DD FLAT:??_R4?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@6B@ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@6B@
CONST	SEGMENT
??_7?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@6B@ DD FLAT:??_R4?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@6B@
CONST	SEGMENT
??_7?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@6B@ DD FLAT:??_R4?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@6B@
CONST	SEGMENT
??_7?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@6B@ DD FLAT:??_R4?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@6B@
CONST	SEGMENT
??_7?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@6B@ DD FLAT:??_R4?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@6B@
CONST	SEGMENT
??_7?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@6B@ DD FLAT:??_R4?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@6B@ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$r	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09HCLNAIDE@?5elements@
CONST	SEGMENT
??_C@_09HCLNAIDE@?5elements@ DB ' elements', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05PLCFPPOI@with?5@
CONST	SEGMENT
??_C@_05PLCFPPOI@with?5@ DB 'with ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\atlmfc\include\afxtempl.h', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z$0
__tryblocktable$?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z$3
__unwindtable$?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z$0
__tryblocktable$?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z$3
__unwindtable$?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z$0
__tryblocktable$?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z$3
__unwindtable$?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z$0
__tryblocktable$?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z$3
__unwindtable$?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z$0
__tryblocktable$?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z$3
__unwindtable$?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$39 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CServerListManager@NServerListManager@@UAE@XZ$18
__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$38 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CServerListManager@NServerListManager@@UAE@XZ$16
__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$37 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CServerListManager@NServerListManager@@UAE@XZ$14
__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$36 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CServerListManager@NServerListManager@@UAE@XZ$12
__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$35 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CServerListManager@NServerListManager@@UAE@XZ$10
__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$34 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CServerListManager@NServerListManager@@UAE@XZ$8
__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$33 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CServerListManager@NServerListManager@@UAE@XZ$6
__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$32 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CServerListManager@NServerListManager@@UAE@XZ$4
__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$31 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CServerListManager@NServerListManager@@UAE@XZ$2
__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$30 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CServerListManager@NServerListManager@@UAE@XZ$0
__ehfuncinfo$??1CServerListManager@NServerListManager@@UAE@XZ DD 019930522H
	DD	01eH
	DD	FLAT:__unwindtable$??1CServerListManager@NServerListManager@@UAE@XZ
	DD	0aH
	DD	FLAT:__tryblocktable$??1CServerListManager@NServerListManager@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__tryblocktable$??1CServerListManager@NServerListManager@@UAE@XZ DD 0aH
	DD	0aH
	DD	0bH
	DD	01H
	DD	FLAT:__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$30
	DD	0cH
	DD	0cH
	DD	0dH
	DD	01H
	DD	FLAT:__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$31
	DD	0eH
	DD	0eH
	DD	0fH
	DD	01H
	DD	FLAT:__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$32
	DD	010H
	DD	010H
	DD	011H
	DD	01H
	DD	FLAT:__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$33
	DD	012H
	DD	012H
	DD	013H
	DD	01H
	DD	FLAT:__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$34
	DD	014H
	DD	014H
	DD	015H
	DD	01H
	DD	FLAT:__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$35
	DD	016H
	DD	016H
	DD	017H
	DD	01H
	DD	FLAT:__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$36
	DD	018H
	DD	018H
	DD	019H
	DD	01H
	DD	FLAT:__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$37
	DD	01aH
	DD	01aH
	DD	01bH
	DD	01H
	DD	FLAT:__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$38
	DD	01cH
	DD	01cH
	DD	01dH
	DD	01H
	DD	FLAT:__catchsym$??1CServerListManager@NServerListManager@@UAE@XZ$39
__unwindtable$??1CServerListManager@NServerListManager@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$20
	DD	00H
	DD	FLAT:__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$21
	DD	01H
	DD	FLAT:__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$22
	DD	02H
	DD	FLAT:__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$23
	DD	03H
	DD	FLAT:__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$24
	DD	04H
	DD	FLAT:__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$25
	DD	05H
	DD	FLAT:__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$26
	DD	06H
	DD	FLAT:__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$27
	DD	07H
	DD	FLAT:__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$28
	DD	08H
	DD	FLAT:__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$29
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CServerListManager@NServerListManager@@QAE@XZ DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$??0CServerListManager@NServerListManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CServerListManager@NServerListManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$9
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@PAVCGameServerItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameServerItem@NServerListManager@@H@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@PAVCGameServerItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameServerItem@NServerListManager@@H@Z PROC ; DumpElements<NServerListManager::CGameServerItem *>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@PAVCGameServerItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameServerItem@NServerListManager@@H@Z ENDP ; DumpElements<NServerListManager::CGameServerItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCGameServerItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameServerItem@NServerListManager@@H@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCGameServerItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameServerItem@NServerListManager@@H@Z PROC ; SerializeElements<NServerListManager::CGameServerItem *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@PAVCGameServerItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameServerItem@NServerListManager@@H@Z ENDP ; SerializeElements<NServerListManager::CGameServerItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??0CAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CPair@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::CPair::CPair
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 2
??0CPair@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAE@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 4d 08	 mov	 cx, WORD PTR _keyval$[ebp]
  00013	66 89 08	 mov	 WORD PTR [eax], cx
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0CPair@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAE@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@PAVCGamePageItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGamePageItem@NServerListManager@@H@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@PAVCGamePageItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGamePageItem@NServerListManager@@H@Z PROC ; DumpElements<NServerListManager::CGamePageItem *>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@PAVCGamePageItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGamePageItem@NServerListManager@@H@Z ENDP ; DumpElements<NServerListManager::CGamePageItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCGamePageItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGamePageItem@NServerListManager@@H@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCGamePageItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGamePageItem@NServerListManager@@H@Z PROC ; SerializeElements<NServerListManager::CGamePageItem *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@PAVCGamePageItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGamePageItem@NServerListManager@@H@Z ENDP ; SerializeElements<NServerListManager::CGamePageItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??0CAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CPair@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::CPair::CPair
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 2
??0CPair@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAE@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 4d 08	 mov	 cx, WORD PTR _keyval$[ebp]
  00013	66 89 08	 mov	 WORD PTR [eax], cx
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0CPair@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAE@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@PAVCGameNodeItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameNodeItem@NServerListManager@@H@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@PAVCGameNodeItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameNodeItem@NServerListManager@@H@Z PROC ; DumpElements<NServerListManager::CGameNodeItem *>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@PAVCGameNodeItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameNodeItem@NServerListManager@@H@Z ENDP ; DumpElements<NServerListManager::CGameNodeItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCGameNodeItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameNodeItem@NServerListManager@@H@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCGameNodeItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameNodeItem@NServerListManager@@H@Z PROC ; SerializeElements<NServerListManager::CGameNodeItem *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@PAVCGameNodeItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameNodeItem@NServerListManager@@H@Z ENDP ; SerializeElements<NServerListManager::CGameNodeItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??0CAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CPair@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::CPair::CPair
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 2
??0CPair@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAE@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 4d 08	 mov	 cx, WORD PTR _keyval$[ebp]
  00013	66 89 08	 mov	 WORD PTR [eax], cx
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0CPair@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAE@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@PAVCGameKindItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameKindItem@NServerListManager@@H@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@PAVCGameKindItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameKindItem@NServerListManager@@H@Z PROC ; DumpElements<NServerListManager::CGameKindItem *>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@PAVCGameKindItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameKindItem@NServerListManager@@H@Z ENDP ; DumpElements<NServerListManager::CGameKindItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCGameKindItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameKindItem@NServerListManager@@H@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCGameKindItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameKindItem@NServerListManager@@H@Z PROC ; SerializeElements<NServerListManager::CGameKindItem *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@PAVCGameKindItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameKindItem@NServerListManager@@H@Z ENDP ; SerializeElements<NServerListManager::CGameKindItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??0CAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CPair@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::CPair::CPair
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 2
??0CPair@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAE@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 4d 08	 mov	 cx, WORD PTR _keyval$[ebp]
  00013	66 89 08	 mov	 WORD PTR [eax], cx
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0CPair@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAE@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@PAVCGameTypeItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameTypeItem@NServerListManager@@H@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@PAVCGameTypeItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameTypeItem@NServerListManager@@H@Z PROC ; DumpElements<NServerListManager::CGameTypeItem *>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@PAVCGameTypeItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameTypeItem@NServerListManager@@H@Z ENDP ; DumpElements<NServerListManager::CGameTypeItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z PROC	; DumpElements<unsigned short>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 29		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	d1 e0		 shl	 eax, 1
  00061	50		 push	 eax
  00062	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006b	85 c0		 test	 eax, eax
  0006d	75 14		 jne	 SHORT $LN6@DumpElemen
  0006f	68 8c 00 00 00	 push	 140			; 0000008cH
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00079	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007e	85 c0		 test	 eax, eax
  00080	74 01		 je	 SHORT $LN6@DumpElemen
  00082	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z ENDP	; DumpElements<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCGameTypeItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameTypeItem@NServerListManager@@H@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCGameTypeItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameTypeItem@NServerListManager@@H@Z PROC ; SerializeElements<NServerListManager::CGameTypeItem *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@PAVCGameTypeItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameTypeItem@NServerListManager@@H@Z ENDP ; SerializeElements<NServerListManager::CGameTypeItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z PROC	; SerializeElements<unsigned short>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 26		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	d1 e0		 shl	 eax, 1
  0005e	50		 push	 eax
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00068	85 c0		 test	 eax, eax
  0006a	75 11		 jne	 SHORT $LN16@SerializeE
  0006c	6a 46		 push	 70			; 00000046H
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00073	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00078	85 c0		 test	 eax, eax
  0007a	74 01		 je	 SHORT $LN16@SerializeE
  0007c	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007d	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00080	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00085	85 c0		 test	 eax, eax
  00087	74 5b		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  00089	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008c	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  0008f	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00092	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00095	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  00099	76 47		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009b	81 7d f4 ff ff
	ff 3f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 1073741823 ; 3fffffffH
  000a2	73 08		 jae	 SHORT $LN17@SerializeE
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a7	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000aa	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ac	c7 45 a0 ff ff
	ff 3f		 mov	 DWORD PTR tv92[ebp], 1073741823 ; 3fffffffH
$LN18@SerializeE:
  000b3	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b6	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000b9	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bc	d1 e0		 shl	 eax, 1
  000be	50		 push	 eax
  000bf	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c2	51		 push	 ecx
  000c3	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c6	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cb	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000ce	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d1	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d4	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d7	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000da	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  000dd	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e0	eb b3		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e2	eb 59		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e4	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e7	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ea	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ed	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f0	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f4	76 47		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f6	81 7d e8 ff ff
	ff 3f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 1073741823 ; 3fffffffH
  000fd	73 08		 jae	 SHORT $LN19@SerializeE
  000ff	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00102	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00105	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00107	c7 45 a0 ff ff
	ff 3f		 mov	 DWORD PTR tv134[ebp], 1073741823 ; 3fffffffH
$LN20@SerializeE:
  0010e	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00111	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00114	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00117	d1 e0		 shl	 eax, 1
  00119	50		 push	 eax
  0011a	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  0011d	51		 push	 ecx
  0011e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00121	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00126	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00129	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012c	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  0012f	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00132	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00135	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00138	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013b	eb b3		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  0013d	5f		 pop	 edi
  0013e	5e		 pop	 esi
  0013f	5b		 pop	 ebx
  00140	8b e5		 mov	 esp, ebp
  00142	5d		 pop	 ebp
  00143	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ENDP	; SerializeElements<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$CompareElements@GG@@YGHPBG0@Z
_TEXT	SEGMENT
tv130 = -72						; size = 4
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_pElement1$ = 8						; size = 4
_pElement2$ = 12					; size = 4
??$CompareElements@GG@@YGHPBG0@Z PROC			; CompareElements<unsigned short,unsigned short>, COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@CompareEle:

; 152  : 	ENSURE(pElement1 != NULL && pElement2 != NULL);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pElement1$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@CompareEle
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElement2$[ebp], 0
  00013	74 09		 je	 SHORT $LN7@CompareEle
  00015	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001c	eb 07		 jmp	 SHORT $LN8@CompareEle
$LN7@CompareEle:
  0001e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN8@CompareEle:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@CompareEle
  00031	68 98 00 00 00	 push	 152			; 00000098H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@CompareEle
  00044	cc		 int	 3
$LN9@CompareEle:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@CompareEle
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@CompareEle:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@CompareEle

; 153  : 	ASSERT(AfxIsValidAddress(pElement1, sizeof(TYPE), FALSE));

  00054	6a 00		 push	 0
  00056	6a 02		 push	 2
  00058	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00061	85 c0		 test	 eax, eax
  00063	75 14		 jne	 SHORT $LN10@CompareEle
  00065	68 99 00 00 00	 push	 153			; 00000099H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00074	85 c0		 test	 eax, eax
  00076	74 01		 je	 SHORT $LN10@CompareEle
  00078	cc		 int	 3
$LN10@CompareEle:

; 154  : 	ASSERT(AfxIsValidAddress(pElement2, sizeof(ARG_TYPE), FALSE));

  00079	6a 00		 push	 0
  0007b	6a 02		 push	 2
  0007d	8b 45 0c	 mov	 eax, DWORD PTR _pElement2$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00086	85 c0		 test	 eax, eax
  00088	75 14		 jne	 SHORT $LN11@CompareEle
  0008a	68 9a 00 00 00	 push	 154			; 0000009aH
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00094	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00099	85 c0		 test	 eax, eax
  0009b	74 01		 je	 SHORT $LN11@CompareEle
  0009d	cc		 int	 3
$LN11@CompareEle:

; 155  : 
; 156  : 	return *pElement1 == *pElement2;

  0009e	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  000a1	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a4	8b 55 0c	 mov	 edx, DWORD PTR _pElement2$[ebp]
  000a7	0f b7 02	 movzx	 eax, WORD PTR [edx]
  000aa	3b c8		 cmp	 ecx, eax
  000ac	75 09		 jne	 SHORT $LN12@CompareEle
  000ae	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv130[ebp], 1
  000b5	eb 07		 jmp	 SHORT $LN13@CompareEle
$LN12@CompareEle:
  000b7	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN13@CompareEle:
  000be	8b 45 b8	 mov	 eax, DWORD PTR tv130[ebp]
$LN6@CompareEle:

; 157  : }

  000c1	5f		 pop	 edi
  000c2	5e		 pop	 esi
  000c3	5b		 pop	 ebx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c2 08 00	 ret	 8
??$CompareElements@GG@@YGHPBG0@Z ENDP			; CompareElements<unsigned short,unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$HashKey@G@@YGIG@Z
_TEXT	SEGMENT
$T1 = -80						; size = 8
_HashVal$ = -8						; size = 8
_key$ = 8						; size = 2
??$HashKey@G@@YGIG@Z PROC				; HashKey<unsigned short>, COMDAT

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 162  : 	// (algorithm copied from STL hash in xfunctional)
; 163  : #pragma warning(suppress: 4302) // 'type cast' : truncation
; 164  : #pragma warning(suppress: 4311) // pointer truncation
; 165  : 	ldiv_t HashVal = ldiv((long)(ARG_KEY)key, 127773);

  00009	68 1d f3 01 00	 push	 127773			; 0001f31dH
  0000e	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00012	50		 push	 eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ldiv
  00019	83 c4 08	 add	 esp, 8
  0001c	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0001f	89 55 b4	 mov	 DWORD PTR $T1[ebp+4], edx
  00022	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  00025	89 4d f8	 mov	 DWORD PTR _HashVal$[ebp], ecx
  00028	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp+4]
  0002b	89 55 fc	 mov	 DWORD PTR _HashVal$[ebp+4], edx

; 166  : 	HashVal.rem = 16807 * HashVal.rem - 2836 * HashVal.quot;

  0002e	69 45 fc a7 41
	00 00		 imul	 eax, DWORD PTR _HashVal$[ebp+4], 16807
  00035	69 4d f8 14 0b
	00 00		 imul	 ecx, DWORD PTR _HashVal$[ebp], 2836
  0003c	2b c1		 sub	 eax, ecx
  0003e	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax

; 167  : 	if (HashVal.rem < 0)

  00041	79 0b		 jns	 SHORT $LN2@HashKey

; 168  : 		HashVal.rem += 2147483647;

  00043	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]
  00046	05 ff ff ff 7f	 add	 eax, 2147483647		; 7fffffffH
  0004b	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax
$LN2@HashKey:

; 169  : 	return ((UINT)HashVal.rem);

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]

; 170  : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??$HashKey@G@@YGIG@Z ENDP				; HashKey<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??0CAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CPair@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::CPair::CPair
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 2
??0CPair@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAE@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 4d 08	 mov	 cx, WORD PTR _keyval$[ebp]
  00013	66 89 08	 mov	 WORD PTR [eax], cx
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0CPair@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAE@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCServerListManager@NServerListManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCServerListManager@NServerListManager@@UAEPAXI@Z PROC ; NServerListManager::CServerListManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CServerListManager@NServerListManager@@UAE@XZ ; NServerListManager::CServerListManager::~CServerListManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 f4 00 00 00	 push	 244			; 000000f4H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCServerListManager@NServerListManager@@UAEPAXI@Z ENDP ; NServerListManager::CServerListManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?SearchGameServer@CServerListManager@NServerListManager@@QAEPAVCGameServerItem@2@G@Z
_TEXT	SEGMENT
_pGameServerItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wServerID$ = 8						; size = 2
?SearchGameServer@CServerListManager@NServerListManager@@QAEPAVCGameServerItem@2@G@Z PROC ; NServerListManager::CServerListManager::SearchGameServer, COMDAT
; _this$ = ecx

; 897  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 898  : 	CGameServerItem * pGameServerItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGameServerItem$[ebp], 0

; 899  : 	m_ServerItemMap.Lookup(wServerID,pGameServerItem);

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGameServerItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wServerID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 74	 add	 ecx, 116		; 00000074H
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameServerItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::Lookup

; 900  : 	return pGameServerItem;

  00027	8b 45 f8	 mov	 eax, DWORD PTR _pGameServerItem$[ebp]

; 901  : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?SearchGameServer@CServerListManager@NServerListManager@@QAEPAVCGameServerItem@2@G@Z ENDP ; NServerListManager::CServerListManager::SearchGameServer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?SearchGamePage@CServerListManager@NServerListManager@@QAEPAVCGamePageItem@2@G@Z
_TEXT	SEGMENT
_pGamePageItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wPageID$ = 8						; size = 2
?SearchGamePage@CServerListManager@NServerListManager@@QAEPAVCGamePageItem@2@G@Z PROC ; NServerListManager::CServerListManager::SearchGamePage, COMDAT
; _this$ = ecx

; 905  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 906  : 	CGamePageItem * pGamePageItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGamePageItem$[ebp], 0

; 907  : 	m_PageItemMap.Lookup(wPageID,pGamePageItem);

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGamePageItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wPageID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 58	 add	 ecx, 88			; 00000058H
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGamePageItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::Lookup

; 908  : 	return pGamePageItem;

  00027	8b 45 f8	 mov	 eax, DWORD PTR _pGamePageItem$[ebp]

; 909  : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?SearchGamePage@CServerListManager@NServerListManager@@QAEPAVCGamePageItem@2@G@Z ENDP ; NServerListManager::CServerListManager::SearchGamePage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?SearchGameNode@CServerListManager@NServerListManager@@QAEPAVCGameNodeItem@2@G@Z
_TEXT	SEGMENT
_pGameNodeItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wNodeID$ = 8						; size = 2
?SearchGameNode@CServerListManager@NServerListManager@@QAEPAVCGameNodeItem@2@G@Z PROC ; NServerListManager::CServerListManager::SearchGameNode, COMDAT
; _this$ = ecx

; 889  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 890  : 	CGameNodeItem * pGameNodeItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGameNodeItem$[ebp], 0

; 891  : 	m_NodeItemMap.Lookup(wNodeID,pGameNodeItem);

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGameNodeItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wNodeID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameNodeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::Lookup

; 892  : 	return pGameNodeItem;

  00027	8b 45 f8	 mov	 eax, DWORD PTR _pGameNodeItem$[ebp]

; 893  : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?SearchGameNode@CServerListManager@NServerListManager@@QAEPAVCGameNodeItem@2@G@Z ENDP ; NServerListManager::CServerListManager::SearchGameNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?SearchGameKind@CServerListManager@NServerListManager@@QAEPAVCGameKindItem@2@G@Z
_TEXT	SEGMENT
_pGameKindItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wKindID$ = 8						; size = 2
?SearchGameKind@CServerListManager@NServerListManager@@QAEPAVCGameKindItem@2@G@Z PROC ; NServerListManager::CServerListManager::SearchGameKind, COMDAT
; _this$ = ecx

; 881  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 882  : 	CGameKindItem * pGameKindItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGameKindItem$[ebp], 0

; 883  : 	m_KindItemMap.Lookup(wKindID,pGameKindItem);

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGameKindItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wKindID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 20	 add	 ecx, 32			; 00000020H
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Lookup

; 884  : 	return pGameKindItem;

  00027	8b 45 f8	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]

; 885  : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?SearchGameKind@CServerListManager@NServerListManager@@QAEPAVCGameKindItem@2@G@Z ENDP ; NServerListManager::CServerListManager::SearchGameKind
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?SearchGameType@CServerListManager@NServerListManager@@QAEPAVCGameTypeItem@2@G@Z
_TEXT	SEGMENT
_pGameTypeItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wTypeID$ = 8						; size = 2
?SearchGameType@CServerListManager@NServerListManager@@QAEPAVCGameTypeItem@2@G@Z PROC ; NServerListManager::CServerListManager::SearchGameType, COMDAT
; _this$ = ecx

; 873  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 874  : 	CGameTypeItem * pGameTypeItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGameTypeItem$[ebp], 0

; 875  : 	m_TypeItemMap.Lookup(wTypeID,pGameTypeItem);

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGameTypeItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wTypeID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 04	 add	 ecx, 4
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameTypeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::Lookup

; 876  : 	return pGameTypeItem;

  00027	8b 45 f8	 mov	 eax, DWORD PTR _pGameTypeItem$[ebp]

; 877  : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?SearchGameType@CServerListManager@NServerListManager@@QAEPAVCGameTypeItem@2@G@Z ENDP ; NServerListManager::CServerListManager::SearchGameType
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?EmunGameServerItem@CServerListManager@NServerListManager@@QAEPAVCGameServerItem@2@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_pGameServerItem$ = -12					; size = 4
_wKey$ = -8						; size = 2
_this$ = -4						; size = 4
_Position$ = 8						; size = 4
?EmunGameServerItem@CServerListManager@NServerListManager@@QAEPAVCGameServerItem@2@AAPAU__POSITION@@@Z PROC ; NServerListManager::CServerListManager::EmunGameServerItem, COMDAT
; _this$ = ecx

; 845  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 846  : 	//变量定义
; 847  : 	WORD wKey=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wKey$[ebp], ax

; 848  : 	CGameServerItem * pGameServerItem=NULL;

  00012	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGameServerItem$[ebp], 0

; 849  : 
; 850  : 	//获取对象
; 851  : 	if (Position==NULL) Position=m_ServerItemMap.GetStartPosition();

  00019	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  0001c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001f	75 10		 jne	 SHORT $LN2@EmunGameSe
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 74	 add	 ecx, 116		; 00000074H
  00027	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetStartPosition
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _Position$[ebp]
  0002f	89 01		 mov	 DWORD PTR [ecx], eax
$LN2@EmunGameSe:

; 852  : 	if (Position!=NULL) m_ServerItemMap.GetNextAssoc(Position,wKey,pGameServerItem);

  00031	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  00034	83 38 00	 cmp	 DWORD PTR [eax], 0
  00037	74 17		 je	 SHORT $LN3@EmunGameSe
  00039	8d 45 f4	 lea	 eax, DWORD PTR _pGameServerItem$[ebp]
  0003c	50		 push	 eax
  0003d	8d 4d f8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR _Position$[ebp]
  00044	52		 push	 edx
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	83 c1 74	 add	 ecx, 116		; 00000074H
  0004b	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameServerItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetNextAssoc
$LN3@EmunGameSe:

; 853  : 
; 854  : 	return pGameServerItem;

  00050	8b 45 f4	 mov	 eax, DWORD PTR _pGameServerItem$[ebp]

; 855  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?EmunGameServerItem@CServerListManager@NServerListManager@@QAEPAVCGameServerItem@2@AAPAU__POSITION@@@Z ENDP ; NServerListManager::CServerListManager::EmunGameServerItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?EmunGamePageItem@CServerListManager@NServerListManager@@QAEPAVCGamePageItem@2@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_pGamePageItem$ = -12					; size = 4
_wKey$ = -8						; size = 2
_this$ = -4						; size = 4
_Position$ = 8						; size = 4
?EmunGamePageItem@CServerListManager@NServerListManager@@QAEPAVCGamePageItem@2@AAPAU__POSITION@@@Z PROC ; NServerListManager::CServerListManager::EmunGamePageItem, COMDAT
; _this$ = ecx

; 859  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 860  : 	//变量定义
; 861  : 	WORD wKey=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wKey$[ebp], ax

; 862  : 	CGamePageItem * pGamePageItem=NULL;

  00012	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGamePageItem$[ebp], 0

; 863  : 
; 864  : 	//获取对象
; 865  : 	if (Position==NULL) Position=m_PageItemMap.GetStartPosition();

  00019	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  0001c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001f	75 10		 jne	 SHORT $LN2@EmunGamePa
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 58	 add	 ecx, 88			; 00000058H
  00027	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetStartPosition
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _Position$[ebp]
  0002f	89 01		 mov	 DWORD PTR [ecx], eax
$LN2@EmunGamePa:

; 866  : 	if (Position!=NULL) m_PageItemMap.GetNextAssoc(Position,wKey,pGamePageItem);

  00031	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  00034	83 38 00	 cmp	 DWORD PTR [eax], 0
  00037	74 17		 je	 SHORT $LN3@EmunGamePa
  00039	8d 45 f4	 lea	 eax, DWORD PTR _pGamePageItem$[ebp]
  0003c	50		 push	 eax
  0003d	8d 4d f8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR _Position$[ebp]
  00044	52		 push	 edx
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	83 c1 58	 add	 ecx, 88			; 00000058H
  0004b	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGamePageItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetNextAssoc
$LN3@EmunGamePa:

; 867  : 
; 868  : 	return pGamePageItem;

  00050	8b 45 f4	 mov	 eax, DWORD PTR _pGamePageItem$[ebp]

; 869  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?EmunGamePageItem@CServerListManager@NServerListManager@@QAEPAVCGamePageItem@2@AAPAU__POSITION@@@Z ENDP ; NServerListManager::CServerListManager::EmunGamePageItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?EmunGameNodeItem@CServerListManager@NServerListManager@@QAEPAVCGameNodeItem@2@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_pGameNodeItem$ = -12					; size = 4
_wKey$ = -8						; size = 2
_this$ = -4						; size = 4
_Position$ = 8						; size = 4
?EmunGameNodeItem@CServerListManager@NServerListManager@@QAEPAVCGameNodeItem@2@AAPAU__POSITION@@@Z PROC ; NServerListManager::CServerListManager::EmunGameNodeItem, COMDAT
; _this$ = ecx

; 831  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 832  : 	//变量定义
; 833  : 	WORD wKey=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wKey$[ebp], ax

; 834  : 	CGameNodeItem * pGameNodeItem=NULL;

  00012	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGameNodeItem$[ebp], 0

; 835  : 
; 836  : 	//获取对象
; 837  : 	if (Position==NULL) Position=m_NodeItemMap.GetStartPosition();

  00019	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  0001c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001f	75 10		 jne	 SHORT $LN2@EmunGameNo
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00027	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetStartPosition
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _Position$[ebp]
  0002f	89 01		 mov	 DWORD PTR [ecx], eax
$LN2@EmunGameNo:

; 838  : 	if (Position!=NULL) m_NodeItemMap.GetNextAssoc(Position,wKey,pGameNodeItem);

  00031	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  00034	83 38 00	 cmp	 DWORD PTR [eax], 0
  00037	74 17		 je	 SHORT $LN3@EmunGameNo
  00039	8d 45 f4	 lea	 eax, DWORD PTR _pGameNodeItem$[ebp]
  0003c	50		 push	 eax
  0003d	8d 4d f8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR _Position$[ebp]
  00044	52		 push	 edx
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0004b	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameNodeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetNextAssoc
$LN3@EmunGameNo:

; 839  : 
; 840  : 	return pGameNodeItem;

  00050	8b 45 f4	 mov	 eax, DWORD PTR _pGameNodeItem$[ebp]

; 841  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?EmunGameNodeItem@CServerListManager@NServerListManager@@QAEPAVCGameNodeItem@2@AAPAU__POSITION@@@Z ENDP ; NServerListManager::CServerListManager::EmunGameNodeItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?EmunGameKindItem@CServerListManager@NServerListManager@@QAEPAVCGameKindItem@2@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_pGameKindItem$ = -12					; size = 4
_wKey$ = -8						; size = 2
_this$ = -4						; size = 4
_Position$ = 8						; size = 4
?EmunGameKindItem@CServerListManager@NServerListManager@@QAEPAVCGameKindItem@2@AAPAU__POSITION@@@Z PROC ; NServerListManager::CServerListManager::EmunGameKindItem, COMDAT
; _this$ = ecx

; 817  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 818  : 	//变量定义
; 819  : 	WORD wKey=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wKey$[ebp], ax

; 820  : 	CGameKindItem * pGameKindItem=NULL;

  00012	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGameKindItem$[ebp], 0

; 821  : 
; 822  : 	//获取对象
; 823  : 	if (Position==NULL) Position=m_KindItemMap.GetStartPosition();

  00019	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  0001c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001f	75 10		 jne	 SHORT $LN2@EmunGameKi
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 20	 add	 ecx, 32			; 00000020H
  00027	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetStartPosition
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _Position$[ebp]
  0002f	89 01		 mov	 DWORD PTR [ecx], eax
$LN2@EmunGameKi:

; 824  : 	if (Position!=NULL) m_KindItemMap.GetNextAssoc(Position,wKey,pGameKindItem);

  00031	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  00034	83 38 00	 cmp	 DWORD PTR [eax], 0
  00037	74 17		 je	 SHORT $LN3@EmunGameKi
  00039	8d 45 f4	 lea	 eax, DWORD PTR _pGameKindItem$[ebp]
  0003c	50		 push	 eax
  0003d	8d 4d f8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR _Position$[ebp]
  00044	52		 push	 edx
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	83 c1 20	 add	 ecx, 32			; 00000020H
  0004b	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetNextAssoc
$LN3@EmunGameKi:

; 825  : 
; 826  : 	return pGameKindItem;

  00050	8b 45 f4	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]

; 827  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?EmunGameKindItem@CServerListManager@NServerListManager@@QAEPAVCGameKindItem@2@AAPAU__POSITION@@@Z ENDP ; NServerListManager::CServerListManager::EmunGameKindItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?EmunGameTypeItem@CServerListManager@NServerListManager@@QAEPAVCGameTypeItem@2@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_pGameTypeItem$ = -12					; size = 4
_wKey$ = -8						; size = 2
_this$ = -4						; size = 4
_Position$ = 8						; size = 4
?EmunGameTypeItem@CServerListManager@NServerListManager@@QAEPAVCGameTypeItem@2@AAPAU__POSITION@@@Z PROC ; NServerListManager::CServerListManager::EmunGameTypeItem, COMDAT
; _this$ = ecx

; 803  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 804  : 	//变量定义
; 805  : 	WORD wKey=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wKey$[ebp], ax

; 806  : 	CGameTypeItem * pGameTypeItem=NULL;

  00012	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGameTypeItem$[ebp], 0

; 807  : 
; 808  : 	//获取对象
; 809  : 	if (Position==NULL) Position=m_TypeItemMap.GetStartPosition();

  00019	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  0001c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001f	75 10		 jne	 SHORT $LN2@EmunGameTy
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 04	 add	 ecx, 4
  00027	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetStartPosition
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _Position$[ebp]
  0002f	89 01		 mov	 DWORD PTR [ecx], eax
$LN2@EmunGameTy:

; 810  : 	if (Position!=NULL) m_TypeItemMap.GetNextAssoc(Position,wKey,pGameTypeItem);

  00031	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  00034	83 38 00	 cmp	 DWORD PTR [eax], 0
  00037	74 17		 je	 SHORT $LN3@EmunGameTy
  00039	8d 45 f4	 lea	 eax, DWORD PTR _pGameTypeItem$[ebp]
  0003c	50		 push	 eax
  0003d	8d 4d f8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR _Position$[ebp]
  00044	52		 push	 edx
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	83 c1 04	 add	 ecx, 4
  0004b	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameTypeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetNextAssoc
$LN3@EmunGameTy:

; 811  : 
; 812  : 	return pGameTypeItem;

  00050	8b 45 f4	 mov	 eax, DWORD PTR _pGameTypeItem$[ebp]

; 813  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?EmunGameTypeItem@CServerListManager@NServerListManager@@QAEPAVCGameTypeItem@2@AAPAU__POSITION@@@Z ENDP ; NServerListManager::CServerListManager::EmunGameTypeItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?DeleteGameServer@CServerListManager@NServerListManager@@QAE_NG@Z
_TEXT	SEGMENT
tv152 = -84						; size = 4
tv140 = -84						; size = 4
tv128 = -84						; size = 4
_pGameServer$1 = -16					; size = 4
_pGameKindItem$ = -12					; size = 4
_pGameServerItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wServerID$ = 8						; size = 2
?DeleteGameServer@CServerListManager@NServerListManager@@QAE_NG@Z PROC ; NServerListManager::CServerListManager::DeleteGameServer, COMDAT
; _this$ = ecx

; 762  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 763  : 	//查找房间
; 764  : 	CGameServerItem * pGameServerItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGameServerItem$[ebp], 0

; 765  : 	if (m_ServerItemMap.Lookup(wServerID,pGameServerItem)==FALSE) return false;

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGameServerItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wServerID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 74	 add	 ecx, 116		; 00000074H
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameServerItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::Lookup
  00027	85 c0		 test	 eax, eax
  00029	75 07		 jne	 SHORT $LN2@DeleteGame
  0002b	32 c0		 xor	 al, al
  0002d	e9 e1 00 00 00	 jmp	 $LN1@DeleteGame
$LN2@DeleteGame:

; 766  : 
; 767  : 	//删除数据
; 768  : 	m_ServerItemMap.RemoveKey(wServerID);

  00032	0f b7 45 08	 movzx	 eax, WORD PTR _wServerID$[ebp]
  00036	50		 push	 eax
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 74	 add	 ecx, 116		; 00000074H
  0003d	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::RemoveKey

; 769  : 	m_ServerItemBuffer.Add(pGameServerItem);

  00042	8d 45 f8	 lea	 eax, DWORD PTR _pGameServerItem$[ebp]
  00045	50		 push	 eax
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  0004f	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameServerItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::Add

; 770  : 
; 771  : 	//设置人数
; 772  : 	CGameKindItem * pGameKindItem=NULL;

  00054	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGameKindItem$[ebp], 0

; 773  : 	if (m_KindItemMap.Lookup(pGameServerItem->m_GameServer.wKindID,pGameKindItem)==TRUE)

  0005b	8d 45 f4	 lea	 eax, DWORD PTR _pGameKindItem$[ebp]
  0005e	50		 push	 eax
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _pGameServerItem$[ebp]
  00062	0f b7 51 01	 movzx	 edx, WORD PTR [ecx+1]
  00066	52		 push	 edx
  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	83 c1 20	 add	 ecx, 32			; 00000020H
  0006d	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Lookup
  00072	83 f8 01	 cmp	 eax, 1
  00075	0f 85 96 00 00
	00		 jne	 $LN3@DeleteGame

; 774  : 	{
; 775  : 		tagGameServer * pGameServer=&pGameServerItem->m_GameServer;

  0007b	8b 45 f8	 mov	 eax, DWORD PTR _pGameServerItem$[ebp]
  0007e	83 c0 01	 add	 eax, 1
  00081	89 45 f0	 mov	 DWORD PTR _pGameServer$1[ebp], eax

; 776  : 		pGameKindItem->m_GameKind.dwOnLineCount= __max(pGameKindItem->m_GameKind.dwOnLineCount-pGameServer->dwOnLineCount,0);

  00084	8b 45 f4	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  00087	8b 4d f0	 mov	 ecx, DWORD PTR _pGameServer$1[ebp]
  0008a	8b 50 0f	 mov	 edx, DWORD PTR [eax+15]
  0008d	2b 51 25	 sub	 edx, DWORD PTR [ecx+37]
  00090	74 11		 je	 SHORT $LN5@DeleteGame
  00092	8b 45 f4	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  00095	8b 4d f0	 mov	 ecx, DWORD PTR _pGameServer$1[ebp]
  00098	8b 50 0f	 mov	 edx, DWORD PTR [eax+15]
  0009b	2b 51 25	 sub	 edx, DWORD PTR [ecx+37]
  0009e	89 55 ac	 mov	 DWORD PTR tv128[ebp], edx
  000a1	eb 07		 jmp	 SHORT $LN6@DeleteGame
$LN5@DeleteGame:
  000a3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN6@DeleteGame:
  000aa	8b 45 f4	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  000ad	8b 4d ac	 mov	 ecx, DWORD PTR tv128[ebp]
  000b0	89 48 0f	 mov	 DWORD PTR [eax+15], ecx

; 777  : 		pGameKindItem->m_GameKind.dwFullCount = __max(pGameKindItem->m_GameKind.dwFullCount-pGameServer->dwFullCount,0);

  000b3	8b 45 f4	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  000b6	8b 4d f0	 mov	 ecx, DWORD PTR _pGameServer$1[ebp]
  000b9	8b 50 1b	 mov	 edx, DWORD PTR [eax+27]
  000bc	2b 51 2d	 sub	 edx, DWORD PTR [ecx+45]
  000bf	74 11		 je	 SHORT $LN7@DeleteGame
  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  000c4	8b 4d f0	 mov	 ecx, DWORD PTR _pGameServer$1[ebp]
  000c7	8b 50 1b	 mov	 edx, DWORD PTR [eax+27]
  000ca	2b 51 2d	 sub	 edx, DWORD PTR [ecx+45]
  000cd	89 55 ac	 mov	 DWORD PTR tv140[ebp], edx
  000d0	eb 07		 jmp	 SHORT $LN8@DeleteGame
$LN7@DeleteGame:
  000d2	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN8@DeleteGame:
  000d9	8b 45 f4	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  000dc	8b 4d ac	 mov	 ecx, DWORD PTR tv140[ebp]
  000df	89 48 1b	 mov	 DWORD PTR [eax+27], ecx

; 778  : 		pGameKindItem->m_GameKind.dwAndroidCount = __max(pGameKindItem->m_GameKind.dwAndroidCount-pGameServer->dwAndroidCount,0);

  000e2	8b 45 f4	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  000e5	8b 4d f0	 mov	 ecx, DWORD PTR _pGameServer$1[ebp]
  000e8	8b 50 13	 mov	 edx, DWORD PTR [eax+19]
  000eb	2b 51 29	 sub	 edx, DWORD PTR [ecx+41]
  000ee	74 11		 je	 SHORT $LN9@DeleteGame
  000f0	8b 45 f4	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  000f3	8b 4d f0	 mov	 ecx, DWORD PTR _pGameServer$1[ebp]
  000f6	8b 50 13	 mov	 edx, DWORD PTR [eax+19]
  000f9	2b 51 29	 sub	 edx, DWORD PTR [ecx+41]
  000fc	89 55 ac	 mov	 DWORD PTR tv152[ebp], edx
  000ff	eb 07		 jmp	 SHORT $LN10@DeleteGame
$LN9@DeleteGame:
  00101	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN10@DeleteGame:
  00108	8b 45 f4	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  0010b	8b 4d ac	 mov	 ecx, DWORD PTR tv152[ebp]
  0010e	89 48 13	 mov	 DWORD PTR [eax+19], ecx
$LN3@DeleteGame:

; 779  : 	}
; 780  : 
; 781  : 	return false;

  00111	32 c0		 xor	 al, al
$LN1@DeleteGame:

; 782  : }

  00113	5f		 pop	 edi
  00114	5e		 pop	 esi
  00115	5b		 pop	 ebx
  00116	8b e5		 mov	 esp, ebp
  00118	5d		 pop	 ebp
  00119	c2 04 00	 ret	 4
?DeleteGameServer@CServerListManager@NServerListManager@@QAE_NG@Z ENDP ; NServerListManager::CServerListManager::DeleteGameServer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?DeleteGamePage@CServerListManager@NServerListManager@@QAE_NG@Z
_TEXT	SEGMENT
_pGamePageItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wPageID$ = 8						; size = 2
?DeleteGamePage@CServerListManager@NServerListManager@@QAE_NG@Z PROC ; NServerListManager::CServerListManager::DeleteGamePage, COMDAT
; _this$ = ecx

; 786  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 787  : 	//查找类型
; 788  : 	CGamePageItem * pGamePageItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGamePageItem$[ebp], 0

; 789  : 	if (m_PageItemMap.Lookup(wPageID,pGamePageItem)==FALSE) return false;

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGamePageItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wPageID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 58	 add	 ecx, 88			; 00000058H
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGamePageItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::Lookup
  00027	85 c0		 test	 eax, eax
  00029	75 04		 jne	 SHORT $LN2@DeleteGame
  0002b	32 c0		 xor	 al, al
  0002d	eb 34		 jmp	 SHORT $LN1@DeleteGame
$LN2@DeleteGame:

; 790  : 
; 791  : 	//删除数据
; 792  : 	m_PageItemMap.RemoveKey(wPageID);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _wPageID$[ebp]
  00033	50		 push	 eax
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 58	 add	 ecx, 88			; 00000058H
  0003a	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::RemoveKey

; 793  : 	m_PageItemBuffer.Add(pGamePageItem);

  0003f	8d 45 f8	 lea	 eax, DWORD PTR _pGamePageItem$[ebp]
  00042	50		 push	 eax
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  0004c	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGamePageItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::Add

; 794  : 
; 795  : 	//设置变量
; 796  : 	ZeroMemory(pGamePageItem,sizeof(CGamePageItem));

  00051	6a 2b		 push	 43			; 0000002bH
  00053	6a 00		 push	 0
  00055	8b 45 f8	 mov	 eax, DWORD PTR _pGamePageItem$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 _memset
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 797  : 
; 798  : 	return true;

  00061	b0 01		 mov	 al, 1
$LN1@DeleteGame:

; 799  : }

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
?DeleteGamePage@CServerListManager@NServerListManager@@QAE_NG@Z ENDP ; NServerListManager::CServerListManager::DeleteGamePage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?DeleteGameNode@CServerListManager@NServerListManager@@QAE_NG@Z
_TEXT	SEGMENT
_pGameNodeItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wNodeID$ = 8						; size = 2
?DeleteGameNode@CServerListManager@NServerListManager@@QAE_NG@Z PROC ; NServerListManager::CServerListManager::DeleteGameNode, COMDAT
; _this$ = ecx

; 745  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 746  : 	//查找节点
; 747  : 	CGameNodeItem * pGameNodeItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGameNodeItem$[ebp], 0

; 748  : 	if (m_NodeItemMap.Lookup(wNodeID,pGameNodeItem)==FALSE) return false;

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGameNodeItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wNodeID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameNodeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::Lookup
  00027	85 c0		 test	 eax, eax
  00029	75 04		 jne	 SHORT $LN2@DeleteGame
  0002b	32 c0		 xor	 al, al
  0002d	eb 34		 jmp	 SHORT $LN1@DeleteGame
$LN2@DeleteGame:

; 749  : 
; 750  : 	//删除数据
; 751  : 	m_NodeItemMap.RemoveKey(wNodeID);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _wNodeID$[ebp]
  00033	50		 push	 eax
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0003a	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::RemoveKey

; 752  : 	m_NodeItemBuffer.Add(pGameNodeItem);

  0003f	8d 45 f8	 lea	 eax, DWORD PTR _pGameNodeItem$[ebp]
  00042	50		 push	 eax
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  0004c	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameNodeItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::Add

; 753  : 
; 754  : 	//设置变量
; 755  : 	ZeroMemory(pGameNodeItem,sizeof(CGameNodeItem));

  00051	6a 29		 push	 41			; 00000029H
  00053	6a 00		 push	 0
  00055	8b 45 f8	 mov	 eax, DWORD PTR _pGameNodeItem$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 _memset
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 756  : 
; 757  : 	return false;

  00061	32 c0		 xor	 al, al
$LN1@DeleteGame:

; 758  : }

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
?DeleteGameNode@CServerListManager@NServerListManager@@QAE_NG@Z ENDP ; NServerListManager::CServerListManager::DeleteGameNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?DeleteGameKind@CServerListManager@NServerListManager@@QAE_NG@Z
_TEXT	SEGMENT
_pGameKindItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wKindID$ = 8						; size = 2
?DeleteGameKind@CServerListManager@NServerListManager@@QAE_NG@Z PROC ; NServerListManager::CServerListManager::DeleteGameKind, COMDAT
; _this$ = ecx

; 728  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 729  : 	//查找类型
; 730  : 	CGameKindItem * pGameKindItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGameKindItem$[ebp], 0

; 731  : 	if (m_KindItemMap.Lookup(wKindID,pGameKindItem)==FALSE) return false;

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGameKindItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wKindID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 20	 add	 ecx, 32			; 00000020H
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Lookup
  00027	85 c0		 test	 eax, eax
  00029	75 04		 jne	 SHORT $LN2@DeleteGame
  0002b	32 c0		 xor	 al, al
  0002d	eb 34		 jmp	 SHORT $LN1@DeleteGame
$LN2@DeleteGame:

; 732  : 
; 733  : 	//删除数据
; 734  : 	m_KindItemMap.RemoveKey(wKindID);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _wKindID$[ebp]
  00033	50		 push	 eax
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 20	 add	 ecx, 32			; 00000020H
  0003a	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::RemoveKey

; 735  : 	m_KindItemBuffer.Add(pGameKindItem);

  0003f	8d 45 f8	 lea	 eax, DWORD PTR _pGameKindItem$[ebp]
  00042	50		 push	 eax
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  0004c	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameKindItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::Add

; 736  : 
; 737  : 	//设置变量
; 738  : 	ZeroMemory(pGameKindItem,sizeof(CGameKindItem));

  00051	6a 5f		 push	 95			; 0000005fH
  00053	6a 00		 push	 0
  00055	8b 45 f8	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 _memset
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 739  : 
; 740  : 	return true;

  00061	b0 01		 mov	 al, 1
$LN1@DeleteGame:

; 741  : }

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
?DeleteGameKind@CServerListManager@NServerListManager@@QAE_NG@Z ENDP ; NServerListManager::CServerListManager::DeleteGameKind
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?DeleteGameType@CServerListManager@NServerListManager@@QAE_NG@Z
_TEXT	SEGMENT
_pGameTypeItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wTypeID$ = 8						; size = 2
?DeleteGameType@CServerListManager@NServerListManager@@QAE_NG@Z PROC ; NServerListManager::CServerListManager::DeleteGameType, COMDAT
; _this$ = ecx

; 714  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 715  : 	//查找种类
; 716  : 	CGameTypeItem * pGameTypeItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGameTypeItem$[ebp], 0

; 717  : 	if (m_TypeItemMap.Lookup(wTypeID,pGameTypeItem)==FALSE) return false;

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGameTypeItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wTypeID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 04	 add	 ecx, 4
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameTypeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::Lookup
  00027	85 c0		 test	 eax, eax
  00029	75 04		 jne	 SHORT $LN2@DeleteGame
  0002b	32 c0		 xor	 al, al
  0002d	eb 24		 jmp	 SHORT $LN1@DeleteGame
$LN2@DeleteGame:

; 718  : 
; 719  : 	//删除数据
; 720  : 	m_TypeItemMap.RemoveKey(wTypeID);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _wTypeID$[ebp]
  00033	50		 push	 eax
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 04	 add	 ecx, 4
  0003a	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::RemoveKey

; 721  : 	m_TypeItemBuffer.Add(pGameTypeItem);

  0003f	8d 45 f8	 lea	 eax, DWORD PTR _pGameTypeItem$[ebp]
  00042	50		 push	 eax
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  0004c	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameTypeItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::Add

; 722  : 
; 723  : 	return true;

  00051	b0 01		 mov	 al, 1
$LN1@DeleteGame:

; 724  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?DeleteGameType@CServerListManager@NServerListManager@@QAE_NG@Z ENDP ; NServerListManager::CServerListManager::DeleteGameType
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z
_TEXT	SEGMENT
tv136 = -144						; size = 4
tv261 = -140						; size = 4
tv258 = -136						; size = 4
tv257 = -136						; size = 4
tv256 = -136						; size = 4
$T2 = -129						; size = 1
$T3 = -128						; size = 4
$T4 = -124						; size = 4
_pGameKindItem$5 = -56					; size = 4
_pGameKindItemCurrent$6 = -52				; size = 4
_pGameKindItemLast$7 = -48				; size = 4
_nStroeCount$8 = -44					; size = 4
_pGameServerItem$ = -40					; size = 4
_dwMaxPlayer$ = -36					; size = 4
_dwAndroidCount$ = -32					; size = 4
_dwOnLineCount$ = -28					; size = 4
_wKindID$ = -24						; size = 2
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pGameServer$ = 8					; size = 4
?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z PROC ; NServerListManager::CServerListManager::InsertGameServer, COMDAT
; _this$ = ecx

; 615  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	50		 push	 eax
  00023	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00026	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002c	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 616  : 	//效验参数
; 617  : 	ASSERT(pGameServer!=NULL);

  00032	83 7d 08 00	 cmp	 DWORD PTR _pGameServer$[ebp], 0
  00036	75 18		 jne	 SHORT $LN15@InsertGame
  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z@4JA
  0003d	83 c0 02	 add	 eax, 2
  00040	50		 push	 eax
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00046	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0004b	85 c0		 test	 eax, eax
  0004d	74 01		 je	 SHORT $LN15@InsertGame
  0004f	cc		 int	 3
$LN15@InsertGame:

; 618  : 	if (pGameServer==NULL) return false;

  00050	83 7d 08 00	 cmp	 DWORD PTR _pGameServer$[ebp], 0
  00054	75 07		 jne	 SHORT $LN2@InsertGame
  00056	32 c0		 xor	 al, al
  00058	e9 02 03 00 00	 jmp	 $LN1@InsertGame
$LN2@InsertGame:

; 619  : 
; 620  : 	//查找房间
; 621  : 	WORD wKindID=0;

  0005d	33 c0		 xor	 eax, eax
  0005f	66 89 45 e8	 mov	 WORD PTR _wKindID$[ebp], ax

; 622  : 	DWORD dwOnLineCount=0L;

  00063	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _dwOnLineCount$[ebp], 0

; 623  : 	DWORD dwAndroidCount=0L;

  0006a	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _dwAndroidCount$[ebp], 0

; 624  : 	DWORD dwMaxPlayer=0L;

  00071	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _dwMaxPlayer$[ebp], 0

; 625  : 	CGameServerItem * pGameServerItem=NULL;

  00078	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _pGameServerItem$[ebp], 0

; 626  : 
; 627  : 	//获取子项
; 628  : 	if (m_ServerItemMap.Lookup(pGameServer->wServerID,pGameServerItem)==FALSE)

  0007f	8d 45 d8	 lea	 eax, DWORD PTR _pGameServerItem$[ebp]
  00082	50		 push	 eax
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _pGameServer$[ebp]
  00086	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  0008a	52		 push	 edx
  0008b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	83 c1 74	 add	 ecx, 116		; 00000074H
  00091	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameServerItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::Lookup
  00096	85 c0		 test	 eax, eax
  00098	0f 85 1a 01 00
	00		 jne	 $LN3@InsertGame

; 629  : 	{
; 630  : 		//创建对象
; 631  : 		try

  0009e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 632  : 		{
; 633  : 			INT_PTR nStroeCount=m_ServerItemBuffer.GetCount();

  000a5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000ae	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::GetCount
  000b3	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv256[ebp], eax
  000b9	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv256[ebp]
  000bf	89 45 d4	 mov	 DWORD PTR _nStroeCount$8[ebp], eax

; 634  : 			if (nStroeCount>0)

  000c2	83 7d d4 00	 cmp	 DWORD PTR _nStroeCount$8[ebp], 0
  000c6	7e 3f		 jle	 SHORT $LN6@InsertGame

; 635  : 			{
; 636  : 				pGameServerItem=m_ServerItemBuffer[nStroeCount-1];

  000c8	8b 45 d4	 mov	 eax, DWORD PTR _nStroeCount$8[ebp]
  000cb	83 e8 01	 sub	 eax, 1
  000ce	50		 push	 eax
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d2	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000d8	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::operator[]
  000dd	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv257[ebp], eax
  000e3	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv257[ebp]
  000e9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000eb	89 55 d8	 mov	 DWORD PTR _pGameServerItem$[ebp], edx

; 637  : 				m_ServerItemBuffer.RemoveAt(nStroeCount-1);

  000ee	6a 01		 push	 1
  000f0	8b 45 d4	 mov	 eax, DWORD PTR _nStroeCount$8[ebp]
  000f3	83 e8 01	 sub	 eax, 1
  000f6	50		 push	 eax
  000f7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fa	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00100	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::RemoveAt

; 638  : 			}
; 639  : 			else

  00105	eb 6c		 jmp	 SHORT $LN7@InsertGame
$LN6@InsertGame:

; 640  : 			{
; 641  : 				pGameServerItem=new CGameServerItem;

  00107	68 1c 03 00 00	 push	 796			; 0000031cH
  0010c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00111	83 c4 04	 add	 esp, 4
  00114	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv258[ebp], eax
  0011a	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv258[ebp]
  00120	89 45 80	 mov	 DWORD PTR $T3[ebp], eax
  00123	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00127	83 7d 80 00	 cmp	 DWORD PTR $T3[ebp], 0
  0012b	74 1c		 je	 SHORT $LN16@InsertGame
  0012d	8b 4d 80	 mov	 ecx, DWORD PTR $T3[ebp]
  00130	e8 00 00 00 00	 call	 ??0CGameServerItem@NServerListManager@@QAE@XZ ; NServerListManager::CGameServerItem::CGameServerItem
  00135	89 85 74 ff ff
	ff		 mov	 DWORD PTR tv261[ebp], eax
  0013b	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv261[ebp]
  00141	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv136[ebp], ecx
  00147	eb 0a		 jmp	 SHORT $LN17@InsertGame
$LN16@InsertGame:
  00149	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv136[ebp], 0
$LN17@InsertGame:
  00153	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR tv136[ebp]
  00159	89 55 84	 mov	 DWORD PTR $T4[ebp], edx
  0015c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00160	8b 45 84	 mov	 eax, DWORD PTR $T4[ebp]
  00163	89 45 d8	 mov	 DWORD PTR _pGameServerItem$[ebp], eax

; 642  : 				if (pGameServerItem==NULL) return false;

  00166	83 7d d8 00	 cmp	 DWORD PTR _pGameServerItem$[ebp], 0
  0016a	75 07		 jne	 SHORT $LN7@InsertGame
  0016c	32 c0		 xor	 al, al
  0016e	e9 ec 01 00 00	 jmp	 $LN1@InsertGame
$LN7@InsertGame:

; 643  : 			}
; 644  : 		}

  00173	eb 13		 jmp	 SHORT $LN18@InsertGame
__catch$?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z$0:

; 645  : 		catch (...) { return false; }

  00175	c6 85 7f ff ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
  0017c	b8 00 00 00 00	 mov	 eax, $LN22@InsertGame
  00181	c3		 ret	 0
  00182	b8 00 00 00 00	 mov	 eax, $LN18@InsertGame
  00187	c3		 ret	 0
$LN18@InsertGame:
  00188	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0018f	eb 12		 jmp	 SHORT $LN21@InsertGame
$LN22@InsertGame:
  00191	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00198	8a 85 7f ff ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
  0019e	e9 bc 01 00 00	 jmp	 $LN1@InsertGame
$LN21@InsertGame:

; 646  : 
; 647  : 		//设置变量
; 648  : 		ZeroMemory(pGameServerItem,sizeof(CGameServerItem));

  001a3	68 1c 03 00 00	 push	 796			; 0000031cH
  001a8	6a 00		 push	 0
  001aa	8b 45 d8	 mov	 eax, DWORD PTR _pGameServerItem$[ebp]
  001ad	50		 push	 eax
  001ae	e8 00 00 00 00	 call	 _memset
  001b3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 649  : 	}
; 650  : 	else

  001b6	eb 26		 jmp	 SHORT $LN4@InsertGame
$LN3@InsertGame:

; 651  : 	{
; 652  : 		//保存变量
; 653  : 		wKindID=pGameServerItem->m_GameServer.wKindID;

  001b8	8b 45 d8	 mov	 eax, DWORD PTR _pGameServerItem$[ebp]
  001bb	66 8b 48 01	 mov	 cx, WORD PTR [eax+1]
  001bf	66 89 4d e8	 mov	 WORD PTR _wKindID$[ebp], cx

; 654  : 		dwOnLineCount=pGameServerItem->m_GameServer.dwOnLineCount;

  001c3	8b 45 d8	 mov	 eax, DWORD PTR _pGameServerItem$[ebp]
  001c6	8b 48 26	 mov	 ecx, DWORD PTR [eax+38]
  001c9	89 4d e4	 mov	 DWORD PTR _dwOnLineCount$[ebp], ecx

; 655  : 		dwAndroidCount=pGameServerItem->m_GameServer.dwAndroidCount;

  001cc	8b 45 d8	 mov	 eax, DWORD PTR _pGameServerItem$[ebp]
  001cf	8b 48 2a	 mov	 ecx, DWORD PTR [eax+42]
  001d2	89 4d e0	 mov	 DWORD PTR _dwAndroidCount$[ebp], ecx

; 656  : 		dwMaxPlayer=pGameServerItem->m_GameServer.dwFullCount;

  001d5	8b 45 d8	 mov	 eax, DWORD PTR _pGameServerItem$[ebp]
  001d8	8b 48 2e	 mov	 ecx, DWORD PTR [eax+46]
  001db	89 4d dc	 mov	 DWORD PTR _dwMaxPlayer$[ebp], ecx
$LN4@InsertGame:

; 657  : 	}
; 658  : 
; 659  : 	//设置数据
; 660  : 	pGameServerItem->m_bDisuse=false;

  001de	8b 45 d8	 mov	 eax, DWORD PTR _pGameServerItem$[ebp]
  001e1	c6 00 00	 mov	 BYTE PTR [eax], 0

; 661  : 	CopyMemory(&pGameServerItem->m_GameServer,pGameServer,sizeof(tagGameServer));

  001e4	68 9b 00 00 00	 push	 155			; 0000009bH
  001e9	8b 45 08	 mov	 eax, DWORD PTR _pGameServer$[ebp]
  001ec	50		 push	 eax
  001ed	8b 4d d8	 mov	 ecx, DWORD PTR _pGameServerItem$[ebp]
  001f0	83 c1 01	 add	 ecx, 1
  001f3	51		 push	 ecx
  001f4	e8 00 00 00 00	 call	 _memcpy
  001f9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 662  : 
; 663  : 	//设置人数
; 664  : 	if (wKindID!=pGameServerItem->m_GameServer.wKindID)

  001fc	8b 45 d8	 mov	 eax, DWORD PTR _pGameServerItem$[ebp]
  001ff	0f b7 48 01	 movzx	 ecx, WORD PTR [eax+1]
  00203	0f b7 55 e8	 movzx	 edx, WORD PTR _wKindID$[ebp]
  00207	3b d1		 cmp	 edx, ecx
  00209	0f 84 b2 00 00
	00		 je	 $LN9@InsertGame

; 665  : 	{
; 666  : 		//变量定义
; 667  : 		CGameKindItem * pGameKindItemLast=NULL;

  0020f	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _pGameKindItemLast$7[ebp], 0

; 668  : 		CGameKindItem * pGameKindItemCurrent=NULL;

  00216	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _pGameKindItemCurrent$6[ebp], 0

; 669  : 
; 670  : 		//历史人数
; 671  : 		if ((wKindID!=0)&&(m_KindItemMap.Lookup(wKindID,pGameKindItemLast)==TRUE))

  0021d	0f b7 45 e8	 movzx	 eax, WORD PTR _wKindID$[ebp]
  00221	85 c0		 test	 eax, eax
  00223	74 46		 je	 SHORT $LN11@InsertGame
  00225	8d 45 d0	 lea	 eax, DWORD PTR _pGameKindItemLast$7[ebp]
  00228	50		 push	 eax
  00229	0f b7 4d e8	 movzx	 ecx, WORD PTR _wKindID$[ebp]
  0022d	51		 push	 ecx
  0022e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00231	83 c1 20	 add	 ecx, 32			; 00000020H
  00234	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Lookup
  00239	83 f8 01	 cmp	 eax, 1
  0023c	75 2d		 jne	 SHORT $LN11@InsertGame

; 672  : 		{
; 673  : 			pGameKindItemLast->m_GameKind.dwOnLineCount-=dwOnLineCount;

  0023e	8b 45 d0	 mov	 eax, DWORD PTR _pGameKindItemLast$7[ebp]
  00241	8b 48 0f	 mov	 ecx, DWORD PTR [eax+15]
  00244	2b 4d e4	 sub	 ecx, DWORD PTR _dwOnLineCount$[ebp]
  00247	8b 55 d0	 mov	 edx, DWORD PTR _pGameKindItemLast$7[ebp]
  0024a	89 4a 0f	 mov	 DWORD PTR [edx+15], ecx

; 674  : 			pGameKindItemLast->m_GameKind.dwAndroidCount-=dwAndroidCount;

  0024d	8b 45 d0	 mov	 eax, DWORD PTR _pGameKindItemLast$7[ebp]
  00250	8b 48 13	 mov	 ecx, DWORD PTR [eax+19]
  00253	2b 4d e0	 sub	 ecx, DWORD PTR _dwAndroidCount$[ebp]
  00256	8b 55 d0	 mov	 edx, DWORD PTR _pGameKindItemLast$7[ebp]
  00259	89 4a 13	 mov	 DWORD PTR [edx+19], ecx

; 675  : 			pGameKindItemLast->m_GameKind.dwFullCount-=dwMaxPlayer;

  0025c	8b 45 d0	 mov	 eax, DWORD PTR _pGameKindItemLast$7[ebp]
  0025f	8b 48 1b	 mov	 ecx, DWORD PTR [eax+27]
  00262	2b 4d dc	 sub	 ecx, DWORD PTR _dwMaxPlayer$[ebp]
  00265	8b 55 d0	 mov	 edx, DWORD PTR _pGameKindItemLast$7[ebp]
  00268	89 4a 1b	 mov	 DWORD PTR [edx+27], ecx
$LN11@InsertGame:

; 676  : 		}
; 677  : 
; 678  : 		//当前人数
; 679  : 		if (m_KindItemMap.Lookup(pGameServer->wKindID,pGameKindItemCurrent)==TRUE)

  0026b	8d 45 cc	 lea	 eax, DWORD PTR _pGameKindItemCurrent$6[ebp]
  0026e	50		 push	 eax
  0026f	8b 4d 08	 mov	 ecx, DWORD PTR _pGameServer$[ebp]
  00272	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00275	52		 push	 edx
  00276	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00279	83 c1 20	 add	 ecx, 32			; 00000020H
  0027c	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Lookup
  00281	83 f8 01	 cmp	 eax, 1
  00284	75 36		 jne	 SHORT $LN12@InsertGame

; 680  : 		{
; 681  : 			pGameKindItemCurrent->m_GameKind.dwOnLineCount+=pGameServer->dwOnLineCount;

  00286	8b 45 cc	 mov	 eax, DWORD PTR _pGameKindItemCurrent$6[ebp]
  00289	8b 48 0f	 mov	 ecx, DWORD PTR [eax+15]
  0028c	8b 55 08	 mov	 edx, DWORD PTR _pGameServer$[ebp]
  0028f	03 4a 25	 add	 ecx, DWORD PTR [edx+37]
  00292	8b 45 cc	 mov	 eax, DWORD PTR _pGameKindItemCurrent$6[ebp]
  00295	89 48 0f	 mov	 DWORD PTR [eax+15], ecx

; 682  : 			pGameKindItemCurrent->m_GameKind.dwAndroidCount+=pGameServer->dwAndroidCount;

  00298	8b 45 cc	 mov	 eax, DWORD PTR _pGameKindItemCurrent$6[ebp]
  0029b	8b 48 13	 mov	 ecx, DWORD PTR [eax+19]
  0029e	8b 55 08	 mov	 edx, DWORD PTR _pGameServer$[ebp]
  002a1	03 4a 29	 add	 ecx, DWORD PTR [edx+41]
  002a4	8b 45 cc	 mov	 eax, DWORD PTR _pGameKindItemCurrent$6[ebp]
  002a7	89 48 13	 mov	 DWORD PTR [eax+19], ecx

; 683  : 			pGameKindItemCurrent->m_GameKind.dwFullCount+=pGameServer->dwFullCount;

  002aa	8b 45 cc	 mov	 eax, DWORD PTR _pGameKindItemCurrent$6[ebp]
  002ad	8b 48 1b	 mov	 ecx, DWORD PTR [eax+27]
  002b0	8b 55 08	 mov	 edx, DWORD PTR _pGameServer$[ebp]
  002b3	03 4a 2d	 add	 ecx, DWORD PTR [edx+45]
  002b6	8b 45 cc	 mov	 eax, DWORD PTR _pGameKindItemCurrent$6[ebp]
  002b9	89 48 1b	 mov	 DWORD PTR [eax+27], ecx
$LN12@InsertGame:

; 684  : 		}
; 685  : 	}
; 686  : 	else

  002bc	e9 84 00 00 00	 jmp	 $LN10@InsertGame
$LN9@InsertGame:

; 687  : 	{
; 688  : 		//查找类型
; 689  : 		CGameKindItem * pGameKindItem=NULL;

  002c1	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _pGameKindItem$5[ebp], 0

; 690  : 		m_KindItemMap.Lookup(wKindID,pGameKindItem);

  002c8	8d 45 c8	 lea	 eax, DWORD PTR _pGameKindItem$5[ebp]
  002cb	50		 push	 eax
  002cc	0f b7 4d e8	 movzx	 ecx, WORD PTR _wKindID$[ebp]
  002d0	51		 push	 ecx
  002d1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002d4	83 c1 20	 add	 ecx, 32			; 00000020H
  002d7	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Lookup

; 691  : 
; 692  : 		//设置人数
; 693  : 		if (pGameKindItem!=NULL)

  002dc	83 7d c8 00	 cmp	 DWORD PTR _pGameKindItem$5[ebp], 0
  002e0	74 63		 je	 SHORT $LN10@InsertGame

; 694  : 		{
; 695  : 			pGameKindItem->m_GameKind.dwOnLineCount-=dwOnLineCount;

  002e2	8b 45 c8	 mov	 eax, DWORD PTR _pGameKindItem$5[ebp]
  002e5	8b 48 0f	 mov	 ecx, DWORD PTR [eax+15]
  002e8	2b 4d e4	 sub	 ecx, DWORD PTR _dwOnLineCount$[ebp]
  002eb	8b 55 c8	 mov	 edx, DWORD PTR _pGameKindItem$5[ebp]
  002ee	89 4a 0f	 mov	 DWORD PTR [edx+15], ecx

; 696  : 			pGameKindItem->m_GameKind.dwOnLineCount+=pGameServer->dwOnLineCount;

  002f1	8b 45 c8	 mov	 eax, DWORD PTR _pGameKindItem$5[ebp]
  002f4	8b 48 0f	 mov	 ecx, DWORD PTR [eax+15]
  002f7	8b 55 08	 mov	 edx, DWORD PTR _pGameServer$[ebp]
  002fa	03 4a 25	 add	 ecx, DWORD PTR [edx+37]
  002fd	8b 45 c8	 mov	 eax, DWORD PTR _pGameKindItem$5[ebp]
  00300	89 48 0f	 mov	 DWORD PTR [eax+15], ecx

; 697  : 
; 698  : 			pGameKindItem->m_GameKind.dwAndroidCount-=dwAndroidCount;

  00303	8b 45 c8	 mov	 eax, DWORD PTR _pGameKindItem$5[ebp]
  00306	8b 48 13	 mov	 ecx, DWORD PTR [eax+19]
  00309	2b 4d e0	 sub	 ecx, DWORD PTR _dwAndroidCount$[ebp]
  0030c	8b 55 c8	 mov	 edx, DWORD PTR _pGameKindItem$5[ebp]
  0030f	89 4a 13	 mov	 DWORD PTR [edx+19], ecx

; 699  : 			pGameKindItem->m_GameKind.dwAndroidCount+=pGameServer->dwAndroidCount;

  00312	8b 45 c8	 mov	 eax, DWORD PTR _pGameKindItem$5[ebp]
  00315	8b 48 13	 mov	 ecx, DWORD PTR [eax+19]
  00318	8b 55 08	 mov	 edx, DWORD PTR _pGameServer$[ebp]
  0031b	03 4a 29	 add	 ecx, DWORD PTR [edx+41]
  0031e	8b 45 c8	 mov	 eax, DWORD PTR _pGameKindItem$5[ebp]
  00321	89 48 13	 mov	 DWORD PTR [eax+19], ecx

; 700  : 
; 701  : 			pGameKindItem->m_GameKind.dwFullCount-=dwMaxPlayer;

  00324	8b 45 c8	 mov	 eax, DWORD PTR _pGameKindItem$5[ebp]
  00327	8b 48 1b	 mov	 ecx, DWORD PTR [eax+27]
  0032a	2b 4d dc	 sub	 ecx, DWORD PTR _dwMaxPlayer$[ebp]
  0032d	8b 55 c8	 mov	 edx, DWORD PTR _pGameKindItem$5[ebp]
  00330	89 4a 1b	 mov	 DWORD PTR [edx+27], ecx

; 702  : 			pGameKindItem->m_GameKind.dwFullCount+=pGameServer->dwFullCount;

  00333	8b 45 c8	 mov	 eax, DWORD PTR _pGameKindItem$5[ebp]
  00336	8b 48 1b	 mov	 ecx, DWORD PTR [eax+27]
  00339	8b 55 08	 mov	 edx, DWORD PTR _pGameServer$[ebp]
  0033c	03 4a 2d	 add	 ecx, DWORD PTR [edx+45]
  0033f	8b 45 c8	 mov	 eax, DWORD PTR _pGameKindItem$5[ebp]
  00342	89 48 1b	 mov	 DWORD PTR [eax+27], ecx
$LN10@InsertGame:

; 703  : 		}
; 704  : 	}
; 705  : 
; 706  : 	//设置索引
; 707  : 	m_ServerItemMap[pGameServer->wServerID]=pGameServerItem;

  00345	8b 45 08	 mov	 eax, DWORD PTR _pGameServer$[ebp]
  00348	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  0034c	51		 push	 ecx
  0034d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00350	83 c1 74	 add	 ecx, 116		; 00000074H
  00353	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::operator[]
  00358	8b 55 d8	 mov	 edx, DWORD PTR _pGameServerItem$[ebp]
  0035b	89 10		 mov	 DWORD PTR [eax], edx

; 708  : 
; 709  : 	return true;

  0035d	b0 01		 mov	 al, 1
$LN1@InsertGame:

; 710  : }

  0035f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00362	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00369	59		 pop	 ecx
  0036a	5f		 pop	 edi
  0036b	5e		 pop	 esi
  0036c	5b		 pop	 ebx
  0036d	8b e5		 mov	 esp, ebp
  0036f	5d		 pop	 ebp
  00370	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z$2:
  00000	68 1c 03 00 00	 push	 796			; 0000031cH
  00005	8b 45 80	 mov	 eax, DWORD PTR $T3[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 6c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-148]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InsertGameServer@CServerListManager@NServerListManager@@QAE_NPAUtagGameServer@@@Z ENDP ; NServerListManager::CServerListManager::InsertGameServer
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z
_TEXT	SEGMENT
tv136 = -116						; size = 4
tv162 = -112						; size = 4
tv159 = -108						; size = 4
tv158 = -108						; size = 4
tv157 = -108						; size = 4
$T2 = -101						; size = 1
$T3 = -100						; size = 4
$T4 = -96						; size = 4
_nStroeCount$5 = -28					; size = 4
_pGamePageItem$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pGamePage$ = 8						; size = 4
?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z PROC ; NServerListManager::CServerListManager::InsertGamePage, COMDAT
; _this$ = ecx

; 573  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 64	 sub	 esp, 100		; 00000064H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 574  : 	//效验参数
; 575  : 	ASSERT(pGamePage!=NULL);

  0002f	83 7d 08 00	 cmp	 DWORD PTR _pGamePage$[ebp], 0
  00033	75 18		 jne	 SHORT $LN9@InsertGame
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z@4JA
  0003a	83 c0 02	 add	 eax, 2
  0003d	50		 push	 eax
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN9@InsertGame
  0004c	cc		 int	 3
$LN9@InsertGame:

; 576  : 	if (pGamePage==NULL) return false;

  0004d	83 7d 08 00	 cmp	 DWORD PTR _pGamePage$[ebp], 0
  00051	75 07		 jne	 SHORT $LN2@InsertGame
  00053	32 c0		 xor	 al, al
  00055	e9 3e 01 00 00	 jmp	 $LN1@InsertGame
$LN2@InsertGame:

; 577  : 
; 578  : 	//获取子项
; 579  : 	CGamePageItem * pGamePageItem=NULL;

  0005a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pGamePageItem$[ebp], 0

; 580  : 	if (m_PageItemMap.Lookup(pGamePage->wPageID,pGamePageItem)==FALSE) 

  00061	8d 45 e8	 lea	 eax, DWORD PTR _pGamePageItem$[ebp]
  00064	50		 push	 eax
  00065	8b 4d 08	 mov	 ecx, DWORD PTR _pGamePage$[ebp]
  00068	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0006b	52		 push	 edx
  0006c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	83 c1 58	 add	 ecx, 88			; 00000058H
  00072	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGamePageItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::Lookup
  00077	85 c0		 test	 eax, eax
  00079	0f 85 e5 00 00
	00		 jne	 $LN3@InsertGame

; 581  : 	{
; 582  : 		//创建对象
; 583  : 		try

  0007f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 584  : 		{
; 585  : 			INT_PTR nStroeCount=m_PageItemBuffer.GetCount();

  00086	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  0008f	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::GetCount
  00094	89 45 94	 mov	 DWORD PTR tv157[ebp], eax
  00097	8b 45 94	 mov	 eax, DWORD PTR tv157[ebp]
  0009a	89 45 e4	 mov	 DWORD PTR _nStroeCount$5[ebp], eax

; 586  : 			if (nStroeCount>0)

  0009d	83 7d e4 00	 cmp	 DWORD PTR _nStroeCount$5[ebp], 0
  000a1	7e 39		 jle	 SHORT $LN5@InsertGame

; 587  : 			{
; 588  : 				pGamePageItem=m_PageItemBuffer[nStroeCount-1];

  000a3	8b 45 e4	 mov	 eax, DWORD PTR _nStroeCount$5[ebp]
  000a6	83 e8 01	 sub	 eax, 1
  000a9	50		 push	 eax
  000aa	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  000b3	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::operator[]
  000b8	89 45 94	 mov	 DWORD PTR tv158[ebp], eax
  000bb	8b 4d 94	 mov	 ecx, DWORD PTR tv158[ebp]
  000be	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c0	89 55 e8	 mov	 DWORD PTR _pGamePageItem$[ebp], edx

; 589  : 				m_PageItemBuffer.RemoveAt(nStroeCount-1);

  000c3	6a 01		 push	 1
  000c5	8b 45 e4	 mov	 eax, DWORD PTR _nStroeCount$5[ebp]
  000c8	83 e8 01	 sub	 eax, 1
  000cb	50		 push	 eax
  000cc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000cf	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  000d5	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::RemoveAt

; 590  : 			}
; 591  : 			else

  000da	eb 51		 jmp	 SHORT $LN6@InsertGame
$LN5@InsertGame:

; 592  : 			{
; 593  : 				pGamePageItem=new CGamePageItem;

  000dc	6a 2b		 push	 43			; 0000002bH
  000de	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000e3	83 c4 04	 add	 esp, 4
  000e6	89 45 94	 mov	 DWORD PTR tv159[ebp], eax
  000e9	8b 45 94	 mov	 eax, DWORD PTR tv159[ebp]
  000ec	89 45 9c	 mov	 DWORD PTR $T3[ebp], eax
  000ef	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  000f3	83 7d 9c 00	 cmp	 DWORD PTR $T3[ebp], 0
  000f7	74 13		 je	 SHORT $LN10@InsertGame
  000f9	8b 4d 9c	 mov	 ecx, DWORD PTR $T3[ebp]
  000fc	e8 00 00 00 00	 call	 ??0CGamePageItem@NServerListManager@@QAE@XZ ; NServerListManager::CGamePageItem::CGamePageItem
  00101	89 45 90	 mov	 DWORD PTR tv162[ebp], eax
  00104	8b 4d 90	 mov	 ecx, DWORD PTR tv162[ebp]
  00107	89 4d 8c	 mov	 DWORD PTR tv136[ebp], ecx
  0010a	eb 07		 jmp	 SHORT $LN11@InsertGame
$LN10@InsertGame:
  0010c	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN11@InsertGame:
  00113	8b 55 8c	 mov	 edx, DWORD PTR tv136[ebp]
  00116	89 55 a0	 mov	 DWORD PTR $T4[ebp], edx
  00119	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  0011d	8b 45 a0	 mov	 eax, DWORD PTR $T4[ebp]
  00120	89 45 e8	 mov	 DWORD PTR _pGamePageItem$[ebp], eax

; 594  : 				if (pGamePageItem==NULL) return false;

  00123	83 7d e8 00	 cmp	 DWORD PTR _pGamePageItem$[ebp], 0
  00127	75 04		 jne	 SHORT $LN6@InsertGame
  00129	32 c0		 xor	 al, al
  0012b	eb 6b		 jmp	 SHORT $LN1@InsertGame
$LN6@InsertGame:

; 595  : 			}
; 596  : 		}

  0012d	eb 10		 jmp	 SHORT $LN12@InsertGame
__catch$?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z$0:

; 597  : 		catch (...) { return false; }

  0012f	c6 45 9b 00	 mov	 BYTE PTR $T2[ebp], 0
  00133	b8 00 00 00 00	 mov	 eax, $LN16@InsertGame
  00138	c3		 ret	 0
  00139	b8 00 00 00 00	 mov	 eax, $LN12@InsertGame
  0013e	c3		 ret	 0
$LN12@InsertGame:
  0013f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00146	eb 0c		 jmp	 SHORT $LN15@InsertGame
$LN16@InsertGame:
  00148	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0014f	8a 45 9b	 mov	 al, BYTE PTR $T2[ebp]
  00152	eb 44		 jmp	 SHORT $LN1@InsertGame
$LN15@InsertGame:

; 598  : 
; 599  : 		//设置变量
; 600  : 		ZeroMemory(pGamePageItem,sizeof(CGamePageItem));

  00154	6a 2b		 push	 43			; 0000002bH
  00156	6a 00		 push	 0
  00158	8b 45 e8	 mov	 eax, DWORD PTR _pGamePageItem$[ebp]
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 _memset
  00161	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@InsertGame:

; 601  : 	}
; 602  : 
; 603  : 	//设置数据
; 604  : 	pGamePageItem->m_bDisuse=false;

  00164	8b 45 e8	 mov	 eax, DWORD PTR _pGamePageItem$[ebp]
  00167	c6 00 00	 mov	 BYTE PTR [eax], 0

; 605  : 	CopyMemory(&pGamePageItem->m_GamePage,pGamePage,sizeof(tagGamePage));

  0016a	6a 2a		 push	 42			; 0000002aH
  0016c	8b 45 08	 mov	 eax, DWORD PTR _pGamePage$[ebp]
  0016f	50		 push	 eax
  00170	8b 4d e8	 mov	 ecx, DWORD PTR _pGamePageItem$[ebp]
  00173	83 c1 01	 add	 ecx, 1
  00176	51		 push	 ecx
  00177	e8 00 00 00 00	 call	 _memcpy
  0017c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 606  : 
; 607  : 	//设置索引
; 608  : 	m_PageItemMap[pGamePage->wPageID]=pGamePageItem;

  0017f	8b 45 08	 mov	 eax, DWORD PTR _pGamePage$[ebp]
  00182	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00185	51		 push	 ecx
  00186	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00189	83 c1 58	 add	 ecx, 88			; 00000058H
  0018c	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::operator[]
  00191	8b 55 e8	 mov	 edx, DWORD PTR _pGamePageItem$[ebp]
  00194	89 10		 mov	 DWORD PTR [eax], edx

; 609  : 
; 610  : 	return true;

  00196	b0 01		 mov	 al, 1
$LN1@InsertGame:

; 611  : }

  00198	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0019b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001a2	59		 pop	 ecx
  001a3	5f		 pop	 edi
  001a4	5e		 pop	 esi
  001a5	5b		 pop	 ebx
  001a6	8b e5		 mov	 esp, ebp
  001a8	5d		 pop	 ebp
  001a9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z$2:
  00000	6a 2b		 push	 43			; 0000002bH
  00002	8b 45 9c	 mov	 eax, DWORD PTR $T3[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
__ehhandler$?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z:
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a 88	 mov	 ecx, DWORD PTR [edx-120]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InsertGamePage@CServerListManager@NServerListManager@@QAE_NPAUtagGamePage@@@Z ENDP ; NServerListManager::CServerListManager::InsertGamePage
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z
_TEXT	SEGMENT
tv136 = -116						; size = 4
tv162 = -112						; size = 4
tv159 = -108						; size = 4
tv158 = -108						; size = 4
tv157 = -108						; size = 4
$T2 = -101						; size = 1
$T3 = -100						; size = 4
$T4 = -96						; size = 4
_nStroeCount$5 = -28					; size = 4
_pGameNodeItem$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pGameNode$ = 8						; size = 4
?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z PROC ; NServerListManager::CServerListManager::InsertGameNode, COMDAT
; _this$ = ecx

; 531  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 64	 sub	 esp, 100		; 00000064H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 532  : 	//效验参数
; 533  : 	ASSERT(pGameNode!=NULL);

  0002f	83 7d 08 00	 cmp	 DWORD PTR _pGameNode$[ebp], 0
  00033	75 18		 jne	 SHORT $LN9@InsertGame
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z@4JA
  0003a	83 c0 02	 add	 eax, 2
  0003d	50		 push	 eax
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN9@InsertGame
  0004c	cc		 int	 3
$LN9@InsertGame:

; 534  : 	if (pGameNode==NULL) return false;

  0004d	83 7d 08 00	 cmp	 DWORD PTR _pGameNode$[ebp], 0
  00051	75 07		 jne	 SHORT $LN2@InsertGame
  00053	32 c0		 xor	 al, al
  00055	e9 40 01 00 00	 jmp	 $LN1@InsertGame
$LN2@InsertGame:

; 535  : 
; 536  : 	//查找现存
; 537  : 	CGameNodeItem * pGameNodeItem=NULL;

  0005a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pGameNodeItem$[ebp], 0

; 538  : 	if (m_NodeItemMap.Lookup(pGameNode->wNodeID,pGameNodeItem)==FALSE) 

  00061	8d 45 e8	 lea	 eax, DWORD PTR _pGameNodeItem$[ebp]
  00064	50		 push	 eax
  00065	8b 4d 08	 mov	 ecx, DWORD PTR _pGameNode$[ebp]
  00068	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  0006c	52		 push	 edx
  0006d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00073	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameNodeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::Lookup
  00078	85 c0		 test	 eax, eax
  0007a	0f 85 e5 00 00
	00		 jne	 $LN3@InsertGame

; 539  : 	{
; 540  : 		//创建对象
; 541  : 		try

  00080	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 542  : 		{
; 543  : 			INT_PTR nStroeCount=m_NodeItemBuffer.GetCount();

  00087	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00090	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::GetCount
  00095	89 45 94	 mov	 DWORD PTR tv157[ebp], eax
  00098	8b 45 94	 mov	 eax, DWORD PTR tv157[ebp]
  0009b	89 45 e4	 mov	 DWORD PTR _nStroeCount$5[ebp], eax

; 544  : 			if (nStroeCount>0)

  0009e	83 7d e4 00	 cmp	 DWORD PTR _nStroeCount$5[ebp], 0
  000a2	7e 39		 jle	 SHORT $LN5@InsertGame

; 545  : 			{
; 546  : 				pGameNodeItem=m_NodeItemBuffer[nStroeCount-1];

  000a4	8b 45 e4	 mov	 eax, DWORD PTR _nStroeCount$5[ebp]
  000a7	83 e8 01	 sub	 eax, 1
  000aa	50		 push	 eax
  000ab	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  000b4	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::operator[]
  000b9	89 45 94	 mov	 DWORD PTR tv158[ebp], eax
  000bc	8b 4d 94	 mov	 ecx, DWORD PTR tv158[ebp]
  000bf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c1	89 55 e8	 mov	 DWORD PTR _pGameNodeItem$[ebp], edx

; 547  : 				m_NodeItemBuffer.RemoveAt(nStroeCount-1);

  000c4	6a 01		 push	 1
  000c6	8b 45 e4	 mov	 eax, DWORD PTR _nStroeCount$5[ebp]
  000c9	83 e8 01	 sub	 eax, 1
  000cc	50		 push	 eax
  000cd	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  000d6	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::RemoveAt

; 548  : 			}
; 549  : 			else

  000db	eb 51		 jmp	 SHORT $LN6@InsertGame
$LN5@InsertGame:

; 550  : 			{
; 551  : 				pGameNodeItem=new CGameNodeItem;

  000dd	6a 29		 push	 41			; 00000029H
  000df	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000e4	83 c4 04	 add	 esp, 4
  000e7	89 45 94	 mov	 DWORD PTR tv159[ebp], eax
  000ea	8b 45 94	 mov	 eax, DWORD PTR tv159[ebp]
  000ed	89 45 9c	 mov	 DWORD PTR $T3[ebp], eax
  000f0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  000f4	83 7d 9c 00	 cmp	 DWORD PTR $T3[ebp], 0
  000f8	74 13		 je	 SHORT $LN10@InsertGame
  000fa	8b 4d 9c	 mov	 ecx, DWORD PTR $T3[ebp]
  000fd	e8 00 00 00 00	 call	 ??0CGameNodeItem@NServerListManager@@QAE@XZ ; NServerListManager::CGameNodeItem::CGameNodeItem
  00102	89 45 90	 mov	 DWORD PTR tv162[ebp], eax
  00105	8b 4d 90	 mov	 ecx, DWORD PTR tv162[ebp]
  00108	89 4d 8c	 mov	 DWORD PTR tv136[ebp], ecx
  0010b	eb 07		 jmp	 SHORT $LN11@InsertGame
$LN10@InsertGame:
  0010d	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN11@InsertGame:
  00114	8b 55 8c	 mov	 edx, DWORD PTR tv136[ebp]
  00117	89 55 a0	 mov	 DWORD PTR $T4[ebp], edx
  0011a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  0011e	8b 45 a0	 mov	 eax, DWORD PTR $T4[ebp]
  00121	89 45 e8	 mov	 DWORD PTR _pGameNodeItem$[ebp], eax

; 552  : 				if (pGameNodeItem==NULL) return false;

  00124	83 7d e8 00	 cmp	 DWORD PTR _pGameNodeItem$[ebp], 0
  00128	75 04		 jne	 SHORT $LN6@InsertGame
  0012a	32 c0		 xor	 al, al
  0012c	eb 6c		 jmp	 SHORT $LN1@InsertGame
$LN6@InsertGame:

; 553  : 			}
; 554  : 		}

  0012e	eb 10		 jmp	 SHORT $LN12@InsertGame
__catch$?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z$0:

; 555  : 		catch (...) { return false; }

  00130	c6 45 9b 00	 mov	 BYTE PTR $T2[ebp], 0
  00134	b8 00 00 00 00	 mov	 eax, $LN16@InsertGame
  00139	c3		 ret	 0
  0013a	b8 00 00 00 00	 mov	 eax, $LN12@InsertGame
  0013f	c3		 ret	 0
$LN12@InsertGame:
  00140	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00147	eb 0c		 jmp	 SHORT $LN15@InsertGame
$LN16@InsertGame:
  00149	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00150	8a 45 9b	 mov	 al, BYTE PTR $T2[ebp]
  00153	eb 45		 jmp	 SHORT $LN1@InsertGame
$LN15@InsertGame:

; 556  : 
; 557  : 		//设置变量
; 558  : 		ZeroMemory(pGameNodeItem,sizeof(CGameNodeItem));

  00155	6a 29		 push	 41			; 00000029H
  00157	6a 00		 push	 0
  00159	8b 45 e8	 mov	 eax, DWORD PTR _pGameNodeItem$[ebp]
  0015c	50		 push	 eax
  0015d	e8 00 00 00 00	 call	 _memset
  00162	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@InsertGame:

; 559  : 	}
; 560  : 
; 561  : 	//插入数据
; 562  : 	pGameNodeItem->m_bDisuse=false;

  00165	8b 45 e8	 mov	 eax, DWORD PTR _pGameNodeItem$[ebp]
  00168	c6 00 00	 mov	 BYTE PTR [eax], 0

; 563  : 	CopyMemory(&pGameNodeItem->m_GameNode,pGameNode,sizeof(tagGameNode));

  0016b	6a 28		 push	 40			; 00000028H
  0016d	8b 45 08	 mov	 eax, DWORD PTR _pGameNode$[ebp]
  00170	50		 push	 eax
  00171	8b 4d e8	 mov	 ecx, DWORD PTR _pGameNodeItem$[ebp]
  00174	83 c1 01	 add	 ecx, 1
  00177	51		 push	 ecx
  00178	e8 00 00 00 00	 call	 _memcpy
  0017d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 564  : 
; 565  : 	//设置索引
; 566  : 	m_NodeItemMap[pGameNode->wNodeID]=pGameNodeItem;

  00180	8b 45 08	 mov	 eax, DWORD PTR _pGameNode$[ebp]
  00183	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  00187	51		 push	 ecx
  00188	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0018b	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0018e	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::operator[]
  00193	8b 55 e8	 mov	 edx, DWORD PTR _pGameNodeItem$[ebp]
  00196	89 10		 mov	 DWORD PTR [eax], edx

; 567  : 
; 568  : 	return true;

  00198	b0 01		 mov	 al, 1
$LN1@InsertGame:

; 569  : }

  0019a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0019d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001a4	59		 pop	 ecx
  001a5	5f		 pop	 edi
  001a6	5e		 pop	 esi
  001a7	5b		 pop	 ebx
  001a8	8b e5		 mov	 esp, ebp
  001aa	5d		 pop	 ebp
  001ab	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z$2:
  00000	6a 29		 push	 41			; 00000029H
  00002	8b 45 9c	 mov	 eax, DWORD PTR $T3[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
__ehhandler$?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z:
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a 88	 mov	 ecx, DWORD PTR [edx-120]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InsertGameNode@CServerListManager@NServerListManager@@QAE_NPAUtagGameNode@@@Z ENDP ; NServerListManager::CServerListManager::InsertGameNode
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z
_TEXT	SEGMENT
tv136 = -116						; size = 4
tv162 = -112						; size = 4
tv159 = -108						; size = 4
tv158 = -108						; size = 4
tv157 = -108						; size = 4
$T2 = -101						; size = 1
$T3 = -100						; size = 4
$T4 = -96						; size = 4
_nStroeCount$5 = -28					; size = 4
_pGameKindItem$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pGameKind$ = 8						; size = 4
?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z PROC ; NServerListManager::CServerListManager::InsertGameKind, COMDAT
; _this$ = ecx

; 489  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 64	 sub	 esp, 100		; 00000064H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 490  : 	//效验参数
; 491  : 	ASSERT(pGameKind!=NULL);

  0002f	83 7d 08 00	 cmp	 DWORD PTR _pGameKind$[ebp], 0
  00033	75 18		 jne	 SHORT $LN9@InsertGame
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z@4JA
  0003a	83 c0 02	 add	 eax, 2
  0003d	50		 push	 eax
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN9@InsertGame
  0004c	cc		 int	 3
$LN9@InsertGame:

; 492  : 	if (pGameKind==NULL) return false;

  0004d	83 7d 08 00	 cmp	 DWORD PTR _pGameKind$[ebp], 0
  00051	75 07		 jne	 SHORT $LN2@InsertGame
  00053	32 c0		 xor	 al, al
  00055	e9 40 01 00 00	 jmp	 $LN1@InsertGame
$LN2@InsertGame:

; 493  : 
; 494  : 	//查找现存
; 495  : 	CGameKindItem * pGameKindItem=NULL;

  0005a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pGameKindItem$[ebp], 0

; 496  : 	if (m_KindItemMap.Lookup(pGameKind->wKindID,pGameKindItem)==FALSE)

  00061	8d 45 e8	 lea	 eax, DWORD PTR _pGameKindItem$[ebp]
  00064	50		 push	 eax
  00065	8b 4d 08	 mov	 ecx, DWORD PTR _pGameKind$[ebp]
  00068	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  0006c	52		 push	 edx
  0006d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	83 c1 20	 add	 ecx, 32			; 00000020H
  00073	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Lookup
  00078	85 c0		 test	 eax, eax
  0007a	0f 85 e5 00 00
	00		 jne	 $LN3@InsertGame

; 497  : 	{
; 498  : 		//创建对象
; 499  : 		try

  00080	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 500  : 		{
; 501  : 			INT_PTR nStroeCount=m_KindItemBuffer.GetCount();

  00087	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  00090	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::GetCount
  00095	89 45 94	 mov	 DWORD PTR tv157[ebp], eax
  00098	8b 45 94	 mov	 eax, DWORD PTR tv157[ebp]
  0009b	89 45 e4	 mov	 DWORD PTR _nStroeCount$5[ebp], eax

; 502  : 			if (nStroeCount>0)

  0009e	83 7d e4 00	 cmp	 DWORD PTR _nStroeCount$5[ebp], 0
  000a2	7e 39		 jle	 SHORT $LN5@InsertGame

; 503  : 			{
; 504  : 				pGameKindItem=m_KindItemBuffer[nStroeCount-1];

  000a4	8b 45 e4	 mov	 eax, DWORD PTR _nStroeCount$5[ebp]
  000a7	83 e8 01	 sub	 eax, 1
  000aa	50		 push	 eax
  000ab	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  000b4	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::operator[]
  000b9	89 45 94	 mov	 DWORD PTR tv158[ebp], eax
  000bc	8b 4d 94	 mov	 ecx, DWORD PTR tv158[ebp]
  000bf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c1	89 55 e8	 mov	 DWORD PTR _pGameKindItem$[ebp], edx

; 505  : 				m_KindItemBuffer.RemoveAt(nStroeCount-1);

  000c4	6a 01		 push	 1
  000c6	8b 45 e4	 mov	 eax, DWORD PTR _nStroeCount$5[ebp]
  000c9	83 e8 01	 sub	 eax, 1
  000cc	50		 push	 eax
  000cd	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  000d6	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::RemoveAt

; 506  : 			}
; 507  : 			else

  000db	eb 51		 jmp	 SHORT $LN6@InsertGame
$LN5@InsertGame:

; 508  : 			{
; 509  : 				pGameKindItem=new CGameKindItem;

  000dd	6a 5f		 push	 95			; 0000005fH
  000df	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000e4	83 c4 04	 add	 esp, 4
  000e7	89 45 94	 mov	 DWORD PTR tv159[ebp], eax
  000ea	8b 45 94	 mov	 eax, DWORD PTR tv159[ebp]
  000ed	89 45 9c	 mov	 DWORD PTR $T3[ebp], eax
  000f0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  000f4	83 7d 9c 00	 cmp	 DWORD PTR $T3[ebp], 0
  000f8	74 13		 je	 SHORT $LN10@InsertGame
  000fa	8b 4d 9c	 mov	 ecx, DWORD PTR $T3[ebp]
  000fd	e8 00 00 00 00	 call	 ??0CGameKindItem@NServerListManager@@QAE@XZ ; NServerListManager::CGameKindItem::CGameKindItem
  00102	89 45 90	 mov	 DWORD PTR tv162[ebp], eax
  00105	8b 4d 90	 mov	 ecx, DWORD PTR tv162[ebp]
  00108	89 4d 8c	 mov	 DWORD PTR tv136[ebp], ecx
  0010b	eb 07		 jmp	 SHORT $LN11@InsertGame
$LN10@InsertGame:
  0010d	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN11@InsertGame:
  00114	8b 55 8c	 mov	 edx, DWORD PTR tv136[ebp]
  00117	89 55 a0	 mov	 DWORD PTR $T4[ebp], edx
  0011a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  0011e	8b 45 a0	 mov	 eax, DWORD PTR $T4[ebp]
  00121	89 45 e8	 mov	 DWORD PTR _pGameKindItem$[ebp], eax

; 510  : 				if (pGameKindItem==NULL) return false;

  00124	83 7d e8 00	 cmp	 DWORD PTR _pGameKindItem$[ebp], 0
  00128	75 04		 jne	 SHORT $LN6@InsertGame
  0012a	32 c0		 xor	 al, al
  0012c	eb 6c		 jmp	 SHORT $LN1@InsertGame
$LN6@InsertGame:

; 511  : 			}
; 512  : 		}

  0012e	eb 10		 jmp	 SHORT $LN12@InsertGame
__catch$?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z$0:

; 513  : 		catch (...) { return false; }

  00130	c6 45 9b 00	 mov	 BYTE PTR $T2[ebp], 0
  00134	b8 00 00 00 00	 mov	 eax, $LN16@InsertGame
  00139	c3		 ret	 0
  0013a	b8 00 00 00 00	 mov	 eax, $LN12@InsertGame
  0013f	c3		 ret	 0
$LN12@InsertGame:
  00140	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00147	eb 0c		 jmp	 SHORT $LN15@InsertGame
$LN16@InsertGame:
  00149	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00150	8a 45 9b	 mov	 al, BYTE PTR $T2[ebp]
  00153	eb 45		 jmp	 SHORT $LN1@InsertGame
$LN15@InsertGame:

; 514  : 
; 515  : 		//设置变量
; 516  : 		ZeroMemory(pGameKindItem,sizeof(CGameKindItem));

  00155	6a 5f		 push	 95			; 0000005fH
  00157	6a 00		 push	 0
  00159	8b 45 e8	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  0015c	50		 push	 eax
  0015d	e8 00 00 00 00	 call	 _memset
  00162	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@InsertGame:

; 517  : 	}
; 518  : 
; 519  : 	//设置数据
; 520  : 	pGameKindItem->m_bDisuse=false;

  00165	8b 45 e8	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  00168	c6 00 00	 mov	 BYTE PTR [eax], 0

; 521  : 	CopyMemory(&pGameKindItem->m_GameKind,pGameKind,sizeof(tagGameKind));

  0016b	6a 5e		 push	 94			; 0000005eH
  0016d	8b 45 08	 mov	 eax, DWORD PTR _pGameKind$[ebp]
  00170	50		 push	 eax
  00171	8b 4d e8	 mov	 ecx, DWORD PTR _pGameKindItem$[ebp]
  00174	83 c1 01	 add	 ecx, 1
  00177	51		 push	 ecx
  00178	e8 00 00 00 00	 call	 _memcpy
  0017d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 522  : 
; 523  : 	//设置索引
; 524  : 	m_KindItemMap[pGameKind->wKindID]=pGameKindItem;

  00180	8b 45 08	 mov	 eax, DWORD PTR _pGameKind$[ebp]
  00183	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  00187	51		 push	 ecx
  00188	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0018b	83 c1 20	 add	 ecx, 32			; 00000020H
  0018e	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::operator[]
  00193	8b 55 e8	 mov	 edx, DWORD PTR _pGameKindItem$[ebp]
  00196	89 10		 mov	 DWORD PTR [eax], edx

; 525  : 
; 526  : 	return true;

  00198	b0 01		 mov	 al, 1
$LN1@InsertGame:

; 527  : }

  0019a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0019d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001a4	59		 pop	 ecx
  001a5	5f		 pop	 edi
  001a6	5e		 pop	 esi
  001a7	5b		 pop	 ebx
  001a8	8b e5		 mov	 esp, ebp
  001aa	5d		 pop	 ebp
  001ab	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z$2:
  00000	6a 5f		 push	 95			; 0000005fH
  00002	8b 45 9c	 mov	 eax, DWORD PTR $T3[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
__ehhandler$?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z:
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a 88	 mov	 ecx, DWORD PTR [edx-120]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InsertGameKind@CServerListManager@NServerListManager@@QAE_NPAUtagGameKind@@@Z ENDP ; NServerListManager::CServerListManager::InsertGameKind
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z
_TEXT	SEGMENT
tv136 = -116						; size = 4
tv162 = -112						; size = 4
tv159 = -108						; size = 4
tv158 = -108						; size = 4
tv157 = -108						; size = 4
$T2 = -101						; size = 1
$T3 = -100						; size = 4
$T4 = -96						; size = 4
_nStroeCount$5 = -28					; size = 4
_pGameTypeItem$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pGameType$ = 8						; size = 4
?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z PROC ; NServerListManager::CServerListManager::InsertGameType, COMDAT
; _this$ = ecx

; 447  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 64	 sub	 esp, 100		; 00000064H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 448  : 	//效验参数
; 449  : 	ASSERT(pGameType!=NULL);

  0002f	83 7d 08 00	 cmp	 DWORD PTR _pGameType$[ebp], 0
  00033	75 18		 jne	 SHORT $LN9@InsertGame
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z@4JA
  0003a	83 c0 02	 add	 eax, 2
  0003d	50		 push	 eax
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN9@InsertGame
  0004c	cc		 int	 3
$LN9@InsertGame:

; 450  : 	if (pGameType==NULL) return false;

  0004d	83 7d 08 00	 cmp	 DWORD PTR _pGameType$[ebp], 0
  00051	75 07		 jne	 SHORT $LN2@InsertGame
  00053	32 c0		 xor	 al, al
  00055	e9 40 01 00 00	 jmp	 $LN1@InsertGame
$LN2@InsertGame:

; 451  : 
; 452  : 	//查找现存
; 453  : 	CGameTypeItem * pGameTypeItem=NULL;

  0005a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pGameTypeItem$[ebp], 0

; 454  : 	if (m_TypeItemMap.Lookup(pGameType->wTypeID,pGameTypeItem)==FALSE)

  00061	8d 45 e8	 lea	 eax, DWORD PTR _pGameTypeItem$[ebp]
  00064	50		 push	 eax
  00065	8b 4d 08	 mov	 ecx, DWORD PTR _pGameType$[ebp]
  00068	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  0006c	52		 push	 edx
  0006d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	83 c1 04	 add	 ecx, 4
  00073	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameTypeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::Lookup
  00078	85 c0		 test	 eax, eax
  0007a	0f 85 e5 00 00
	00		 jne	 $LN3@InsertGame

; 455  : 	{
; 456  : 		//创建对象
; 457  : 		try

  00080	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 458  : 		{
; 459  : 			INT_PTR nStroeCount=m_TypeItemBuffer.GetCount();

  00087	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00090	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::GetCount
  00095	89 45 94	 mov	 DWORD PTR tv157[ebp], eax
  00098	8b 45 94	 mov	 eax, DWORD PTR tv157[ebp]
  0009b	89 45 e4	 mov	 DWORD PTR _nStroeCount$5[ebp], eax

; 460  : 			if (nStroeCount>0)

  0009e	83 7d e4 00	 cmp	 DWORD PTR _nStroeCount$5[ebp], 0
  000a2	7e 39		 jle	 SHORT $LN5@InsertGame

; 461  : 			{
; 462  : 				pGameTypeItem=m_TypeItemBuffer[nStroeCount-1];

  000a4	8b 45 e4	 mov	 eax, DWORD PTR _nStroeCount$5[ebp]
  000a7	83 e8 01	 sub	 eax, 1
  000aa	50		 push	 eax
  000ab	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  000b4	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::operator[]
  000b9	89 45 94	 mov	 DWORD PTR tv158[ebp], eax
  000bc	8b 4d 94	 mov	 ecx, DWORD PTR tv158[ebp]
  000bf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c1	89 55 e8	 mov	 DWORD PTR _pGameTypeItem$[ebp], edx

; 463  : 				m_TypeItemBuffer.RemoveAt(nStroeCount-1);

  000c4	6a 01		 push	 1
  000c6	8b 45 e4	 mov	 eax, DWORD PTR _nStroeCount$5[ebp]
  000c9	83 e8 01	 sub	 eax, 1
  000cc	50		 push	 eax
  000cd	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  000d6	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::RemoveAt

; 464  : 			}
; 465  : 			else

  000db	eb 51		 jmp	 SHORT $LN6@InsertGame
$LN5@InsertGame:

; 466  : 			{
; 467  : 				pGameTypeItem=new CGameTypeItem;

  000dd	6a 27		 push	 39			; 00000027H
  000df	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000e4	83 c4 04	 add	 esp, 4
  000e7	89 45 94	 mov	 DWORD PTR tv159[ebp], eax
  000ea	8b 45 94	 mov	 eax, DWORD PTR tv159[ebp]
  000ed	89 45 9c	 mov	 DWORD PTR $T3[ebp], eax
  000f0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  000f4	83 7d 9c 00	 cmp	 DWORD PTR $T3[ebp], 0
  000f8	74 13		 je	 SHORT $LN10@InsertGame
  000fa	8b 4d 9c	 mov	 ecx, DWORD PTR $T3[ebp]
  000fd	e8 00 00 00 00	 call	 ??0CGameTypeItem@NServerListManager@@QAE@XZ ; NServerListManager::CGameTypeItem::CGameTypeItem
  00102	89 45 90	 mov	 DWORD PTR tv162[ebp], eax
  00105	8b 4d 90	 mov	 ecx, DWORD PTR tv162[ebp]
  00108	89 4d 8c	 mov	 DWORD PTR tv136[ebp], ecx
  0010b	eb 07		 jmp	 SHORT $LN11@InsertGame
$LN10@InsertGame:
  0010d	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN11@InsertGame:
  00114	8b 55 8c	 mov	 edx, DWORD PTR tv136[ebp]
  00117	89 55 a0	 mov	 DWORD PTR $T4[ebp], edx
  0011a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  0011e	8b 45 a0	 mov	 eax, DWORD PTR $T4[ebp]
  00121	89 45 e8	 mov	 DWORD PTR _pGameTypeItem$[ebp], eax

; 468  : 				if (pGameTypeItem==NULL) return false;

  00124	83 7d e8 00	 cmp	 DWORD PTR _pGameTypeItem$[ebp], 0
  00128	75 04		 jne	 SHORT $LN6@InsertGame
  0012a	32 c0		 xor	 al, al
  0012c	eb 6c		 jmp	 SHORT $LN1@InsertGame
$LN6@InsertGame:

; 469  : 			}
; 470  : 		}

  0012e	eb 10		 jmp	 SHORT $LN12@InsertGame
__catch$?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z$0:

; 471  : 		catch (...) { return false; }

  00130	c6 45 9b 00	 mov	 BYTE PTR $T2[ebp], 0
  00134	b8 00 00 00 00	 mov	 eax, $LN16@InsertGame
  00139	c3		 ret	 0
  0013a	b8 00 00 00 00	 mov	 eax, $LN12@InsertGame
  0013f	c3		 ret	 0
$LN12@InsertGame:
  00140	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00147	eb 0c		 jmp	 SHORT $LN15@InsertGame
$LN16@InsertGame:
  00149	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00150	8a 45 9b	 mov	 al, BYTE PTR $T2[ebp]
  00153	eb 45		 jmp	 SHORT $LN1@InsertGame
$LN15@InsertGame:

; 472  : 
; 473  : 		//设置变量
; 474  : 		ZeroMemory(pGameTypeItem,sizeof(CGameTypeItem));

  00155	6a 27		 push	 39			; 00000027H
  00157	6a 00		 push	 0
  00159	8b 45 e8	 mov	 eax, DWORD PTR _pGameTypeItem$[ebp]
  0015c	50		 push	 eax
  0015d	e8 00 00 00 00	 call	 _memset
  00162	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@InsertGame:

; 475  : 	}
; 476  : 
; 477  : 	//设置数据
; 478  : 	pGameTypeItem->m_bDisuse=false;

  00165	8b 45 e8	 mov	 eax, DWORD PTR _pGameTypeItem$[ebp]
  00168	c6 00 00	 mov	 BYTE PTR [eax], 0

; 479  : 	CopyMemory(&pGameTypeItem->m_GameType,pGameType,sizeof(tagGameType));

  0016b	6a 26		 push	 38			; 00000026H
  0016d	8b 45 08	 mov	 eax, DWORD PTR _pGameType$[ebp]
  00170	50		 push	 eax
  00171	8b 4d e8	 mov	 ecx, DWORD PTR _pGameTypeItem$[ebp]
  00174	83 c1 01	 add	 ecx, 1
  00177	51		 push	 ecx
  00178	e8 00 00 00 00	 call	 _memcpy
  0017d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 480  : 
; 481  : 	//设置索引
; 482  : 	m_TypeItemMap[pGameType->wTypeID]=pGameTypeItem;

  00180	8b 45 08	 mov	 eax, DWORD PTR _pGameType$[ebp]
  00183	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00187	51		 push	 ecx
  00188	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0018b	83 c1 04	 add	 ecx, 4
  0018e	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::operator[]
  00193	8b 55 e8	 mov	 edx, DWORD PTR _pGameTypeItem$[ebp]
  00196	89 10		 mov	 DWORD PTR [eax], edx

; 483  : 
; 484  : 	return true;

  00198	b0 01		 mov	 al, 1
$LN1@InsertGame:

; 485  : }

  0019a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0019d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001a4	59		 pop	 ecx
  001a5	5f		 pop	 edi
  001a6	5e		 pop	 esi
  001a7	5b		 pop	 ebx
  001a8	8b e5		 mov	 esp, ebp
  001aa	5d		 pop	 ebp
  001ab	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z$2:
  00000	6a 27		 push	 39			; 00000027H
  00002	8b 45 9c	 mov	 eax, DWORD PTR $T3[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
__ehhandler$?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z:
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a 88	 mov	 ecx, DWORD PTR [edx-120]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InsertGameType@CServerListManager@NServerListManager@@QAE_NPAUtagGameType@@@Z ENDP ; NServerListManager::CServerListManager::InsertGameType
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?CollectSetPlayer@CServerListManager@NServerListManager@@QAEKG@Z
_TEXT	SEGMENT
tv66 = -92						; size = 4
_pGameServerItem$1 = -24				; size = 4
_wServerID$2 = -20					; size = 2
_PositionServer$ = -16					; size = 4
_dwOnLineCount$ = -12					; size = 4
_bAllGameServerItem$ = -5				; size = 1
_this$ = -4						; size = 4
_wKindID$ = 8						; size = 2
?CollectSetPlayer@CServerListManager@NServerListManager@@QAEKG@Z PROC ; NServerListManager::CServerListManager::CollectSetPlayer, COMDAT
; _this$ = ecx

; 418  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 419  : 	bool bAllGameServerItem = wKindID == INVALID_WORD;

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wKindID$[ebp]
  00010	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00015	75 09		 jne	 SHORT $LN8@CollectSet
  00017	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001e	eb 07		 jmp	 SHORT $LN9@CollectSet
$LN8@CollectSet:
  00020	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN9@CollectSet:
  00027	8a 4d a4	 mov	 cl, BYTE PTR tv66[ebp]
  0002a	88 4d fb	 mov	 BYTE PTR _bAllGameServerItem$[ebp], cl

; 420  : 	//变量定义
; 421  : 	DWORD dwOnLineCount = 0L;

  0002d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _dwOnLineCount$[ebp], 0

; 422  : 	POSITION PositionServer = m_ServerItemMap.GetStartPosition();

  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 74	 add	 ecx, 116		; 00000074H
  0003a	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetStartPosition
  0003f	89 45 f0	 mov	 DWORD PTR _PositionServer$[ebp], eax
$LN2@CollectSet:

; 423  : 
; 424  : 	//枚举房间
; 425  : 	while (PositionServer != NULL)

  00042	83 7d f0 00	 cmp	 DWORD PTR _PositionServer$[ebp], 0
  00046	74 57		 je	 SHORT $LN3@CollectSet

; 426  : 	{
; 427  : 		//索引房间
; 428  : 		WORD wServerID = 0;

  00048	33 c0		 xor	 eax, eax
  0004a	66 89 45 ec	 mov	 WORD PTR _wServerID$2[ebp], ax

; 429  : 		CGameServerItem * pGameServerItem = NULL;

  0004e	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pGameServerItem$1[ebp], 0

; 430  : 		m_ServerItemMap.GetNextAssoc(PositionServer, wServerID, pGameServerItem);

  00055	8d 45 e8	 lea	 eax, DWORD PTR _pGameServerItem$1[ebp]
  00058	50		 push	 eax
  00059	8d 4d ec	 lea	 ecx, DWORD PTR _wServerID$2[ebp]
  0005c	51		 push	 ecx
  0005d	8d 55 f0	 lea	 edx, DWORD PTR _PositionServer$[ebp]
  00060	52		 push	 edx
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	83 c1 74	 add	 ecx, 116		; 00000074H
  00067	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameServerItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetNextAssoc

; 431  : 
; 432  : 		//统计人数
; 433  : 		if (bAllGameServerItem)

  0006c	0f b6 45 fb	 movzx	 eax, BYTE PTR _bAllGameServerItem$[ebp]
  00070	85 c0		 test	 eax, eax
  00072	74 0e		 je	 SHORT $LN4@CollectSet

; 434  : 		{
; 435  : 			dwOnLineCount += pGameServerItem->m_GameServer.dwSetPlayerCount;

  00074	8b 45 e8	 mov	 eax, DWORD PTR _pGameServerItem$1[ebp]
  00077	8b 4d f4	 mov	 ecx, DWORD PTR _dwOnLineCount$[ebp]
  0007a	03 48 78	 add	 ecx, DWORD PTR [eax+120]
  0007d	89 4d f4	 mov	 DWORD PTR _dwOnLineCount$[ebp], ecx
  00080	eb 1b		 jmp	 SHORT $LN5@CollectSet
$LN4@CollectSet:

; 436  : 		}
; 437  : 		else if (pGameServerItem->m_GameServer.wKindID == wKindID)

  00082	8b 45 e8	 mov	 eax, DWORD PTR _pGameServerItem$1[ebp]
  00085	0f b7 48 01	 movzx	 ecx, WORD PTR [eax+1]
  00089	0f b7 55 08	 movzx	 edx, WORD PTR _wKindID$[ebp]
  0008d	3b ca		 cmp	 ecx, edx
  0008f	75 0c		 jne	 SHORT $LN5@CollectSet

; 438  : 		{
; 439  : 			dwOnLineCount += pGameServerItem->m_GameServer.dwSetPlayerCount;

  00091	8b 45 e8	 mov	 eax, DWORD PTR _pGameServerItem$1[ebp]
  00094	8b 4d f4	 mov	 ecx, DWORD PTR _dwOnLineCount$[ebp]
  00097	03 48 78	 add	 ecx, DWORD PTR [eax+120]
  0009a	89 4d f4	 mov	 DWORD PTR _dwOnLineCount$[ebp], ecx
$LN5@CollectSet:

; 440  : 		}
; 441  : 	}

  0009d	eb a3		 jmp	 SHORT $LN2@CollectSet
$LN3@CollectSet:

; 442  : 
; 443  : 	return dwOnLineCount;

  0009f	8b 45 f4	 mov	 eax, DWORD PTR _dwOnLineCount$[ebp]

; 444  : }

  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	5b		 pop	 ebx
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c2 04 00	 ret	 4
?CollectSetPlayer@CServerListManager@NServerListManager@@QAEKG@Z ENDP ; NServerListManager::CServerListManager::CollectSetPlayer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?CollectOnlineInfo@CServerListManager@NServerListManager@@QAEKG_N@Z
_TEXT	SEGMENT
_pGameServerItem$1 = -20				; size = 4
_wServerID$2 = -16					; size = 2
_PositionServer$ = -12					; size = 4
_dwOnLineCount$ = -8					; size = 4
_this$ = -4						; size = 4
_wKindID$ = 8						; size = 2
_bAndroid$ = 12						; size = 1
?CollectOnlineInfo@CServerListManager@NServerListManager@@QAEKG_N@Z PROC ; NServerListManager::CServerListManager::CollectOnlineInfo, COMDAT
; _this$ = ecx

; 387  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 388  : 	//变量定义
; 389  : 	DWORD dwOnLineCount=0L;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwOnLineCount$[ebp], 0

; 390  : 	POSITION PositionServer=m_ServerItemMap.GetStartPosition();

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 74	 add	 ecx, 116		; 00000074H
  00019	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetStartPosition
  0001e	89 45 f4	 mov	 DWORD PTR _PositionServer$[ebp], eax
$LN2@CollectOnl:

; 391  : 
; 392  : 	//枚举房间
; 393  : 	while (PositionServer!=NULL)

  00021	83 7d f4 00	 cmp	 DWORD PTR _PositionServer$[ebp], 0
  00025	74 57		 je	 SHORT $LN3@CollectOnl

; 394  : 	{
; 395  : 		//索引房间
; 396  : 		WORD wServerID=0;

  00027	33 c0		 xor	 eax, eax
  00029	66 89 45 f0	 mov	 WORD PTR _wServerID$2[ebp], ax

; 397  : 		CGameServerItem * pGameServerItem=NULL;

  0002d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pGameServerItem$1[ebp], 0

; 398  : 		m_ServerItemMap.GetNextAssoc(PositionServer,wServerID,pGameServerItem);

  00034	8d 45 ec	 lea	 eax, DWORD PTR _pGameServerItem$1[ebp]
  00037	50		 push	 eax
  00038	8d 4d f0	 lea	 ecx, DWORD PTR _wServerID$2[ebp]
  0003b	51		 push	 ecx
  0003c	8d 55 f4	 lea	 edx, DWORD PTR _PositionServer$[ebp]
  0003f	52		 push	 edx
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	83 c1 74	 add	 ecx, 116		; 00000074H
  00046	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameServerItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetNextAssoc

; 399  : 
; 400  : 		//统计人数
; 401  : 		if (pGameServerItem->m_GameServer.wKindID==wKindID)

  0004b	8b 45 ec	 mov	 eax, DWORD PTR _pGameServerItem$1[ebp]
  0004e	0f b7 48 01	 movzx	 ecx, WORD PTR [eax+1]
  00052	0f b7 55 08	 movzx	 edx, WORD PTR _wKindID$[ebp]
  00056	3b ca		 cmp	 ecx, edx
  00058	75 22		 jne	 SHORT $LN4@CollectOnl

; 402  : 		{			
; 403  : 			if(bAndroid == false)

  0005a	0f b6 45 0c	 movzx	 eax, BYTE PTR _bAndroid$[ebp]
  0005e	85 c0		 test	 eax, eax
  00060	75 0e		 jne	 SHORT $LN5@CollectOnl

; 404  : 			{
; 405  : 				dwOnLineCount+=pGameServerItem->m_GameServer.dwOnLineCount;

  00062	8b 45 ec	 mov	 eax, DWORD PTR _pGameServerItem$1[ebp]
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _dwOnLineCount$[ebp]
  00068	03 48 26	 add	 ecx, DWORD PTR [eax+38]
  0006b	89 4d f8	 mov	 DWORD PTR _dwOnLineCount$[ebp], ecx

; 406  : 			}
; 407  : 			else

  0006e	eb 0c		 jmp	 SHORT $LN4@CollectOnl
$LN5@CollectOnl:

; 408  : 			{
; 409  : 				dwOnLineCount+=pGameServerItem->m_GameServer.dwAndroidCount;

  00070	8b 45 ec	 mov	 eax, DWORD PTR _pGameServerItem$1[ebp]
  00073	8b 4d f8	 mov	 ecx, DWORD PTR _dwOnLineCount$[ebp]
  00076	03 48 2a	 add	 ecx, DWORD PTR [eax+42]
  00079	89 4d f8	 mov	 DWORD PTR _dwOnLineCount$[ebp], ecx
$LN4@CollectOnl:

; 410  : 			}
; 411  : 		}
; 412  : 	}

  0007c	eb a3		 jmp	 SHORT $LN2@CollectOnl
$LN3@CollectOnl:

; 413  : 
; 414  : 	return dwOnLineCount;

  0007e	8b 45 f8	 mov	 eax, DWORD PTR _dwOnLineCount$[ebp]

; 415  : }

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 08 00	 ret	 8
?CollectOnlineInfo@CServerListManager@NServerListManager@@QAEKG_N@Z ENDP ; NServerListManager::CServerListManager::CollectOnlineInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?CollectOnlineInfo@CServerListManager@NServerListManager@@QAEK_N@Z
_TEXT	SEGMENT
_pGameKindItem$1 = -20					; size = 4
_wKindID$2 = -16					; size = 2
_PositionKind$ = -12					; size = 4
_dwOnLineCount$ = -8					; size = 4
_this$ = -4						; size = 4
_bAndroid$ = 8						; size = 1
?CollectOnlineInfo@CServerListManager@NServerListManager@@QAEK_N@Z PROC ; NServerListManager::CServerListManager::CollectOnlineInfo, COMDAT
; _this$ = ecx

; 355  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 356  : 	//变量定义
; 357  : 	DWORD dwOnLineCount=0L;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwOnLineCount$[ebp], 0

; 358  : 	POSITION PositionKind=m_KindItemMap.GetStartPosition();

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 20	 add	 ecx, 32			; 00000020H
  00019	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetStartPosition
  0001e	89 45 f4	 mov	 DWORD PTR _PositionKind$[ebp], eax
$LN2@CollectOnl:

; 359  : 	
; 360  : 	//统计人数
; 361  : 	while (PositionKind!=NULL)

  00021	83 7d f4 00	 cmp	 DWORD PTR _PositionKind$[ebp], 0
  00025	74 4e		 je	 SHORT $LN3@CollectOnl

; 362  : 	{
; 363  : 		//索引类型
; 364  : 		WORD wKindID=0;

  00027	33 c0		 xor	 eax, eax
  00029	66 89 45 f0	 mov	 WORD PTR _wKindID$2[ebp], ax

; 365  : 		CGameKindItem * pGameKindItem=NULL;

  0002d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pGameKindItem$1[ebp], 0

; 366  : 		m_KindItemMap.GetNextAssoc(PositionKind,wKindID,pGameKindItem);

  00034	8d 45 ec	 lea	 eax, DWORD PTR _pGameKindItem$1[ebp]
  00037	50		 push	 eax
  00038	8d 4d f0	 lea	 ecx, DWORD PTR _wKindID$2[ebp]
  0003b	51		 push	 ecx
  0003c	8d 55 f4	 lea	 edx, DWORD PTR _PositionKind$[ebp]
  0003f	52		 push	 edx
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	83 c1 20	 add	 ecx, 32			; 00000020H
  00046	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetNextAssoc

; 367  : 
; 368  : 		//统计人数
; 369  : 		if (pGameKindItem!=NULL)

  0004b	83 7d ec 00	 cmp	 DWORD PTR _pGameKindItem$1[ebp], 0
  0004f	74 22		 je	 SHORT $LN4@CollectOnl

; 370  : 		{
; 371  : 			if(bAndroid==false)

  00051	0f b6 45 08	 movzx	 eax, BYTE PTR _bAndroid$[ebp]
  00055	85 c0		 test	 eax, eax
  00057	75 0e		 jne	 SHORT $LN5@CollectOnl

; 372  : 			{
; 373  : 				dwOnLineCount+=pGameKindItem->m_GameKind.dwOnLineCount;

  00059	8b 45 ec	 mov	 eax, DWORD PTR _pGameKindItem$1[ebp]
  0005c	8b 4d f8	 mov	 ecx, DWORD PTR _dwOnLineCount$[ebp]
  0005f	03 48 0f	 add	 ecx, DWORD PTR [eax+15]
  00062	89 4d f8	 mov	 DWORD PTR _dwOnLineCount$[ebp], ecx

; 374  : 			}
; 375  : 			else

  00065	eb 0c		 jmp	 SHORT $LN4@CollectOnl
$LN5@CollectOnl:

; 376  : 			{
; 377  : 				dwOnLineCount+=pGameKindItem->m_GameKind.dwAndroidCount;

  00067	8b 45 ec	 mov	 eax, DWORD PTR _pGameKindItem$1[ebp]
  0006a	8b 4d f8	 mov	 ecx, DWORD PTR _dwOnLineCount$[ebp]
  0006d	03 48 13	 add	 ecx, DWORD PTR [eax+19]
  00070	89 4d f8	 mov	 DWORD PTR _dwOnLineCount$[ebp], ecx
$LN4@CollectOnl:

; 378  : 			}
; 379  : 		}
; 380  : 	}

  00073	eb ac		 jmp	 SHORT $LN2@CollectOnl
$LN3@CollectOnl:

; 381  : 
; 382  : 	return dwOnLineCount;

  00075	8b 45 f8	 mov	 eax, DWORD PTR _dwOnLineCount$[ebp]

; 383  : }

  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 04 00	 ret	 4
?CollectOnlineInfo@CServerListManager@NServerListManager@@QAEK_N@Z ENDP ; NServerListManager::CServerListManager::CollectOnlineInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?DisuseServerItem@CServerListManager@NServerListManager@@QAEXXZ
_TEXT	SEGMENT
_Position$ = -16					; size = 4
_pGameServerItem$ = -12					; size = 4
_wKey$ = -8						; size = 2
_this$ = -4						; size = 4
?DisuseServerItem@CServerListManager@NServerListManager@@QAEXXZ PROC ; NServerListManager::CServerListManager::DisuseServerItem, COMDAT
; _this$ = ecx

; 337  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 338  : 	//变量定义
; 339  : 	WORD wKey=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wKey$[ebp], ax

; 340  : 	CGameServerItem * pGameServerItem=NULL;

  00012	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGameServerItem$[ebp], 0

; 341  : 
; 342  : 	//废弃房间
; 343  : 	POSITION Position=m_ServerItemMap.GetStartPosition();

  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 c1 74	 add	 ecx, 116		; 00000074H
  0001f	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetStartPosition
  00024	89 45 f0	 mov	 DWORD PTR _Position$[ebp], eax
$LN2@DisuseServ:

; 344  : 	while (Position!=NULL)

  00027	83 7d f0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  0002b	74 1f		 je	 SHORT $LN1@DisuseServ

; 345  : 	{
; 346  : 		m_ServerItemMap.GetNextAssoc(Position,wKey,pGameServerItem);

  0002d	8d 45 f4	 lea	 eax, DWORD PTR _pGameServerItem$[ebp]
  00030	50		 push	 eax
  00031	8d 4d f8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  00034	51		 push	 ecx
  00035	8d 55 f0	 lea	 edx, DWORD PTR _Position$[ebp]
  00038	52		 push	 edx
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	83 c1 74	 add	 ecx, 116		; 00000074H
  0003f	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameServerItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetNextAssoc

; 347  : 		pGameServerItem->m_bDisuse=true;

  00044	8b 45 f4	 mov	 eax, DWORD PTR _pGameServerItem$[ebp]
  00047	c6 00 01	 mov	 BYTE PTR [eax], 1

; 348  : 	}

  0004a	eb db		 jmp	 SHORT $LN2@DisuseServ
$LN1@DisuseServ:

; 349  : 
; 350  : 	return;
; 351  : }

  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
?DisuseServerItem@CServerListManager@NServerListManager@@QAEXXZ ENDP ; NServerListManager::CServerListManager::DisuseServerItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?DisuseKernelItem@CServerListManager@NServerListManager@@QAEXXZ
_TEXT	SEGMENT
_pGamePageItem$ = -32					; size = 4
_pGameNodeItem$ = -28					; size = 4
_pGameKindItem$ = -24					; size = 4
_Position$ = -20					; size = 4
_pGameTypeItem$ = -16					; size = 4
_dwKey$ = -12						; size = 4
_wKey$ = -8						; size = 2
_this$ = -4						; size = 4
?DisuseKernelItem@CServerListManager@NServerListManager@@QAEXXZ PROC ; NServerListManager::CServerListManager::DisuseKernelItem, COMDAT
; _this$ = ecx

; 291  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 292  : 	//变量定义
; 293  : 	WORD wKey=0;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wKey$[ebp], ax

; 294  : 	DWORD dwKey=0;

  00012	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _dwKey$[ebp], 0

; 295  : 
; 296  : 	//废弃种类
; 297  : 	CGameTypeItem * pGameTypeItem=NULL;

  00019	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pGameTypeItem$[ebp], 0

; 298  : 	POSITION Position=m_TypeItemMap.GetStartPosition();

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	83 c1 04	 add	 ecx, 4
  00026	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetStartPosition
  0002b	89 45 ec	 mov	 DWORD PTR _Position$[ebp], eax
$LN2@DisuseKern:

; 299  : 	while (Position!=NULL)

  0002e	83 7d ec 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00032	74 1f		 je	 SHORT $LN3@DisuseKern

; 300  : 	{
; 301  : 		m_TypeItemMap.GetNextAssoc(Position,wKey,pGameTypeItem);

  00034	8d 45 f0	 lea	 eax, DWORD PTR _pGameTypeItem$[ebp]
  00037	50		 push	 eax
  00038	8d 4d f8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  0003b	51		 push	 ecx
  0003c	8d 55 ec	 lea	 edx, DWORD PTR _Position$[ebp]
  0003f	52		 push	 edx
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	83 c1 04	 add	 ecx, 4
  00046	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameTypeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetNextAssoc

; 302  : 		pGameTypeItem->m_bDisuse=true;

  0004b	8b 45 f0	 mov	 eax, DWORD PTR _pGameTypeItem$[ebp]
  0004e	c6 00 01	 mov	 BYTE PTR [eax], 1

; 303  : 	}

  00051	eb db		 jmp	 SHORT $LN2@DisuseKern
$LN3@DisuseKern:

; 304  : 
; 305  : 	//废弃类型
; 306  : 	CGameKindItem * pGameKindItem=NULL;

  00053	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pGameKindItem$[ebp], 0

; 307  : 	Position=m_KindItemMap.GetStartPosition();

  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 20	 add	 ecx, 32			; 00000020H
  00060	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetStartPosition
  00065	89 45 ec	 mov	 DWORD PTR _Position$[ebp], eax
$LN4@DisuseKern:

; 308  : 	while (Position!=NULL)

  00068	83 7d ec 00	 cmp	 DWORD PTR _Position$[ebp], 0
  0006c	74 1f		 je	 SHORT $LN5@DisuseKern

; 309  : 	{
; 310  : 		m_KindItemMap.GetNextAssoc(Position,wKey,pGameKindItem);

  0006e	8d 45 e8	 lea	 eax, DWORD PTR _pGameKindItem$[ebp]
  00071	50		 push	 eax
  00072	8d 4d f8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  00075	51		 push	 ecx
  00076	8d 55 ec	 lea	 edx, DWORD PTR _Position$[ebp]
  00079	52		 push	 edx
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	83 c1 20	 add	 ecx, 32			; 00000020H
  00080	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetNextAssoc

; 311  : 		pGameKindItem->m_bDisuse=true;

  00085	8b 45 e8	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  00088	c6 00 01	 mov	 BYTE PTR [eax], 1

; 312  : 	}

  0008b	eb db		 jmp	 SHORT $LN4@DisuseKern
$LN5@DisuseKern:

; 313  : 
; 314  : 	//废弃节点
; 315  : 	CGameNodeItem * pGameNodeItem=NULL;

  0008d	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pGameNodeItem$[ebp], 0

; 316  : 	Position=m_NodeItemMap.GetStartPosition();

  00094	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0009a	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetStartPosition
  0009f	89 45 ec	 mov	 DWORD PTR _Position$[ebp], eax
$LN6@DisuseKern:

; 317  : 	while (Position!=NULL)

  000a2	83 7d ec 00	 cmp	 DWORD PTR _Position$[ebp], 0
  000a6	74 1f		 je	 SHORT $LN7@DisuseKern

; 318  : 	{
; 319  : 		m_NodeItemMap.GetNextAssoc(Position,wKey,pGameNodeItem);

  000a8	8d 45 e4	 lea	 eax, DWORD PTR _pGameNodeItem$[ebp]
  000ab	50		 push	 eax
  000ac	8d 4d f8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  000af	51		 push	 ecx
  000b0	8d 55 ec	 lea	 edx, DWORD PTR _Position$[ebp]
  000b3	52		 push	 edx
  000b4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	83 c1 3c	 add	 ecx, 60			; 0000003cH
  000ba	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameNodeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetNextAssoc

; 320  : 		pGameNodeItem->m_bDisuse=true;

  000bf	8b 45 e4	 mov	 eax, DWORD PTR _pGameNodeItem$[ebp]
  000c2	c6 00 01	 mov	 BYTE PTR [eax], 1

; 321  : 	}

  000c5	eb db		 jmp	 SHORT $LN6@DisuseKern
$LN7@DisuseKern:

; 322  : 
; 323  : 	//废弃定制
; 324  : 	CGamePageItem * pGamePageItem=NULL;

  000c7	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pGamePageItem$[ebp], 0

; 325  : 	Position=m_PageItemMap.GetStartPosition();

  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	83 c1 58	 add	 ecx, 88			; 00000058H
  000d4	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetStartPosition
  000d9	89 45 ec	 mov	 DWORD PTR _Position$[ebp], eax
$LN8@DisuseKern:

; 326  : 	while (Position!=NULL)

  000dc	83 7d ec 00	 cmp	 DWORD PTR _Position$[ebp], 0
  000e0	74 1f		 je	 SHORT $LN1@DisuseKern

; 327  : 	{
; 328  : 		m_PageItemMap.GetNextAssoc(Position,wKey,pGamePageItem);

  000e2	8d 45 e0	 lea	 eax, DWORD PTR _pGamePageItem$[ebp]
  000e5	50		 push	 eax
  000e6	8d 4d f8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  000e9	51		 push	 ecx
  000ea	8d 55 ec	 lea	 edx, DWORD PTR _Position$[ebp]
  000ed	52		 push	 edx
  000ee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	83 c1 58	 add	 ecx, 88			; 00000058H
  000f4	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGamePageItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetNextAssoc

; 329  : 		pGamePageItem->m_bDisuse=true;

  000f9	8b 45 e0	 mov	 eax, DWORD PTR _pGamePageItem$[ebp]
  000fc	c6 00 01	 mov	 BYTE PTR [eax], 1

; 330  : 	}

  000ff	eb db		 jmp	 SHORT $LN8@DisuseKern
$LN1@DisuseKern:

; 331  : 
; 332  : 	return;
; 333  : }

  00101	5f		 pop	 edi
  00102	5e		 pop	 esi
  00103	5b		 pop	 ebx
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c3		 ret	 0
?DisuseKernelItem@CServerListManager@NServerListManager@@QAEXXZ ENDP ; NServerListManager::CServerListManager::DisuseKernelItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?CleanServerItem@CServerListManager@NServerListManager@@QAEXXZ
_TEXT	SEGMENT
tv150 = -92						; size = 4
tv138 = -92						; size = 4
_pGameServer$1 = -24					; size = 4
_pGameKindItem$2 = -20					; size = 4
_pGameServerItem$3 = -16				; size = 4
_wServerID$4 = -12					; size = 2
_PositionServer$ = -8					; size = 4
_this$ = -4						; size = 4
?CleanServerItem@CServerListManager@NServerListManager@@QAEXXZ PROC ; NServerListManager::CServerListManager::CleanServerItem, COMDAT
; _this$ = ecx

; 256  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 257  : 	//变量定义
; 258  : 	POSITION PositionServer=m_ServerItemMap.GetStartPosition();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 74	 add	 ecx, 116		; 00000074H
  00012	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetStartPosition
  00017	89 45 f8	 mov	 DWORD PTR _PositionServer$[ebp], eax
$LN2@CleanServe:

; 259  : 
; 260  : 	//删除房间
; 261  : 	while (PositionServer!=NULL)

  0001a	83 7d f8 00	 cmp	 DWORD PTR _PositionServer$[ebp], 0
  0001e	0f 84 e4 00 00
	00		 je	 $LN1@CleanServe

; 262  : 	{
; 263  : 		//索引房间
; 264  : 		WORD wServerID=0;

  00024	33 c0		 xor	 eax, eax
  00026	66 89 45 f4	 mov	 WORD PTR _wServerID$4[ebp], ax

; 265  : 		CGameServerItem * pGameServerItem=NULL;

  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pGameServerItem$3[ebp], 0

; 266  : 		m_ServerItemMap.GetNextAssoc(PositionServer,wServerID,pGameServerItem);

  00031	8d 45 f0	 lea	 eax, DWORD PTR _pGameServerItem$3[ebp]
  00034	50		 push	 eax
  00035	8d 4d f4	 lea	 ecx, DWORD PTR _wServerID$4[ebp]
  00038	51		 push	 ecx
  00039	8d 55 f8	 lea	 edx, DWORD PTR _PositionServer$[ebp]
  0003c	52		 push	 edx
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	83 c1 74	 add	 ecx, 116		; 00000074H
  00043	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameServerItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetNextAssoc

; 267  : 
; 268  : 		//删除判断
; 269  : 		if (pGameServerItem->m_bDisuse==true)

  00048	8b 45 f0	 mov	 eax, DWORD PTR _pGameServerItem$3[ebp]
  0004b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0004e	83 f9 01	 cmp	 ecx, 1
  00051	0f 85 ac 00 00
	00		 jne	 $LN4@CleanServe

; 270  : 		{
; 271  : 			//删除数据
; 272  : 			m_ServerItemMap.RemoveKey(wServerID);

  00057	0f b7 45 f4	 movzx	 eax, WORD PTR _wServerID$4[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	83 c1 74	 add	 ecx, 116		; 00000074H
  00062	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::RemoveKey

; 273  : 			m_ServerItemBuffer.Add(pGameServerItem);

  00067	8d 45 f0	 lea	 eax, DWORD PTR _pGameServerItem$3[ebp]
  0006a	50		 push	 eax
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00074	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameServerItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::Add

; 274  : 
; 275  : 			//设置人数
; 276  : 			CGameKindItem * pGameKindItem=NULL;

  00079	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pGameKindItem$2[ebp], 0

; 277  : 			if (m_KindItemMap.Lookup(pGameServerItem->m_GameServer.wKindID,pGameKindItem)==TRUE)

  00080	8d 45 ec	 lea	 eax, DWORD PTR _pGameKindItem$2[ebp]
  00083	50		 push	 eax
  00084	8b 4d f0	 mov	 ecx, DWORD PTR _pGameServerItem$3[ebp]
  00087	0f b7 51 01	 movzx	 edx, WORD PTR [ecx+1]
  0008b	52		 push	 edx
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	83 c1 20	 add	 ecx, 32			; 00000020H
  00092	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Lookup
  00097	83 f8 01	 cmp	 eax, 1
  0009a	75 67		 jne	 SHORT $LN4@CleanServe

; 278  : 			{
; 279  : 				tagGameServer * pGameServer=&pGameServerItem->m_GameServer;

  0009c	8b 45 f0	 mov	 eax, DWORD PTR _pGameServerItem$3[ebp]
  0009f	83 c0 01	 add	 eax, 1
  000a2	89 45 e8	 mov	 DWORD PTR _pGameServer$1[ebp], eax

; 280  : 				pGameKindItem->m_GameKind.dwOnLineCount=__max(pGameKindItem->m_GameKind.dwOnLineCount-pGameServer->dwOnLineCount,0);

  000a5	8b 45 ec	 mov	 eax, DWORD PTR _pGameKindItem$2[ebp]
  000a8	8b 4d e8	 mov	 ecx, DWORD PTR _pGameServer$1[ebp]
  000ab	8b 50 0f	 mov	 edx, DWORD PTR [eax+15]
  000ae	2b 51 25	 sub	 edx, DWORD PTR [ecx+37]
  000b1	74 11		 je	 SHORT $LN7@CleanServe
  000b3	8b 45 ec	 mov	 eax, DWORD PTR _pGameKindItem$2[ebp]
  000b6	8b 4d e8	 mov	 ecx, DWORD PTR _pGameServer$1[ebp]
  000b9	8b 50 0f	 mov	 edx, DWORD PTR [eax+15]
  000bc	2b 51 25	 sub	 edx, DWORD PTR [ecx+37]
  000bf	89 55 a4	 mov	 DWORD PTR tv138[ebp], edx
  000c2	eb 07		 jmp	 SHORT $LN8@CleanServe
$LN7@CleanServe:
  000c4	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN8@CleanServe:
  000cb	8b 45 ec	 mov	 eax, DWORD PTR _pGameKindItem$2[ebp]
  000ce	8b 4d a4	 mov	 ecx, DWORD PTR tv138[ebp]
  000d1	89 48 0f	 mov	 DWORD PTR [eax+15], ecx

; 281  : 				pGameKindItem->m_GameKind.dwFullCount=__max(pGameKindItem->m_GameKind.dwFullCount-pGameServer->dwFullCount,0);

  000d4	8b 45 ec	 mov	 eax, DWORD PTR _pGameKindItem$2[ebp]
  000d7	8b 4d e8	 mov	 ecx, DWORD PTR _pGameServer$1[ebp]
  000da	8b 50 1b	 mov	 edx, DWORD PTR [eax+27]
  000dd	2b 51 2d	 sub	 edx, DWORD PTR [ecx+45]
  000e0	74 11		 je	 SHORT $LN9@CleanServe
  000e2	8b 45 ec	 mov	 eax, DWORD PTR _pGameKindItem$2[ebp]
  000e5	8b 4d e8	 mov	 ecx, DWORD PTR _pGameServer$1[ebp]
  000e8	8b 50 1b	 mov	 edx, DWORD PTR [eax+27]
  000eb	2b 51 2d	 sub	 edx, DWORD PTR [ecx+45]
  000ee	89 55 a4	 mov	 DWORD PTR tv150[ebp], edx
  000f1	eb 07		 jmp	 SHORT $LN10@CleanServe
$LN9@CleanServe:
  000f3	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN10@CleanServe:
  000fa	8b 45 ec	 mov	 eax, DWORD PTR _pGameKindItem$2[ebp]
  000fd	8b 4d a4	 mov	 ecx, DWORD PTR tv150[ebp]
  00100	89 48 1b	 mov	 DWORD PTR [eax+27], ecx
$LN4@CleanServe:

; 282  : 			}
; 283  : 		}
; 284  : 	}

  00103	e9 12 ff ff ff	 jmp	 $LN2@CleanServe
$LN1@CleanServe:

; 285  : 
; 286  : 	return;
; 287  : }

  00108	5f		 pop	 edi
  00109	5e		 pop	 esi
  0010a	5b		 pop	 ebx
  0010b	8b e5		 mov	 esp, ebp
  0010d	5d		 pop	 ebp
  0010e	c3		 ret	 0
?CleanServerItem@CServerListManager@NServerListManager@@QAEXXZ ENDP ; NServerListManager::CServerListManager::CleanServerItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?CleanKernelItem@CServerListManager@NServerListManager@@QAEXXZ
_TEXT	SEGMENT
_pGamePageItem$1 = -52					; size = 4
_wPageID$2 = -48					; size = 2
_pGameNodeItem$3 = -44					; size = 4
_wNodeID$4 = -40					; size = 2
_pGameKindItem$5 = -36					; size = 4
_wKindID$6 = -32					; size = 2
_pGameTypeItem$7 = -28					; size = 4
_wTypeID$8 = -24					; size = 2
_PositionPage$ = -20					; size = 4
_PositionNode$ = -16					; size = 4
_PositionKind$ = -12					; size = 4
_PositionType$ = -8					; size = 4
_this$ = -4						; size = 4
?CleanKernelItem@CServerListManager@NServerListManager@@QAEXXZ PROC ; NServerListManager::CServerListManager::CleanKernelItem, COMDAT
; _this$ = ecx

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 181  : 	//变量定义
; 182  : 	POSITION PositionType=m_TypeItemMap.GetStartPosition();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 04	 add	 ecx, 4
  00012	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetStartPosition
  00017	89 45 f8	 mov	 DWORD PTR _PositionType$[ebp], eax

; 183  : 	POSITION PositionKind=m_KindItemMap.GetStartPosition();

  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	83 c1 20	 add	 ecx, 32			; 00000020H
  00020	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetStartPosition
  00025	89 45 f4	 mov	 DWORD PTR _PositionKind$[ebp], eax

; 184  : 	POSITION PositionNode=m_NodeItemMap.GetStartPosition();

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0002e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetStartPosition
  00033	89 45 f0	 mov	 DWORD PTR _PositionNode$[ebp], eax

; 185  : 	POSITION PositionPage=m_PageItemMap.GetStartPosition();

  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	83 c1 58	 add	 ecx, 88			; 00000058H
  0003c	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetStartPosition
  00041	89 45 ec	 mov	 DWORD PTR _PositionPage$[ebp], eax
$LN2@CleanKerne:

; 186  : 
; 187  : 	//清理种类
; 188  : 	while (PositionType!=NULL)

  00044	83 7d f8 00	 cmp	 DWORD PTR _PositionType$[ebp], 0
  00048	74 53		 je	 SHORT $LN4@CleanKerne

; 189  : 	{
; 190  : 		//索引房间
; 191  : 		WORD wTypeID=0;

  0004a	33 c0		 xor	 eax, eax
  0004c	66 89 45 e8	 mov	 WORD PTR _wTypeID$8[ebp], ax

; 192  : 		CGameTypeItem * pGameTypeItem=NULL;

  00050	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pGameTypeItem$7[ebp], 0

; 193  : 		m_TypeItemMap.GetNextAssoc(PositionType,wTypeID,pGameTypeItem);

  00057	8d 45 e4	 lea	 eax, DWORD PTR _pGameTypeItem$7[ebp]
  0005a	50		 push	 eax
  0005b	8d 4d e8	 lea	 ecx, DWORD PTR _wTypeID$8[ebp]
  0005e	51		 push	 ecx
  0005f	8d 55 f8	 lea	 edx, DWORD PTR _PositionType$[ebp]
  00062	52		 push	 edx
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	83 c1 04	 add	 ecx, 4
  00069	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameTypeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetNextAssoc

; 194  : 
; 195  : 		//删除判断
; 196  : 		if (pGameTypeItem->m_bDisuse==true)

  0006e	8b 45 e4	 mov	 eax, DWORD PTR _pGameTypeItem$7[ebp]
  00071	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00074	83 f9 01	 cmp	 ecx, 1
  00077	75 22		 jne	 SHORT $LN10@CleanKerne

; 197  : 		{
; 198  : 			m_TypeItemMap.RemoveKey(wTypeID);

  00079	0f b7 45 e8	 movzx	 eax, WORD PTR _wTypeID$8[ebp]
  0007d	50		 push	 eax
  0007e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	83 c1 04	 add	 ecx, 4
  00084	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::RemoveKey

; 199  : 			m_TypeItemBuffer.Add(pGameTypeItem);

  00089	8d 45 e4	 lea	 eax, DWORD PTR _pGameTypeItem$7[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00096	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameTypeItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::Add
$LN10@CleanKerne:

; 200  : 		}
; 201  : 	}

  0009b	eb a7		 jmp	 SHORT $LN2@CleanKerne
$LN4@CleanKerne:

; 202  : 
; 203  : 	//清理类型
; 204  : 	while (PositionKind!=NULL)

  0009d	83 7d f4 00	 cmp	 DWORD PTR _PositionKind$[ebp], 0
  000a1	74 53		 je	 SHORT $LN6@CleanKerne

; 205  : 	{
; 206  : 		//索引房间
; 207  : 		WORD wKindID=0;

  000a3	33 c0		 xor	 eax, eax
  000a5	66 89 45 e0	 mov	 WORD PTR _wKindID$6[ebp], ax

; 208  : 		CGameKindItem * pGameKindItem=NULL;

  000a9	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _pGameKindItem$5[ebp], 0

; 209  : 		m_KindItemMap.GetNextAssoc(PositionKind,wKindID,pGameKindItem);

  000b0	8d 45 dc	 lea	 eax, DWORD PTR _pGameKindItem$5[ebp]
  000b3	50		 push	 eax
  000b4	8d 4d e0	 lea	 ecx, DWORD PTR _wKindID$6[ebp]
  000b7	51		 push	 ecx
  000b8	8d 55 f4	 lea	 edx, DWORD PTR _PositionKind$[ebp]
  000bb	52		 push	 edx
  000bc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	83 c1 20	 add	 ecx, 32			; 00000020H
  000c2	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetNextAssoc

; 210  : 
; 211  : 		//删除判断
; 212  : 		if (pGameKindItem->m_bDisuse==true)

  000c7	8b 45 dc	 mov	 eax, DWORD PTR _pGameKindItem$5[ebp]
  000ca	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000cd	83 f9 01	 cmp	 ecx, 1
  000d0	75 22		 jne	 SHORT $LN11@CleanKerne

; 213  : 		{
; 214  : 			m_KindItemMap.RemoveKey(wKindID);

  000d2	0f b7 45 e0	 movzx	 eax, WORD PTR _wKindID$6[ebp]
  000d6	50		 push	 eax
  000d7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	83 c1 20	 add	 ecx, 32			; 00000020H
  000dd	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::RemoveKey

; 215  : 			m_KindItemBuffer.Add(pGameKindItem);

  000e2	8d 45 dc	 lea	 eax, DWORD PTR _pGameKindItem$5[ebp]
  000e5	50		 push	 eax
  000e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e9	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  000ef	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameKindItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::Add
$LN11@CleanKerne:

; 216  : 		}
; 217  : 	}

  000f4	eb a7		 jmp	 SHORT $LN4@CleanKerne
$LN6@CleanKerne:

; 218  : 
; 219  : 	//清理节点
; 220  : 	while (PositionNode!=NULL)

  000f6	83 7d f0 00	 cmp	 DWORD PTR _PositionNode$[ebp], 0
  000fa	74 53		 je	 SHORT $LN8@CleanKerne

; 221  : 	{
; 222  : 		//索引房间
; 223  : 		WORD wNodeID=0;

  000fc	33 c0		 xor	 eax, eax
  000fe	66 89 45 d8	 mov	 WORD PTR _wNodeID$4[ebp], ax

; 224  : 		CGameNodeItem * pGameNodeItem=NULL;

  00102	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _pGameNodeItem$3[ebp], 0

; 225  : 		m_NodeItemMap.GetNextAssoc(PositionNode,wNodeID,pGameNodeItem);

  00109	8d 45 d4	 lea	 eax, DWORD PTR _pGameNodeItem$3[ebp]
  0010c	50		 push	 eax
  0010d	8d 4d d8	 lea	 ecx, DWORD PTR _wNodeID$4[ebp]
  00110	51		 push	 ecx
  00111	8d 55 f0	 lea	 edx, DWORD PTR _PositionNode$[ebp]
  00114	52		 push	 edx
  00115	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00118	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0011b	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameNodeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetNextAssoc

; 226  : 
; 227  : 		//删除判断
; 228  : 		if (pGameNodeItem->m_bDisuse==true)

  00120	8b 45 d4	 mov	 eax, DWORD PTR _pGameNodeItem$3[ebp]
  00123	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00126	83 f9 01	 cmp	 ecx, 1
  00129	75 22		 jne	 SHORT $LN12@CleanKerne

; 229  : 		{
; 230  : 			m_NodeItemMap.RemoveKey(wNodeID);

  0012b	0f b7 45 d8	 movzx	 eax, WORD PTR _wNodeID$4[ebp]
  0012f	50		 push	 eax
  00130	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00133	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00136	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::RemoveKey

; 231  : 			m_NodeItemBuffer.Add(pGameNodeItem);

  0013b	8d 45 d4	 lea	 eax, DWORD PTR _pGameNodeItem$3[ebp]
  0013e	50		 push	 eax
  0013f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00148	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameNodeItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::Add
$LN12@CleanKerne:

; 232  : 		}
; 233  : 	}

  0014d	eb a7		 jmp	 SHORT $LN6@CleanKerne
$LN8@CleanKerne:

; 234  : 
; 235  : 	//清理定制
; 236  : 	while (PositionPage!=NULL)

  0014f	83 7d ec 00	 cmp	 DWORD PTR _PositionPage$[ebp], 0
  00153	74 53		 je	 SHORT $LN1@CleanKerne

; 237  : 	{
; 238  : 		//索引房间
; 239  : 		WORD wPageID=0;

  00155	33 c0		 xor	 eax, eax
  00157	66 89 45 d0	 mov	 WORD PTR _wPageID$2[ebp], ax

; 240  : 		CGamePageItem * pGamePageItem=NULL;

  0015b	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _pGamePageItem$1[ebp], 0

; 241  : 		m_PageItemMap.GetNextAssoc(PositionPage,wPageID,pGamePageItem);

  00162	8d 45 cc	 lea	 eax, DWORD PTR _pGamePageItem$1[ebp]
  00165	50		 push	 eax
  00166	8d 4d d0	 lea	 ecx, DWORD PTR _wPageID$2[ebp]
  00169	51		 push	 ecx
  0016a	8d 55 ec	 lea	 edx, DWORD PTR _PositionPage$[ebp]
  0016d	52		 push	 edx
  0016e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00171	83 c1 58	 add	 ecx, 88			; 00000058H
  00174	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGamePageItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetNextAssoc

; 242  : 
; 243  : 		//删除判断
; 244  : 		if (pGamePageItem->m_bDisuse==true)

  00179	8b 45 cc	 mov	 eax, DWORD PTR _pGamePageItem$1[ebp]
  0017c	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0017f	83 f9 01	 cmp	 ecx, 1
  00182	75 22		 jne	 SHORT $LN13@CleanKerne

; 245  : 		{
; 246  : 			m_PageItemMap.RemoveKey(wPageID);

  00184	0f b7 45 d0	 movzx	 eax, WORD PTR _wPageID$2[ebp]
  00188	50		 push	 eax
  00189	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018c	83 c1 58	 add	 ecx, 88			; 00000058H
  0018f	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEHG@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::RemoveKey

; 247  : 			m_PageItemBuffer.Add(pGamePageItem);

  00194	8d 45 cc	 lea	 eax, DWORD PTR _pGamePageItem$1[ebp]
  00197	50		 push	 eax
  00198	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0019b	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  001a1	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGamePageItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::Add
$LN13@CleanKerne:

; 248  : 		}
; 249  : 	}

  001a6	eb a7		 jmp	 SHORT $LN8@CleanKerne
$LN1@CleanKerne:

; 250  : 
; 251  : 	return;
; 252  : }

  001a8	5f		 pop	 edi
  001a9	5e		 pop	 esi
  001aa	5b		 pop	 ebx
  001ab	8b e5		 mov	 esp, ebp
  001ad	5d		 pop	 ebp
  001ae	c3		 ret	 0
?CleanKernelItem@CServerListManager@NServerListManager@@QAEXXZ ENDP ; NServerListManager::CServerListManager::CleanKernelItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?ResetServerList@CServerListManager@NServerListManager@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetServerList@CServerListManager@NServerListManager@@QAEXXZ PROC ; NServerListManager::CServerListManager::ResetServerList, COMDAT
; _this$ = ecx

; 166  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 167  : 	//废弃列表
; 168  : 	DisuseKernelItem();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?DisuseKernelItem@CServerListManager@NServerListManager@@QAEXXZ ; NServerListManager::CServerListManager::DisuseKernelItem

; 169  : 	DisuseServerItem();

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?DisuseServerItem@CServerListManager@NServerListManager@@QAEXXZ ; NServerListManager::CServerListManager::DisuseServerItem

; 170  : 
; 171  : 	//清理列表
; 172  : 	CleanKernelItem();

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?CleanKernelItem@CServerListManager@NServerListManager@@QAEXXZ ; NServerListManager::CServerListManager::CleanKernelItem

; 173  : 	CleanServerItem();

  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?CleanServerItem@CServerListManager@NServerListManager@@QAEXXZ ; NServerListManager::CServerListManager::CleanServerItem

; 174  : 
; 175  : 	return;
; 176  : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?ResetServerList@CServerListManager@NServerListManager@@QAEXXZ ENDP ; NServerListManager::CServerListManager::ResetServerList
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ??1CServerListManager@NServerListManager@@UAE@XZ
_TEXT	SEGMENT
$T2 = -172						; size = 4
$T3 = -168						; size = 4
$T4 = -164						; size = 4
$T5 = -160						; size = 4
$T6 = -156						; size = 4
$T7 = -152						; size = 4
$T8 = -148						; size = 4
$T9 = -144						; size = 4
$T10 = -140						; size = 4
$T11 = -136						; size = 4
_i$12 = -68						; size = 4
_pGamePageItem$ = -64					; size = 4
_i$13 = -60						; size = 4
_pGameServerItem$ = -56					; size = 4
_i$14 = -52						; size = 4
_pGameNodeItem$ = -48					; size = 4
_i$15 = -44						; size = 4
_pGameKindItem$ = -40					; size = 4
_i$16 = -36						; size = 4
_Position$ = -32					; size = 4
_pGameTypeItem$ = -28					; size = 4
_wKey$ = -24						; size = 2
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
??1CServerListManager@NServerListManager@@UAE@XZ PROC	; NServerListManager::CServerListManager::~CServerListManager, COMDAT
; _this$ = ecx

; 77   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CServerListManager@NServerListManager@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	50		 push	 eax
  00023	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00026	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002c	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00032	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00035	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CServerListManager@NServerListManager@@6B@
  0003b	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9

; 78   : 	//变量定义
; 79   : 	WORD wKey=0;

  00042	33 c0		 xor	 eax, eax
  00044	66 89 45 e8	 mov	 WORD PTR _wKey$[ebp], ax

; 80   : 
; 81   : 	//删除种类
; 82   : 	CGameTypeItem * pGameTypeItem=NULL;

  00048	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pGameTypeItem$[ebp], 0

; 83   : 	POSITION Position=m_TypeItemMap.GetStartPosition();

  0004f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	83 c1 04	 add	 ecx, 4
  00055	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetStartPosition
  0005a	89 45 e0	 mov	 DWORD PTR _Position$[ebp], eax
$LN2@CServerLis:

; 84   : 	while (Position!=NULL)

  0005d	83 7d e0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00061	74 73		 je	 SHORT $LN3@CServerLis

; 85   : 	{
; 86   : 		m_TypeItemMap.GetNextAssoc(Position,wKey,pGameTypeItem);

  00063	8d 45 e4	 lea	 eax, DWORD PTR _pGameTypeItem$[ebp]
  00066	50		 push	 eax
  00067	8d 4d e8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  0006a	51		 push	 ecx
  0006b	8d 55 e0	 lea	 edx, DWORD PTR _Position$[ebp]
  0006e	52		 push	 edx
  0006f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	83 c1 04	 add	 ecx, 4
  00075	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameTypeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetNextAssoc

; 87   : 		SafeDelete(pGameTypeItem);

  0007a	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+12], 10 ; 0000000aH
  0007e	8b 45 e4	 mov	 eax, DWORD PTR _pGameTypeItem$[ebp]
  00081	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T11[ebp], eax
  00087	6a 27		 push	 39			; 00000027H
  00089	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR $T11[ebp]
  0008f	51		 push	 ecx
  00090	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00095	83 c4 08	 add	 esp, 8
  00098	eb 23		 jmp	 SHORT $LN48@CServerLis
__catch$??1CServerListManager@NServerListManager@@UAE@XZ$0:
  0009a	33 c0		 xor	 eax, eax
  0009c	75 19		 jne	 SHORT $LN38@CServerLis
  0009e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CServerListManager@NServerListManager@@UAE@XZ@4JA
  000a4	83 c1 0a	 add	 ecx, 10			; 0000000aH
  000a7	51		 push	 ecx
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000ad	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000b2	85 c0		 test	 eax, eax
  000b4	74 01		 je	 SHORT $LN38@CServerLis
  000b6	cc		 int	 3
$LN38@CServerLis:
  000b7	b8 00 00 00 00	 mov	 eax, $LN79@CServerLis
  000bc	c3		 ret	 0
$LN48@CServerLis:
  000bd	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  000c4	eb 07		 jmp	 SHORT __tryend$??1CServerListManager@NServerListManager@@UAE@XZ$1
$LN79@CServerLis:
  000c6	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CServerListManager@NServerListManager@@UAE@XZ$1:
  000cd	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pGameTypeItem$[ebp], 0

; 88   : 	}

  000d4	eb 87		 jmp	 SHORT $LN2@CServerLis
$LN3@CServerLis:

; 89   : 	for (INT_PTR i=0;i<m_TypeItemBuffer.GetCount();i++)

  000d6	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _i$16[ebp], 0
  000dd	eb 09		 jmp	 SHORT $LN6@CServerLis
$LN4@CServerLis:
  000df	8b 45 dc	 mov	 eax, DWORD PTR _i$16[ebp]
  000e2	83 c0 01	 add	 eax, 1
  000e5	89 45 dc	 mov	 DWORD PTR _i$16[ebp], eax
$LN6@CServerLis:
  000e8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  000f1	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::GetCount
  000f6	39 45 dc	 cmp	 DWORD PTR _i$16[ebp], eax
  000f9	7d 76		 jge	 SHORT $LN5@CServerLis

; 90   : 	{
; 91   : 		pGameTypeItem=m_TypeItemBuffer[i];

  000fb	8b 45 dc	 mov	 eax, DWORD PTR _i$16[ebp]
  000fe	50		 push	 eax
  000ff	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00108	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::operator[]
  0010d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0010f	89 4d e4	 mov	 DWORD PTR _pGameTypeItem$[ebp], ecx

; 92   : 		SafeDelete(pGameTypeItem);

  00112	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+12], 12 ; 0000000cH
  00116	8b 45 e4	 mov	 eax, DWORD PTR _pGameTypeItem$[ebp]
  00119	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T10[ebp], eax
  0011f	6a 27		 push	 39			; 00000027H
  00121	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR $T10[ebp]
  00127	51		 push	 ecx
  00128	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0012d	83 c4 08	 add	 esp, 8
  00130	eb 23		 jmp	 SHORT $LN50@CServerLis
__catch$??1CServerListManager@NServerListManager@@UAE@XZ$2:
  00132	33 c0		 xor	 eax, eax
  00134	75 19		 jne	 SHORT $LN39@CServerLis
  00136	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CServerListManager@NServerListManager@@UAE@XZ@4JA
  0013c	83 c1 0f	 add	 ecx, 15			; 0000000fH
  0013f	51		 push	 ecx
  00140	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00145	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0014a	85 c0		 test	 eax, eax
  0014c	74 01		 je	 SHORT $LN39@CServerLis
  0014e	cc		 int	 3
$LN39@CServerLis:
  0014f	b8 00 00 00 00	 mov	 eax, $LN81@CServerLis
  00154	c3		 ret	 0
$LN50@CServerLis:
  00155	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  0015c	eb 07		 jmp	 SHORT __tryend$??1CServerListManager@NServerListManager@@UAE@XZ$3
$LN81@CServerLis:
  0015e	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CServerListManager@NServerListManager@@UAE@XZ$3:
  00165	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pGameTypeItem$[ebp], 0

; 93   : 	}

  0016c	e9 6e ff ff ff	 jmp	 $LN4@CServerLis
$LN5@CServerLis:

; 94   : 	m_TypeItemMap.RemoveAll();

  00171	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00174	83 c1 04	 add	 ecx, 4
  00177	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::RemoveAll

; 95   : 	m_TypeItemBuffer.RemoveAll();

  0017c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0017f	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00185	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXXZ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::RemoveAll

; 96   : 
; 97   : 	//删除类型
; 98   : 	CGameKindItem * pGameKindItem=NULL;

  0018a	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _pGameKindItem$[ebp], 0

; 99   : 	Position=m_KindItemMap.GetStartPosition();

  00191	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	83 c1 20	 add	 ecx, 32			; 00000020H
  00197	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetStartPosition
  0019c	89 45 e0	 mov	 DWORD PTR _Position$[ebp], eax
$LN7@CServerLis:

; 100  : 	while (Position!=NULL)

  0019f	83 7d e0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  001a3	74 73		 je	 SHORT $LN8@CServerLis

; 101  : 	{
; 102  : 		m_KindItemMap.GetNextAssoc(Position,wKey,pGameKindItem);

  001a5	8d 45 d8	 lea	 eax, DWORD PTR _pGameKindItem$[ebp]
  001a8	50		 push	 eax
  001a9	8d 4d e8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  001ac	51		 push	 ecx
  001ad	8d 55 e0	 lea	 edx, DWORD PTR _Position$[ebp]
  001b0	52		 push	 edx
  001b1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001b4	83 c1 20	 add	 ecx, 32			; 00000020H
  001b7	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetNextAssoc

; 103  : 		SafeDelete(pGameKindItem);

  001bc	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+12], 14 ; 0000000eH
  001c0	8b 45 d8	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  001c3	89 85 70 ff ff
	ff		 mov	 DWORD PTR $T9[ebp], eax
  001c9	6a 5f		 push	 95			; 0000005fH
  001cb	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR $T9[ebp]
  001d1	51		 push	 ecx
  001d2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001d7	83 c4 08	 add	 esp, 8
  001da	eb 23		 jmp	 SHORT $LN52@CServerLis
__catch$??1CServerListManager@NServerListManager@@UAE@XZ$4:
  001dc	33 c0		 xor	 eax, eax
  001de	75 19		 jne	 SHORT $LN40@CServerLis
  001e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CServerListManager@NServerListManager@@UAE@XZ@4JA
  001e6	83 c1 1a	 add	 ecx, 26			; 0000001aH
  001e9	51		 push	 ecx
  001ea	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  001ef	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  001f4	85 c0		 test	 eax, eax
  001f6	74 01		 je	 SHORT $LN40@CServerLis
  001f8	cc		 int	 3
$LN40@CServerLis:
  001f9	b8 00 00 00 00	 mov	 eax, $LN83@CServerLis
  001fe	c3		 ret	 0
$LN52@CServerLis:
  001ff	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  00206	eb 07		 jmp	 SHORT __tryend$??1CServerListManager@NServerListManager@@UAE@XZ$5
$LN83@CServerLis:
  00208	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CServerListManager@NServerListManager@@UAE@XZ$5:
  0020f	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _pGameKindItem$[ebp], 0

; 104  : 	}

  00216	eb 87		 jmp	 SHORT $LN7@CServerLis
$LN8@CServerLis:

; 105  : 	for (INT_PTR i=0;i<m_KindItemBuffer.GetCount();i++)

  00218	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _i$15[ebp], 0
  0021f	eb 09		 jmp	 SHORT $LN11@CServerLis
$LN9@CServerLis:
  00221	8b 45 d4	 mov	 eax, DWORD PTR _i$15[ebp]
  00224	83 c0 01	 add	 eax, 1
  00227	89 45 d4	 mov	 DWORD PTR _i$15[ebp], eax
$LN11@CServerLis:
  0022a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0022d	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  00233	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::GetCount
  00238	39 45 d4	 cmp	 DWORD PTR _i$15[ebp], eax
  0023b	7d 76		 jge	 SHORT $LN10@CServerLis

; 106  : 	{
; 107  : 		pGameKindItem=m_KindItemBuffer[i];

  0023d	8b 45 d4	 mov	 eax, DWORD PTR _i$15[ebp]
  00240	50		 push	 eax
  00241	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00244	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  0024a	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::operator[]
  0024f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00251	89 4d d8	 mov	 DWORD PTR _pGameKindItem$[ebp], ecx

; 108  : 		SafeDelete(pGameKindItem);

  00254	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+12], 16 ; 00000010H
  00258	8b 45 d8	 mov	 eax, DWORD PTR _pGameKindItem$[ebp]
  0025b	89 85 6c ff ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00261	6a 5f		 push	 95			; 0000005fH
  00263	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR $T8[ebp]
  00269	51		 push	 ecx
  0026a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0026f	83 c4 08	 add	 esp, 8
  00272	eb 23		 jmp	 SHORT $LN54@CServerLis
__catch$??1CServerListManager@NServerListManager@@UAE@XZ$6:
  00274	33 c0		 xor	 eax, eax
  00276	75 19		 jne	 SHORT $LN41@CServerLis
  00278	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CServerListManager@NServerListManager@@UAE@XZ@4JA
  0027e	83 c1 1f	 add	 ecx, 31			; 0000001fH
  00281	51		 push	 ecx
  00282	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00287	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0028c	85 c0		 test	 eax, eax
  0028e	74 01		 je	 SHORT $LN41@CServerLis
  00290	cc		 int	 3
$LN41@CServerLis:
  00291	b8 00 00 00 00	 mov	 eax, $LN85@CServerLis
  00296	c3		 ret	 0
$LN54@CServerLis:
  00297	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  0029e	eb 07		 jmp	 SHORT __tryend$??1CServerListManager@NServerListManager@@UAE@XZ$7
$LN85@CServerLis:
  002a0	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CServerListManager@NServerListManager@@UAE@XZ$7:
  002a7	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _pGameKindItem$[ebp], 0

; 109  : 	}

  002ae	e9 6e ff ff ff	 jmp	 $LN9@CServerLis
$LN10@CServerLis:

; 110  : 	m_KindItemMap.RemoveAll();

  002b3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002b6	83 c1 20	 add	 ecx, 32			; 00000020H
  002b9	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::RemoveAll

; 111  : 	m_KindItemBuffer.RemoveAll();

  002be	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002c1	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  002c7	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXXZ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::RemoveAll

; 112  : 
; 113  : 	//删除节点
; 114  : 	CGameNodeItem * pGameNodeItem=NULL;

  002cc	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _pGameNodeItem$[ebp], 0

; 115  : 	Position=m_NodeItemMap.GetStartPosition();

  002d3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002d6	83 c1 3c	 add	 ecx, 60			; 0000003cH
  002d9	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetStartPosition
  002de	89 45 e0	 mov	 DWORD PTR _Position$[ebp], eax
$LN12@CServerLis:

; 116  : 	while (Position!=NULL)

  002e1	83 7d e0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  002e5	74 73		 je	 SHORT $LN13@CServerLis

; 117  : 	{
; 118  : 		m_NodeItemMap.GetNextAssoc(Position,wKey,pGameNodeItem);

  002e7	8d 45 d0	 lea	 eax, DWORD PTR _pGameNodeItem$[ebp]
  002ea	50		 push	 eax
  002eb	8d 4d e8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  002ee	51		 push	 ecx
  002ef	8d 55 e0	 lea	 edx, DWORD PTR _Position$[ebp]
  002f2	52		 push	 edx
  002f3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002f6	83 c1 3c	 add	 ecx, 60			; 0000003cH
  002f9	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameNodeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetNextAssoc

; 119  : 		SafeDelete(pGameNodeItem);

  002fe	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+12], 18 ; 00000012H
  00302	8b 45 d0	 mov	 eax, DWORD PTR _pGameNodeItem$[ebp]
  00305	89 85 68 ff ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  0030b	6a 29		 push	 41			; 00000029H
  0030d	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR $T7[ebp]
  00313	51		 push	 ecx
  00314	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00319	83 c4 08	 add	 esp, 8
  0031c	eb 23		 jmp	 SHORT $LN56@CServerLis
__catch$??1CServerListManager@NServerListManager@@UAE@XZ$8:
  0031e	33 c0		 xor	 eax, eax
  00320	75 19		 jne	 SHORT $LN42@CServerLis
  00322	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CServerListManager@NServerListManager@@UAE@XZ@4JA
  00328	83 c1 2a	 add	 ecx, 42			; 0000002aH
  0032b	51		 push	 ecx
  0032c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00331	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00336	85 c0		 test	 eax, eax
  00338	74 01		 je	 SHORT $LN42@CServerLis
  0033a	cc		 int	 3
$LN42@CServerLis:
  0033b	b8 00 00 00 00	 mov	 eax, $LN87@CServerLis
  00340	c3		 ret	 0
$LN56@CServerLis:
  00341	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  00348	eb 07		 jmp	 SHORT __tryend$??1CServerListManager@NServerListManager@@UAE@XZ$9
$LN87@CServerLis:
  0034a	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CServerListManager@NServerListManager@@UAE@XZ$9:
  00351	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _pGameNodeItem$[ebp], 0

; 120  : 	}

  00358	eb 87		 jmp	 SHORT $LN12@CServerLis
$LN13@CServerLis:

; 121  : 	for (INT_PTR i=0;i<m_NodeItemBuffer.GetCount();i++)

  0035a	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _i$14[ebp], 0
  00361	eb 09		 jmp	 SHORT $LN16@CServerLis
$LN14@CServerLis:
  00363	8b 45 cc	 mov	 eax, DWORD PTR _i$14[ebp]
  00366	83 c0 01	 add	 eax, 1
  00369	89 45 cc	 mov	 DWORD PTR _i$14[ebp], eax
$LN16@CServerLis:
  0036c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0036f	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00375	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::GetCount
  0037a	39 45 cc	 cmp	 DWORD PTR _i$14[ebp], eax
  0037d	7d 76		 jge	 SHORT $LN15@CServerLis

; 122  : 	{
; 123  : 		pGameNodeItem=m_NodeItemBuffer[i];

  0037f	8b 45 cc	 mov	 eax, DWORD PTR _i$14[ebp]
  00382	50		 push	 eax
  00383	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00386	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  0038c	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::operator[]
  00391	8b 08		 mov	 ecx, DWORD PTR [eax]
  00393	89 4d d0	 mov	 DWORD PTR _pGameNodeItem$[ebp], ecx

; 124  : 		SafeDelete(pGameNodeItem);

  00396	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+12], 20 ; 00000014H
  0039a	8b 45 d0	 mov	 eax, DWORD PTR _pGameNodeItem$[ebp]
  0039d	89 85 64 ff ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  003a3	6a 29		 push	 41			; 00000029H
  003a5	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
  003ab	51		 push	 ecx
  003ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  003b1	83 c4 08	 add	 esp, 8
  003b4	eb 23		 jmp	 SHORT $LN58@CServerLis
__catch$??1CServerListManager@NServerListManager@@UAE@XZ$10:
  003b6	33 c0		 xor	 eax, eax
  003b8	75 19		 jne	 SHORT $LN43@CServerLis
  003ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CServerListManager@NServerListManager@@UAE@XZ@4JA
  003c0	83 c1 2f	 add	 ecx, 47			; 0000002fH
  003c3	51		 push	 ecx
  003c4	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  003c9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  003ce	85 c0		 test	 eax, eax
  003d0	74 01		 je	 SHORT $LN43@CServerLis
  003d2	cc		 int	 3
$LN43@CServerLis:
  003d3	b8 00 00 00 00	 mov	 eax, $LN89@CServerLis
  003d8	c3		 ret	 0
$LN58@CServerLis:
  003d9	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  003e0	eb 07		 jmp	 SHORT __tryend$??1CServerListManager@NServerListManager@@UAE@XZ$11
$LN89@CServerLis:
  003e2	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CServerListManager@NServerListManager@@UAE@XZ$11:
  003e9	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _pGameNodeItem$[ebp], 0

; 125  : 	}

  003f0	e9 6e ff ff ff	 jmp	 $LN14@CServerLis
$LN15@CServerLis:

; 126  : 	m_NodeItemMap.RemoveAll();

  003f5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  003f8	83 c1 3c	 add	 ecx, 60			; 0000003cH
  003fb	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::RemoveAll

; 127  : 	m_NodeItemBuffer.RemoveAll();

  00400	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00403	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00409	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXXZ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::RemoveAll

; 128  : 
; 129  : 	//删除房间
; 130  : 	CGameServerItem * pGameServerItem=NULL;

  0040e	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _pGameServerItem$[ebp], 0

; 131  : 	Position=m_ServerItemMap.GetStartPosition();

  00415	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00418	83 c1 74	 add	 ecx, 116		; 00000074H
  0041b	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetStartPosition
  00420	89 45 e0	 mov	 DWORD PTR _Position$[ebp], eax
$LN17@CServerLis:

; 132  : 	while (Position!=NULL)

  00423	83 7d e0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00427	74 76		 je	 SHORT $LN18@CServerLis

; 133  : 	{
; 134  : 		m_ServerItemMap.GetNextAssoc(Position,wKey,pGameServerItem);

  00429	8d 45 c8	 lea	 eax, DWORD PTR _pGameServerItem$[ebp]
  0042c	50		 push	 eax
  0042d	8d 4d e8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  00430	51		 push	 ecx
  00431	8d 55 e0	 lea	 edx, DWORD PTR _Position$[ebp]
  00434	52		 push	 edx
  00435	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00438	83 c1 74	 add	 ecx, 116		; 00000074H
  0043b	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameServerItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetNextAssoc

; 135  : 		SafeDelete(pGameServerItem);

  00440	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+12], 22 ; 00000016H
  00444	8b 45 c8	 mov	 eax, DWORD PTR _pGameServerItem$[ebp]
  00447	89 85 60 ff ff
	ff		 mov	 DWORD PTR $T5[ebp], eax
  0044d	68 1c 03 00 00	 push	 796			; 0000031cH
  00452	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR $T5[ebp]
  00458	51		 push	 ecx
  00459	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0045e	83 c4 08	 add	 esp, 8
  00461	eb 23		 jmp	 SHORT $LN60@CServerLis
__catch$??1CServerListManager@NServerListManager@@UAE@XZ$12:
  00463	33 c0		 xor	 eax, eax
  00465	75 19		 jne	 SHORT $LN44@CServerLis
  00467	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CServerListManager@NServerListManager@@UAE@XZ@4JA
  0046d	83 c1 3a	 add	 ecx, 58			; 0000003aH
  00470	51		 push	 ecx
  00471	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00476	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0047b	85 c0		 test	 eax, eax
  0047d	74 01		 je	 SHORT $LN44@CServerLis
  0047f	cc		 int	 3
$LN44@CServerLis:
  00480	b8 00 00 00 00	 mov	 eax, $LN91@CServerLis
  00485	c3		 ret	 0
$LN60@CServerLis:
  00486	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  0048d	eb 07		 jmp	 SHORT __tryend$??1CServerListManager@NServerListManager@@UAE@XZ$13
$LN91@CServerLis:
  0048f	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CServerListManager@NServerListManager@@UAE@XZ$13:
  00496	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _pGameServerItem$[ebp], 0

; 136  : 	}

  0049d	eb 84		 jmp	 SHORT $LN17@CServerLis
$LN18@CServerLis:

; 137  : 	for (INT_PTR i=0;i<m_ServerItemBuffer.GetCount();i++)

  0049f	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _i$13[ebp], 0
  004a6	eb 09		 jmp	 SHORT $LN21@CServerLis
$LN19@CServerLis:
  004a8	8b 45 c4	 mov	 eax, DWORD PTR _i$13[ebp]
  004ab	83 c0 01	 add	 eax, 1
  004ae	89 45 c4	 mov	 DWORD PTR _i$13[ebp], eax
$LN21@CServerLis:
  004b1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  004b4	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  004ba	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::GetCount
  004bf	39 45 c4	 cmp	 DWORD PTR _i$13[ebp], eax
  004c2	7d 79		 jge	 SHORT $LN20@CServerLis

; 138  : 	{
; 139  : 		pGameServerItem=m_ServerItemBuffer[i];

  004c4	8b 45 c4	 mov	 eax, DWORD PTR _i$13[ebp]
  004c7	50		 push	 eax
  004c8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  004cb	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  004d1	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::operator[]
  004d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  004d8	89 4d c8	 mov	 DWORD PTR _pGameServerItem$[ebp], ecx

; 140  : 		SafeDelete(pGameServerItem);

  004db	c6 45 fc 18	 mov	 BYTE PTR __$EHRec$[ebp+12], 24 ; 00000018H
  004df	8b 45 c8	 mov	 eax, DWORD PTR _pGameServerItem$[ebp]
  004e2	89 85 5c ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  004e8	68 1c 03 00 00	 push	 796			; 0000031cH
  004ed	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  004f3	51		 push	 ecx
  004f4	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  004f9	83 c4 08	 add	 esp, 8
  004fc	eb 23		 jmp	 SHORT $LN62@CServerLis
__catch$??1CServerListManager@NServerListManager@@UAE@XZ$14:
  004fe	33 c0		 xor	 eax, eax
  00500	75 19		 jne	 SHORT $LN45@CServerLis
  00502	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CServerListManager@NServerListManager@@UAE@XZ@4JA
  00508	83 c1 3f	 add	 ecx, 63			; 0000003fH
  0050b	51		 push	 ecx
  0050c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00511	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00516	85 c0		 test	 eax, eax
  00518	74 01		 je	 SHORT $LN45@CServerLis
  0051a	cc		 int	 3
$LN45@CServerLis:
  0051b	b8 00 00 00 00	 mov	 eax, $LN93@CServerLis
  00520	c3		 ret	 0
$LN62@CServerLis:
  00521	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  00528	eb 07		 jmp	 SHORT __tryend$??1CServerListManager@NServerListManager@@UAE@XZ$15
$LN93@CServerLis:
  0052a	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CServerListManager@NServerListManager@@UAE@XZ$15:
  00531	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _pGameServerItem$[ebp], 0

; 141  : 	}

  00538	e9 6b ff ff ff	 jmp	 $LN19@CServerLis
$LN20@CServerLis:

; 142  : 	m_ServerItemMap.RemoveAll();

  0053d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00540	83 c1 74	 add	 ecx, 116		; 00000074H
  00543	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::RemoveAll

; 143  : 	m_ServerItemBuffer.RemoveAll();

  00548	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0054b	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00551	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXXZ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::RemoveAll

; 144  : 
; 145  : 	//删除定制
; 146  : 	CGamePageItem * pGamePageItem=NULL;

  00556	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pGamePageItem$[ebp], 0

; 147  : 	Position=m_PageItemMap.GetStartPosition();

  0055d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00560	83 c1 58	 add	 ecx, 88			; 00000058H
  00563	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetStartPosition
  00568	89 45 e0	 mov	 DWORD PTR _Position$[ebp], eax
$LN22@CServerLis:

; 148  : 	while (Position!=NULL)

  0056b	83 7d e0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  0056f	74 73		 je	 SHORT $LN23@CServerLis

; 149  : 	{
; 150  : 		m_PageItemMap.GetNextAssoc(Position,wKey,pGamePageItem);

  00571	8d 45 c0	 lea	 eax, DWORD PTR _pGamePageItem$[ebp]
  00574	50		 push	 eax
  00575	8d 4d e8	 lea	 ecx, DWORD PTR _wKey$[ebp]
  00578	51		 push	 ecx
  00579	8d 55 e0	 lea	 edx, DWORD PTR _Position$[ebp]
  0057c	52		 push	 edx
  0057d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00580	83 c1 58	 add	 ecx, 88			; 00000058H
  00583	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGamePageItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetNextAssoc

; 151  : 		SafeDelete(pGamePageItem);

  00588	c6 45 fc 1a	 mov	 BYTE PTR __$EHRec$[ebp+12], 26 ; 0000001aH
  0058c	8b 45 c0	 mov	 eax, DWORD PTR _pGamePageItem$[ebp]
  0058f	89 85 58 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00595	6a 2b		 push	 43			; 0000002bH
  00597	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  0059d	51		 push	 ecx
  0059e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  005a3	83 c4 08	 add	 esp, 8
  005a6	eb 23		 jmp	 SHORT $LN64@CServerLis
__catch$??1CServerListManager@NServerListManager@@UAE@XZ$16:
  005a8	33 c0		 xor	 eax, eax
  005aa	75 19		 jne	 SHORT $LN46@CServerLis
  005ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CServerListManager@NServerListManager@@UAE@XZ@4JA
  005b2	83 c1 4a	 add	 ecx, 74			; 0000004aH
  005b5	51		 push	 ecx
  005b6	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  005bb	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  005c0	85 c0		 test	 eax, eax
  005c2	74 01		 je	 SHORT $LN46@CServerLis
  005c4	cc		 int	 3
$LN46@CServerLis:
  005c5	b8 00 00 00 00	 mov	 eax, $LN95@CServerLis
  005ca	c3		 ret	 0
$LN64@CServerLis:
  005cb	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  005d2	eb 07		 jmp	 SHORT __tryend$??1CServerListManager@NServerListManager@@UAE@XZ$17
$LN95@CServerLis:
  005d4	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CServerListManager@NServerListManager@@UAE@XZ$17:
  005db	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pGamePageItem$[ebp], 0

; 152  : 	}

  005e2	eb 87		 jmp	 SHORT $LN22@CServerLis
$LN23@CServerLis:

; 153  : 	for (INT_PTR i=0;i<m_PageItemBuffer.GetCount();i++)

  005e4	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _i$12[ebp], 0
  005eb	eb 09		 jmp	 SHORT $LN26@CServerLis
$LN24@CServerLis:
  005ed	8b 45 bc	 mov	 eax, DWORD PTR _i$12[ebp]
  005f0	83 c0 01	 add	 eax, 1
  005f3	89 45 bc	 mov	 DWORD PTR _i$12[ebp], eax
$LN26@CServerLis:
  005f6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  005f9	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  005ff	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QBEHXZ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::GetCount
  00604	39 45 bc	 cmp	 DWORD PTR _i$12[ebp], eax
  00607	7d 76		 jge	 SHORT $LN25@CServerLis

; 154  : 	{
; 155  : 		pGamePageItem=m_PageItemBuffer[i];

  00609	8b 45 bc	 mov	 eax, DWORD PTR _i$12[ebp]
  0060c	50		 push	 eax
  0060d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00610	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  00616	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::operator[]
  0061b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0061d	89 4d c0	 mov	 DWORD PTR _pGamePageItem$[ebp], ecx

; 156  : 		SafeDelete(pGamePageItem);

  00620	c6 45 fc 1c	 mov	 BYTE PTR __$EHRec$[ebp+12], 28 ; 0000001cH
  00624	8b 45 c0	 mov	 eax, DWORD PTR _pGamePageItem$[ebp]
  00627	89 85 54 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0062d	6a 2b		 push	 43			; 0000002bH
  0062f	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00635	51		 push	 ecx
  00636	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0063b	83 c4 08	 add	 esp, 8
  0063e	eb 23		 jmp	 SHORT $LN66@CServerLis
__catch$??1CServerListManager@NServerListManager@@UAE@XZ$18:
  00640	33 c0		 xor	 eax, eax
  00642	75 19		 jne	 SHORT $LN47@CServerLis
  00644	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CServerListManager@NServerListManager@@UAE@XZ@4JA
  0064a	83 c1 4f	 add	 ecx, 79			; 0000004fH
  0064d	51		 push	 ecx
  0064e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CDPKEPGO@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00653	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00658	85 c0		 test	 eax, eax
  0065a	74 01		 je	 SHORT $LN47@CServerLis
  0065c	cc		 int	 3
$LN47@CServerLis:
  0065d	b8 00 00 00 00	 mov	 eax, $LN97@CServerLis
  00662	c3		 ret	 0
$LN66@CServerLis:
  00663	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  0066a	eb 07		 jmp	 SHORT __tryend$??1CServerListManager@NServerListManager@@UAE@XZ$19
$LN97@CServerLis:
  0066c	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CServerListManager@NServerListManager@@UAE@XZ$19:
  00673	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pGamePageItem$[ebp], 0

; 157  : 	}

  0067a	e9 6e ff ff ff	 jmp	 $LN24@CServerLis
$LN25@CServerLis:

; 158  : 	m_PageItemMap.RemoveAll();

  0067f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00682	83 c1 58	 add	 ecx, 88			; 00000058H
  00685	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::RemoveAll

; 159  : 	m_PageItemBuffer.RemoveAll();

  0068a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0068d	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  00693	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXXZ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::RemoveAll

; 160  : 
; 161  : 	return;
; 162  : }

  00698	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+12], 8
  0069c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0069f	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  006a5	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::~CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>
  006aa	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+12], 7
  006ae	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006b1	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  006b7	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::~CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>
  006bc	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+12], 6
  006c0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006c3	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  006c9	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::~CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>
  006ce	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+12], 5
  006d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006d5	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  006db	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::~CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>
  006e0	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+12], 4
  006e4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006e7	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  006ed	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::~CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>
  006f2	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+12], 3
  006f6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006f9	83 c1 74	 add	 ecx, 116		; 00000074H
  006fc	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>
  00701	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00705	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00708	83 c1 58	 add	 ecx, 88			; 00000058H
  0070b	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>
  00710	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00714	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00717	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0071a	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>
  0071f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  00723	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00726	83 c1 20	 add	 ecx, 32			; 00000020H
  00729	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>
  0072e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00735	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00738	83 c1 04	 add	 ecx, 4
  0073b	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>
  00740	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00743	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0074a	59		 pop	 ecx
  0074b	5f		 pop	 edi
  0074c	5e		 pop	 esi
  0074d	5b		 pop	 ebx
  0074e	8b e5		 mov	 esp, ebp
  00750	5d		 pop	 ebp
  00751	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$20:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>
__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$21:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 20	 add	 ecx, 32			; 00000020H
  00011	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>
__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$22:
  00016	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0001c	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>
__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$23:
  00021	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 58	 add	 ecx, 88			; 00000058H
  00027	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>
__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$24:
  0002c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 74	 add	 ecx, 116		; 00000074H
  00032	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>
__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$25:
  00037	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00040	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::~CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>
__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$26:
  00045	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  0004e	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::~CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>
__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$27:
  00053	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  0005c	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::~CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>
__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$28:
  00061	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  0006a	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::~CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>
__unwindfunclet$??1CServerListManager@NServerListManager@@UAE@XZ$29:
  0006f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00078	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::~CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>
__ehhandler$??1CServerListManager@NServerListManager@@UAE@XZ:
  0007d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00081	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00084	8b 8a 50 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-176]
  0008a	33 c8		 xor	 ecx, eax
  0008c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00091	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CServerListManager@NServerListManager@@UAE@XZ
  00096	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CServerListManager@NServerListManager@@UAE@XZ ENDP	; NServerListManager::CServerListManager::~CServerListManager
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ??0CServerListManager@NServerListManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CServerListManager@NServerListManager@@QAE@XZ PROC	; NServerListManager::CServerListManager::CServerListManager, COMDAT
; _this$ = ecx

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CServerListManager@NServerListManager@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CServerListManager@NServerListManager@@6B@
  00034	6a 0a		 push	 10			; 0000000aH
  00036	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	83 c1 04	 add	 ecx, 4
  0003c	e8 00 00 00 00	 call	 ??0?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@H@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00048	6a 0a		 push	 10			; 0000000aH
  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	83 c1 20	 add	 ecx, 32			; 00000020H
  00050	e8 00 00 00 00	 call	 ??0?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@H@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>
  00055	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00059	6a 0a		 push	 10			; 0000000aH
  0005b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00061	e8 00 00 00 00	 call	 ??0?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@H@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>
  00066	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0006a	6a 0a		 push	 10			; 0000000aH
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	83 c1 58	 add	 ecx, 88			; 00000058H
  00072	e8 00 00 00 00	 call	 ??0?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@H@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>
  00077	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0007b	6a 0a		 push	 10			; 0000000aH
  0007d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	83 c1 74	 add	 ecx, 116		; 00000074H
  00083	e8 00 00 00 00	 call	 ??0?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@H@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>
  00088	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0008c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00095	e8 00 00 00 00	 call	 ??0?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAE@XZ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>
  0009a	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0009e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  000a7	e8 00 00 00 00	 call	 ??0?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAE@XZ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>
  000ac	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  000b0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  000b9	e8 00 00 00 00	 call	 ??0?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAE@XZ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>
  000be	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  000c2	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  000cb	e8 00 00 00 00	 call	 ??0?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAE@XZ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>
  000d0	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  000d4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000dd	e8 00 00 00 00	 call	 ??0?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAE@XZ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>
  000e2	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9

; 65   : 	//设置质数
; 66   : 	m_TypeItemMap.InitHashTable(PRIME_TYPE);

  000e6	6a 01		 push	 1
  000e8	6a 0b		 push	 11			; 0000000bH
  000ea	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	83 c1 04	 add	 ecx, 4
  000f0	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::InitHashTable

; 67   : 	m_KindItemMap.InitHashTable(PRIME_KIND);

  000f5	6a 01		 push	 1
  000f7	6a 35		 push	 53			; 00000035H
  000f9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000fc	83 c1 20	 add	 ecx, 32			; 00000020H
  000ff	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::InitHashTable

; 68   : 	m_NodeItemMap.InitHashTable(PRIME_NODE);

  00104	6a 01		 push	 1
  00106	6a 65		 push	 101			; 00000065H
  00108	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0010e	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::InitHashTable

; 69   : 	m_PageItemMap.InitHashTable(PRIME_PAGE);

  00113	6a 01		 push	 1
  00115	6a 35		 push	 53			; 00000035H
  00117	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011a	83 c1 58	 add	 ecx, 88			; 00000058H
  0011d	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::InitHashTable

; 70   : 	m_ServerItemMap.InitHashTable(PRIME_SERVER);

  00122	6a 01		 push	 1
  00124	68 f1 03 00 00	 push	 1009			; 000003f1H
  00129	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0012c	83 c1 74	 add	 ecx, 116		; 00000074H
  0012f	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::InitHashTable

; 71   : 
; 72   : 	return;
; 73   : }

  00134	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0013b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0013e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00141	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00148	59		 pop	 ecx
  00149	5f		 pop	 edi
  0014a	5e		 pop	 esi
  0014b	5b		 pop	 ebx
  0014c	8b e5		 mov	 esp, ebp
  0014e	5d		 pop	 ebp
  0014f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>
__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 20	 add	 ecx, 32			; 00000020H
  00011	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>
__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0001c	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>
__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$3:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 58	 add	 ecx, 88			; 00000058H
  00027	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>
__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$4:
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 74	 add	 ecx, 116		; 00000074H
  00032	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>
__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$5:
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00040	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::~CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>
__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$6:
  00045	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  0004e	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::~CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>
__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$7:
  00053	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  0005c	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::~CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>
__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$8:
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	81 c1 cc 00 00
	00		 add	 ecx, 204		; 000000ccH
  0006a	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::~CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>
__unwindfunclet$??0CServerListManager@NServerListManager@@QAE@XZ$9:
  0006f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00078	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::~CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>
__ehhandler$??0CServerListManager@NServerListManager@@QAE@XZ:
  0007d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00081	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00084	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00087	33 c8		 xor	 ecx, eax
  00089	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CServerListManager@NServerListManager@@QAE@XZ
  00093	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CServerListManager@NServerListManager@@QAE@XZ ENDP	; NServerListManager::CServerListManager::CServerListManager
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z PROC ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::~CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z ENDP ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXH@Z PROC ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXH@Z ENDP ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@H@Z PROC ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@H@Z ENDP ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXXZ PROC ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXXZ ENDP ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXHH@Z PROC ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ENDP ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameServerItem@NServerListManager@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameServerItem@NServerListManager@@@Z PROC ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameServerItem@NServerListManager@@@Z ENDP ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXH@Z PROC ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXH@Z ENDP ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@H@Z PROC ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@H@Z ENDP ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameServerItem@NServerListManager@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameServerItem@NServerListManager@@@Z PROC ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameServerItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameServerItem@NServerListManager@@@Z ENDP ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QBEHXZ PROC ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QBEHXZ ENDP ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@UAE@XZ PROC ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::~CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@UAE@XZ ENDP ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::~CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAE@XZ PROC ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAVCGameServerItem@NServerListManager@@ABQAV12@@@QAE@XZ ENDP ; CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>::CWHArray<NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z PROC ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::~CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z ENDP ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXH@Z PROC ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXH@Z ENDP ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@H@Z PROC ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@H@Z ENDP ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXXZ PROC ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXXZ ENDP ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXHH@Z PROC ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ENDP ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGamePageItem@NServerListManager@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGamePageItem@NServerListManager@@@Z PROC ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGamePageItem@NServerListManager@@@Z ENDP ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXH@Z PROC ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXH@Z ENDP ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@H@Z PROC ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@H@Z ENDP ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGamePageItem@NServerListManager@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGamePageItem@NServerListManager@@@Z PROC ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGamePageItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGamePageItem@NServerListManager@@@Z ENDP ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QBEHXZ PROC ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QBEHXZ ENDP ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@UAE@XZ PROC ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::~CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@UAE@XZ ENDP ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::~CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAE@XZ PROC ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAVCGamePageItem@NServerListManager@@ABQAV12@@@QAE@XZ ENDP ; CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>::CWHArray<NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z PROC ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::~CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z ENDP ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXH@Z PROC ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXH@Z ENDP ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@H@Z PROC ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@H@Z ENDP ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXXZ PROC ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXXZ ENDP ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXHH@Z PROC ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ENDP ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameNodeItem@NServerListManager@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameNodeItem@NServerListManager@@@Z PROC ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameNodeItem@NServerListManager@@@Z ENDP ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXH@Z PROC ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXH@Z ENDP ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@H@Z PROC ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@H@Z ENDP ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameNodeItem@NServerListManager@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameNodeItem@NServerListManager@@@Z PROC ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameNodeItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameNodeItem@NServerListManager@@@Z ENDP ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QBEHXZ PROC ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QBEHXZ ENDP ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@UAE@XZ PROC ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::~CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@UAE@XZ ENDP ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::~CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAE@XZ PROC ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAVCGameNodeItem@NServerListManager@@ABQAV12@@@QAE@XZ ENDP ; CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>::CWHArray<NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z PROC ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::~CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z ENDP ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXH@Z PROC ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXH@Z ENDP ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@H@Z PROC ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@H@Z ENDP ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXXZ PROC ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXXZ ENDP ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXHH@Z PROC ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ENDP ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameKindItem@NServerListManager@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameKindItem@NServerListManager@@@Z PROC ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameKindItem@NServerListManager@@@Z ENDP ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXH@Z PROC ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXH@Z ENDP ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@H@Z PROC ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@H@Z ENDP ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameKindItem@NServerListManager@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameKindItem@NServerListManager@@@Z PROC ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameKindItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameKindItem@NServerListManager@@@Z ENDP ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QBEHXZ PROC ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QBEHXZ ENDP ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@UAE@XZ PROC ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::~CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@UAE@XZ ENDP ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::~CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAE@XZ PROC ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAVCGameKindItem@NServerListManager@@ABQAV12@@@QAE@XZ ENDP ; CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>::CWHArray<NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z PROC ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@UAE@XZ ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::~CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@UAEPAXI@Z ENDP ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXH@Z PROC ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXH@Z ENDP ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@H@Z PROC ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@H@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@H@Z ENDP ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXXZ PROC ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXXZ ENDP ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXHH@Z PROC ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXHH@Z ENDP ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameTypeItem@NServerListManager@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameTypeItem@NServerListManager@@@Z PROC ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameTypeItem@NServerListManager@@@Z ENDP ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXH@Z PROC ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXH@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXH@Z ENDP ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@H@Z PROC ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@H@Z ENDP ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameTypeItem@NServerListManager@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameTypeItem@NServerListManager@@@Z PROC ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEXHABQAVCGameTypeItem@NServerListManager@@@Z ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAEHABQAVCGameTypeItem@NServerListManager@@@Z ENDP ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QBEHXZ PROC ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QBEHXZ ENDP ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@UAE@XZ PROC ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::~CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@UAE@XZ ENDP ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::~CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAE@XZ PROC ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAVCGameTypeItem@NServerListManager@@ABQAV12@@@QAE@XZ ENDP ; CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>::CWHArray<NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UBEXXZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UBEXXZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 2
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 02 00 00 00	 mov	 eax, 2
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameServerItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z ; DumpElements<unsigned short>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@PAVCGameServerItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameServerItem@NServerListManager@@H@Z ; DumpElements<NServerListManager::CGameServerItem *>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 2
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f9 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGameServerItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameServerItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGameServerItem *>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 63		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 43		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGameServerItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameServerItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGameServerItem *>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8d 54 0d e0	 lea	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 02 00 00 00	 mov	 eax, 2
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	0f b7 54 0d e4	 movzx	 edx, WORD PTR _newKey$2[ebp+ecx]
  00146	52		 push	 edx
  00147	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	e8 00 00 00 00	 call	 ?SetAt@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameServerItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::SetAt

; 1787 : 		}

  0014f	eb a8		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00151	5f		 pop	 edi
  00152	5e		 pop	 esi
  00153	5b		 pop	 ebx
  00154	8b e5		 mov	 esp, ebp
  00156	5d		 pop	 ebp
  00157	c2 04 00	 ret	 4
?Serialize@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAE@XZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@UAE@XZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00016	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00019	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001b	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	8b 00		 mov	 eax, DWORD PTR [eax]
  00023	33 d2		 xor	 edx, edx
  00025	f7 71 08	 div	 DWORD PTR [ecx+8]
  00028	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002b	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00034	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00036	33 c0		 xor	 eax, eax
  00038	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00045	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00048	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004b	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004d	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00050	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00053	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00056	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0005a	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00062	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00065	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00067	75 16		 jne	 SHORT $LN6@GetAssocAt
  00069	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00076	85 c0		 test	 eax, eax
  00078	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  0007a	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007d	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007f	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00081	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?NewAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	0f b7 4d 08	 movzx	 ecx, WORD PTR _key$[ebp]
  0014a	51		 push	 ecx
  0014b	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014e	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00153	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5b		 pop	 ebx
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c2 04 00	 ret	 4
?NewAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXIH@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameServerItem@NServerListManager@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameServerItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	66 8b 11	 mov	 dx, WORD PTR [ecx]
  001bd	66 89 10	 mov	 WORD PTR [eax], dx

; 1676 : 	rValue = pAssocRet->value;

  001c0	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c3	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c9	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001cb	5f		 pop	 edi
  001cc	5e		 pop	 esi
  001cd	5b		 pop	 ebx
  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameServerItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXXZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXXZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEHG@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?RemoveKey@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEHG@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 84 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00039	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00042	33 d2		 xor	 edx, edx
  00044	f7 71 08	 div	 DWORD PTR [ecx+8]
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  00050	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00053	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005b	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00060	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00063	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00066	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0006a	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00072	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00075	75 2f		 jne	 SHORT $LN6@RemoveKey
  00077	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00084	85 c0		 test	 eax, eax
  00086	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00088	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00091	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00093	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00096	50		 push	 eax
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::FreeAssoc

; 1630 : 			return TRUE;

  0009f	b8 01 00 00 00	 mov	 eax, 1
  000a4	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a6	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a9	83 c0 08	 add	 eax, 8
  000ac	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000af	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b1	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?RemoveKey@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEHG@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameServerItem@NServerListManager@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_newValue$ = 12						; size = 4
?SetAt@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameServerItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::operator[]
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001e	89 10		 mov	 DWORD PTR [eax], edx
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?SetAt@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameServerItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@G@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??A?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	0f 85 9c 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00048	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  0004a	6a 01		 push	 1
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	51		 push	 ecx
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00062	74 09		 je	 SHORT $LN9@operator
  00064	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006b	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00074	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00077	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  0007a	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007e	75 14		 jne	 SHORT $LN11@operator
  00080	68 3b 06 00 00	 push	 1595			; 0000063bH
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0008a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008f	85 c0		 test	 eax, eax
  00091	74 01		 je	 SHORT $LN11@operator
  00093	cc		 int	 3
$LN11@operator:
  00094	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00098	75 05		 jne	 SHORT $LN2@operator
  0009a	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009f	33 c0		 xor	 eax, eax
  000a1	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a3	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  000a7	50		 push	 eax
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::NewAssoc
  000b0	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b3	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b6	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b9	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c2	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c5	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c8	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000cb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d4	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d7	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000da	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000dd	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e0	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 04 00	 ret	 4
??A?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameServerItem@NServerListManager@@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameServerItem@NServerListManager@@@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_rValue$ = 12						; size = 4
?Lookup@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameServerItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1552 : 	ASSERT_VALID(this);

  0000c	68 10 06 00 00	 push	 1552			; 00000610H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1556 : 	if (pAssoc == NULL)

  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	75 04		 jne	 SHORT $LN2@Lookup

; 1557 : 		return FALSE;  // not in map

  0003d	33 c0		 xor	 eax, eax
  0003f	eb 10		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00047	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004a	89 10		 mov	 DWORD PTR [eax], edx

; 1560 : 	return TRUE;

  0004c	b8 01 00 00 00	 mov	 eax, 1
$LN1@Lookup:

; 1561 : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?Lookup@?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameServerItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@H@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@GGPAVCGameServerItem@NServerListManager@@AAPAV12@@@QAE@H@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameServerItem *,NServerListManager::CGameServerItem * &>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UBEXXZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UBEXXZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 2
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 02 00 00 00	 mov	 eax, 2
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGamePageItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z ; DumpElements<unsigned short>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@PAVCGamePageItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGamePageItem@NServerListManager@@H@Z ; DumpElements<NServerListManager::CGamePageItem *>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 2
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f9 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGamePageItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGamePageItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGamePageItem *>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 63		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 43		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGamePageItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGamePageItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGamePageItem *>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8d 54 0d e0	 lea	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 02 00 00 00	 mov	 eax, 2
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	0f b7 54 0d e4	 movzx	 edx, WORD PTR _newKey$2[ebp+ecx]
  00146	52		 push	 edx
  00147	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	e8 00 00 00 00	 call	 ?SetAt@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGamePageItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::SetAt

; 1787 : 		}

  0014f	eb a8		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00151	5f		 pop	 edi
  00152	5e		 pop	 esi
  00153	5b		 pop	 ebx
  00154	8b e5		 mov	 esp, ebp
  00156	5d		 pop	 ebp
  00157	c2 04 00	 ret	 4
?Serialize@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAE@XZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@UAE@XZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00016	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00019	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001b	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	8b 00		 mov	 eax, DWORD PTR [eax]
  00023	33 d2		 xor	 edx, edx
  00025	f7 71 08	 div	 DWORD PTR [ecx+8]
  00028	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002b	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00034	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00036	33 c0		 xor	 eax, eax
  00038	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00045	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00048	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004b	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004d	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00050	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00053	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00056	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0005a	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00062	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00065	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00067	75 16		 jne	 SHORT $LN6@GetAssocAt
  00069	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00076	85 c0		 test	 eax, eax
  00078	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  0007a	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007d	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007f	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00081	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?NewAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	0f b7 4d 08	 movzx	 ecx, WORD PTR _key$[ebp]
  0014a	51		 push	 ecx
  0014b	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014e	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00153	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5b		 pop	 ebx
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c2 04 00	 ret	 4
?NewAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXIH@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGamePageItem@NServerListManager@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGamePageItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	66 8b 11	 mov	 dx, WORD PTR [ecx]
  001bd	66 89 10	 mov	 WORD PTR [eax], dx

; 1676 : 	rValue = pAssocRet->value;

  001c0	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c3	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c9	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001cb	5f		 pop	 edi
  001cc	5e		 pop	 esi
  001cd	5b		 pop	 ebx
  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGamePageItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXXZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXXZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEHG@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?RemoveKey@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEHG@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 84 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00039	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00042	33 d2		 xor	 edx, edx
  00044	f7 71 08	 div	 DWORD PTR [ecx+8]
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  00050	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00053	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005b	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00060	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00063	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00066	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0006a	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00072	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00075	75 2f		 jne	 SHORT $LN6@RemoveKey
  00077	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00084	85 c0		 test	 eax, eax
  00086	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00088	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00091	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00093	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00096	50		 push	 eax
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::FreeAssoc

; 1630 : 			return TRUE;

  0009f	b8 01 00 00 00	 mov	 eax, 1
  000a4	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a6	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a9	83 c0 08	 add	 eax, 8
  000ac	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000af	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b1	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?RemoveKey@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEHG@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGamePageItem@NServerListManager@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_newValue$ = 12						; size = 4
?SetAt@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGamePageItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::operator[]
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001e	89 10		 mov	 DWORD PTR [eax], edx
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?SetAt@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGamePageItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@G@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??A?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	0f 85 9c 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00048	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  0004a	6a 01		 push	 1
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	51		 push	 ecx
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00062	74 09		 je	 SHORT $LN9@operator
  00064	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006b	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00074	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00077	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  0007a	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007e	75 14		 jne	 SHORT $LN11@operator
  00080	68 3b 06 00 00	 push	 1595			; 0000063bH
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0008a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008f	85 c0		 test	 eax, eax
  00091	74 01		 je	 SHORT $LN11@operator
  00093	cc		 int	 3
$LN11@operator:
  00094	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00098	75 05		 jne	 SHORT $LN2@operator
  0009a	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009f	33 c0		 xor	 eax, eax
  000a1	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a3	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  000a7	50		 push	 eax
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::NewAssoc
  000b0	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b3	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b6	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b9	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c2	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c5	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c8	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000cb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d4	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d7	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000da	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000dd	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e0	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 04 00	 ret	 4
??A?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGamePageItem@NServerListManager@@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGamePageItem@NServerListManager@@@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_rValue$ = 12						; size = 4
?Lookup@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGamePageItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1552 : 	ASSERT_VALID(this);

  0000c	68 10 06 00 00	 push	 1552			; 00000610H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1556 : 	if (pAssoc == NULL)

  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	75 04		 jne	 SHORT $LN2@Lookup

; 1557 : 		return FALSE;  // not in map

  0003d	33 c0		 xor	 eax, eax
  0003f	eb 10		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00047	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004a	89 10		 mov	 DWORD PTR [eax], edx

; 1560 : 	return TRUE;

  0004c	b8 01 00 00 00	 mov	 eax, 1
$LN1@Lookup:

; 1561 : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?Lookup@?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGamePageItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@H@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@GGPAVCGamePageItem@NServerListManager@@AAPAV12@@@QAE@H@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGamePageItem *,NServerListManager::CGamePageItem * &>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UBEXXZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UBEXXZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 2
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 02 00 00 00	 mov	 eax, 2
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameNodeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z ; DumpElements<unsigned short>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@PAVCGameNodeItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameNodeItem@NServerListManager@@H@Z ; DumpElements<NServerListManager::CGameNodeItem *>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 2
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f9 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGameNodeItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameNodeItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGameNodeItem *>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 63		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 43		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGameNodeItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameNodeItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGameNodeItem *>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8d 54 0d e0	 lea	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 02 00 00 00	 mov	 eax, 2
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	0f b7 54 0d e4	 movzx	 edx, WORD PTR _newKey$2[ebp+ecx]
  00146	52		 push	 edx
  00147	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	e8 00 00 00 00	 call	 ?SetAt@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameNodeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::SetAt

; 1787 : 		}

  0014f	eb a8		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00151	5f		 pop	 edi
  00152	5e		 pop	 esi
  00153	5b		 pop	 ebx
  00154	8b e5		 mov	 esp, ebp
  00156	5d		 pop	 ebp
  00157	c2 04 00	 ret	 4
?Serialize@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAE@XZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@UAE@XZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00016	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00019	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001b	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	8b 00		 mov	 eax, DWORD PTR [eax]
  00023	33 d2		 xor	 edx, edx
  00025	f7 71 08	 div	 DWORD PTR [ecx+8]
  00028	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002b	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00034	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00036	33 c0		 xor	 eax, eax
  00038	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00045	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00048	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004b	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004d	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00050	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00053	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00056	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0005a	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00062	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00065	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00067	75 16		 jne	 SHORT $LN6@GetAssocAt
  00069	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00076	85 c0		 test	 eax, eax
  00078	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  0007a	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007d	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007f	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00081	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?NewAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	0f b7 4d 08	 movzx	 ecx, WORD PTR _key$[ebp]
  0014a	51		 push	 ecx
  0014b	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014e	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00153	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5b		 pop	 ebx
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c2 04 00	 ret	 4
?NewAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXIH@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameNodeItem@NServerListManager@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameNodeItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	66 8b 11	 mov	 dx, WORD PTR [ecx]
  001bd	66 89 10	 mov	 WORD PTR [eax], dx

; 1676 : 	rValue = pAssocRet->value;

  001c0	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c3	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c9	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001cb	5f		 pop	 edi
  001cc	5e		 pop	 esi
  001cd	5b		 pop	 ebx
  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameNodeItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXXZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXXZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEHG@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?RemoveKey@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEHG@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 84 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00039	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00042	33 d2		 xor	 edx, edx
  00044	f7 71 08	 div	 DWORD PTR [ecx+8]
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  00050	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00053	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005b	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00060	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00063	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00066	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0006a	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00072	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00075	75 2f		 jne	 SHORT $LN6@RemoveKey
  00077	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00084	85 c0		 test	 eax, eax
  00086	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00088	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00091	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00093	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00096	50		 push	 eax
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::FreeAssoc

; 1630 : 			return TRUE;

  0009f	b8 01 00 00 00	 mov	 eax, 1
  000a4	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a6	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a9	83 c0 08	 add	 eax, 8
  000ac	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000af	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b1	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?RemoveKey@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEHG@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameNodeItem@NServerListManager@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_newValue$ = 12						; size = 4
?SetAt@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameNodeItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::operator[]
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001e	89 10		 mov	 DWORD PTR [eax], edx
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?SetAt@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameNodeItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@G@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??A?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	0f 85 9c 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00048	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  0004a	6a 01		 push	 1
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	51		 push	 ecx
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00062	74 09		 je	 SHORT $LN9@operator
  00064	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006b	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00074	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00077	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  0007a	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007e	75 14		 jne	 SHORT $LN11@operator
  00080	68 3b 06 00 00	 push	 1595			; 0000063bH
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0008a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008f	85 c0		 test	 eax, eax
  00091	74 01		 je	 SHORT $LN11@operator
  00093	cc		 int	 3
$LN11@operator:
  00094	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00098	75 05		 jne	 SHORT $LN2@operator
  0009a	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009f	33 c0		 xor	 eax, eax
  000a1	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a3	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  000a7	50		 push	 eax
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::NewAssoc
  000b0	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b3	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b6	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b9	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c2	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c5	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c8	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000cb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d4	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d7	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000da	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000dd	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e0	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 04 00	 ret	 4
??A?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameNodeItem@NServerListManager@@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameNodeItem@NServerListManager@@@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_rValue$ = 12						; size = 4
?Lookup@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameNodeItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1552 : 	ASSERT_VALID(this);

  0000c	68 10 06 00 00	 push	 1552			; 00000610H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1556 : 	if (pAssoc == NULL)

  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	75 04		 jne	 SHORT $LN2@Lookup

; 1557 : 		return FALSE;  // not in map

  0003d	33 c0		 xor	 eax, eax
  0003f	eb 10		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00047	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004a	89 10		 mov	 DWORD PTR [eax], edx

; 1560 : 	return TRUE;

  0004c	b8 01 00 00 00	 mov	 eax, 1
$LN1@Lookup:

; 1561 : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?Lookup@?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameNodeItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@H@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@GGPAVCGameNodeItem@NServerListManager@@AAPAV12@@@QAE@H@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameNodeItem *,NServerListManager::CGameNodeItem * &>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UBEXXZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UBEXXZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 2
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 02 00 00 00	 mov	 eax, 2
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z ; DumpElements<unsigned short>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@PAVCGameKindItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameKindItem@NServerListManager@@H@Z ; DumpElements<NServerListManager::CGameKindItem *>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 2
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f9 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGameKindItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameKindItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGameKindItem *>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 63		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 43		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGameKindItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameKindItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGameKindItem *>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8d 54 0d e0	 lea	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 02 00 00 00	 mov	 eax, 2
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	0f b7 54 0d e4	 movzx	 edx, WORD PTR _newKey$2[ebp+ecx]
  00146	52		 push	 edx
  00147	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	e8 00 00 00 00	 call	 ?SetAt@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameKindItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::SetAt

; 1787 : 		}

  0014f	eb a8		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00151	5f		 pop	 edi
  00152	5e		 pop	 esi
  00153	5b		 pop	 ebx
  00154	8b e5		 mov	 esp, ebp
  00156	5d		 pop	 ebp
  00157	c2 04 00	 ret	 4
?Serialize@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAE@XZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@UAE@XZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00016	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00019	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001b	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	8b 00		 mov	 eax, DWORD PTR [eax]
  00023	33 d2		 xor	 edx, edx
  00025	f7 71 08	 div	 DWORD PTR [ecx+8]
  00028	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002b	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00034	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00036	33 c0		 xor	 eax, eax
  00038	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00045	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00048	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004b	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004d	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00050	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00053	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00056	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0005a	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00062	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00065	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00067	75 16		 jne	 SHORT $LN6@GetAssocAt
  00069	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00076	85 c0		 test	 eax, eax
  00078	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  0007a	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007d	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007f	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00081	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?NewAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	0f b7 4d 08	 movzx	 ecx, WORD PTR _key$[ebp]
  0014a	51		 push	 ecx
  0014b	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014e	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00153	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5b		 pop	 ebx
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c2 04 00	 ret	 4
?NewAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXIH@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameKindItem@NServerListManager@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameKindItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	66 8b 11	 mov	 dx, WORD PTR [ecx]
  001bd	66 89 10	 mov	 WORD PTR [eax], dx

; 1676 : 	rValue = pAssocRet->value;

  001c0	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c3	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c9	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001cb	5f		 pop	 edi
  001cc	5e		 pop	 esi
  001cd	5b		 pop	 ebx
  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameKindItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXXZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXXZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEHG@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?RemoveKey@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEHG@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 84 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00039	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00042	33 d2		 xor	 edx, edx
  00044	f7 71 08	 div	 DWORD PTR [ecx+8]
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  00050	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00053	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005b	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00060	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00063	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00066	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0006a	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00072	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00075	75 2f		 jne	 SHORT $LN6@RemoveKey
  00077	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00084	85 c0		 test	 eax, eax
  00086	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00088	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00091	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00093	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00096	50		 push	 eax
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::FreeAssoc

; 1630 : 			return TRUE;

  0009f	b8 01 00 00 00	 mov	 eax, 1
  000a4	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a6	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a9	83 c0 08	 add	 eax, 8
  000ac	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000af	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b1	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?RemoveKey@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEHG@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameKindItem@NServerListManager@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_newValue$ = 12						; size = 4
?SetAt@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameKindItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::operator[]
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001e	89 10		 mov	 DWORD PTR [eax], edx
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?SetAt@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameKindItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@G@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??A?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	0f 85 9c 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00048	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  0004a	6a 01		 push	 1
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	51		 push	 ecx
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00062	74 09		 je	 SHORT $LN9@operator
  00064	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006b	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00074	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00077	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  0007a	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007e	75 14		 jne	 SHORT $LN11@operator
  00080	68 3b 06 00 00	 push	 1595			; 0000063bH
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0008a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008f	85 c0		 test	 eax, eax
  00091	74 01		 je	 SHORT $LN11@operator
  00093	cc		 int	 3
$LN11@operator:
  00094	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00098	75 05		 jne	 SHORT $LN2@operator
  0009a	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009f	33 c0		 xor	 eax, eax
  000a1	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a3	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  000a7	50		 push	 eax
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::NewAssoc
  000b0	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b3	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b6	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b9	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c2	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c5	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c8	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000cb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d4	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d7	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000da	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000dd	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e0	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 04 00	 ret	 4
??A?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameKindItem@NServerListManager@@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameKindItem@NServerListManager@@@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_rValue$ = 12						; size = 4
?Lookup@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameKindItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1552 : 	ASSERT_VALID(this);

  0000c	68 10 06 00 00	 push	 1552			; 00000610H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1556 : 	if (pAssoc == NULL)

  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	75 04		 jne	 SHORT $LN2@Lookup

; 1557 : 		return FALSE;  // not in map

  0003d	33 c0		 xor	 eax, eax
  0003f	eb 10		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00047	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004a	89 10		 mov	 DWORD PTR [eax], edx

; 1560 : 	return TRUE;

  0004c	b8 01 00 00 00	 mov	 eax, 1
$LN1@Lookup:

; 1561 : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?Lookup@?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameKindItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@H@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@GGPAVCGameKindItem@NServerListManager@@AAPAV12@@@QAE@H@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameKindItem *,NServerListManager::CGameKindItem * &>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAE@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAEPAXI@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UBEXXZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UBEXXZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 2
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 02 00 00 00	 mov	 eax, 2
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameTypeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z ; DumpElements<unsigned short>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@PAVCGameTypeItem@NServerListManager@@@@YGXAAVCDumpContext@@PBQAVCGameTypeItem@NServerListManager@@H@Z ; DumpElements<NServerListManager::CGameTypeItem *>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UBEXAAVCDumpContext@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 2
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f9 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGameTypeItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameTypeItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGameTypeItem *>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 63		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 43		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGameTypeItem@NServerListManager@@@@YGXAAVCArchive@@PAPAVCGameTypeItem@NServerListManager@@H@Z ; SerializeElements<NServerListManager::CGameTypeItem *>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8d 54 0d e0	 lea	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 02 00 00 00	 mov	 eax, 2
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	0f b7 54 0d e4	 movzx	 edx, WORD PTR _newKey$2[ebp+ecx]
  00146	52		 push	 edx
  00147	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	e8 00 00 00 00	 call	 ?SetAt@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameTypeItem@NServerListManager@@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::SetAt

; 1787 : 		}

  0014f	eb a8		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00151	5f		 pop	 edi
  00152	5e		 pop	 esi
  00153	5b		 pop	 ebx
  00154	8b e5		 mov	 esp, ebp
  00156	5d		 pop	 ebp
  00157	c2 04 00	 ret	 4
?Serialize@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAEXAAVCArchive@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAE@XZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@UAE@XZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::~CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00016	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00019	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001b	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	8b 00		 mov	 eax, DWORD PTR [eax]
  00023	33 d2		 xor	 edx, edx
  00025	f7 71 08	 div	 DWORD PTR [ecx+8]
  00028	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002b	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00034	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00036	33 c0		 xor	 eax, eax
  00038	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00045	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00048	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004b	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004d	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00050	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00053	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00056	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0005a	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00062	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00065	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00067	75 16		 jne	 SHORT $LN6@GetAssocAt
  00069	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00076	85 c0		 test	 eax, eax
  00078	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  0007a	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007d	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007f	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00081	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXXZ ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?NewAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	0f b7 4d 08	 movzx	 ecx, WORD PTR _key$[ebp]
  0014a	51		 push	 ecx
  0014b	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014e	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00153	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5b		 pop	 ebx
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c2 04 00	 ret	 4
?NewAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXIH@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameTypeItem@NServerListManager@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameTypeItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	66 8b 11	 mov	 dx, WORD PTR [ecx]
  001bd	66 89 10	 mov	 WORD PTR [eax], dx

; 1676 : 	rValue = pAssocRet->value;

  001c0	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c3	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c9	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001cb	5f		 pop	 edi
  001cc	5e		 pop	 esi
  001cd	5b		 pop	 ebx
  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEXAAPAU__POSITION@@AAGAAPAVCGameTypeItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXXZ PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXXZ ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEHG@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?RemoveKey@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEHG@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 84 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00039	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00042	33 d2		 xor	 edx, edx
  00044	f7 71 08	 div	 DWORD PTR [ecx+8]
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  00050	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00053	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005b	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00060	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00063	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00066	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0006a	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00072	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00075	75 2f		 jne	 SHORT $LN6@RemoveKey
  00077	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00084	85 c0		 test	 eax, eax
  00086	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00088	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00091	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00093	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00096	50		 push	 eax
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::FreeAssoc

; 1630 : 			return TRUE;

  0009f	b8 01 00 00 00	 mov	 eax, 1
  000a4	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a6	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a9	83 c0 08	 add	 eax, 8
  000ac	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000af	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b1	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?RemoveKey@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEHG@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameTypeItem@NServerListManager@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_newValue$ = 12						; size = 4
?SetAt@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameTypeItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::operator[]
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001e	89 10		 mov	 DWORD PTR [eax], edx
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?SetAt@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXGAAPAVCGameTypeItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@G@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??A?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@G@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	0f 85 9c 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00048	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  0004a	6a 01		 push	 1
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	51		 push	 ecx
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00062	74 09		 je	 SHORT $LN9@operator
  00064	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006b	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00074	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00077	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  0007a	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007e	75 14		 jne	 SHORT $LN11@operator
  00080	68 3b 06 00 00	 push	 1595			; 0000063bH
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0008a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008f	85 c0		 test	 eax, eax
  00091	74 01		 je	 SHORT $LN11@operator
  00093	cc		 int	 3
$LN11@operator:
  00094	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00098	75 05		 jne	 SHORT $LN2@operator
  0009a	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009f	33 c0		 xor	 eax, eax
  000a1	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a3	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  000a7	50		 push	 eax
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::NewAssoc
  000b0	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b3	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b6	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b9	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c2	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c5	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c8	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000cb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d4	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d7	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000da	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000dd	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e0	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 04 00	 ret	 4
??A?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAEAAPAVCGameTypeItem@NServerListManager@@G@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameTypeItem@NServerListManager@@@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_rValue$ = 12						; size = 4
?Lookup@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameTypeItem@NServerListManager@@@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1552 : 	ASSERT_VALID(this);

  0000c	68 10 06 00 00	 push	 1552			; 00000610H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1556 : 	if (pAssoc == NULL)

  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	75 04		 jne	 SHORT $LN2@Lookup

; 1557 : 		return FALSE;  // not in map

  0003d	33 c0		 xor	 eax, eax
  0003f	eb 10		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00047	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004a	89 10		 mov	 DWORD PTR [eax], edx

; 1560 : 	return TRUE;

  0004c	b8 01 00 00 00	 mov	 eax, 1
$LN1@Lookup:

; 1561 : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?Lookup@?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QBEHGAAPAVCGameTypeItem@NServerListManager@@@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@H@Z PROC ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@GGPAVCGameTypeItem@NServerListManager@@AAPAV12@@@QAE@H@Z ENDP ; CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>::CMap<unsigned short,unsigned short,NServerListManager::CGameTypeItem *,NServerListManager::CGameTypeItem * &>
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ??0CGameServerItem@NServerListManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGameServerItem@NServerListManager@@QAE@XZ PROC	; NServerListManager::CGameServerItem::CGameServerItem, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CGameListItem@NServerListManager@@IAE@XZ ; NServerListManager::CGameListItem::CGameListItem

; 42   : 	//设置变量
; 43   : 	ZeroMemory(&m_GameServer,sizeof(m_GameServer));

  00014	68 9b 00 00 00	 push	 155			; 0000009bH
  00019	6a 00		 push	 0
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 c0 01	 add	 eax, 1
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 _memset
  00027	83 c4 0c	 add	 esp, 12			; 0000000cH

; 44   : 	ZeroMemory(&m_GameMatch,sizeof(m_GameMatch));

  0002a	68 80 02 00 00	 push	 640			; 00000280H
  0002f	6a 00		 push	 0
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	05 9c 00 00 00	 add	 eax, 156		; 0000009cH
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 _memset
  0003f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 45   : 
; 46   : 	return;
; 47   : }

  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??0CGameServerItem@NServerListManager@@QAE@XZ ENDP	; NServerListManager::CGameServerItem::CGameServerItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ??0CGamePageItem@NServerListManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGamePageItem@NServerListManager@@QAE@XZ PROC	; NServerListManager::CGamePageItem::CGamePageItem, COMDAT
; _this$ = ecx

; 53   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CGameListItem@NServerListManager@@IAE@XZ ; NServerListManager::CGameListItem::CGameListItem

; 54   : 	//设置变量
; 55   : 	ZeroMemory(&m_GamePage,sizeof(m_GamePage));

  00014	6a 2a		 push	 42			; 0000002aH
  00016	6a 00		 push	 0
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 c0 01	 add	 eax, 1
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 _memset
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH

; 56   : 
; 57   : 	return;
; 58   : }

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
??0CGamePageItem@NServerListManager@@QAE@XZ ENDP	; NServerListManager::CGamePageItem::CGamePageItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ??0CGameNodeItem@NServerListManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGameNodeItem@NServerListManager@@QAE@XZ PROC	; NServerListManager::CGameNodeItem::CGameNodeItem, COMDAT
; _this$ = ecx

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CGameListItem@NServerListManager@@IAE@XZ ; NServerListManager::CGameListItem::CGameListItem

; 31   : 	//设置变量
; 32   : 	ZeroMemory(&m_GameNode,sizeof(m_GameNode));

  00014	6a 28		 push	 40			; 00000028H
  00016	6a 00		 push	 0
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 c0 01	 add	 eax, 1
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 _memset
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH

; 33   : 
; 34   : 	return;
; 35   : }

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
??0CGameNodeItem@NServerListManager@@QAE@XZ ENDP	; NServerListManager::CGameNodeItem::CGameNodeItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ??0CGameKindItem@NServerListManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGameKindItem@NServerListManager@@QAE@XZ PROC	; NServerListManager::CGameKindItem::CGameKindItem, COMDAT
; _this$ = ecx

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CGameListItem@NServerListManager@@IAE@XZ ; NServerListManager::CGameListItem::CGameListItem

; 20   : 	//设置变量
; 21   : 	ZeroMemory(&m_GameKind,sizeof(m_GameKind));

  00014	6a 5e		 push	 94			; 0000005eH
  00016	6a 00		 push	 0
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 c0 01	 add	 eax, 1
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 _memset
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH

; 22   : 
; 23   : 	return;
; 24   : }

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
??0CGameKindItem@NServerListManager@@QAE@XZ ENDP	; NServerListManager::CGameKindItem::CGameKindItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ??0CGameTypeItem@NServerListManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGameTypeItem@NServerListManager@@QAE@XZ PROC	; NServerListManager::CGameTypeItem::CGameTypeItem, COMDAT
; _this$ = ecx

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0CGameListItem@NServerListManager@@IAE@XZ ; NServerListManager::CGameListItem::CGameListItem

; 9    : 	//设置变量
; 10   : 	ZeroMemory(&m_GameType,sizeof(m_GameType));

  00014	6a 26		 push	 38			; 00000026H
  00016	6a 00		 push	 0
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 c0 01	 add	 eax, 1
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 _memset
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH

; 11   : 
; 12   : 	return;
; 13   : }

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
??0CGameTypeItem@NServerListManager@@QAE@XZ ENDP	; NServerListManager::CGameTypeItem::CGameTypeItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.h
;	COMDAT ??0CGameListItem@NServerListManager@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGameListItem@NServerListManager@@IAE@XZ PROC	; NServerListManager::CGameListItem::CGameListItem, COMDAT
; _this$ = ecx

; 27   : 		CGameListItem() { m_bDisuse=false; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??0CGameListItem@NServerListManager@@IAE@XZ ENDP	; NServerListManager::CGameListItem::CGameListItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxplex_.h
;	COMDAT ?data@CPlex@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?data@CPlex@@QAEPAXXZ PROC				; CPlex::data, COMDAT
; _this$ = ecx

; 35   : 	void* data() { return this+1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 08	 add	 eax, 8
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?data@CPlex@@QAEPAXXZ ENDP				; CPlex::data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 185  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  :         (void)_Size;
; 187  :         return _Where;

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 188  :     }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\登录服务器\serverlistmanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
