; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\约战服务器\GlobalInfoManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	?data@CPlex@@QAEPAXXZ				; CPlex::data
PUBLIC	??$HashKey@K@@YGIK@Z				; HashKey<unsigned long>
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Min_value@I@std@@YAABIABI0@Z		; std::_Min_value<unsigned int>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@$$QAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Get_size_of_n@$07@std@@YAII@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??0?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAE@XZ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>
PUBLIC	??1?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@UAE@XZ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::~CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>
PUBLIC	?GetCount@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QBEHXZ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEHABQAVCGlobalServerItem@@@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::Add
PUBLIC	?ElementAt@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEAAPAVCGlobalServerItem@@H@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXH@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXHABQAVCGlobalServerItem@@@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXHH@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXXZ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::RemoveAll
PUBLIC	??A?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEAAPAVCGlobalServerItem@@H@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXH@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@UAEPAXI@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::`scalar deleting destructor'
PUBLIC	??0CGlobalUserItem@@IAE@XZ			; CGlobalUserItem::CGlobalUserItem
PUBLIC	??1CGlobalUserItem@@MAE@XZ			; CGlobalUserItem::~CGlobalUserItem
PUBLIC	?GetGameID@CGlobalUserItem@@QAEKXZ		; CGlobalUserItem::GetGameID
PUBLIC	?GetNickName@CGlobalUserItem@@QAEPBDXZ		; CGlobalUserItem::GetNickName
PUBLIC	?UpdateStatus@CGlobalUserItem@@QAEXGGE@Z	; CGlobalUserItem::UpdateStatus
PUBLIC	?EnumServerItem@CGlobalUserItem@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalUserItem::EnumServerItem
PUBLIC	??_GCGlobalUserItem@@MAEPAXI@Z			; CGlobalUserItem::`scalar deleting destructor'
PUBLIC	??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
PUBLIC	?Lookup@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEHKAAPAVCGlobalUserItem@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::Lookup
PUBLIC	??A?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEAAPAVCGlobalUserItem@@K@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::operator[]
PUBLIC	?SetAt@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXKPAVCGlobalUserItem@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::SetAt
PUBLIC	?RemoveKey@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCGlobalUserItem@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetAssocAt
PUBLIC	??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::~CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
PUBLIC	?Serialize@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAEXAAVCArchive@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::Serialize
PUBLIC	?Dump@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::Dump
PUBLIC	?AssertValid@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UBEXXZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::AssertValid
PUBLIC	??_G?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAEPAXI@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::`scalar deleting destructor'
PUBLIC	??0CGlobalPlazaItem@@IAE@XZ			; CGlobalPlazaItem::CGlobalPlazaItem
PUBLIC	??1CGlobalPlazaItem@@MAE@XZ			; CGlobalPlazaItem::~CGlobalPlazaItem
PUBLIC	??_GCGlobalPlazaItem@@MAEPAXI@Z			; CGlobalPlazaItem::`scalar deleting destructor'
PUBLIC	??0CGlobalServerItem@@IAE@XZ			; CGlobalServerItem::CGlobalServerItem
PUBLIC	??1CGlobalServerItem@@MAE@XZ			; CGlobalServerItem::~CGlobalServerItem
PUBLIC	?GetKindID@CGlobalServerItem@@QAEGXZ		; CGlobalServerItem::GetKindID
PUBLIC	?GetServerID@CGlobalServerItem@@QAEGXZ		; CGlobalServerItem::GetServerID
PUBLIC	?GetTabelCount@CGlobalServerItem@@QAEGXZ	; CGlobalServerItem::GetTabelCount
PUBLIC	?SearchUserItem@CGlobalServerItem@@QAEPAVCGlobalUserItem@@K@Z ; CGlobalServerItem::SearchUserItem
PUBLIC	??_GCGlobalServerItem@@MAEPAXI@Z		; CGlobalServerItem::`scalar deleting destructor'
PUBLIC	??0CGlobalChatItem@@IAE@XZ			; CGlobalChatItem::CGlobalChatItem
PUBLIC	??1CGlobalChatItem@@MAE@XZ			; CGlobalChatItem::~CGlobalChatItem
PUBLIC	??_GCGlobalChatItem@@MAEPAXI@Z			; CGlobalChatItem::`scalar deleting destructor'
PUBLIC	??0?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@H@Z	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>
PUBLIC	?Lookup@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEHGAAPAVCGlobalPlazaItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::Lookup
PUBLIC	??A?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEAAPAVCGlobalPlazaItem@@G@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::operator[]
PUBLIC	?SetAt@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXGPAVCGlobalPlazaItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::SetAt
PUBLIC	?RemoveKey@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEHG@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalPlazaItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetAssocAt
PUBLIC	??1?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAE@XZ	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::~CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>
PUBLIC	?Serialize@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAEXAAVCArchive@@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::Serialize
PUBLIC	?Dump@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UBEXAAVCDumpContext@@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::Dump
PUBLIC	?AssertValid@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UBEXXZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::AssertValid
PUBLIC	??_G?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAEPAXI@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::`scalar deleting destructor'
PUBLIC	??0?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@H@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>
PUBLIC	?Lookup@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEHGAAPAVCGlobalServerItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::Lookup
PUBLIC	??A?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEAAPAVCGlobalServerItem@@G@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::operator[]
PUBLIC	?SetAt@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXGPAVCGlobalServerItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::SetAt
PUBLIC	?RemoveKey@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEHG@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalServerItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetAssocAt
PUBLIC	??1?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAE@XZ	; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::~CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>
PUBLIC	?Serialize@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAEXAAVCArchive@@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::Serialize
PUBLIC	?Dump@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UBEXAAVCDumpContext@@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::Dump
PUBLIC	?AssertValid@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UBEXXZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::AssertValid
PUBLIC	??_G?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAEPAXI@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::`scalar deleting destructor'
PUBLIC	??0?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@H@Z	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>
PUBLIC	?Lookup@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEHGAAPAVCGlobalChatItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::Lookup
PUBLIC	??A?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEAAPAVCGlobalChatItem@@G@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::operator[]
PUBLIC	?SetAt@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXGPAVCGlobalChatItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::SetAt
PUBLIC	?RemoveKey@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEHG@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalChatItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetAssocAt
PUBLIC	??1?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAE@XZ	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::~CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>
PUBLIC	?Serialize@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAEXAAVCArchive@@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::Serialize
PUBLIC	?Dump@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UBEXAAVCDumpContext@@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::Dump
PUBLIC	?AssertValid@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UBEXXZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::AssertValid
PUBLIC	??_G?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAEPAXI@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::`scalar deleting destructor'
PUBLIC	??0?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAE@XZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::CWHArray<tagServerTableCount *,tagServerTableCount * const &>
PUBLIC	??1?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@UAE@XZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::~CWHArray<tagServerTableCount *,tagServerTableCount * const &>
PUBLIC	?GetCount@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QBEHXZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetCount
PUBLIC	?Add@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEHABQAUtagServerTableCount@@@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::Add
PUBLIC	?GetAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEAAPAUtagServerTableCount@@H@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetAt
PUBLIC	?SetSize@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXH@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXHABQAUtagServerTableCount@@@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXXZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::RemoveAll
PUBLIC	?AllocMemory@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXH@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::AllocMemory
PUBLIC	??_G?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@UAEPAXI@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::`scalar deleting destructor'
PUBLIC	??0?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@H@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>
PUBLIC	?Lookup@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEHKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::Lookup
PUBLIC	??A?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEAAPAUtagPersonalTableInfo@@K@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::operator[]
PUBLIC	?SetAt@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::SetAt
PUBLIC	?RemoveKey@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::RemoveKey
PUBLIC	?RemoveAll@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXXZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::RemoveAll
PUBLIC	?GetStartPosition@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetStartPosition
PUBLIC	?GetNextAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEXAAPAU__POSITION@@AAKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetNextAssoc
PUBLIC	?InitHashTable@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::InitHashTable
PUBLIC	?NewAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAEPAVCAssoc@1@K@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::NewAssoc
PUBLIC	?FreeAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::FreeAssoc
PUBLIC	?GetAssocAt@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetAssocAt
PUBLIC	??1?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAE@XZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::~CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>
PUBLIC	?Serialize@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAEXAAVCArchive@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::Serialize
PUBLIC	?Dump@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UBEXAAVCDumpContext@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::Dump
PUBLIC	?AssertValid@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UBEXXZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::AssertValid
PUBLIC	??_G?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAEPAXI@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::`scalar deleting destructor'
PUBLIC	??0?$allocator@UtagPersonalTableInfo@@@std@@QAE@XZ ; std::allocator<tagPersonalTableInfo>::allocator<tagPersonalTableInfo>
PUBLIC	?deallocate@?$allocator@UtagPersonalTableInfo@@@std@@QAEXQAUtagPersonalTableInfo@@I@Z ; std::allocator<tagPersonalTableInfo>::deallocate
PUBLIC	?allocate@?$allocator@UtagPersonalTableInfo@@@std@@QAEPAUtagPersonalTableInfo@@I@Z ; std::allocator<tagPersonalTableInfo>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAIABV?$allocator@UtagPersonalTableInfo@@@2@@Z ; std::_Default_allocator_traits<std::allocator<tagPersonalTableInfo> >::max_size
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >
PUBLIC	??1?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::~_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Free_proxy
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getpfirst
PUBLIC	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QBEABV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_second
PUBLIC	??0?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >
PUBLIC	??1?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::~vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >
PUBLIC	?push_back@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEXABUtagPersonalTableInfo@@@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::push_back
PUBLIC	?erase@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::erase
PUBLIC	?begin@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@XZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::begin
PUBLIC	?size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::size
PUBLIC	?max_size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::max_size
PUBLIC	?capacity@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::capacity
PUBLIC	?_Has_unused_capacity@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABE_NXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Has_unused_capacity
PUBLIC	??A?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEAAUtagPersonalTableInfo@@I@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::operator[]
PUBLIC	?_Umove@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEPAUtagPersonalTableInfo@@PAU3@00@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@00U?$integral_constant@_N$00@2@@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@00@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@0@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEII@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXQAUtagPersonalTableInfo@@II@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Change_array
PUBLIC	?_Tidy@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Tidy
PUBLIC	?_Xlength@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@CAXXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEXPAUtagPersonalTableInfo@@0@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Orphan_range
PUBLIC	??0?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAE@XZ ; std::allocator<CMD_CS_S_RegisterPersonal>::allocator<CMD_CS_S_RegisterPersonal>
PUBLIC	?deallocate@?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAEXQAUCMD_CS_S_RegisterPersonal@@I@Z ; std::allocator<CMD_CS_S_RegisterPersonal>::deallocate
PUBLIC	?allocate@?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@I@Z ; std::allocator<CMD_CS_S_RegisterPersonal>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@SAIABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@@Z ; std::_Default_allocator_traits<std::allocator<CMD_CS_S_RegisterPersonal> >::max_size
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >
PUBLIC	??1?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::~_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Free_proxy
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getpfirst
PUBLIC	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QBEABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_second
PUBLIC	??0?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >
PUBLIC	??1?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::~vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >
PUBLIC	?push_back@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEXABUCMD_CS_S_RegisterPersonal@@@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::push_back
PUBLIC	?size@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::size
PUBLIC	?max_size@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::max_size
PUBLIC	?capacity@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::capacity
PUBLIC	?_Has_unused_capacity@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABE_NXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Has_unused_capacity
PUBLIC	??A?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEAAUCMD_CS_S_RegisterPersonal@@I@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::operator[]
PUBLIC	?_Umove@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEPAUCMD_CS_S_RegisterPersonal@@PAU3@00@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@00U?$integral_constant@_N$00@2@@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@00@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@0@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEII@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXQAUCMD_CS_S_RegisterPersonal@@II@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Change_array
PUBLIC	?_Tidy@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Tidy
PUBLIC	?_Xlength@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@CAXXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEXPAUCMD_CS_S_RegisterPersonal@@0@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Orphan_range
PUBLIC	??0CGlobalInfoManager@@QAE@XZ			; CGlobalInfoManager::CGlobalInfoManager
PUBLIC	??1CGlobalInfoManager@@UAE@XZ			; CGlobalInfoManager::~CGlobalInfoManager
PUBLIC	?ResetData@CGlobalInfoManager@@QAEXXZ		; CGlobalInfoManager::ResetData
PUBLIC	?SearchTableByID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@K@Z ; CGlobalInfoManager::SearchTableByID
PUBLIC	?SearchTableByTableIDAndServerID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@KK@Z ; CGlobalInfoManager::SearchTableByTableIDAndServerID
PUBLIC	?AddFreeServerTable@CGlobalInfoManager@@QAE_NK@Z ; CGlobalInfoManager::AddFreeServerTable
PUBLIC	?AddServerTable@CGlobalInfoManager@@QAE_NKUtagPersonalTableInfo@@@Z ; CGlobalInfoManager::AddServerTable
PUBLIC	?RemoveFreeServerTable@CGlobalInfoManager@@QAE_NK@Z ; CGlobalInfoManager::RemoveFreeServerTable
PUBLIC	?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z ; CGlobalInfoManager::RemoveServerTable
PUBLIC	?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z	; CGlobalInfoManager::RemoveServerTable
PUBLIC	?GetFreeServer@CGlobalInfoManager@@QAEKKKE@Z	; CGlobalInfoManager::GetFreeServer
PUBLIC	?GetFreeServerCount@CGlobalInfoManager@@QAEKK@Z	; CGlobalInfoManager::GetFreeServerCount
PUBLIC	?RandPersonalRoomID@CGlobalInfoManager@@QAEKXZ	; CGlobalInfoManager::RandPersonalRoomID
PUBLIC	?GetHostCreatePersonalRoom@CGlobalInfoManager@@QAEXAAUtagHostCreatRoomInfo@@@Z ; CGlobalInfoManager::GetHostCreatePersonalRoom
PUBLIC	?GetHostCreatePersonalRoomCount@CGlobalInfoManager@@QAEHKK@Z ; CGlobalInfoManager::GetHostCreatePersonalRoomCount
PUBLIC	?AddPersonalMaxCreate@CGlobalInfoManager@@QAE_NUCMD_CS_S_RegisterPersonal@@@Z ; CGlobalInfoManager::AddPersonalMaxCreate
PUBLIC	?CanCreatePersonalRoom@CGlobalInfoManager@@QAE_NKK@Z ; CGlobalInfoManager::CanCreatePersonalRoom
PUBLIC	?DeleteUserItem@CGlobalInfoManager@@QAE_NKG@Z	; CGlobalInfoManager::DeleteUserItem
PUBLIC	?ActiveUserItem@CGlobalInfoManager@@QAE_NAAUtagGlobalUserInfo@@G@Z ; CGlobalInfoManager::ActiveUserItem
PUBLIC	?DeletePlazaItem@CGlobalInfoManager@@QAE_NG@Z	; CGlobalInfoManager::DeletePlazaItem
PUBLIC	?ActivePlazaItem@CGlobalInfoManager@@QAE_NGAAUtagGamePlaza@@@Z ; CGlobalInfoManager::ActivePlazaItem
PUBLIC	?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z	; CGlobalInfoManager::DeleteServerItem
PUBLIC	?ActiveServerItem@CGlobalInfoManager@@QAE_NGAAUtagGameServer@@@Z ; CGlobalInfoManager::ActiveServerItem
PUBLIC	?DeleteChatItem@CGlobalInfoManager@@QAE_NG@Z	; CGlobalInfoManager::DeleteChatItem
PUBLIC	?ActiveChatItem@CGlobalInfoManager@@QAE_NGAAUtagChatServer@@@Z ; CGlobalInfoManager::ActiveChatItem
PUBLIC	?SearchPlazaItem@CGlobalInfoManager@@QAEPAVCGlobalPlazaItem@@G@Z ; CGlobalInfoManager::SearchPlazaItem
PUBLIC	?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
PUBLIC	?SearchChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@G@Z ; CGlobalInfoManager::SearchChatItem
PUBLIC	?SearchUserItemByUserID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z ; CGlobalInfoManager::SearchUserItemByUserID
PUBLIC	?SearchUserItemByGameID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z ; CGlobalInfoManager::SearchUserItemByGameID
PUBLIC	?SearchUserItemByNickName@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@PBD@Z ; CGlobalInfoManager::SearchUserItemByNickName
PUBLIC	?EnumUserItem@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@AAPAU__POSITION@@@Z ; CGlobalInfoManager::EnumUserItem
PUBLIC	?EnumPlazaItem@CGlobalInfoManager@@QAEPAVCGlobalPlazaItem@@AAPAU__POSITION@@@Z ; CGlobalInfoManager::EnumPlazaItem
PUBLIC	?EnumServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@AAPAU__POSITION@@@Z ; CGlobalInfoManager::EnumServerItem
PUBLIC	?EnumChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@AAPAU__POSITION@@@Z ; CGlobalInfoManager::EnumChatItem
PUBLIC	?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ ; CGlobalInfoManager::CreateGlobalUserItem
PUBLIC	?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ ; CGlobalInfoManager::CreateGlobalPlazaItem
PUBLIC	?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ ; CGlobalInfoManager::CreateGlobalServerItem
PUBLIC	?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ ; CGlobalInfoManager::CreateGlobalChatItem
PUBLIC	?FreeGlobalUserItem@CGlobalInfoManager@@AAE_NPAVCGlobalUserItem@@@Z ; CGlobalInfoManager::FreeGlobalUserItem
PUBLIC	?FreeGlobalPlazaItem@CGlobalInfoManager@@AAE_NPAVCGlobalPlazaItem@@@Z ; CGlobalInfoManager::FreeGlobalPlazaItem
PUBLIC	?FreeGlobalServerItem@CGlobalInfoManager@@AAE_NPAVCGlobalServerItem@@@Z ; CGlobalInfoManager::FreeGlobalServerItem
PUBLIC	?FreeGlobalChatItem@CGlobalInfoManager@@AAE_NPAVCGlobalChatItem@@@Z ; CGlobalInfoManager::FreeGlobalChatItem
PUBLIC	??_GCGlobalInfoManager@@UAEPAXI@Z		; CGlobalInfoManager::`scalar deleting destructor'
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@PAUtagPersonalTableInfo@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
PUBLIC	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEXH@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Verify_offset
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::operator+=
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@PAUtagPersonalTableInfo@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::operator+=
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::operator+
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
PUBLIC	??$emplace_back@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@ABUCMD_CS_S_RegisterPersonal@@@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::emplace_back<CMD_CS_S_RegisterPersonal const &>
PUBLIC	??$forward@ABUCMD_CS_S_RegisterPersonal@@@std@@YAABUCMD_CS_S_RegisterPersonal@@ABU1@@Z ; std::forward<CMD_CS_S_RegisterPersonal const &>
PUBLIC	??$_Emplace_back_with_unused_capacity@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAE@ABUCMD_CS_S_RegisterPersonal@@@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Emplace_back_with_unused_capacity<CMD_CS_S_RegisterPersonal const &>
PUBLIC	??$_Unfancy@UCMD_CS_S_RegisterPersonal@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@PAU1@@Z ; std::_Unfancy<CMD_CS_S_RegisterPersonal>
PUBLIC	??$construct@UCMD_CS_S_RegisterPersonal@@ABU1@@?$_Default_allocator_traits@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@SAXAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@1@QAUCMD_CS_S_RegisterPersonal@@ABU3@@Z ; std::_Default_allocator_traits<std::allocator<CMD_CS_S_RegisterPersonal> >::construct<CMD_CS_S_RegisterPersonal,CMD_CS_S_RegisterPersonal const &>
PUBLIC	??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Emplace_reallocate<CMD_CS_S_RegisterPersonal const &>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
PUBLIC	??$_Move_unchecked@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00@Z ; std::_Move_unchecked<tagPersonalTableInfo *,tagPersonalTableInfo *>
PUBLIC	??$_Unfancy@UtagPersonalTableInfo@@@std@@YAPAUtagPersonalTableInfo@@PAU1@@Z ; std::_Unfancy<tagPersonalTableInfo>
PUBLIC	??$destroy@UtagPersonalTableInfo@@@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAXAAV?$allocator@UtagPersonalTableInfo@@@1@QAUtagPersonalTableInfo@@@Z ; std::_Default_allocator_traits<std::allocator<tagPersonalTableInfo> >::destroy<tagPersonalTableInfo>
PUBLIC	??$emplace_back@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@ABUtagPersonalTableInfo@@@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::emplace_back<tagPersonalTableInfo const &>
PUBLIC	??$forward@ABUtagPersonalTableInfo@@@std@@YAABUtagPersonalTableInfo@@ABU1@@Z ; std::forward<tagPersonalTableInfo const &>
PUBLIC	??$_Emplace_back_with_unused_capacity@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAE@ABUtagPersonalTableInfo@@@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Emplace_back_with_unused_capacity<tagPersonalTableInfo const &>
PUBLIC	??$construct@UtagPersonalTableInfo@@ABU1@@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAXAAV?$allocator@UtagPersonalTableInfo@@@1@QAUtagPersonalTableInfo@@ABU3@@Z ; std::_Default_allocator_traits<std::allocator<tagPersonalTableInfo> >::construct<tagPersonalTableInfo,tagPersonalTableInfo const &>
PUBLIC	??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Emplace_reallocate<tagPersonalTableInfo const &>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1><>
PUBLIC	??$?0UCMD_CS_S_RegisterPersonal@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UCMD_CS_S_RegisterPersonal@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><CMD_CS_S_RegisterPersonal>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> > >
PUBLIC	??$_Destroy_range@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAXPAUCMD_CS_S_RegisterPersonal@@0AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@@Z ; std::_Destroy_range<std::allocator<CMD_CS_S_RegisterPersonal> >
PUBLIC	??$?0UtagPersonalTableInfo@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UtagPersonalTableInfo@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><tagPersonalTableInfo>
PUBLIC	??$_Destroy_range@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAXPAUtagPersonalTableInfo@@0AAV?$allocator@UtagPersonalTableInfo@@@0@@Z ; std::_Destroy_range<std::allocator<tagPersonalTableInfo> >
PUBLIC	??0CPair@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAE@K@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@K@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CAssoc::CAssoc
PUBLIC	??$CompareElements@KK@@YGHPBK0@Z		; CompareElements<unsigned long,unsigned long>
PUBLIC	??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z	; SerializeElements<unsigned long>
PUBLIC	??$SerializeElements@PAVCGlobalUserItem@@@@YGXAAVCArchive@@PAPAVCGlobalUserItem@@H@Z ; SerializeElements<CGlobalUserItem *>
PUBLIC	??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z	; DumpElements<unsigned long>
PUBLIC	??$DumpElements@PAVCGlobalUserItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalUserItem@@H@Z ; DumpElements<CGlobalUserItem *>
PUBLIC	??0CPair@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAE@G@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@G@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::CAssoc::CAssoc
PUBLIC	??$HashKey@G@@YGIG@Z				; HashKey<unsigned short>
PUBLIC	??$CompareElements@GG@@YGHPBG0@Z		; CompareElements<unsigned short,unsigned short>
PUBLIC	??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z	; SerializeElements<unsigned short>
PUBLIC	??$SerializeElements@PAVCGlobalPlazaItem@@@@YGXAAVCArchive@@PAPAVCGlobalPlazaItem@@H@Z ; SerializeElements<CGlobalPlazaItem *>
PUBLIC	??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z	; DumpElements<unsigned short>
PUBLIC	??$DumpElements@PAVCGlobalPlazaItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalPlazaItem@@H@Z ; DumpElements<CGlobalPlazaItem *>
PUBLIC	??0CPair@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAE@G@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@G@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::CAssoc::CAssoc
PUBLIC	??$SerializeElements@PAVCGlobalServerItem@@@@YGXAAVCArchive@@PAPAVCGlobalServerItem@@H@Z ; SerializeElements<CGlobalServerItem *>
PUBLIC	??$DumpElements@PAVCGlobalServerItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalServerItem@@H@Z ; DumpElements<CGlobalServerItem *>
PUBLIC	??0CPair@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAE@G@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@G@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::CAssoc::CAssoc
PUBLIC	??$SerializeElements@PAVCGlobalChatItem@@@@YGXAAVCArchive@@PAPAVCGlobalChatItem@@H@Z ; SerializeElements<CGlobalChatItem *>
PUBLIC	??$DumpElements@PAVCGlobalChatItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalChatItem@@H@Z ; DumpElements<CGlobalChatItem *>
PUBLIC	??0CPair@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAE@K@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::CPair::CPair
PUBLIC	??0CAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@K@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::CAssoc::CAssoc
PUBLIC	??$SerializeElements@PAUtagPersonalTableInfo@@@@YGXAAVCArchive@@PAPAUtagPersonalTableInfo@@H@Z ; SerializeElements<tagPersonalTableInfo *>
PUBLIC	??$DumpElements@PAUtagPersonalTableInfo@@@@YGXAAVCDumpContext@@PBQAUtagPersonalTableInfo@@H@Z ; DumpElements<tagPersonalTableInfo *>
PUBLIC	??$_Ptr_move_cat@UtagPersonalTableInfo@@U1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUtagPersonalTableInfo@@0@Z ; std::_Ptr_move_cat<tagPersonalTableInfo,tagPersonalTableInfo>
PUBLIC	??$_Move_unchecked1@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00U_Trivially_copyable_ptr_iterator_tag@0@@Z ; std::_Move_unchecked1<tagPersonalTableInfo *,tagPersonalTableInfo *>
PUBLIC	??$_Destroy_range1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAXPAUCMD_CS_S_RegisterPersonal@@0AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<CMD_CS_S_RegisterPersonal> >
PUBLIC	??$_Destroy_range1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAXPAUtagPersonalTableInfo@@0AAV?$allocator@UtagPersonalTableInfo@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<tagPersonalTableInfo> >
PUBLIC	??$_Uninitialized_move@PAUCMD_CS_S_RegisterPersonal@@PAU1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@0PAU1@AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@@Z ; std::_Uninitialized_move<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *,std::allocator<CMD_CS_S_RegisterPersonal> >
PUBLIC	??$_Uninitialized_move@PAUtagPersonalTableInfo@@PAU1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAPAUtagPersonalTableInfo@@QAU1@0PAU1@AAV?$allocator@UtagPersonalTableInfo@@@0@@Z ; std::_Uninitialized_move<tagPersonalTableInfo *,tagPersonalTableInfo *,std::allocator<tagPersonalTableInfo> >
PUBLIC	??$_Get_size_of_n@$0NB@@std@@YAII@Z		; std::_Get_size_of_n<209>
PUBLIC	??$_Copy_memmove@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00@Z ; std::_Copy_memmove<tagPersonalTableInfo *,tagPersonalTableInfo *>
PUBLIC	??$_Get_unwrapped@UCMD_CS_S_RegisterPersonal@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@@Z ; std::_Get_unwrapped<CMD_CS_S_RegisterPersonal>
PUBLIC	??$_Idl_distance@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YA@ABQAUCMD_CS_S_RegisterPersonal@@0@Z ; std::_Idl_distance<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *>
PUBLIC	??$_Idl_distance1@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YAHABQAUCMD_CS_S_RegisterPersonal@@0Urandom_access_iterator_tag@0@@Z ; std::_Idl_distance1<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *>
PUBLIC	??$_Get_unwrapped_n@UCMD_CS_S_RegisterPersonal@@H$0A@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@H@Z ; std::_Get_unwrapped_n<CMD_CS_S_RegisterPersonal,int,0>
PUBLIC	??$_Ptr_move_cat@UCMD_CS_S_RegisterPersonal@@U1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUCMD_CS_S_RegisterPersonal@@0@Z ; std::_Ptr_move_cat<CMD_CS_S_RegisterPersonal,CMD_CS_S_RegisterPersonal>
PUBLIC	??$_Uninitialized_move_al_unchecked@UCMD_CS_S_RegisterPersonal@@U1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@00AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_move_al_unchecked<CMD_CS_S_RegisterPersonal,CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >
PUBLIC	??$_Seek_wrapped@UCMD_CS_S_RegisterPersonal@@@std@@YAXAAPAUCMD_CS_S_RegisterPersonal@@QAU1@@Z ; std::_Seek_wrapped<CMD_CS_S_RegisterPersonal>
PUBLIC	??$_Get_unwrapped@UtagPersonalTableInfo@@@std@@YAPAUtagPersonalTableInfo@@QAU1@@Z ; std::_Get_unwrapped<tagPersonalTableInfo>
PUBLIC	??$_Idl_distance@PAUtagPersonalTableInfo@@PAU1@@std@@YA@ABQAUtagPersonalTableInfo@@0@Z ; std::_Idl_distance<tagPersonalTableInfo *,tagPersonalTableInfo *>
PUBLIC	??$_Idl_distance1@PAUtagPersonalTableInfo@@PAU1@@std@@YAHABQAUtagPersonalTableInfo@@0Urandom_access_iterator_tag@0@@Z ; std::_Idl_distance1<tagPersonalTableInfo *,tagPersonalTableInfo *>
PUBLIC	??$_Get_unwrapped_n@UtagPersonalTableInfo@@H$0A@@std@@YAPAUtagPersonalTableInfo@@QAU1@H@Z ; std::_Get_unwrapped_n<tagPersonalTableInfo,int,0>
PUBLIC	??$_Uninitialized_move_al_unchecked@UtagPersonalTableInfo@@U1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAPAUtagPersonalTableInfo@@QAU1@00AAV?$allocator@UtagPersonalTableInfo@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_move_al_unchecked<tagPersonalTableInfo,tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >
PUBLIC	??$_Seek_wrapped@UtagPersonalTableInfo@@@std@@YAXAAPAUtagPersonalTableInfo@@QAU1@@Z ; std::_Seek_wrapped<tagPersonalTableInfo>
PUBLIC	??$_Copy_memmove@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YAPAUCMD_CS_S_RegisterPersonal@@PAU1@00@Z ; std::_Copy_memmove<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *>
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_0GJ@EJIMBHLG@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NC@FANNPLN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0GJ@FFDBCFBF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NC@PIOGAKBO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_05PLCFPPOI@with?5@			; `string'
PUBLIC	??_C@_09HCLNAIDE@?5elements@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ ; `string'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_7?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@6B@ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::`vftable'
PUBLIC	??_7CGlobalUserItem@@6B@			; CGlobalUserItem::`vftable'
PUBLIC	??_7?$CMap@KKPAVCGlobalUserItem@@PAV1@@@6B@	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::`vftable'
PUBLIC	??_7CGlobalPlazaItem@@6B@			; CGlobalPlazaItem::`vftable'
PUBLIC	??_7CGlobalServerItem@@6B@			; CGlobalServerItem::`vftable'
PUBLIC	??_7CGlobalChatItem@@6B@			; CGlobalChatItem::`vftable'
PUBLIC	??_7?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@6B@	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::`vftable'
PUBLIC	??_7?$CMap@GGPAVCGlobalServerItem@@PAV1@@@6B@	; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::`vftable'
PUBLIC	??_7?$CMap@GGPAVCGlobalChatItem@@PAV1@@@6B@	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::`vftable'
PUBLIC	??_7?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@6B@ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::`vftable'
PUBLIC	??_7?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@6B@ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::`vftable'
PUBLIC	??_7CGlobalInfoManager@@6B@			; CGlobalInfoManager::`vftable'
PUBLIC	?__LINE__Var@?0???1CGlobalInfoManager@@UAE@XZ@4JA ; `CGlobalInfoManager::~CGlobalInfoManager'::`1'::__LINE__Var
PUBLIC	??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	?__LINE__Var@?0??RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z@4JA ; `CGlobalInfoManager::RemoveServerTable'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z@4JA ; `CGlobalInfoManager::RemoveServerTable'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??DeleteUserItem@CGlobalInfoManager@@QAE_NKG@Z@4JA ; `CGlobalInfoManager::DeleteUserItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??ActiveUserItem@CGlobalInfoManager@@QAE_NAAUtagGlobalUserInfo@@G@Z@4JA ; `CGlobalInfoManager::ActiveUserItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??DeletePlazaItem@CGlobalInfoManager@@QAE_NG@Z@4JA ; `CGlobalInfoManager::DeletePlazaItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??ActivePlazaItem@CGlobalInfoManager@@QAE_NGAAUtagGamePlaza@@@Z@4JA ; `CGlobalInfoManager::ActivePlazaItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z@4JA ; `CGlobalInfoManager::DeleteServerItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??ActiveServerItem@CGlobalInfoManager@@QAE_NGAAUtagGameServer@@@Z@4JA ; `CGlobalInfoManager::ActiveServerItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??DeleteChatItem@CGlobalInfoManager@@QAE_NG@Z@4JA ; `CGlobalInfoManager::DeleteChatItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??ActiveChatItem@CGlobalInfoManager@@QAE_NGAAUtagChatServer@@@Z@4JA ; `CGlobalInfoManager::ActiveChatItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??FreeGlobalUserItem@CGlobalInfoManager@@AAE_NPAVCGlobalUserItem@@@Z@4JA ; `CGlobalInfoManager::FreeGlobalUserItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??FreeGlobalPlazaItem@CGlobalInfoManager@@AAE_NPAVCGlobalPlazaItem@@@Z@4JA ; `CGlobalInfoManager::FreeGlobalPlazaItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??FreeGlobalServerItem@CGlobalInfoManager@@AAE_NPAVCGlobalServerItem@@@Z@4JA ; `CGlobalInfoManager::FreeGlobalServerItem'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??FreeGlobalChatItem@CGlobalInfoManager@@AAE_NPAVCGlobalChatItem@@@Z@4JA ; `CGlobalInfoManager::FreeGlobalChatItem'::`1'::__LINE__Var
PUBLIC	??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0GH@FKAHJGEE@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1MO@OJBMIJHH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1OG@HDLNKHLM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_1NC@IPECMLIE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@ ; `string'
PUBLIC	??_C@_1MG@DGHPNNHF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@ ; `string'
PUBLIC	??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@ ; `string'
PUBLIC	??_C@_1PM@OPIBNBPL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ ; `string'
PUBLIC	??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@ ; `string'
PUBLIC	??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@ ; `string'
PUBLIC	??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ ; `string'
PUBLIC	??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@ ; `string'
PUBLIC	??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ ; `string'
PUBLIC	??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_C@_03OHJIHPJH@?6?7?$FL@			; `string'
PUBLIC	??_C@_04OAFLPOMH@?$FN?5?$DN?5@			; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_R4CGlobalUserItem@@6B@			; CGlobalUserItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGlobalUserItem@@@8			; CGlobalUserItem `RTTI Type Descriptor'
PUBLIC	??_R3CGlobalUserItem@@8				; CGlobalUserItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGlobalUserItem@@8				; CGlobalUserItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGlobalUserItem@@8		; CGlobalUserItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGlobalPlazaItem@@6B@			; CGlobalPlazaItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGlobalPlazaItem@@@8			; CGlobalPlazaItem `RTTI Type Descriptor'
PUBLIC	??_R3CGlobalPlazaItem@@8			; CGlobalPlazaItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGlobalPlazaItem@@8			; CGlobalPlazaItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGlobalPlazaItem@@8		; CGlobalPlazaItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGlobalServerItem@@6B@			; CGlobalServerItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGlobalServerItem@@@8			; CGlobalServerItem `RTTI Type Descriptor'
PUBLIC	??_R3CGlobalServerItem@@8			; CGlobalServerItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGlobalServerItem@@8			; CGlobalServerItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGlobalServerItem@@8		; CGlobalServerItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGlobalChatItem@@6B@			; CGlobalChatItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGlobalChatItem@@@8			; CGlobalChatItem `RTTI Type Descriptor'
PUBLIC	??_R3CGlobalChatItem@@8				; CGlobalChatItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGlobalChatItem@@8				; CGlobalChatItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGlobalChatItem@@8		; CGlobalChatItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@6B@ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@@8 ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@8 ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@8 ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@8 ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@KKPAVCGlobalUserItem@@PAV1@@@6B@	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@KKPAVCGlobalUserItem@@PAV1@@@@8	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@KKPAVCGlobalUserItem@@PAV1@@@8	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@KKPAVCGlobalUserItem@@PAV1@@@8	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@8 ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@6B@	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@@8	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@8	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@8	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@8 ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@GGPAVCGlobalServerItem@@PAV1@@@6B@	; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@GGPAVCGlobalServerItem@@PAV1@@@@8 ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@GGPAVCGlobalServerItem@@PAV1@@@8	; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@GGPAVCGlobalServerItem@@PAV1@@@8	; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@8 ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@GGPAVCGlobalChatItem@@PAV1@@@6B@	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@GGPAVCGlobalChatItem@@PAV1@@@@8	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@GGPAVCGlobalChatItem@@PAV1@@@8	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@GGPAVCGlobalChatItem@@PAV1@@@8	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@8 ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@6B@ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@@8 ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@8 ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@8 ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@8 ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@6B@ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@@8 ; CWHArray<tagServerTableCount *,tagServerTableCount * const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@8 ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@8 ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@8 ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGlobalInfoManager@@6B@			; CGlobalInfoManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGlobalInfoManager@@@8			; CGlobalInfoManager `RTTI Type Descriptor'
PUBLIC	??_R3CGlobalInfoManager@@8			; CGlobalInfoManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGlobalInfoManager@@8			; CGlobalInfoManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGlobalInfoManager@@8		; CGlobalInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__ldiv:PROC
EXTRN	__imp__srand:PROC
EXTRN	__imp__rand:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z:PROC ; AfxAssertValidObject
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	??1CObject@@UAE@XZ:PROC				; CObject::~CObject
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
EXTRN	??0CObject@@IAE@XZ:PROC				; CObject::CObject
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	?AssertValid@CObject@@UBEXXZ:PROC		; CObject::AssertValid
EXTRN	?Dump@CObject@@UBEXAAVCDumpContext@@@Z:PROC	; CObject::Dump
EXTRN	?AfxIsValidAddress@@YGHPBXIH@Z:PROC		; AfxIsValidAddress
EXTRN	??_U@YAPAXIPBDH@Z:PROC				; operator new[]
EXTRN	?IsStoring@CArchive@@QBEHXZ:PROC		; CArchive::IsStoring
EXTRN	?EnsureRead@CArchive@@QAEXPAXI@Z:PROC		; CArchive::EnsureRead
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?GetDepth@CDumpContext@@QBEHXZ:PROC		; CDumpContext::GetDepth
EXTRN	??6CDumpContext@@QAEAAV0@PBD@Z:PROC		; CDumpContext::operator<<
EXTRN	??6CDumpContext@@QAEAAV0@H@Z:PROC		; CDumpContext::operator<<
EXTRN	??0CMapStringToPtr@@QAE@H@Z:PROC		; CMapStringToPtr::CMapStringToPtr
EXTRN	?Lookup@CMapStringToPtr@@QBEHPBDAAPAX@Z:PROC	; CMapStringToPtr::Lookup
EXTRN	??ACMapStringToPtr@@QAEAAPAXPBD@Z:PROC		; CMapStringToPtr::operator[]
EXTRN	?RemoveKey@CMapStringToPtr@@QAEHPBD@Z:PROC	; CMapStringToPtr::RemoveKey
EXTRN	?RemoveAll@CMapStringToPtr@@QAEXXZ:PROC		; CMapStringToPtr::RemoveAll
EXTRN	?InitHashTable@CMapStringToPtr@@QAEXIH@Z:PROC	; CMapStringToPtr::InitHashTable
EXTRN	??1CMapStringToPtr@@UAE@XZ:PROC			; CMapStringToPtr::~CMapStringToPtr
EXTRN	?Create@CPlex@@SGPAU1@AAPAU1@II@Z:PROC		; CPlex::Create
EXTRN	?FreeDataChain@CPlex@@QAEXXZ:PROC		; CPlex::FreeDataChain
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	??_E?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@UAEPAXI@Z:PROC ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::`vector deleting destructor'
EXTRN	??_ECGlobalUserItem@@MAEPAXI@Z:PROC		; CGlobalUserItem::`vector deleting destructor'
EXTRN	??_E?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAEPAXI@Z:PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::`vector deleting destructor'
EXTRN	??_ECGlobalPlazaItem@@MAEPAXI@Z:PROC		; CGlobalPlazaItem::`vector deleting destructor'
EXTRN	??_ECGlobalServerItem@@MAEPAXI@Z:PROC		; CGlobalServerItem::`vector deleting destructor'
EXTRN	??_ECGlobalChatItem@@MAEPAXI@Z:PROC		; CGlobalChatItem::`vector deleting destructor'
EXTRN	??_E?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAEPAXI@Z:PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::`vector deleting destructor'
EXTRN	??_E?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAEPAXI@Z:PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::`vector deleting destructor'
EXTRN	??_E?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAEPAXI@Z:PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::`vector deleting destructor'
EXTRN	??_E?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@UAEPAXI@Z:PROC ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::`vector deleting destructor'
EXTRN	??_E?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAEPAXI@Z:PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::`vector deleting destructor'
EXTRN	??_ECGlobalInfoManager@@UAEPAXI@Z:PROC		; CGlobalInfoManager::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@CGlobalInfoManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGlobalInfoManager@@8 DD FLAT:??_R0?AVCGlobalInfoManager@@@8 ; CGlobalInfoManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGlobalInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CGlobalInfoManager@@8
rdata$r	SEGMENT
??_R2CGlobalInfoManager@@8 DD FLAT:??_R1A@?0A@EA@CGlobalInfoManager@@8 ; CGlobalInfoManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGlobalInfoManager@@8
rdata$r	SEGMENT
??_R3CGlobalInfoManager@@8 DD 00H			; CGlobalInfoManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGlobalInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGlobalInfoManager@@@8
data$r	SEGMENT
??_R0?AVCGlobalInfoManager@@@8 DD FLAT:??_7type_info@@6B@ ; CGlobalInfoManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGlobalInfoManager@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGlobalInfoManager@@6B@
rdata$r	SEGMENT
??_R4CGlobalInfoManager@@6B@ DD 00H			; CGlobalInfoManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGlobalInfoManager@@@8
	DD	FLAT:??_R3CGlobalInfoManager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@@8 ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@8 ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@8 DD 00H ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@6B@ DD 00H ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@8 DD FLAT:??_R0?AV?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@@8 ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@8
rdata$r	SEGMENT
??_R2?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@8 ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@8
rdata$r	SEGMENT
??_R3?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@8 DD 00H ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@@8
data$r	SEGMENT
??_R0?AV?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@6B@ DD 00H ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@@8
	DD	FLAT:??_R3?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@8 DD FLAT:??_R0?AV?$CMap@GGPAVCGlobalChatItem@@PAV1@@@@8 ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@GGPAVCGlobalChatItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@GGPAVCGlobalChatItem@@PAV1@@@8
rdata$r	SEGMENT
??_R2?$CMap@GGPAVCGlobalChatItem@@PAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@8 ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@GGPAVCGlobalChatItem@@PAV1@@@8
rdata$r	SEGMENT
??_R3?$CMap@GGPAVCGlobalChatItem@@PAV1@@@8 DD 00H	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@GGPAVCGlobalChatItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@GGPAVCGlobalChatItem@@PAV1@@@@8
data$r	SEGMENT
??_R0?AV?$CMap@GGPAVCGlobalChatItem@@PAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@GGPAVCGlobalChatItem@@PAV1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@GGPAVCGlobalChatItem@@PAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@GGPAVCGlobalChatItem@@PAV1@@@6B@ DD 00H	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@GGPAVCGlobalChatItem@@PAV1@@@@8
	DD	FLAT:??_R3?$CMap@GGPAVCGlobalChatItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@8 DD FLAT:??_R0?AV?$CMap@GGPAVCGlobalServerItem@@PAV1@@@@8 ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@GGPAVCGlobalServerItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@GGPAVCGlobalServerItem@@PAV1@@@8
rdata$r	SEGMENT
??_R2?$CMap@GGPAVCGlobalServerItem@@PAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@8 ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@GGPAVCGlobalServerItem@@PAV1@@@8
rdata$r	SEGMENT
??_R3?$CMap@GGPAVCGlobalServerItem@@PAV1@@@8 DD 00H	; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@GGPAVCGlobalServerItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@GGPAVCGlobalServerItem@@PAV1@@@@8
data$r	SEGMENT
??_R0?AV?$CMap@GGPAVCGlobalServerItem@@PAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@GGPAVCGlobalServerItem@@PAV1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@GGPAVCGlobalServerItem@@PAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@GGPAVCGlobalServerItem@@PAV1@@@6B@ DD 00H	; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@GGPAVCGlobalServerItem@@PAV1@@@@8
	DD	FLAT:??_R3?$CMap@GGPAVCGlobalServerItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@8 DD FLAT:??_R0?AV?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@@8 ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@8
rdata$r	SEGMENT
??_R2?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@8 ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@8
rdata$r	SEGMENT
??_R3?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@8 DD 00H	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@@8
data$r	SEGMENT
??_R0?AV?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@6B@ DD 00H	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@@8
	DD	FLAT:??_R3?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@8 DD FLAT:??_R0?AV?$CMap@KKPAVCGlobalUserItem@@PAV1@@@@8 ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CMap@KKPAVCGlobalUserItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CMap@KKPAVCGlobalUserItem@@PAV1@@@8
rdata$r	SEGMENT
??_R2?$CMap@KKPAVCGlobalUserItem@@PAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@8 ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CMap@KKPAVCGlobalUserItem@@PAV1@@@8
rdata$r	SEGMENT
??_R3?$CMap@KKPAVCGlobalUserItem@@PAV1@@@8 DD 00H	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CMap@KKPAVCGlobalUserItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CMap@KKPAVCGlobalUserItem@@PAV1@@@@8
data$r	SEGMENT
??_R0?AV?$CMap@KKPAVCGlobalUserItem@@PAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CMap@KKPAVCGlobalUserItem@@PAV1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CMap@KKPAVCGlobalUserItem@@PAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CMap@KKPAVCGlobalUserItem@@PAV1@@@6B@ DD 00H	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CMap@KKPAVCGlobalUserItem@@PAV1@@@@8
	DD	FLAT:??_R3?$CMap@KKPAVCGlobalUserItem@@PAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@8 DD FLAT:??_R0?AV?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@@8 ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@8
rdata$r	SEGMENT
??_R2?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@8 ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@8
rdata$r	SEGMENT
??_R3?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@8 DD 00H	; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@6B@ DD 00H ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@@8
	DD	FLAT:??_R3?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGlobalChatItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGlobalChatItem@@8 DD FLAT:??_R0?AVCGlobalChatItem@@@8 ; CGlobalChatItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGlobalChatItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CGlobalChatItem@@8
rdata$r	SEGMENT
??_R2CGlobalChatItem@@8 DD FLAT:??_R1A@?0A@EA@CGlobalChatItem@@8 ; CGlobalChatItem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGlobalChatItem@@8
rdata$r	SEGMENT
??_R3CGlobalChatItem@@8 DD 00H				; CGlobalChatItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGlobalChatItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGlobalChatItem@@@8
data$r	SEGMENT
??_R0?AVCGlobalChatItem@@@8 DD FLAT:??_7type_info@@6B@	; CGlobalChatItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGlobalChatItem@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGlobalChatItem@@6B@
rdata$r	SEGMENT
??_R4CGlobalChatItem@@6B@ DD 00H			; CGlobalChatItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGlobalChatItem@@@8
	DD	FLAT:??_R3CGlobalChatItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGlobalServerItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGlobalServerItem@@8 DD FLAT:??_R0?AVCGlobalServerItem@@@8 ; CGlobalServerItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGlobalServerItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CGlobalServerItem@@8
rdata$r	SEGMENT
??_R2CGlobalServerItem@@8 DD FLAT:??_R1A@?0A@EA@CGlobalServerItem@@8 ; CGlobalServerItem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGlobalServerItem@@8
rdata$r	SEGMENT
??_R3CGlobalServerItem@@8 DD 00H			; CGlobalServerItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGlobalServerItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGlobalServerItem@@@8
data$r	SEGMENT
??_R0?AVCGlobalServerItem@@@8 DD FLAT:??_7type_info@@6B@ ; CGlobalServerItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGlobalServerItem@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGlobalServerItem@@6B@
rdata$r	SEGMENT
??_R4CGlobalServerItem@@6B@ DD 00H			; CGlobalServerItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGlobalServerItem@@@8
	DD	FLAT:??_R3CGlobalServerItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGlobalPlazaItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGlobalPlazaItem@@8 DD FLAT:??_R0?AVCGlobalPlazaItem@@@8 ; CGlobalPlazaItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGlobalPlazaItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CGlobalPlazaItem@@8
rdata$r	SEGMENT
??_R2CGlobalPlazaItem@@8 DD FLAT:??_R1A@?0A@EA@CGlobalPlazaItem@@8 ; CGlobalPlazaItem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGlobalPlazaItem@@8
rdata$r	SEGMENT
??_R3CGlobalPlazaItem@@8 DD 00H				; CGlobalPlazaItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGlobalPlazaItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGlobalPlazaItem@@@8
data$r	SEGMENT
??_R0?AVCGlobalPlazaItem@@@8 DD FLAT:??_7type_info@@6B@	; CGlobalPlazaItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGlobalPlazaItem@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGlobalPlazaItem@@6B@
rdata$r	SEGMENT
??_R4CGlobalPlazaItem@@6B@ DD 00H			; CGlobalPlazaItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGlobalPlazaItem@@@8
	DD	FLAT:??_R3CGlobalPlazaItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGlobalUserItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGlobalUserItem@@8 DD FLAT:??_R0?AVCGlobalUserItem@@@8 ; CGlobalUserItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGlobalUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CGlobalUserItem@@8
rdata$r	SEGMENT
??_R2CGlobalUserItem@@8 DD FLAT:??_R1A@?0A@EA@CGlobalUserItem@@8 ; CGlobalUserItem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGlobalUserItem@@8
rdata$r	SEGMENT
??_R3CGlobalUserItem@@8 DD 00H				; CGlobalUserItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGlobalUserItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGlobalUserItem@@@8
data$r	SEGMENT
??_R0?AVCGlobalUserItem@@@8 DD FLAT:??_7type_info@@6B@	; CGlobalUserItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGlobalUserItem@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGlobalUserItem@@6B@
rdata$r	SEGMENT
??_R4CGlobalUserItem@@6B@ DD 00H			; CGlobalUserItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGlobalUserItem@@@8
	DD	FLAT:??_R3CGlobalUserItem@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
CONST	SEGMENT
??_C@_04OAFLPOMH@?$FN?5?$DN?5@ DB '] = ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OHJIHPJH@?6?7?$FL@
CONST	SEGMENT
??_C@_03OHJIHPJH@?6?7?$FL@ DB 0aH, 09H, '[', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\a'
	DB	'rray.h', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
CONST	SEGMENT
??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, 'k', 00H, ' ', 00H, 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'a', 00H, 'f', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 'e', 00H, 'n', 00H, 'd', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@
CONST	SEGMENT
??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@ DB 'cannot seek v'
	DB	'ector iterator after end', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
CONST	SEGMENT
??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, 'k', 00H, ' ', 00H, 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'b', 00H, 'e', 00H, 'f', 00H, 'o', 00H
	DB	'r', 00H, 'e', 00H, ' ', 00H, 'b', 00H, 'e', 00H, 'g', 00H, 'i'
	DB	00H, 'n', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@
CONST	SEGMENT
??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@ DB 'cannot seek v'
	DB	'ector iterator before begin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@
CONST	SEGMENT
??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, 'k', 00H, ' ', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i', 00H
	DB	'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1PM@OPIBNBPL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
CONST	SEGMENT
??_C@_1PM@OPIBNBPL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 't', 00H
	DB	'a', 00H, 'g', 00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'o'
	DB	00H, 'n', 00H, 'a', 00H, 'l', 00H, 'T', 00H, 'a', 00H, 'b', 00H
	DB	'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'f', 00H, 'y'
	DB	00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H, 's', 00H, 'e', 00H
	DB	't', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@
CONST	SEGMENT
??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@ DB 'cannot seek v'
	DB	'alue-initialized vector iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@
CONST	SEGMENT
??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' '
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MG@DGHPNNHF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1MG@DGHPNNHF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 't', 00H
	DB	'a', 00H, 'g', 00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'o'
	DB	00H, 'n', 00H, 'a', 00H, 'l', 00H, 'T', 00H, 'a', 00H, 'b', 00H
	DB	'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 't', 00H, 'a', 00H, 'g', 00H, 'P', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'l'
	DB	00H, 'T', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'I', 00H
	DB	'n', 00H, 'f', 00H, 'o', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@
CONST	SEGMENT
??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@ DB 'vector erase '
	DB	'iterator outside range', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@IPECMLIE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1NC@IPECMLIE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 't', 00H
	DB	'a', 00H, 'g', 00H, 'P', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'o'
	DB	00H, 'n', 00H, 'a', 00H, 'l', 00H, 'T', 00H, 'a', 00H, 'b', 00H
	DB	'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 't', 00H, 'a', 00H, 'g', 00H, 'P', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'l'
	DB	00H, 'T', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'I', 00H
	DB	'n', 00H, 'f', 00H, 'o', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OG@HDLNKHLM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1OG@HDLNKHLM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'C', 00H
	DB	'M', 00H, 'D', 00H, '_', 00H, 'C', 00H, 'S', 00H, '_', 00H, 'S'
	DB	00H, '_', 00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'e', 00H, 'r', 00H, 's'
	DB	00H, 'o', 00H, 'n', 00H, 'a', 00H, 'l', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 'C', 00H, 'M', 00H, 'D', 00H, '_', 00H, 'C', 00H, 'S'
	DB	00H, '_', 00H, 'S', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'g', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'e'
	DB	00H, 'r', 00H, 's', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'l', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '[', 00H, ']', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@OJBMIJHH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MO@OJBMIJHH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@FKAHJGEE@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GH@FKAHJGEE@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\vector', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ DB 'vector subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??FreeGlobalChatItem@CGlobalInfoManager@@AAE_NPAVCGlobalChatItem@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??FreeGlobalChatItem@CGlobalInfoManager@@AAE_NPAVCGlobalChatItem@@@Z@4JA DD 04ccH ; `CGlobalInfoManager::FreeGlobalChatItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??FreeGlobalServerItem@CGlobalInfoManager@@AAE_NPAVCGlobalServerItem@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??FreeGlobalServerItem@CGlobalInfoManager@@AAE_NPAVCGlobalServerItem@@@Z@4JA DD 04b7H ; `CGlobalInfoManager::FreeGlobalServerItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??FreeGlobalPlazaItem@CGlobalInfoManager@@AAE_NPAVCGlobalPlazaItem@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??FreeGlobalPlazaItem@CGlobalInfoManager@@AAE_NPAVCGlobalPlazaItem@@@Z@4JA DD 04a5H ; `CGlobalInfoManager::FreeGlobalPlazaItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??FreeGlobalUserItem@CGlobalInfoManager@@AAE_NPAVCGlobalUserItem@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??FreeGlobalUserItem@CGlobalInfoManager@@AAE_NPAVCGlobalUserItem@@@Z@4JA DD 0490H ; `CGlobalInfoManager::FreeGlobalUserItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??ActiveChatItem@CGlobalInfoManager@@QAE_NGAAUtagChatServer@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ActiveChatItem@CGlobalInfoManager@@QAE_NGAAUtagChatServer@@@Z@4JA DD 03a3H ; `CGlobalInfoManager::ActiveChatItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??DeleteChatItem@CGlobalInfoManager@@QAE_NG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??DeleteChatItem@CGlobalInfoManager@@QAE_NG@Z@4JA DD 0391H ; `CGlobalInfoManager::DeleteChatItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??ActiveServerItem@CGlobalInfoManager@@QAE_NGAAUtagGameServer@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ActiveServerItem@CGlobalInfoManager@@QAE_NGAAUtagGameServer@@@Z@4JA DD 0359H ; `CGlobalInfoManager::ActiveServerItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z@4JA DD 0306H ; `CGlobalInfoManager::DeleteServerItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??ActivePlazaItem@CGlobalInfoManager@@QAE_NGAAUtagGamePlaza@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ActivePlazaItem@CGlobalInfoManager@@QAE_NGAAUtagGamePlaza@@@Z@4JA DD 02e9H ; `CGlobalInfoManager::ActivePlazaItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??DeletePlazaItem@CGlobalInfoManager@@QAE_NG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??DeletePlazaItem@CGlobalInfoManager@@QAE_NG@Z@4JA DD 02d7H ; `CGlobalInfoManager::DeletePlazaItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??ActiveUserItem@CGlobalInfoManager@@QAE_NAAUtagGlobalUserInfo@@G@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ActiveUserItem@CGlobalInfoManager@@QAE_NAAUtagGlobalUserInfo@@G@Z@4JA DD 0296H ; `CGlobalInfoManager::ActiveUserItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??DeleteUserItem@CGlobalInfoManager@@QAE_NKG@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??DeleteUserItem@CGlobalInfoManager@@QAE_NKG@Z@4JA DD 0264H ; `CGlobalInfoManager::DeleteUserItem'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z@4JA DD 01b4H ; `CGlobalInfoManager::RemoveServerTable'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z@4JA DD 0181H ; `CGlobalInfoManager::RemoveServerTable'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0d4H, 0bcH, 0d5H, 0bdH, 0b7H, 0feH, 0ceH, 0f1H, 0c6H
	DB	0f7H, '\globalinfomanager.cpp', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???1CGlobalInfoManager@@UAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CGlobalInfoManager@@UAE@XZ@4JA DD 08eH ; `CGlobalInfoManager::~CGlobalInfoManager'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7CGlobalInfoManager@@6B@
CONST	SEGMENT
??_7CGlobalInfoManager@@6B@ DD FLAT:??_R4CGlobalInfoManager@@6B@ ; CGlobalInfoManager::`vftable'
	DD	FLAT:??_ECGlobalInfoManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@6B@
CONST	SEGMENT
??_7?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@6B@ DD FLAT:??_R4?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@6B@ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@6B@ DD FLAT:??_R4?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@6B@ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@GGPAVCGlobalChatItem@@PAV1@@@6B@
CONST	SEGMENT
??_7?$CMap@GGPAVCGlobalChatItem@@PAV1@@@6B@ DD FLAT:??_R4?$CMap@GGPAVCGlobalChatItem@@PAV1@@@6B@ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@GGPAVCGlobalServerItem@@PAV1@@@6B@
CONST	SEGMENT
??_7?$CMap@GGPAVCGlobalServerItem@@PAV1@@@6B@ DD FLAT:??_R4?$CMap@GGPAVCGlobalServerItem@@PAV1@@@6B@ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@6B@
CONST	SEGMENT
??_7?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@6B@ DD FLAT:??_R4?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@6B@ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CGlobalChatItem@@6B@
CONST	SEGMENT
??_7CGlobalChatItem@@6B@ DD FLAT:??_R4CGlobalChatItem@@6B@ ; CGlobalChatItem::`vftable'
	DD	FLAT:??_ECGlobalChatItem@@MAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CGlobalServerItem@@6B@
CONST	SEGMENT
??_7CGlobalServerItem@@6B@ DD FLAT:??_R4CGlobalServerItem@@6B@ ; CGlobalServerItem::`vftable'
	DD	FLAT:??_ECGlobalServerItem@@MAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CGlobalPlazaItem@@6B@
CONST	SEGMENT
??_7CGlobalPlazaItem@@6B@ DD FLAT:??_R4CGlobalPlazaItem@@6B@ ; CGlobalPlazaItem::`vftable'
	DD	FLAT:??_ECGlobalPlazaItem@@MAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CMap@KKPAVCGlobalUserItem@@PAV1@@@6B@
CONST	SEGMENT
??_7?$CMap@KKPAVCGlobalUserItem@@PAV1@@@6B@ DD FLAT:??_R4?$CMap@KKPAVCGlobalUserItem@@PAV1@@@6B@ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UBEXXZ
	DD	FLAT:?Dump@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z
CONST	ENDS
;	COMDAT ??_7CGlobalUserItem@@6B@
CONST	SEGMENT
??_7CGlobalUserItem@@6B@ DD FLAT:??_R4CGlobalUserItem@@6B@ ; CGlobalUserItem::`vftable'
	DD	FLAT:??_ECGlobalUserItem@@MAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@6B@
CONST	SEGMENT
??_7?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@6B@ DD FLAT:??_R4?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@6B@ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$r	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
CONST	SEGMENT
??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09HCLNAIDE@?5elements@
CONST	SEGMENT
??_C@_09HCLNAIDE@?5elements@ DB ' elements', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05PLCFPPOI@with?5@
CONST	SEGMENT
??_C@_05PLCFPPOI@with?5@ DB 'with ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\atlmfc\include\afxtempl.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@PIOGAKBO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@PIOGAKBO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@FFDBCFBF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GJ@FFDBCFBF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xmemory0', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA DD 072H ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
CONST	SEGMENT
??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'I', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '_', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '1', 00H
	DB	'2', 00H, ':', 00H, ':', 00H, '_', 00H, 'O', 00H, 'r', 00H, 'p'
	DB	00H, 'h', 00H, 'a', 00H, 'n', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@FANNPLN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@FANNPLN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@EJIMBHLG@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GJ@EJIMBHLG@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xutility', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z$0
__unwindtable$??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z$2
__ehfuncinfo$??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z$0
__unwindtable$??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z$2
__ehfuncinfo$??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ$0
__tryblocktable$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ$3
__unwindtable$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ$0
__tryblocktable$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ$3
__unwindtable$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ$0
__tryblocktable$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ$3
__unwindtable$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ$0
__tryblocktable$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ$3
__unwindtable$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z$2
__catchsym$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z$0
__unwindtable$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z
	DD	02H
	DD	FLAT:__tryblocktable$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z$0
__unwindtable$?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z$2
__ehfuncinfo$?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z
	DD	01H
	DD	FLAT:__tryblocktable$?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z$0
__tryblocktable$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z$6
__unwindtable$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z$3
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z
	DD	01H
	DD	FLAT:__tryblocktable$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??1CGlobalInfoManager@@UAE@XZ$33 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CGlobalInfoManager@@UAE@XZ$14
__catchsym$??1CGlobalInfoManager@@UAE@XZ$32 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CGlobalInfoManager@@UAE@XZ$12
__catchsym$??1CGlobalInfoManager@@UAE@XZ$31 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CGlobalInfoManager@@UAE@XZ$10
__catchsym$??1CGlobalInfoManager@@UAE@XZ$30 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CGlobalInfoManager@@UAE@XZ$8
__catchsym$??1CGlobalInfoManager@@UAE@XZ$29 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CGlobalInfoManager@@UAE@XZ$6
__catchsym$??1CGlobalInfoManager@@UAE@XZ$28 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CGlobalInfoManager@@UAE@XZ$4
__catchsym$??1CGlobalInfoManager@@UAE@XZ$27 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CGlobalInfoManager@@UAE@XZ$2
__catchsym$??1CGlobalInfoManager@@UAE@XZ$26 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??1CGlobalInfoManager@@UAE@XZ$0
__ehfuncinfo$??1CGlobalInfoManager@@UAE@XZ DD 019930522H
	DD	01aH
	DD	FLAT:__unwindtable$??1CGlobalInfoManager@@UAE@XZ
	DD	08H
	DD	FLAT:__tryblocktable$??1CGlobalInfoManager@@UAE@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__tryblocktable$??1CGlobalInfoManager@@UAE@XZ DD 0aH
	DD	0aH
	DD	0bH
	DD	01H
	DD	FLAT:__catchsym$??1CGlobalInfoManager@@UAE@XZ$26
	DD	0cH
	DD	0cH
	DD	0dH
	DD	01H
	DD	FLAT:__catchsym$??1CGlobalInfoManager@@UAE@XZ$27
	DD	0eH
	DD	0eH
	DD	0fH
	DD	01H
	DD	FLAT:__catchsym$??1CGlobalInfoManager@@UAE@XZ$28
	DD	010H
	DD	010H
	DD	011H
	DD	01H
	DD	FLAT:__catchsym$??1CGlobalInfoManager@@UAE@XZ$29
	DD	012H
	DD	012H
	DD	013H
	DD	01H
	DD	FLAT:__catchsym$??1CGlobalInfoManager@@UAE@XZ$30
	DD	014H
	DD	014H
	DD	015H
	DD	01H
	DD	FLAT:__catchsym$??1CGlobalInfoManager@@UAE@XZ$31
	DD	016H
	DD	016H
	DD	017H
	DD	01H
	DD	FLAT:__catchsym$??1CGlobalInfoManager@@UAE@XZ$32
	DD	018H
	DD	018H
	DD	019H
	DD	01H
	DD	FLAT:__catchsym$??1CGlobalInfoManager@@UAE@XZ$33
__unwindtable$??1CGlobalInfoManager@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$16
	DD	00H
	DD	FLAT:__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$17
	DD	01H
	DD	FLAT:__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$18
	DD	02H
	DD	FLAT:__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$19
	DD	03H
	DD	FLAT:__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$20
	DD	04H
	DD	FLAT:__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$21
	DD	05H
	DD	FLAT:__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$22
	DD	06H
	DD	FLAT:__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$23
	DD	07H
	DD	FLAT:__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$24
	DD	08H
	DD	FLAT:__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$25
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
	DD	09H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CGlobalInfoManager@@QAE@XZ DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$??0CGlobalInfoManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CGlobalInfoManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$9
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEXPAUCMD_CS_S_RegisterPersonal@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEXPAUCMD_CS_S_RegisterPersonal@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEXPAUCMD_CS_S_RegisterPersonal@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEXPAUCMD_CS_S_RegisterPersonal@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEXPAUtagPersonalTableInfo@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEXPAUtagPersonalTableInfo@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEXPAUtagPersonalTableInfo@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEXPAUtagPersonalTableInfo@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@@Z$0
__ehfuncinfo$?erase@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CGlobalServerItem@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGlobalServerItem@@IAE@XZ$0
__ehfuncinfo$??0CGlobalServerItem@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CGlobalServerItem@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z$0
__ehfuncinfo$??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Copy_memmove@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YAPAUCMD_CS_S_RegisterPersonal@@PAU1@00@Z
_TEXT	SEGMENT
__Count$ = -16						; size = 4
__Dest_ch$ = -12					; size = 4
__Last_ch$ = -8						; size = 4
__First_ch$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YAPAUCMD_CS_S_RegisterPersonal@@PAU1@00@Z PROC ; std::_Copy_memmove<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *>, COMDAT

; 2398 : 	{	// implement copy-like function as memmove

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2399 : 	const char * const _First_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_First));

  00009	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR __First_ch$[ebp], eax

; 2400 : 	const char * const _Last_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_Last));

  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00012	89 45 f8	 mov	 DWORD PTR __Last_ch$[ebp], eax

; 2401 : 	char * const _Dest_ch = const_cast<char *>(reinterpret_cast<volatile char *>(_Dest));

  00015	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00018	89 45 f4	 mov	 DWORD PTR __Dest_ch$[ebp], eax

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

  0001b	8b 45 f8	 mov	 eax, DWORD PTR __Last_ch$[ebp]
  0001e	2b 45 fc	 sub	 eax, DWORD PTR __First_ch$[ebp]
  00021	89 45 f0	 mov	 DWORD PTR __Count$[ebp], eax

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

  00024	8b 45 f0	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR __First_ch$[ebp]
  0002b	51		 push	 ecx
  0002c	8b 55 f4	 mov	 edx, DWORD PTR __Dest_ch$[ebp]
  0002f	52		 push	 edx
  00030	e8 00 00 00 00	 call	 _memmove
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

  00038	8b 45 f4	 mov	 eax, DWORD PTR __Dest_ch$[ebp]
  0003b	03 45 f0	 add	 eax, DWORD PTR __Count$[ebp]

; 2405 : 	}

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Copy_memmove@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YAPAUCMD_CS_S_RegisterPersonal@@PAU1@00@Z ENDP ; std::_Copy_memmove<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Seek_wrapped@UtagPersonalTableInfo@@@std@@YAXAAPAUtagPersonalTableInfo@@QAU1@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
__UIt$ = 12						; size = 4
??$_Seek_wrapped@UtagPersonalTableInfo@@@std@@YAXAAPAUtagPersonalTableInfo@@QAU1@@Z PROC ; std::_Seek_wrapped<tagPersonalTableInfo>, COMDAT

; 871  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 872  : 	_It = _UIt;

  00009	8b 45 08	 mov	 eax, DWORD PTR __It$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __UIt$[ebp]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx

; 873  : 	}

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Seek_wrapped@UtagPersonalTableInfo@@@std@@YAXAAPAUtagPersonalTableInfo@@QAU1@@Z ENDP ; std::_Seek_wrapped<tagPersonalTableInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@UtagPersonalTableInfo@@U1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAPAUtagPersonalTableInfo@@QAU1@00AAV?$allocator@UtagPersonalTableInfo@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_move_al_unchecked@UtagPersonalTableInfo@@U1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAPAUtagPersonalTableInfo@@QAU1@00AAV?$allocator@UtagPersonalTableInfo@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<tagPersonalTableInfo,tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >, COMDAT

; 243  : 	{	// move [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 244  : 	return (_Copy_memmove(_First, _Last, _Dest));

  00009	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00014	52		 push	 edx
  00015	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00@Z ; std::_Copy_memmove<tagPersonalTableInfo *,tagPersonalTableInfo *>
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 245  : 	}

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??$_Uninitialized_move_al_unchecked@UtagPersonalTableInfo@@U1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAPAUtagPersonalTableInfo@@QAU1@00AAV?$allocator@UtagPersonalTableInfo@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<tagPersonalTableInfo,tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Get_unwrapped_n@UtagPersonalTableInfo@@H$0A@@std@@YAPAUtagPersonalTableInfo@@QAU1@H@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Get_unwrapped_n@UtagPersonalTableInfo@@H$0A@@std@@YAPAUtagPersonalTableInfo@@QAU1@H@Z PROC ; std::_Get_unwrapped_n<tagPersonalTableInfo,int,0>, COMDAT

; 808  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 809  : 	return (_Src);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]

; 810  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Get_unwrapped_n@UtagPersonalTableInfo@@H$0A@@std@@YAPAUtagPersonalTableInfo@@QAU1@H@Z ENDP ; std::_Get_unwrapped_n<tagPersonalTableInfo,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Idl_distance1@PAUtagPersonalTableInfo@@PAU1@@std@@YAHABQAUtagPersonalTableInfo@@0Urandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Idl_distance1@PAUtagPersonalTableInfo@@PAU1@@std@@YAHABQAUtagPersonalTableInfo@@0Urandom_access_iterator_tag@0@@Z PROC ; std::_Idl_distance1<tagPersonalTableInfo *,tagPersonalTableInfo *>, COMDAT

; 967  : 	{	// _Idl_distance for random-access iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 968  : 	return (static_cast<_Iter_diff_t<_Checked>>(_Last - _First));

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]
  00011	2b 01		 sub	 eax, DWORD PTR [ecx]
  00013	99		 cdq
  00014	b9 d1 00 00 00	 mov	 ecx, 209		; 000000d1H
  00019	f7 f9		 idiv	 ecx

; 969  : 	}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Idl_distance1@PAUtagPersonalTableInfo@@PAU1@@std@@YAHABQAUtagPersonalTableInfo@@0Urandom_access_iterator_tag@0@@Z ENDP ; std::_Idl_distance1<tagPersonalTableInfo *,tagPersonalTableInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Idl_distance@PAUtagPersonalTableInfo@@PAU1@@std@@YA@ABQAUtagPersonalTableInfo@@0@Z
_TEXT	SEGMENT
$T1 = -65						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Idl_distance@PAUtagPersonalTableInfo@@PAU1@@std@@YA@ABQAUtagPersonalTableInfo@@0@Z PROC ; std::_Idl_distance<tagPersonalTableInfo *,tagPersonalTableInfo *>, COMDAT

; 974  : 	{	// tries to get the distance between _First and _Last if they are random-access iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 975  : 	return (_Idl_distance1<_Checked>(_First, _Last, _Iter_cat_t<_Iter>()));

  00009	0f b6 45 bf	 movzx	 eax, BYTE PTR $T1[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00011	51		 push	 ecx
  00012	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00015	52		 push	 edx
  00016	e8 00 00 00 00	 call	 ??$_Idl_distance1@PAUtagPersonalTableInfo@@PAU1@@std@@YAHABQAUtagPersonalTableInfo@@0Urandom_access_iterator_tag@0@@Z ; std::_Idl_distance1<tagPersonalTableInfo *,tagPersonalTableInfo *>
  0001b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 976  : 	}

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Idl_distance@PAUtagPersonalTableInfo@@PAU1@@std@@YA@ABQAUtagPersonalTableInfo@@0@Z ENDP ; std::_Idl_distance<tagPersonalTableInfo *,tagPersonalTableInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Get_unwrapped@UtagPersonalTableInfo@@@std@@YAPAUtagPersonalTableInfo@@QAU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Get_unwrapped@UtagPersonalTableInfo@@@std@@YAPAUtagPersonalTableInfo@@QAU1@@Z PROC ; std::_Get_unwrapped<tagPersonalTableInfo>, COMDAT

; 662  : 	{	// special case already-unwrapped pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 663  : 	return (_Ptr);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 664  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Get_unwrapped@UtagPersonalTableInfo@@@std@@YAPAUtagPersonalTableInfo@@QAU1@@Z ENDP ; std::_Get_unwrapped<tagPersonalTableInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Seek_wrapped@UCMD_CS_S_RegisterPersonal@@@std@@YAXAAPAUCMD_CS_S_RegisterPersonal@@QAU1@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
__UIt$ = 12						; size = 4
??$_Seek_wrapped@UCMD_CS_S_RegisterPersonal@@@std@@YAXAAPAUCMD_CS_S_RegisterPersonal@@QAU1@@Z PROC ; std::_Seek_wrapped<CMD_CS_S_RegisterPersonal>, COMDAT

; 871  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 872  : 	_It = _UIt;

  00009	8b 45 08	 mov	 eax, DWORD PTR __It$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __UIt$[ebp]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx

; 873  : 	}

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$_Seek_wrapped@UCMD_CS_S_RegisterPersonal@@@std@@YAXAAPAUCMD_CS_S_RegisterPersonal@@QAU1@@Z ENDP ; std::_Seek_wrapped<CMD_CS_S_RegisterPersonal>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@UCMD_CS_S_RegisterPersonal@@U1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@00AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_move_al_unchecked@UCMD_CS_S_RegisterPersonal@@U1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@00AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<CMD_CS_S_RegisterPersonal,CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >, COMDAT

; 243  : 	{	// move [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 244  : 	return (_Copy_memmove(_First, _Last, _Dest));

  00009	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00014	52		 push	 edx
  00015	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YAPAUCMD_CS_S_RegisterPersonal@@PAU1@00@Z ; std::_Copy_memmove<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *>
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 245  : 	}

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??$_Uninitialized_move_al_unchecked@UCMD_CS_S_RegisterPersonal@@U1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@00AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<CMD_CS_S_RegisterPersonal,CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Ptr_move_cat@UCMD_CS_S_RegisterPersonal@@U1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUCMD_CS_S_RegisterPersonal@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Ptr_move_cat@UCMD_CS_S_RegisterPersonal@@U1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUCMD_CS_S_RegisterPersonal@@0@Z PROC ; std::_Ptr_move_cat<CMD_CS_S_RegisterPersonal,CMD_CS_S_RegisterPersonal>, COMDAT

; 1086 : 	{	// return pointer move optimization category for pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1087 : 	return {};

  00009	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1088 : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Ptr_move_cat@UCMD_CS_S_RegisterPersonal@@U1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUCMD_CS_S_RegisterPersonal@@0@Z ENDP ; std::_Ptr_move_cat<CMD_CS_S_RegisterPersonal,CMD_CS_S_RegisterPersonal>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Get_unwrapped_n@UCMD_CS_S_RegisterPersonal@@H$0A@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@H@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Get_unwrapped_n@UCMD_CS_S_RegisterPersonal@@H$0A@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@H@Z PROC ; std::_Get_unwrapped_n<CMD_CS_S_RegisterPersonal,int,0>, COMDAT

; 808  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 809  : 	return (_Src);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]

; 810  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Get_unwrapped_n@UCMD_CS_S_RegisterPersonal@@H$0A@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@H@Z ENDP ; std::_Get_unwrapped_n<CMD_CS_S_RegisterPersonal,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Idl_distance1@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YAHABQAUCMD_CS_S_RegisterPersonal@@0Urandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Idl_distance1@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YAHABQAUCMD_CS_S_RegisterPersonal@@0Urandom_access_iterator_tag@0@@Z PROC ; std::_Idl_distance1<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *>, COMDAT

; 967  : 	{	// _Idl_distance for random-access iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 968  : 	return (static_cast<_Iter_diff_t<_Checked>>(_Last - _First));

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]
  00011	2b 01		 sub	 eax, DWORD PTR [ecx]
  00013	c1 f8 03	 sar	 eax, 3

; 969  : 	}

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Idl_distance1@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YAHABQAUCMD_CS_S_RegisterPersonal@@0Urandom_access_iterator_tag@0@@Z ENDP ; std::_Idl_distance1<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Idl_distance@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YA@ABQAUCMD_CS_S_RegisterPersonal@@0@Z
_TEXT	SEGMENT
$T1 = -65						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Idl_distance@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YA@ABQAUCMD_CS_S_RegisterPersonal@@0@Z PROC ; std::_Idl_distance<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *>, COMDAT

; 974  : 	{	// tries to get the distance between _First and _Last if they are random-access iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 975  : 	return (_Idl_distance1<_Checked>(_First, _Last, _Iter_cat_t<_Iter>()));

  00009	0f b6 45 bf	 movzx	 eax, BYTE PTR $T1[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00011	51		 push	 ecx
  00012	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00015	52		 push	 edx
  00016	e8 00 00 00 00	 call	 ??$_Idl_distance1@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YAHABQAUCMD_CS_S_RegisterPersonal@@0Urandom_access_iterator_tag@0@@Z ; std::_Idl_distance1<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *>
  0001b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 976  : 	}

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Idl_distance@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YA@ABQAUCMD_CS_S_RegisterPersonal@@0@Z ENDP ; std::_Idl_distance<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Get_unwrapped@UCMD_CS_S_RegisterPersonal@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Get_unwrapped@UCMD_CS_S_RegisterPersonal@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@@Z PROC ; std::_Get_unwrapped<CMD_CS_S_RegisterPersonal>, COMDAT

; 662  : 	{	// special case already-unwrapped pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 663  : 	return (_Ptr);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 664  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Get_unwrapped@UCMD_CS_S_RegisterPersonal@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@@Z ENDP ; std::_Get_unwrapped<CMD_CS_S_RegisterPersonal>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Copy_memmove@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00@Z
_TEXT	SEGMENT
__Count$ = -16						; size = 4
__Dest_ch$ = -12					; size = 4
__Last_ch$ = -8						; size = 4
__First_ch$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00@Z PROC ; std::_Copy_memmove<tagPersonalTableInfo *,tagPersonalTableInfo *>, COMDAT

; 2398 : 	{	// implement copy-like function as memmove

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2399 : 	const char * const _First_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_First));

  00009	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR __First_ch$[ebp], eax

; 2400 : 	const char * const _Last_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_Last));

  0000f	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00012	89 45 f8	 mov	 DWORD PTR __Last_ch$[ebp], eax

; 2401 : 	char * const _Dest_ch = const_cast<char *>(reinterpret_cast<volatile char *>(_Dest));

  00015	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00018	89 45 f4	 mov	 DWORD PTR __Dest_ch$[ebp], eax

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

  0001b	8b 45 f8	 mov	 eax, DWORD PTR __Last_ch$[ebp]
  0001e	2b 45 fc	 sub	 eax, DWORD PTR __First_ch$[ebp]
  00021	89 45 f0	 mov	 DWORD PTR __Count$[ebp], eax

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

  00024	8b 45 f0	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR __First_ch$[ebp]
  0002b	51		 push	 ecx
  0002c	8b 55 f4	 mov	 edx, DWORD PTR __Dest_ch$[ebp]
  0002f	52		 push	 edx
  00030	e8 00 00 00 00	 call	 _memmove
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

  00038	8b 45 f4	 mov	 eax, DWORD PTR __Dest_ch$[ebp]
  0003b	03 45 f0	 add	 eax, DWORD PTR __Count$[ebp]

; 2405 : 	}

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Copy_memmove@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00@Z ENDP ; std::_Copy_memmove<tagPersonalTableInfo *,tagPersonalTableInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Get_size_of_n@$0NB@@std@@YAII@Z
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__Max_possible$ = -4					; size = 4
__Count$ = 8						; size = 4
??$_Get_size_of_n@$0NB@@std@@YAII@Z PROC		; std::_Get_size_of_n<209>, COMDAT

; 23   : 	{	// gets the size of _Count copies of a type sized _Ty_size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 24   : 	constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00009	c7 45 fc c2 91
	39 01		 mov	 DWORD PTR __Max_possible$[ebp], 20550082 ; 013991c2H

; 25   : 	size_t _Result = _Count * _Ty_size;

  00010	69 45 08 d1 00
	00 00		 imul	 eax, DWORD PTR __Count$[ebp], 209
  00017	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 26   : 	if (_Max_possible < _Count)

  0001a	81 7d 08 c2 91
	39 01		 cmp	 DWORD PTR __Count$[ebp], 20550082 ; 013991c2H
  00021	76 07		 jbe	 SHORT $LN2@Get_size_o

; 27   : 		{	// multiply overflow, try allocating all of memory and assume the
; 28   : 			// allocation function will throw bad_alloc
; 29   : 		_Result = static_cast<size_t>(-1);

  00023	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR __Result$[ebp], -1
$LN2@Get_size_o:

; 30   : 		}
; 31   : 
; 32   : 	return (_Result);

  0002a	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 33   : 	}

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
??$_Get_size_of_n@$0NB@@std@@YAII@Z ENDP		; std::_Get_size_of_n<209>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUtagPersonalTableInfo@@PAU1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAPAUtagPersonalTableInfo@@QAU1@0PAU1@AAV?$allocator@UtagPersonalTableInfo@@@0@@Z
_TEXT	SEGMENT
$T1 = -78						; size = 1
$T2 = -77						; size = 1
__UDest$ = -12						; size = 4
__ULast$ = -8						; size = 4
__UFirst$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUtagPersonalTableInfo@@PAU1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAPAUtagPersonalTableInfo@@QAU1@0PAU1@AAV?$allocator@UtagPersonalTableInfo@@@0@@Z PROC ; std::_Uninitialized_move<tagPersonalTableInfo *,tagPersonalTableInfo *,std::allocator<tagPersonalTableInfo> >, COMDAT

; 251  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 252  : 		// note: only called internally from elsewhere in the STL
; 253  : 	const auto _UFirst = _Get_unwrapped(_First);

  00009	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$_Get_unwrapped@UtagPersonalTableInfo@@@std@@YAPAUtagPersonalTableInfo@@QAU1@@Z ; std::_Get_unwrapped<tagPersonalTableInfo>
  00012	83 c4 04	 add	 esp, 4
  00015	89 45 fc	 mov	 DWORD PTR __UFirst$[ebp], eax

; 254  : 	const auto _ULast = _Get_unwrapped(_Last);

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$_Get_unwrapped@UtagPersonalTableInfo@@@std@@YAPAUtagPersonalTableInfo@@QAU1@@Z ; std::_Get_unwrapped<tagPersonalTableInfo>
  00021	83 c4 04	 add	 esp, 4
  00024	89 45 f8	 mov	 DWORD PTR __ULast$[ebp], eax

; 255  : 	const auto _UDest = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));

  00027	8d 45 f8	 lea	 eax, DWORD PTR __ULast$[ebp]
  0002a	50		 push	 eax
  0002b	8d 4d fc	 lea	 ecx, DWORD PTR __UFirst$[ebp]
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ??$_Idl_distance@PAUtagPersonalTableInfo@@PAU1@@std@@YA@ABQAUtagPersonalTableInfo@@0@Z ; std::_Idl_distance<tagPersonalTableInfo *,tagPersonalTableInfo *>
  00034	83 c4 08	 add	 esp, 8
  00037	50		 push	 eax
  00038	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 ??$_Get_unwrapped_n@UtagPersonalTableInfo@@H$0A@@std@@YAPAUtagPersonalTableInfo@@QAU1@H@Z ; std::_Get_unwrapped_n<tagPersonalTableInfo,int,0>
  00041	83 c4 08	 add	 esp, 8
  00044	89 45 f4	 mov	 DWORD PTR __UDest$[ebp], eax

; 256  : 	_Seek_wrapped(_Dest,

  00047	0f b6 45 b3	 movzx	 eax, BYTE PTR $T2[ebp]
  0004b	50		 push	 eax
  0004c	8d 4d f4	 lea	 ecx, DWORD PTR __UDest$[ebp]
  0004f	51		 push	 ecx
  00050	8d 55 fc	 lea	 edx, DWORD PTR __UFirst$[ebp]
  00053	52		 push	 edx
  00054	8d 45 b2	 lea	 eax, DWORD PTR $T1[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ??$_Ptr_move_cat@UtagPersonalTableInfo@@U1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUtagPersonalTableInfo@@0@Z ; std::_Ptr_move_cat<tagPersonalTableInfo,tagPersonalTableInfo>
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	8a 08		 mov	 cl, BYTE PTR [eax]
  00062	0f b6 d1	 movzx	 edx, cl
  00065	52		 push	 edx
  00066	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00069	50		 push	 eax
  0006a	8b 4d f4	 mov	 ecx, DWORD PTR __UDest$[ebp]
  0006d	51		 push	 ecx
  0006e	8b 55 f8	 mov	 edx, DWORD PTR __ULast$[ebp]
  00071	52		 push	 edx
  00072	8b 45 fc	 mov	 eax, DWORD PTR __UFirst$[ebp]
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked@UtagPersonalTableInfo@@U1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAPAUtagPersonalTableInfo@@QAU1@00AAV?$allocator@UtagPersonalTableInfo@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_move_al_unchecked<tagPersonalTableInfo,tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >
  0007b	83 c4 18	 add	 esp, 24			; 00000018H
  0007e	50		 push	 eax
  0007f	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 ??$_Seek_wrapped@UtagPersonalTableInfo@@@std@@YAXAAPAUtagPersonalTableInfo@@QAU1@@Z ; std::_Seek_wrapped<tagPersonalTableInfo>
  00088	83 c4 08	 add	 esp, 8

; 257  : 		_Uninitialized_move_al_unchecked(_UFirst, _ULast, _UDest, _Al,
; 258  : 			_Ptr_move_cat(_UFirst, _UDest),
; 259  : 			_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_UDest)), decltype(_STD move(*_UFirst))>()));
; 260  : 	return (_Dest);

  0008b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 261  : 	}

  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	5b		 pop	 ebx
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
??$_Uninitialized_move@PAUtagPersonalTableInfo@@PAU1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAPAUtagPersonalTableInfo@@QAU1@0PAU1@AAV?$allocator@UtagPersonalTableInfo@@@0@@Z ENDP ; std::_Uninitialized_move<tagPersonalTableInfo *,tagPersonalTableInfo *,std::allocator<tagPersonalTableInfo> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUCMD_CS_S_RegisterPersonal@@PAU1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@0PAU1@AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@@Z
_TEXT	SEGMENT
$T1 = -78						; size = 1
$T2 = -77						; size = 1
__UDest$ = -12						; size = 4
__ULast$ = -8						; size = 4
__UFirst$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUCMD_CS_S_RegisterPersonal@@PAU1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@0PAU1@AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@@Z PROC ; std::_Uninitialized_move<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *,std::allocator<CMD_CS_S_RegisterPersonal> >, COMDAT

; 251  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 252  : 		// note: only called internally from elsewhere in the STL
; 253  : 	const auto _UFirst = _Get_unwrapped(_First);

  00009	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$_Get_unwrapped@UCMD_CS_S_RegisterPersonal@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@@Z ; std::_Get_unwrapped<CMD_CS_S_RegisterPersonal>
  00012	83 c4 04	 add	 esp, 4
  00015	89 45 fc	 mov	 DWORD PTR __UFirst$[ebp], eax

; 254  : 	const auto _ULast = _Get_unwrapped(_Last);

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$_Get_unwrapped@UCMD_CS_S_RegisterPersonal@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@@Z ; std::_Get_unwrapped<CMD_CS_S_RegisterPersonal>
  00021	83 c4 04	 add	 esp, 4
  00024	89 45 f8	 mov	 DWORD PTR __ULast$[ebp], eax

; 255  : 	const auto _UDest = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));

  00027	8d 45 f8	 lea	 eax, DWORD PTR __ULast$[ebp]
  0002a	50		 push	 eax
  0002b	8d 4d fc	 lea	 ecx, DWORD PTR __UFirst$[ebp]
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ??$_Idl_distance@PAUCMD_CS_S_RegisterPersonal@@PAU1@@std@@YA@ABQAUCMD_CS_S_RegisterPersonal@@0@Z ; std::_Idl_distance<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *>
  00034	83 c4 08	 add	 esp, 8
  00037	50		 push	 eax
  00038	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 ??$_Get_unwrapped_n@UCMD_CS_S_RegisterPersonal@@H$0A@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@H@Z ; std::_Get_unwrapped_n<CMD_CS_S_RegisterPersonal,int,0>
  00041	83 c4 08	 add	 esp, 8
  00044	89 45 f4	 mov	 DWORD PTR __UDest$[ebp], eax

; 256  : 	_Seek_wrapped(_Dest,

  00047	0f b6 45 b3	 movzx	 eax, BYTE PTR $T2[ebp]
  0004b	50		 push	 eax
  0004c	8d 4d f4	 lea	 ecx, DWORD PTR __UDest$[ebp]
  0004f	51		 push	 ecx
  00050	8d 55 fc	 lea	 edx, DWORD PTR __UFirst$[ebp]
  00053	52		 push	 edx
  00054	8d 45 b2	 lea	 eax, DWORD PTR $T1[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ??$_Ptr_move_cat@UCMD_CS_S_RegisterPersonal@@U1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUCMD_CS_S_RegisterPersonal@@0@Z ; std::_Ptr_move_cat<CMD_CS_S_RegisterPersonal,CMD_CS_S_RegisterPersonal>
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	8a 08		 mov	 cl, BYTE PTR [eax]
  00062	0f b6 d1	 movzx	 edx, cl
  00065	52		 push	 edx
  00066	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00069	50		 push	 eax
  0006a	8b 4d f4	 mov	 ecx, DWORD PTR __UDest$[ebp]
  0006d	51		 push	 ecx
  0006e	8b 55 f8	 mov	 edx, DWORD PTR __ULast$[ebp]
  00071	52		 push	 edx
  00072	8b 45 fc	 mov	 eax, DWORD PTR __UFirst$[ebp]
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked@UCMD_CS_S_RegisterPersonal@@U1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@00AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_move_al_unchecked<CMD_CS_S_RegisterPersonal,CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >
  0007b	83 c4 18	 add	 esp, 24			; 00000018H
  0007e	50		 push	 eax
  0007f	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 ??$_Seek_wrapped@UCMD_CS_S_RegisterPersonal@@@std@@YAXAAPAUCMD_CS_S_RegisterPersonal@@QAU1@@Z ; std::_Seek_wrapped<CMD_CS_S_RegisterPersonal>
  00088	83 c4 08	 add	 esp, 8

; 257  : 		_Uninitialized_move_al_unchecked(_UFirst, _ULast, _UDest, _Al,
; 258  : 			_Ptr_move_cat(_UFirst, _UDest),
; 259  : 			_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_UDest)), decltype(_STD move(*_UFirst))>()));
; 260  : 	return (_Dest);

  0008b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 261  : 	}

  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	5b		 pop	 ebx
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
??$_Uninitialized_move@PAUCMD_CS_S_RegisterPersonal@@PAU1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@0PAU1@AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@@Z ENDP ; std::_Uninitialized_move<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *,std::allocator<CMD_CS_S_RegisterPersonal> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAXPAUtagPersonalTableInfo@@0AAV?$allocator@UtagPersonalTableInfo@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAXPAUtagPersonalTableInfo@@0AAV?$allocator@UtagPersonalTableInfo@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<tagPersonalTableInfo> >, COMDAT

; 1145 : 	{	// destroy [_First, _Last), trivially destructible and default destroy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1146 : 		// nothing to do
; 1147 : 	}

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Destroy_range1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAXPAUtagPersonalTableInfo@@0AAV?$allocator@UtagPersonalTableInfo@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<tagPersonalTableInfo> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAXPAUCMD_CS_S_RegisterPersonal@@0AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAXPAUCMD_CS_S_RegisterPersonal@@0AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<CMD_CS_S_RegisterPersonal> >, COMDAT

; 1145 : 	{	// destroy [_First, _Last), trivially destructible and default destroy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1146 : 		// nothing to do
; 1147 : 	}

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Destroy_range1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAXPAUCMD_CS_S_RegisterPersonal@@0AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<CMD_CS_S_RegisterPersonal> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Move_unchecked1@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00U_Trivially_copyable_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move_unchecked1@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00U_Trivially_copyable_ptr_iterator_tag@0@@Z PROC ; std::_Move_unchecked1<tagPersonalTableInfo *,tagPersonalTableInfo *>, COMDAT

; 2726 : 	{	// move [_First, _Last) to [_Dest, ...), memmove optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2727 : 	return (_Copy_memmove(_First, _Last, _Dest));

  00009	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00014	52		 push	 edx
  00015	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00@Z ; std::_Copy_memmove<tagPersonalTableInfo *,tagPersonalTableInfo *>
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2728 : 	}

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??$_Move_unchecked1@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00U_Trivially_copyable_ptr_iterator_tag@0@@Z ENDP ; std::_Move_unchecked1<tagPersonalTableInfo *,tagPersonalTableInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Ptr_move_cat@UtagPersonalTableInfo@@U1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUtagPersonalTableInfo@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Ptr_move_cat@UtagPersonalTableInfo@@U1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUtagPersonalTableInfo@@0@Z PROC ; std::_Ptr_move_cat<tagPersonalTableInfo,tagPersonalTableInfo>, COMDAT

; 1086 : 	{	// return pointer move optimization category for pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1087 : 	return {};

  00009	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1088 : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Ptr_move_cat@UtagPersonalTableInfo@@U1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUtagPersonalTableInfo@@0@Z ENDP ; std::_Ptr_move_cat<tagPersonalTableInfo,tagPersonalTableInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@PAUtagPersonalTableInfo@@@@YGXAAVCDumpContext@@PBQAUtagPersonalTableInfo@@H@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@PAUtagPersonalTableInfo@@@@YGXAAVCDumpContext@@PBQAUtagPersonalTableInfo@@H@Z PROC ; DumpElements<tagPersonalTableInfo *>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@PAUtagPersonalTableInfo@@@@YGXAAVCDumpContext@@PBQAUtagPersonalTableInfo@@H@Z ENDP ; DumpElements<tagPersonalTableInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAUtagPersonalTableInfo@@@@YGXAAVCArchive@@PAPAUtagPersonalTableInfo@@H@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAUtagPersonalTableInfo@@@@YGXAAVCArchive@@PAPAUtagPersonalTableInfo@@H@Z PROC ; SerializeElements<tagPersonalTableInfo *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@PAUtagPersonalTableInfo@@@@YGXAAVCArchive@@PAPAUtagPersonalTableInfo@@H@Z ENDP ; SerializeElements<tagPersonalTableInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
??0CAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@K@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0CPair@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAE@K@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::CPair::CPair
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??0CAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@K@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 4
??0CPair@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAE@K@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _keyval$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??0CPair@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAE@K@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@PAVCGlobalChatItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalChatItem@@H@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@PAVCGlobalChatItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalChatItem@@H@Z PROC ; DumpElements<CGlobalChatItem *>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@PAVCGlobalChatItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalChatItem@@H@Z ENDP ; DumpElements<CGlobalChatItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCGlobalChatItem@@@@YGXAAVCArchive@@PAPAVCGlobalChatItem@@H@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCGlobalChatItem@@@@YGXAAVCArchive@@PAPAVCGlobalChatItem@@H@Z PROC ; SerializeElements<CGlobalChatItem *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@PAVCGlobalChatItem@@@@YGXAAVCArchive@@PAPAVCGlobalChatItem@@H@Z ENDP ; SerializeElements<CGlobalChatItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??0CAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@G@Z PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CPair@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAE@G@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::CPair::CPair
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@G@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 2
??0CPair@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAE@G@Z PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 4d 08	 mov	 cx, WORD PTR _keyval$[ebp]
  00013	66 89 08	 mov	 WORD PTR [eax], cx
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0CPair@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAE@G@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@PAVCGlobalServerItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalServerItem@@H@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@PAVCGlobalServerItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalServerItem@@H@Z PROC ; DumpElements<CGlobalServerItem *>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@PAVCGlobalServerItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalServerItem@@H@Z ENDP ; DumpElements<CGlobalServerItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCGlobalServerItem@@@@YGXAAVCArchive@@PAPAVCGlobalServerItem@@H@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCGlobalServerItem@@@@YGXAAVCArchive@@PAPAVCGlobalServerItem@@H@Z PROC ; SerializeElements<CGlobalServerItem *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@PAVCGlobalServerItem@@@@YGXAAVCArchive@@PAPAVCGlobalServerItem@@H@Z ENDP ; SerializeElements<CGlobalServerItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??0CAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@G@Z PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CPair@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAE@G@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::CPair::CPair
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@G@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 2
??0CPair@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAE@G@Z PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 4d 08	 mov	 cx, WORD PTR _keyval$[ebp]
  00013	66 89 08	 mov	 WORD PTR [eax], cx
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0CPair@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAE@G@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@PAVCGlobalPlazaItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalPlazaItem@@H@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@PAVCGlobalPlazaItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalPlazaItem@@H@Z PROC ; DumpElements<CGlobalPlazaItem *>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@PAVCGlobalPlazaItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalPlazaItem@@H@Z ENDP ; DumpElements<CGlobalPlazaItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z PROC	; DumpElements<unsigned short>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 29		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	d1 e0		 shl	 eax, 1
  00061	50		 push	 eax
  00062	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006b	85 c0		 test	 eax, eax
  0006d	75 14		 jne	 SHORT $LN6@DumpElemen
  0006f	68 8c 00 00 00	 push	 140			; 0000008cH
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00079	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007e	85 c0		 test	 eax, eax
  00080	74 01		 je	 SHORT $LN6@DumpElemen
  00082	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z ENDP	; DumpElements<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCGlobalPlazaItem@@@@YGXAAVCArchive@@PAPAVCGlobalPlazaItem@@H@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCGlobalPlazaItem@@@@YGXAAVCArchive@@PAPAVCGlobalPlazaItem@@H@Z PROC ; SerializeElements<CGlobalPlazaItem *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@PAVCGlobalPlazaItem@@@@YGXAAVCArchive@@PAPAVCGlobalPlazaItem@@H@Z ENDP ; SerializeElements<CGlobalPlazaItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z PROC	; SerializeElements<unsigned short>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 26		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	d1 e0		 shl	 eax, 1
  0005e	50		 push	 eax
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00068	85 c0		 test	 eax, eax
  0006a	75 11		 jne	 SHORT $LN16@SerializeE
  0006c	6a 46		 push	 70			; 00000046H
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00073	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00078	85 c0		 test	 eax, eax
  0007a	74 01		 je	 SHORT $LN16@SerializeE
  0007c	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007d	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00080	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00085	85 c0		 test	 eax, eax
  00087	74 5b		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  00089	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008c	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  0008f	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00092	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00095	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  00099	76 47		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009b	81 7d f4 ff ff
	ff 3f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 1073741823 ; 3fffffffH
  000a2	73 08		 jae	 SHORT $LN17@SerializeE
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a7	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000aa	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ac	c7 45 a0 ff ff
	ff 3f		 mov	 DWORD PTR tv92[ebp], 1073741823 ; 3fffffffH
$LN18@SerializeE:
  000b3	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b6	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000b9	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bc	d1 e0		 shl	 eax, 1
  000be	50		 push	 eax
  000bf	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c2	51		 push	 ecx
  000c3	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c6	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cb	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000ce	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d1	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d4	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d7	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000da	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  000dd	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e0	eb b3		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e2	eb 59		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e4	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e7	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ea	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ed	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f0	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f4	76 47		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f6	81 7d e8 ff ff
	ff 3f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 1073741823 ; 3fffffffH
  000fd	73 08		 jae	 SHORT $LN19@SerializeE
  000ff	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00102	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00105	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00107	c7 45 a0 ff ff
	ff 3f		 mov	 DWORD PTR tv134[ebp], 1073741823 ; 3fffffffH
$LN20@SerializeE:
  0010e	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00111	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00114	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00117	d1 e0		 shl	 eax, 1
  00119	50		 push	 eax
  0011a	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  0011d	51		 push	 ecx
  0011e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00121	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00126	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00129	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012c	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  0012f	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00132	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00135	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00138	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013b	eb b3		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  0013d	5f		 pop	 edi
  0013e	5e		 pop	 esi
  0013f	5b		 pop	 ebx
  00140	8b e5		 mov	 esp, ebp
  00142	5d		 pop	 ebp
  00143	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ENDP	; SerializeElements<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$CompareElements@GG@@YGHPBG0@Z
_TEXT	SEGMENT
tv130 = -72						; size = 4
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_pElement1$ = 8						; size = 4
_pElement2$ = 12					; size = 4
??$CompareElements@GG@@YGHPBG0@Z PROC			; CompareElements<unsigned short,unsigned short>, COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@CompareEle:

; 152  : 	ENSURE(pElement1 != NULL && pElement2 != NULL);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pElement1$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@CompareEle
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElement2$[ebp], 0
  00013	74 09		 je	 SHORT $LN7@CompareEle
  00015	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001c	eb 07		 jmp	 SHORT $LN8@CompareEle
$LN7@CompareEle:
  0001e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN8@CompareEle:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@CompareEle
  00031	68 98 00 00 00	 push	 152			; 00000098H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@CompareEle
  00044	cc		 int	 3
$LN9@CompareEle:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@CompareEle
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@CompareEle:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@CompareEle

; 153  : 	ASSERT(AfxIsValidAddress(pElement1, sizeof(TYPE), FALSE));

  00054	6a 00		 push	 0
  00056	6a 02		 push	 2
  00058	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00061	85 c0		 test	 eax, eax
  00063	75 14		 jne	 SHORT $LN10@CompareEle
  00065	68 99 00 00 00	 push	 153			; 00000099H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00074	85 c0		 test	 eax, eax
  00076	74 01		 je	 SHORT $LN10@CompareEle
  00078	cc		 int	 3
$LN10@CompareEle:

; 154  : 	ASSERT(AfxIsValidAddress(pElement2, sizeof(ARG_TYPE), FALSE));

  00079	6a 00		 push	 0
  0007b	6a 02		 push	 2
  0007d	8b 45 0c	 mov	 eax, DWORD PTR _pElement2$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00086	85 c0		 test	 eax, eax
  00088	75 14		 jne	 SHORT $LN11@CompareEle
  0008a	68 9a 00 00 00	 push	 154			; 0000009aH
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00094	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00099	85 c0		 test	 eax, eax
  0009b	74 01		 je	 SHORT $LN11@CompareEle
  0009d	cc		 int	 3
$LN11@CompareEle:

; 155  : 
; 156  : 	return *pElement1 == *pElement2;

  0009e	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  000a1	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a4	8b 55 0c	 mov	 edx, DWORD PTR _pElement2$[ebp]
  000a7	0f b7 02	 movzx	 eax, WORD PTR [edx]
  000aa	3b c8		 cmp	 ecx, eax
  000ac	75 09		 jne	 SHORT $LN12@CompareEle
  000ae	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv130[ebp], 1
  000b5	eb 07		 jmp	 SHORT $LN13@CompareEle
$LN12@CompareEle:
  000b7	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN13@CompareEle:
  000be	8b 45 b8	 mov	 eax, DWORD PTR tv130[ebp]
$LN6@CompareEle:

; 157  : }

  000c1	5f		 pop	 edi
  000c2	5e		 pop	 esi
  000c3	5b		 pop	 ebx
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c2 08 00	 ret	 8
??$CompareElements@GG@@YGHPBG0@Z ENDP			; CompareElements<unsigned short,unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$HashKey@G@@YGIG@Z
_TEXT	SEGMENT
$T1 = -80						; size = 8
_HashVal$ = -8						; size = 8
_key$ = 8						; size = 2
??$HashKey@G@@YGIG@Z PROC				; HashKey<unsigned short>, COMDAT

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 162  : 	// (algorithm copied from STL hash in xfunctional)
; 163  : #pragma warning(suppress: 4302) // 'type cast' : truncation
; 164  : #pragma warning(suppress: 4311) // pointer truncation
; 165  : 	ldiv_t HashVal = ldiv((long)(ARG_KEY)key, 127773);

  00009	68 1d f3 01 00	 push	 127773			; 0001f31dH
  0000e	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00012	50		 push	 eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ldiv
  00019	83 c4 08	 add	 esp, 8
  0001c	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0001f	89 55 b4	 mov	 DWORD PTR $T1[ebp+4], edx
  00022	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  00025	89 4d f8	 mov	 DWORD PTR _HashVal$[ebp], ecx
  00028	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp+4]
  0002b	89 55 fc	 mov	 DWORD PTR _HashVal$[ebp+4], edx

; 166  : 	HashVal.rem = 16807 * HashVal.rem - 2836 * HashVal.quot;

  0002e	69 45 fc a7 41
	00 00		 imul	 eax, DWORD PTR _HashVal$[ebp+4], 16807
  00035	69 4d f8 14 0b
	00 00		 imul	 ecx, DWORD PTR _HashVal$[ebp], 2836
  0003c	2b c1		 sub	 eax, ecx
  0003e	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax

; 167  : 	if (HashVal.rem < 0)

  00041	79 0b		 jns	 SHORT $LN2@HashKey

; 168  : 		HashVal.rem += 2147483647;

  00043	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]
  00046	05 ff ff ff 7f	 add	 eax, 2147483647		; 7fffffffH
  0004b	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax
$LN2@HashKey:

; 169  : 	return ((UINT)HashVal.rem);

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]

; 170  : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
??$HashKey@G@@YGIG@Z ENDP				; HashKey<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??0CAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@G@Z PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??0CPair@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAE@G@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::CPair::CPair
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@G@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAE@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 2
??0CPair@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAE@G@Z PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 4d 08	 mov	 cx, WORD PTR _keyval$[ebp]
  00013	66 89 08	 mov	 WORD PTR [eax], cx
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0CPair@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAE@G@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@PAVCGlobalUserItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalUserItem@@H@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@PAVCGlobalUserItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalUserItem@@H@Z PROC ; DumpElements<CGlobalUserItem *>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@PAVCGlobalUserItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalUserItem@@H@Z ENDP ; DumpElements<CGlobalUserItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z
_TEXT	SEGMENT
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_dc$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z PROC	; DumpElements<unsigned long>, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@DumpElemen:

; 138  : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@DumpElemen
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN7@DumpElemen
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN8@DumpElemen
$LN7@DumpElemen:
  0001e	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN8@DumpElemen:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@DumpElemen
  00031	68 8a 00 00 00	 push	 138			; 0000008aH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@DumpElemen
  00044	cc		 int	 3
$LN9@DumpElemen:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@DumpElemen
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@DumpElemen:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@DumpElemen

; 139  : 	ASSERT(nCount == 0 ||

  00054	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00058	74 2a		 je	 SHORT $LN6@DumpElemen
  0005a	6a 00		 push	 0
  0005c	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005f	c1 e0 02	 shl	 eax, 2
  00062	50		 push	 eax
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  0006c	85 c0		 test	 eax, eax
  0006e	75 14		 jne	 SHORT $LN6@DumpElemen
  00070	68 8c 00 00 00	 push	 140			; 0000008cH
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0007a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007f	85 c0		 test	 eax, eax
  00081	74 01		 je	 SHORT $LN6@DumpElemen
  00083	cc		 int	 3
$LN6@DumpElemen:

; 140  : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE), FALSE));
; 141  : 	(dc); // not used
; 142  : 	(pElements);  // not used
; 143  : 	(nCount); // not used
; 144  : 
; 145  : 	// default does nothing
; 146  : }

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z ENDP	; DumpElements<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@PAVCGlobalUserItem@@@@YGXAAVCArchive@@PAPAVCGlobalUserItem@@H@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@PAVCGlobalUserItem@@@@YGXAAVCArchive@@PAPAVCGlobalUserItem@@H@Z PROC ; SerializeElements<CGlobalUserItem *>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@PAVCGlobalUserItem@@@@YGXAAVCArchive@@PAPAVCGlobalUserItem@@H@Z ENDP ; SerializeElements<CGlobalUserItem *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z
_TEXT	SEGMENT
tv134 = -96						; size = 4
tv92 = -96						; size = 4
tv66 = -96						; size = 4
_nElementsToRead$1 = -28				; size = 4
_nElementsLeft$2 = -24					; size = 4
_pData$3 = -20						; size = 4
_nElementsToWrite$4 = -16				; size = 4
_nElementsLeft$5 = -12					; size = 4
_pData$6 = -8						; size = 4
___afx_condVal$7 = -4					; size = 4
_ar$ = 8						; size = 4
_pElements$ = 12					; size = 4
_nCount$ = 16						; size = 4
??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z PROC	; SerializeElements<unsigned long>, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@SerializeE:

; 68   : 	ENSURE(nCount == 0 || pElements != NULL);

  00009	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN13@SerializeE
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElements$[ebp], 0
  00013	75 09		 jne	 SHORT $LN13@SerializeE
  00015	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN14@SerializeE
$LN13@SerializeE:
  0001e	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN14@SerializeE:
  00025	8b 45 a0	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$7[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  0002f	75 11		 jne	 SHORT $LN15@SerializeE
  00031	6a 44		 push	 68			; 00000044H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN15@SerializeE
  00041	cc		 int	 3
$LN15@SerializeE:
  00042	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$7[ebp], 0
  00046	75 05		 jne	 SHORT $LN2@SerializeE
  00048	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SerializeE:
  0004d	33 c0		 xor	 eax, eax
  0004f	75 b8		 jne	 SHORT $LN4@SerializeE

; 69   : 	ASSERT(nCount == 0 ||

  00051	83 7d 10 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  00055	74 27		 je	 SHORT $LN16@SerializeE
  00057	6a 01		 push	 1
  00059	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0005c	c1 e0 02	 shl	 eax, 2
  0005f	50		 push	 eax
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _pElements$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00069	85 c0		 test	 eax, eax
  0006b	75 11		 jne	 SHORT $LN16@SerializeE
  0006d	6a 46		 push	 70			; 00000046H
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00074	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00079	85 c0		 test	 eax, eax
  0007b	74 01		 je	 SHORT $LN16@SerializeE
  0007d	cc		 int	 3
$LN16@SerializeE:

; 70   : 		AfxIsValidAddress(pElements, (size_t)nCount * sizeof(TYPE)));
; 71   : 
; 72   : 	// default is bit-wise read/write
; 73   : 	if (ar.IsStoring())

  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00081	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00086	85 c0		 test	 eax, eax
  00088	74 5c		 je	 SHORT $LN10@SerializeE

; 74   : 	{
; 75   : 		TYPE* pData;
; 76   : 		UINT_PTR nElementsLeft;
; 77   : 
; 78   : 		nElementsLeft = nCount;

  0008a	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  0008d	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 79   : 		pData = pElements;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  00093	89 45 f8	 mov	 DWORD PTR _pData$6[ebp], eax
$LN5@SerializeE:

; 80   : 		while( nElementsLeft > 0 )

  00096	83 7d f4 00	 cmp	 DWORD PTR _nElementsLeft$5[ebp], 0
  0009a	76 48		 jbe	 SHORT $LN6@SerializeE

; 81   : 		{
; 82   : 			UINT nElementsToWrite;
; 83   : 
; 84   : 			nElementsToWrite = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  0009c	81 7d f4 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$5[ebp], 536870911 ; 1fffffffH
  000a3	73 08		 jae	 SHORT $LN17@SerializeE
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000a8	89 45 a0	 mov	 DWORD PTR tv92[ebp], eax
  000ab	eb 07		 jmp	 SHORT $LN18@SerializeE
$LN17@SerializeE:
  000ad	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv92[ebp], 536870911 ; 1fffffffH
$LN18@SerializeE:
  000b4	8b 4d a0	 mov	 ecx, DWORD PTR tv92[ebp]
  000b7	89 4d f0	 mov	 DWORD PTR _nElementsToWrite$4[ebp], ecx

; 85   : 			ar.Write(pData, nElementsToWrite*sizeof(TYPE));

  000ba	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000bd	c1 e0 02	 shl	 eax, 2
  000c0	50		 push	 eax
  000c1	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000c4	51		 push	 ecx
  000c5	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000c8	e8 00 00 00 00	 call	 ?Write@CArchive@@QAEXPBXI@Z ; CArchive::Write

; 86   : 			nElementsLeft -= nElementsToWrite;

  000cd	8b 45 f4	 mov	 eax, DWORD PTR _nElementsLeft$5[ebp]
  000d0	2b 45 f0	 sub	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d3	89 45 f4	 mov	 DWORD PTR _nElementsLeft$5[ebp], eax

; 87   : 			pData += nElementsToWrite;

  000d6	8b 45 f0	 mov	 eax, DWORD PTR _nElementsToWrite$4[ebp]
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _pData$6[ebp]
  000dc	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000df	89 55 f8	 mov	 DWORD PTR _pData$6[ebp], edx

; 88   : 		}

  000e2	eb b2		 jmp	 SHORT $LN5@SerializeE
$LN6@SerializeE:

; 89   : 	}
; 90   : 	else

  000e4	eb 5a		 jmp	 SHORT $LN12@SerializeE
$LN10@SerializeE:

; 91   : 	{
; 92   : 		TYPE* pData;
; 93   : 		UINT_PTR nElementsLeft;
; 94   : 
; 95   : 		nElementsLeft = nCount;

  000e6	8b 45 10	 mov	 eax, DWORD PTR _nCount$[ebp]
  000e9	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 96   : 		pData = pElements;

  000ec	8b 45 0c	 mov	 eax, DWORD PTR _pElements$[ebp]
  000ef	89 45 ec	 mov	 DWORD PTR _pData$3[ebp], eax
$LN7@SerializeE:

; 97   : 		while( nElementsLeft > 0 )

  000f2	83 7d e8 00	 cmp	 DWORD PTR _nElementsLeft$2[ebp], 0
  000f6	76 48		 jbe	 SHORT $LN12@SerializeE

; 98   : 		{
; 99   : 			UINT nElementsToRead;
; 100  : 
; 101  : 			nElementsToRead = UINT(__min(nElementsLeft, INT_MAX/sizeof(TYPE)));

  000f8	81 7d e8 ff ff
	ff 1f		 cmp	 DWORD PTR _nElementsLeft$2[ebp], 536870911 ; 1fffffffH
  000ff	73 08		 jae	 SHORT $LN19@SerializeE
  00101	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  00104	89 45 a0	 mov	 DWORD PTR tv134[ebp], eax
  00107	eb 07		 jmp	 SHORT $LN20@SerializeE
$LN19@SerializeE:
  00109	c7 45 a0 ff ff
	ff 1f		 mov	 DWORD PTR tv134[ebp], 536870911 ; 1fffffffH
$LN20@SerializeE:
  00110	8b 4d a0	 mov	 ecx, DWORD PTR tv134[ebp]
  00113	89 4d e4	 mov	 DWORD PTR _nElementsToRead$1[ebp], ecx

; 102  : 			ar.EnsureRead(pData, nElementsToRead*sizeof(TYPE));

  00116	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00119	c1 e0 02	 shl	 eax, 2
  0011c	50		 push	 eax
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00120	51		 push	 ecx
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00124	e8 00 00 00 00	 call	 ?EnsureRead@CArchive@@QAEXPAXI@Z ; CArchive::EnsureRead

; 103  : 			nElementsLeft -= nElementsToRead;

  00129	8b 45 e8	 mov	 eax, DWORD PTR _nElementsLeft$2[ebp]
  0012c	2b 45 e4	 sub	 eax, DWORD PTR _nElementsToRead$1[ebp]
  0012f	89 45 e8	 mov	 DWORD PTR _nElementsLeft$2[ebp], eax

; 104  : 			pData += nElementsToRead;

  00132	8b 45 e4	 mov	 eax, DWORD PTR _nElementsToRead$1[ebp]
  00135	8b 4d ec	 mov	 ecx, DWORD PTR _pData$3[ebp]
  00138	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0013b	89 55 ec	 mov	 DWORD PTR _pData$3[ebp], edx

; 105  : 		}

  0013e	eb b2		 jmp	 SHORT $LN7@SerializeE
$LN12@SerializeE:

; 106  : 	}
; 107  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b e5		 mov	 esp, ebp
  00145	5d		 pop	 ebp
  00146	c2 0c 00	 ret	 12			; 0000000cH
??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ENDP	; SerializeElements<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$CompareElements@KK@@YGHPBK0@Z
_TEXT	SEGMENT
tv128 = -72						; size = 4
tv66 = -72						; size = 4
___afx_condVal$1 = -4					; size = 4
_pElement1$ = 8						; size = 4
_pElement2$ = 12					; size = 4
??$CompareElements@KK@@YGHPBK0@Z PROC			; CompareElements<unsigned long,unsigned long>, COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN4@CompareEle:

; 152  : 	ENSURE(pElement1 != NULL && pElement2 != NULL);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pElement1$[ebp], 0
  0000d	74 0f		 je	 SHORT $LN7@CompareEle
  0000f	83 7d 0c 00	 cmp	 DWORD PTR _pElement2$[ebp], 0
  00013	74 09		 je	 SHORT $LN7@CompareEle
  00015	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
  0001c	eb 07		 jmp	 SHORT $LN8@CompareEle
$LN7@CompareEle:
  0001e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
$LN8@CompareEle:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	89 45 fc	 mov	 DWORD PTR ___afx_condVal$1[ebp], eax
  0002b	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0002f	75 14		 jne	 SHORT $LN9@CompareEle
  00031	68 98 00 00 00	 push	 152			; 00000098H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN9@CompareEle
  00044	cc		 int	 3
$LN9@CompareEle:
  00045	83 7d fc 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00049	75 05		 jne	 SHORT $LN2@CompareEle
  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@CompareEle:
  00050	33 c0		 xor	 eax, eax
  00052	75 b5		 jne	 SHORT $LN4@CompareEle

; 153  : 	ASSERT(AfxIsValidAddress(pElement1, sizeof(TYPE), FALSE));

  00054	6a 00		 push	 0
  00056	6a 04		 push	 4
  00058	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00061	85 c0		 test	 eax, eax
  00063	75 14		 jne	 SHORT $LN10@CompareEle
  00065	68 99 00 00 00	 push	 153			; 00000099H
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00074	85 c0		 test	 eax, eax
  00076	74 01		 je	 SHORT $LN10@CompareEle
  00078	cc		 int	 3
$LN10@CompareEle:

; 154  : 	ASSERT(AfxIsValidAddress(pElement2, sizeof(ARG_TYPE), FALSE));

  00079	6a 00		 push	 0
  0007b	6a 04		 push	 4
  0007d	8b 45 0c	 mov	 eax, DWORD PTR _pElement2$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00086	85 c0		 test	 eax, eax
  00088	75 14		 jne	 SHORT $LN11@CompareEle
  0008a	68 9a 00 00 00	 push	 154			; 0000009aH
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00094	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00099	85 c0		 test	 eax, eax
  0009b	74 01		 je	 SHORT $LN11@CompareEle
  0009d	cc		 int	 3
$LN11@CompareEle:

; 155  : 
; 156  : 	return *pElement1 == *pElement2;

  0009e	8b 45 08	 mov	 eax, DWORD PTR _pElement1$[ebp]
  000a1	8b 4d 0c	 mov	 ecx, DWORD PTR _pElement2$[ebp]
  000a4	8b 10		 mov	 edx, DWORD PTR [eax]
  000a6	3b 11		 cmp	 edx, DWORD PTR [ecx]
  000a8	75 09		 jne	 SHORT $LN12@CompareEle
  000aa	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv128[ebp], 1
  000b1	eb 07		 jmp	 SHORT $LN13@CompareEle
$LN12@CompareEle:
  000b3	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN13@CompareEle:
  000ba	8b 45 b8	 mov	 eax, DWORD PTR tv128[ebp]
$LN6@CompareEle:

; 157  : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 08 00	 ret	 8
??$CompareElements@KK@@YGHPBK0@Z ENDP			; CompareElements<unsigned long,unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
??0CAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@K@Z PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CAssoc::CAssoc, COMDAT
; _this$ = ecx

; 1267 : 		CAssoc( ARG_KEY key ) : CPair( key ) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0CPair@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAE@K@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CPair::CPair
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??0CAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@K@Z ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CAssoc::CAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0CPair@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keyval$ = 8						; size = 4
??0CPair@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAE@K@Z PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CPair::CPair, COMDAT
; _this$ = ecx

; 1256 : 		CPair( ARG_KEY keyval ) : key( keyval )	{}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _keyval$[ebp]
  00012	89 08		 mov	 DWORD PTR [eax], ecx
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??0CPair@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAE@K@Z ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CPair::CPair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAXPAUtagPersonalTableInfo@@0AAV?$allocator@UtagPersonalTableInfo@@@0@@Z
_TEXT	SEGMENT
$T1 = -65						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAXPAUtagPersonalTableInfo@@0AAV?$allocator@UtagPersonalTableInfo@@@0@@Z PROC ; std::_Destroy_range<std::allocator<tagPersonalTableInfo> >, COMDAT

; 1154 : 	{	// destroy [_First, _Last), choose optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1155 : 		// note that this is an optimization for debug mode codegen;
; 1156 : 		// in release mode the BE removes all of this
; 1157 : 	using _Val = typename _Alloc::value_type;
; 1158 : 	_Destroy_range1(_First, _Last, _Al, bool_constant<conjunction_v<

  00009	33 c0		 xor	 eax, eax
  0000b	88 45 bf	 mov	 BYTE PTR $T1[ebp], al
  0000e	0f b6 4d bf	 movzx	 ecx, BYTE PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	8b 55 10	 mov	 edx, DWORD PTR __Al$[ebp]
  00016	52		 push	 edx
  00017	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ??$_Destroy_range1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAXPAUtagPersonalTableInfo@@0AAV?$allocator@UtagPersonalTableInfo@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<tagPersonalTableInfo> >
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1159 : 		is_trivially_destructible<_Val>,
; 1160 : 		_Uses_default_destroy<_Alloc, _Val *>>>{});
; 1161 : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??$_Destroy_range@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAXPAUtagPersonalTableInfo@@0AAV?$allocator@UtagPersonalTableInfo@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<tagPersonalTableInfo> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$?0UtagPersonalTableInfo@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UtagPersonalTableInfo@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0UtagPersonalTableInfo@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UtagPersonalTableInfo@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><tagPersonalTableInfo>, COMDAT
; _this$ = ecx

; 986  : 		{	// construct from a related allocator (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 987  : 		}

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??$?0UtagPersonalTableInfo@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UtagPersonalTableInfo@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><tagPersonalTableInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAXPAUCMD_CS_S_RegisterPersonal@@0AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@@Z
_TEXT	SEGMENT
$T1 = -65						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAXPAUCMD_CS_S_RegisterPersonal@@0AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CMD_CS_S_RegisterPersonal> >, COMDAT

; 1154 : 	{	// destroy [_First, _Last), choose optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1155 : 		// note that this is an optimization for debug mode codegen;
; 1156 : 		// in release mode the BE removes all of this
; 1157 : 	using _Val = typename _Alloc::value_type;
; 1158 : 	_Destroy_range1(_First, _Last, _Al, bool_constant<conjunction_v<

  00009	33 c0		 xor	 eax, eax
  0000b	88 45 bf	 mov	 BYTE PTR $T1[ebp], al
  0000e	0f b6 4d bf	 movzx	 ecx, BYTE PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	8b 55 10	 mov	 edx, DWORD PTR __Al$[ebp]
  00016	52		 push	 edx
  00017	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ??$_Destroy_range1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAXPAUCMD_CS_S_RegisterPersonal@@0AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<CMD_CS_S_RegisterPersonal> >
  00024	83 c4 10	 add	 esp, 16			; 00000010H

; 1159 : 		is_trivially_destructible<_Val>,
; 1160 : 		_Uses_default_destroy<_Alloc, _Val *>>>{});
; 1161 : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??$_Destroy_range@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAXPAUCMD_CS_S_RegisterPersonal@@0AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CMD_CS_S_RegisterPersonal> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> > >, COMDAT

; 329  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 330  : 	return (__builtin_addressof(_Val));

  00009	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 331  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$addressof@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$?0UCMD_CS_S_RegisterPersonal@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UCMD_CS_S_RegisterPersonal@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0UCMD_CS_S_RegisterPersonal@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UCMD_CS_S_RegisterPersonal@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><CMD_CS_S_RegisterPersonal>, COMDAT
; _this$ = ecx

; 986  : 		{	// construct from a related allocator (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 987  : 		}

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
??$?0UCMD_CS_S_RegisterPersonal@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UCMD_CS_S_RegisterPersonal@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><CMD_CS_S_RegisterPersonal>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1><>, COMDAT
; _this$ = ecx

; 278  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 277  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0?$allocator@UtagPersonalTableInfo@@@std@@QAE@XZ ; std::allocator<tagPersonalTableInfo>::allocator<tagPersonalTableInfo>
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >

; 279  : 		}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??$?0$$V@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1><>, COMDAT
; _this$ = ecx

; 278  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 277  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAE@XZ ; std::allocator<CMD_CS_S_RegisterPersonal>::allocator<CMD_CS_S_RegisterPersonal>
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >

; 279  : 		}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??$?0$$V@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z
_TEXT	SEGMENT
tv206 = -120						; size = 4
__Constructed_first$ = -52				; size = 4
__Constructed_last$ = -48				; size = 4
__Newvec$ = -44						; size = 4
__Newcapacity$ = -40					; size = 4
__Newsize$ = -36					; size = 4
__Oldsize$ = -32					; size = 4
__Al$ = -28						; size = 4
__Whereoff$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Emplace_reallocate<tagPersonalTableInfo const &>, COMDAT
; _this$ = ecx

; 942  : 		{	// reallocate and insert by perfectly forwarding _Val at _Whereptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 68	 sub	 esp, 104		; 00000068H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 943  : 			// pre: !_Has_unused_capacity()
; 944  : 		const size_type _Whereoff = static_cast<size_type>(_Whereptr - this->_Myfirst());

  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  00037	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  0003a	2b 08		 sub	 ecx, DWORD PTR [eax]
  0003c	8b c1		 mov	 eax, ecx
  0003e	99		 cdq
  0003f	b9 d1 00 00 00	 mov	 ecx, 209		; 000000d1H
  00044	f7 f9		 idiv	 ecx
  00046	89 45 e8	 mov	 DWORD PTR __Whereoff$[ebp], eax

; 945  : 		_Alty& _Al = this->_Getal();

  00049	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
  00051	89 45 e4	 mov	 DWORD PTR __Al$[ebp], eax

; 946  : 		const size_type _Oldsize = size();

  00054	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::size
  0005c	89 45 e0	 mov	 DWORD PTR __Oldsize$[ebp], eax

; 947  : 
; 948  : 		if (_Oldsize == max_size())

  0005f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?max_size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::max_size
  00067	39 45 e0	 cmp	 DWORD PTR __Oldsize$[ebp], eax
  0006a	75 05		 jne	 SHORT $LN2@Emplace_re

; 949  : 			{
; 950  : 			_Xlength();

  0006c	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@CAXXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Xlength
$LN2@Emplace_re:

; 951  : 			}
; 952  : 
; 953  : 		const size_type _Newsize = _Oldsize + 1;

  00071	8b 45 e0	 mov	 eax, DWORD PTR __Oldsize$[ebp]
  00074	83 c0 01	 add	 eax, 1
  00077	89 45 dc	 mov	 DWORD PTR __Newsize$[ebp], eax

; 954  : 		const size_type _Newcapacity = _Calculate_growth(_Newsize);

  0007a	8b 45 dc	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0007d	50		 push	 eax
  0007e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEII@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Calculate_growth
  00086	89 45 d8	 mov	 DWORD PTR __Newcapacity$[ebp], eax

; 955  : 
; 956  : 		const pointer _Newvec = _Al.allocate(_Newcapacity);

  00089	8b 45 d8	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d e4	 mov	 ecx, DWORD PTR __Al$[ebp]
  00090	e8 00 00 00 00	 call	 ?allocate@?$allocator@UtagPersonalTableInfo@@@std@@QAEPAUtagPersonalTableInfo@@I@Z ; std::allocator<tagPersonalTableInfo>::allocate
  00095	89 45 d4	 mov	 DWORD PTR __Newvec$[ebp], eax

; 957  : 		const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  00098	69 45 e8 d1 00
	00 00		 imul	 eax, DWORD PTR __Whereoff$[ebp], 209
  0009f	8b 4d d4	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  000a2	8d 94 01 d1 00
	00 00		 lea	 edx, DWORD PTR [ecx+eax+209]
  000a9	89 55 d0	 mov	 DWORD PTR __Constructed_last$[ebp], edx

; 958  : 		pointer _Constructed_first = _Constructed_last;

  000ac	8b 45 d0	 mov	 eax, DWORD PTR __Constructed_last$[ebp]
  000af	89 45 cc	 mov	 DWORD PTR __Constructed_first$[ebp], eax

; 959  : 
; 960  : 		_TRY_BEGIN

  000b2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 961  : 		_Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000b9	69 45 e8 d1 00
	00 00		 imul	 eax, DWORD PTR __Whereoff$[ebp], 209
  000c0	03 45 d4	 add	 eax, DWORD PTR __Newvec$[ebp]
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ??$_Unfancy@UtagPersonalTableInfo@@@std@@YAPAUtagPersonalTableInfo@@PAU1@@Z ; std::_Unfancy<tagPersonalTableInfo>
  000c9	83 c4 04	 add	 esp, 4
  000cc	89 45 88	 mov	 DWORD PTR tv206[ebp], eax
  000cf	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
  000d2	51		 push	 ecx
  000d3	e8 00 00 00 00	 call	 ??$forward@ABUtagPersonalTableInfo@@@std@@YAABUtagPersonalTableInfo@@ABU1@@Z ; std::forward<tagPersonalTableInfo const &>
  000d8	83 c4 04	 add	 esp, 4
  000db	50		 push	 eax
  000dc	8b 55 88	 mov	 edx, DWORD PTR tv206[ebp]
  000df	52		 push	 edx
  000e0	8b 45 e4	 mov	 eax, DWORD PTR __Al$[ebp]
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ??$construct@UtagPersonalTableInfo@@ABU1@@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAXAAV?$allocator@UtagPersonalTableInfo@@@1@QAUtagPersonalTableInfo@@ABU3@@Z ; std::_Default_allocator_traits<std::allocator<tagPersonalTableInfo> >::construct<tagPersonalTableInfo,tagPersonalTableInfo const &>
  000e9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 962  : 		_Constructed_first = _Newvec + _Whereoff;

  000ec	69 45 e8 d1 00
	00 00		 imul	 eax, DWORD PTR __Whereoff$[ebp], 209
  000f3	03 45 d4	 add	 eax, DWORD PTR __Newvec$[ebp]
  000f6	89 45 cc	 mov	 DWORD PTR __Constructed_first$[ebp], eax

; 963  : 
; 964  : 		if (_Whereptr == this->_Mylast())

  000f9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fc	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00101	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  00104	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00106	75 24		 jne	 SHORT $LN4@Emplace_re

; 965  : 			{	// at back, provide strong guarantee
; 966  : 			_Umove_if_noexcept(this->_Myfirst(), this->_Mylast(), _Newvec);

  00108	8b 45 d4	 mov	 eax, DWORD PTR __Newvec$[ebp]
  0010b	50		 push	 eax
  0010c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00114	8b 08		 mov	 ecx, DWORD PTR [eax]
  00116	51		 push	 ecx
  00117	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0011a	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  0011f	8b 10		 mov	 edx, DWORD PTR [eax]
  00121	52		 push	 edx
  00122	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@00@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Umove_if_noexcept

; 967  : 			}
; 968  : 		else

  0012a	eb 4a		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 969  : 			{	// provide basic guarantee
; 970  : 			_Umove(this->_Myfirst(), _Whereptr, _Newvec);

  0012c	8b 45 d4	 mov	 eax, DWORD PTR __Newvec$[ebp]
  0012f	50		 push	 eax
  00130	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  00133	51		 push	 ecx
  00134	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00137	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  0013c	8b 10		 mov	 edx, DWORD PTR [eax]
  0013e	52		 push	 edx
  0013f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	e8 00 00 00 00	 call	 ?_Umove@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEPAUtagPersonalTableInfo@@PAU3@00@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Umove

; 971  : 			_Constructed_first = _Newvec;

  00147	8b 45 d4	 mov	 eax, DWORD PTR __Newvec$[ebp]
  0014a	89 45 cc	 mov	 DWORD PTR __Constructed_first$[ebp], eax

; 972  : 			_Umove(_Whereptr, this->_Mylast(), _Newvec + _Whereoff + 1);

  0014d	69 45 e8 d1 00
	00 00		 imul	 eax, DWORD PTR __Whereoff$[ebp], 209
  00154	8b 4d d4	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  00157	8d 94 01 d1 00
	00 00		 lea	 edx, DWORD PTR [ecx+eax+209]
  0015e	52		 push	 edx
  0015f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00162	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00167	8b 00		 mov	 eax, DWORD PTR [eax]
  00169	50		 push	 eax
  0016a	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  0016d	51		 push	 ecx
  0016e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00171	e8 00 00 00 00	 call	 ?_Umove@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEPAUtagPersonalTableInfo@@PAU3@00@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Umove
$LN5@Emplace_re:
  00176	eb 2f		 jmp	 SHORT $LN7@Emplace_re
__catch$??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z$0:

; 973  : 			}
; 974  : 		_CATCH_ALL
; 975  : 		_Destroy(_Constructed_first, _Constructed_last);

  00178	8b 45 d0	 mov	 eax, DWORD PTR __Constructed_last$[ebp]
  0017b	50		 push	 eax
  0017c	8b 4d cc	 mov	 ecx, DWORD PTR __Constructed_first$[ebp]
  0017f	51		 push	 ecx
  00180	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00183	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@0@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Destroy

; 976  : 		_Al.deallocate(_Newvec, _Newcapacity);

  00188	8b 45 d8	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  0018b	50		 push	 eax
  0018c	8b 4d d4	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  0018f	51		 push	 ecx
  00190	8b 4d e4	 mov	 ecx, DWORD PTR __Al$[ebp]
  00193	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UtagPersonalTableInfo@@@std@@QAEXQAUtagPersonalTableInfo@@I@Z ; std::allocator<tagPersonalTableInfo>::deallocate

; 977  : 		_RERAISE;

  00198	6a 00		 push	 0
  0019a	6a 00		 push	 0
  0019c	e8 00 00 00 00	 call	 __CxxThrowException@8

; 978  : 		_CATCH_END

  001a1	b8 00 00 00 00	 mov	 eax, $LN10@Emplace_re
  001a6	c3		 ret	 0
$LN7@Emplace_re:
  001a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  001ae	eb 07		 jmp	 SHORT __tryend$??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z$1
$LN10@Emplace_re:
  001b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z$1:

; 979  : 
; 980  : 		_Change_array(_Newvec, _Newsize, _Newcapacity);

  001b7	8b 45 d8	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  001ba	50		 push	 eax
  001bb	8b 4d dc	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  001be	51		 push	 ecx
  001bf	8b 55 d4	 mov	 edx, DWORD PTR __Newvec$[ebp]
  001c2	52		 push	 edx
  001c3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001c6	e8 00 00 00 00	 call	 ?_Change_array@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXQAUtagPersonalTableInfo@@II@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Change_array

; 981  : 		return (this->_Myfirst() + _Whereoff);

  001cb	69 75 e8 d1 00
	00 00		 imul	 esi, DWORD PTR __Whereoff$[ebp], 209
  001d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001d5	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  001da	03 30		 add	 esi, DWORD PTR [eax]
  001dc	8b c6		 mov	 eax, esi
$LN6@Emplace_re:

; 982  : 		}

  001de	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001e1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001e8	59		 pop	 ecx
  001e9	5f		 pop	 edi
  001ea	5e		 pop	 esi
  001eb	5b		 pop	 ebx
  001ec	8b e5		 mov	 esp, ebp
  001ee	5d		 pop	 ebp
  001ef	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 84	 mov	 ecx, DWORD PTR [edx-124]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Emplace_reallocate<tagPersonalTableInfo const &>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$construct@UtagPersonalTableInfo@@ABU1@@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAXAAV?$allocator@UtagPersonalTableInfo@@@1@QAUtagPersonalTableInfo@@ABU3@@Z
_TEXT	SEGMENT
$T1 = -68						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UtagPersonalTableInfo@@ABU1@@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAXAAV?$allocator@UtagPersonalTableInfo@@@1@QAUtagPersonalTableInfo@@ABU3@@Z PROC ; std::_Default_allocator_traits<std::allocator<tagPersonalTableInfo> >::construct<tagPersonalTableInfo,tagPersonalTableInfo const &>, COMDAT

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	68 d1 00 00 00	 push	 209			; 000000d1H
  00012	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00017	83 c4 08	 add	 esp, 8
  0001a	89 45 bc	 mov	 DWORD PTR $T1[ebp], eax
  0001d	8b 4d 10	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00020	51		 push	 ecx
  00021	e8 00 00 00 00	 call	 ??$forward@ABUtagPersonalTableInfo@@@std@@YAABUtagPersonalTableInfo@@ABU1@@Z ; std::forward<tagPersonalTableInfo const &>
  00026	83 c4 04	 add	 esp, 4
  00029	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  0002e	8b f0		 mov	 esi, eax
  00030	8b 7d bc	 mov	 edi, DWORD PTR $T1[ebp]
  00033	f3 a5		 rep movsd
  00035	a4		 movsb

; 881  : 			_Objty(_STD forward<_Types>(_Args)...);
; 882  : 		}

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
??$construct@UtagPersonalTableInfo@@ABU1@@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAXAAV?$allocator@UtagPersonalTableInfo@@@1@QAUtagPersonalTableInfo@@ABU3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<tagPersonalTableInfo> >::construct<tagPersonalTableInfo,tagPersonalTableInfo const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAE@ABUtagPersonalTableInfo@@@Z
_TEXT	SEGMENT
tv142 = -76						; size = 4
__Result$ = -8						; size = 4
_this$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
??$_Emplace_back_with_unused_capacity@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAE@ABUtagPersonalTableInfo@@@Z PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Emplace_back_with_unused_capacity<tagPersonalTableInfo const &>, COMDAT
; _this$ = ecx

; 900  : 		{	// insert by perfectly forwarding into element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 901  : 			// pre: _Has_unused_capacity()
; 902  : 		_Alty_traits::construct(this->_Getal(), _Unfancy(this->_Mylast()), _STD forward<_Valty>(_Val)...);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$forward@ABUtagPersonalTableInfo@@@std@@YAABUtagPersonalTableInfo@@ABU1@@Z ; std::forward<tagPersonalTableInfo const &>
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00021	8b 08		 mov	 ecx, DWORD PTR [eax]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??$_Unfancy@UtagPersonalTableInfo@@@std@@YAPAUtagPersonalTableInfo@@PAU1@@Z ; std::_Unfancy<tagPersonalTableInfo>
  00029	83 c4 04	 add	 esp, 4
  0002c	50		 push	 eax
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??$construct@UtagPersonalTableInfo@@ABU1@@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAXAAV?$allocator@UtagPersonalTableInfo@@@1@QAUtagPersonalTableInfo@@ABU3@@Z ; std::_Default_allocator_traits<std::allocator<tagPersonalTableInfo> >::construct<tagPersonalTableInfo,tagPersonalTableInfo const &>
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 903  : 		_Orphan_range(this->_Mylast(), this->_Mylast());

  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00046	8b 00		 mov	 eax, DWORD PTR [eax]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00051	8b 08		 mov	 ecx, DWORD PTR [eax]
  00053	51		 push	 ecx
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEXPAUtagPersonalTableInfo@@0@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Orphan_range

; 904  : 		_Ty& _Result = *this->_Mylast();

  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00064	8b 00		 mov	 eax, DWORD PTR [eax]
  00066	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 905  : 		++this->_Mylast();

  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00071	89 45 b4	 mov	 DWORD PTR tv142[ebp], eax
  00074	8b 45 b4	 mov	 eax, DWORD PTR tv142[ebp]
  00077	8b 08		 mov	 ecx, DWORD PTR [eax]
  00079	81 c1 d1 00 00
	00		 add	 ecx, 209		; 000000d1H
  0007f	8b 55 b4	 mov	 edx, DWORD PTR tv142[ebp]
  00082	89 0a		 mov	 DWORD PTR [edx], ecx

; 906  : #if _HAS_CXX17
; 907  : 		return (_Result);
; 908  : #else /* ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv */
; 909  : 		(void)_Result;
; 910  : #endif /* _HAS_CXX17 */
; 911  : 		}

  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
??$_Emplace_back_with_unused_capacity@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAE@ABUtagPersonalTableInfo@@@Z ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Emplace_back_with_unused_capacity<tagPersonalTableInfo const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$forward@ABUtagPersonalTableInfo@@@std@@YAABUtagPersonalTableInfo@@ABU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUtagPersonalTableInfo@@@std@@YAABUtagPersonalTableInfo@@ABU1@@Z PROC ; std::forward<tagPersonalTableInfo const &>, COMDAT

; 1573 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1574 : 	return (static_cast<_Ty&&>(_Arg));

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1575 : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@ABUtagPersonalTableInfo@@@std@@YAABUtagPersonalTableInfo@@ABU1@@Z ENDP ; std::forward<tagPersonalTableInfo const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$emplace_back@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@ABUtagPersonalTableInfo@@@Z
_TEXT	SEGMENT
__Result$ = -8						; size = 4
_this$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
??$emplace_back@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@ABUtagPersonalTableInfo@@@Z PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::emplace_back<tagPersonalTableInfo const &>, COMDAT
; _this$ = ecx

; 916  : 		{	// insert by perfectly forwarding into element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		if (_Has_unused_capacity())

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Has_unused_capacity@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABE_NXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Has_unused_capacity
  00014	0f b6 c0	 movzx	 eax, al
  00017	85 c0		 test	 eax, eax
  00019	74 17		 je	 SHORT $LN2@emplace_ba

; 918  : 			{
; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  0001b	8b 45 08	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$forward@ABUtagPersonalTableInfo@@@std@@YAABUtagPersonalTableInfo@@ABU1@@Z ; std::forward<tagPersonalTableInfo const &>
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAE@ABUtagPersonalTableInfo@@@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Emplace_back_with_unused_capacity<tagPersonalTableInfo const &>
  00030	eb 23		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00032	8b 45 08	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??$forward@ABUtagPersonalTableInfo@@@std@@YAABUtagPersonalTableInfo@@ABU1@@Z ; std::forward<tagPersonalTableInfo const &>
  0003b	83 c4 04	 add	 esp, 4
  0003e	50		 push	 eax
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	51		 push	 ecx
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEPAUtagPersonalTableInfo@@QAU2@ABU2@@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Emplace_reallocate<tagPersonalTableInfo const &>
  00052	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax
$LN1@emplace_ba:

; 923  : #if _HAS_CXX17
; 924  : 		return (_Result);
; 925  : #else /* ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv */
; 926  : 		(void)_Result;
; 927  : #endif /* _HAS_CXX17 */
; 928  : 		}

  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
??$emplace_back@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@ABUtagPersonalTableInfo@@@Z ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::emplace_back<tagPersonalTableInfo const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$destroy@UtagPersonalTableInfo@@@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAXAAV?$allocator@UtagPersonalTableInfo@@@1@QAUtagPersonalTableInfo@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UtagPersonalTableInfo@@@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAXAAV?$allocator@UtagPersonalTableInfo@@@1@QAUtagPersonalTableInfo@@@Z PROC ; std::_Default_allocator_traits<std::allocator<tagPersonalTableInfo> >::destroy<tagPersonalTableInfo>, COMDAT

; 886  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 887  : 		_Ptr->~_Uty();
; 888  : 		}

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$destroy@UtagPersonalTableInfo@@@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAXAAV?$allocator@UtagPersonalTableInfo@@@1@QAUtagPersonalTableInfo@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<tagPersonalTableInfo> >::destroy<tagPersonalTableInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$_Unfancy@UtagPersonalTableInfo@@@std@@YAPAUtagPersonalTableInfo@@PAU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@UtagPersonalTableInfo@@@std@@YAPAUtagPersonalTableInfo@@PAU1@@Z PROC ; std::_Unfancy<tagPersonalTableInfo>, COMDAT

; 345  : 	{	// do nothing for plain pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 346  : 	return (_Ptr);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 347  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Unfancy@UtagPersonalTableInfo@@@std@@YAPAUtagPersonalTableInfo@@PAU1@@Z ENDP ; std::_Unfancy<tagPersonalTableInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Move_unchecked@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00@Z
_TEXT	SEGMENT
$T1 = -66						; size = 1
$T2 = -65						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move_unchecked@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00@Z PROC ; std::_Move_unchecked<tagPersonalTableInfo *,tagPersonalTableInfo *>, COMDAT

; 2734 : 	{	// move [_First, _Last) to [_Dest, ...), choose optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2735 : 		// note: _Move_unchecked is called directly from elsewhere in the STL
; 2736 : 	return (_Move_unchecked1(_First, _Last,

  00009	8d 45 10	 lea	 eax, DWORD PTR __Dest$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  00010	51		 push	 ecx
  00011	8d 55 bf	 lea	 edx, DWORD PTR $T2[ebp]
  00014	52		 push	 edx
  00015	e8 00 00 00 00	 call	 ??$_Ptr_move_cat@UtagPersonalTableInfo@@U1@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUtagPersonalTableInfo@@0@Z ; std::_Ptr_move_cat<tagPersonalTableInfo,tagPersonalTableInfo>
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001d	0f b6 45 be	 movzx	 eax, BYTE PTR $T1[ebp]
  00021	50		 push	 eax
  00022	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00029	52		 push	 edx
  0002a	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Move_unchecked1@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00U_Trivially_copyable_ptr_iterator_tag@0@@Z ; std::_Move_unchecked1<tagPersonalTableInfo *,tagPersonalTableInfo *>
  00033	83 c4 10	 add	 esp, 16			; 00000010H

; 2737 : 		_Dest, _Ptr_move_cat(_First, _Dest)));
; 2738 : 	}

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
??$_Move_unchecked@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00@Z ENDP ; std::_Move_unchecked<tagPersonalTableInfo *,tagPersonalTableInfo *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >, COMDAT

; 329  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 330  : 	return (__builtin_addressof(_Val));

  00009	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 331  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$addressof@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z
_TEXT	SEGMENT
tv206 = -120						; size = 4
__Constructed_first$ = -52				; size = 4
__Constructed_last$ = -48				; size = 4
__Newvec$ = -44						; size = 4
__Newcapacity$ = -40					; size = 4
__Newsize$ = -36					; size = 4
__Oldsize$ = -32					; size = 4
__Al$ = -28						; size = 4
__Whereoff$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Emplace_reallocate<CMD_CS_S_RegisterPersonal const &>, COMDAT
; _this$ = ecx

; 942  : 		{	// reallocate and insert by perfectly forwarding _Val at _Whereptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 68	 sub	 esp, 104		; 00000068H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 943  : 			// pre: !_Has_unused_capacity()
; 944  : 		const size_type _Whereoff = static_cast<size_type>(_Whereptr - this->_Myfirst());

  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  00037	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  0003a	2b 08		 sub	 ecx, DWORD PTR [eax]
  0003c	c1 f9 03	 sar	 ecx, 3
  0003f	89 4d e8	 mov	 DWORD PTR __Whereoff$[ebp], ecx

; 945  : 		_Alty& _Al = this->_Getal();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal
  0004a	89 45 e4	 mov	 DWORD PTR __Al$[ebp], eax

; 946  : 		const size_type _Oldsize = size();

  0004d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ?size@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::size
  00055	89 45 e0	 mov	 DWORD PTR __Oldsize$[ebp], eax

; 947  : 
; 948  : 		if (_Oldsize == max_size())

  00058	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?max_size@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::max_size
  00060	39 45 e0	 cmp	 DWORD PTR __Oldsize$[ebp], eax
  00063	75 05		 jne	 SHORT $LN2@Emplace_re

; 949  : 			{
; 950  : 			_Xlength();

  00065	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@CAXXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Xlength
$LN2@Emplace_re:

; 951  : 			}
; 952  : 
; 953  : 		const size_type _Newsize = _Oldsize + 1;

  0006a	8b 45 e0	 mov	 eax, DWORD PTR __Oldsize$[ebp]
  0006d	83 c0 01	 add	 eax, 1
  00070	89 45 dc	 mov	 DWORD PTR __Newsize$[ebp], eax

; 954  : 		const size_type _Newcapacity = _Calculate_growth(_Newsize);

  00073	8b 45 dc	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	50		 push	 eax
  00077	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEII@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Calculate_growth
  0007f	89 45 d8	 mov	 DWORD PTR __Newcapacity$[ebp], eax

; 955  : 
; 956  : 		const pointer _Newvec = _Al.allocate(_Newcapacity);

  00082	8b 45 d8	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00085	50		 push	 eax
  00086	8b 4d e4	 mov	 ecx, DWORD PTR __Al$[ebp]
  00089	e8 00 00 00 00	 call	 ?allocate@?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@I@Z ; std::allocator<CMD_CS_S_RegisterPersonal>::allocate
  0008e	89 45 d4	 mov	 DWORD PTR __Newvec$[ebp], eax

; 957  : 		const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  00091	8b 45 e8	 mov	 eax, DWORD PTR __Whereoff$[ebp]
  00094	8b 4d d4	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  00097	8d 54 c1 08	 lea	 edx, DWORD PTR [ecx+eax*8+8]
  0009b	89 55 d0	 mov	 DWORD PTR __Constructed_last$[ebp], edx

; 958  : 		pointer _Constructed_first = _Constructed_last;

  0009e	8b 45 d0	 mov	 eax, DWORD PTR __Constructed_last$[ebp]
  000a1	89 45 cc	 mov	 DWORD PTR __Constructed_first$[ebp], eax

; 959  : 
; 960  : 		_TRY_BEGIN

  000a4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 961  : 		_Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000ab	8b 45 e8	 mov	 eax, DWORD PTR __Whereoff$[ebp]
  000ae	8b 4d d4	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  000b1	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  000b4	52		 push	 edx
  000b5	e8 00 00 00 00	 call	 ??$_Unfancy@UCMD_CS_S_RegisterPersonal@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@PAU1@@Z ; std::_Unfancy<CMD_CS_S_RegisterPersonal>
  000ba	83 c4 04	 add	 esp, 4
  000bd	89 45 88	 mov	 DWORD PTR tv206[ebp], eax
  000c0	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ??$forward@ABUCMD_CS_S_RegisterPersonal@@@std@@YAABUCMD_CS_S_RegisterPersonal@@ABU1@@Z ; std::forward<CMD_CS_S_RegisterPersonal const &>
  000c9	83 c4 04	 add	 esp, 4
  000cc	50		 push	 eax
  000cd	8b 4d 88	 mov	 ecx, DWORD PTR tv206[ebp]
  000d0	51		 push	 ecx
  000d1	8b 55 e4	 mov	 edx, DWORD PTR __Al$[ebp]
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$construct@UCMD_CS_S_RegisterPersonal@@ABU1@@?$_Default_allocator_traits@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@SAXAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@1@QAUCMD_CS_S_RegisterPersonal@@ABU3@@Z ; std::_Default_allocator_traits<std::allocator<CMD_CS_S_RegisterPersonal> >::construct<CMD_CS_S_RegisterPersonal,CMD_CS_S_RegisterPersonal const &>
  000da	83 c4 0c	 add	 esp, 12			; 0000000cH

; 962  : 		_Constructed_first = _Newvec + _Whereoff;

  000dd	8b 45 e8	 mov	 eax, DWORD PTR __Whereoff$[ebp]
  000e0	8b 4d d4	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  000e3	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  000e6	89 55 cc	 mov	 DWORD PTR __Constructed_first$[ebp], edx

; 963  : 
; 964  : 		if (_Whereptr == this->_Mylast())

  000e9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  000f1	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  000f4	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000f6	75 24		 jne	 SHORT $LN4@Emplace_re

; 965  : 			{	// at back, provide strong guarantee
; 966  : 			_Umove_if_noexcept(this->_Myfirst(), this->_Mylast(), _Newvec);

  000f8	8b 45 d4	 mov	 eax, DWORD PTR __Newvec$[ebp]
  000fb	50		 push	 eax
  000fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  00104	8b 08		 mov	 ecx, DWORD PTR [eax]
  00106	51		 push	 ecx
  00107	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0010a	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  0010f	8b 10		 mov	 edx, DWORD PTR [eax]
  00111	52		 push	 edx
  00112	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00115	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@00@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Umove_if_noexcept

; 967  : 			}
; 968  : 		else

  0011a	eb 43		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 969  : 			{	// provide basic guarantee
; 970  : 			_Umove(this->_Myfirst(), _Whereptr, _Newvec);

  0011c	8b 45 d4	 mov	 eax, DWORD PTR __Newvec$[ebp]
  0011f	50		 push	 eax
  00120	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  00123	51		 push	 ecx
  00124	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00127	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  0012c	8b 10		 mov	 edx, DWORD PTR [eax]
  0012e	52		 push	 edx
  0012f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00132	e8 00 00 00 00	 call	 ?_Umove@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEPAUCMD_CS_S_RegisterPersonal@@PAU3@00@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Umove

; 971  : 			_Constructed_first = _Newvec;

  00137	8b 45 d4	 mov	 eax, DWORD PTR __Newvec$[ebp]
  0013a	89 45 cc	 mov	 DWORD PTR __Constructed_first$[ebp], eax

; 972  : 			_Umove(_Whereptr, this->_Mylast(), _Newvec + _Whereoff + 1);

  0013d	8b 45 e8	 mov	 eax, DWORD PTR __Whereoff$[ebp]
  00140	8b 4d d4	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  00143	8d 54 c1 08	 lea	 edx, DWORD PTR [ecx+eax*8+8]
  00147	52		 push	 edx
  00148	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  00150	8b 00		 mov	 eax, DWORD PTR [eax]
  00152	50		 push	 eax
  00153	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  00156	51		 push	 ecx
  00157	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0015a	e8 00 00 00 00	 call	 ?_Umove@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEPAUCMD_CS_S_RegisterPersonal@@PAU3@00@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Umove
$LN5@Emplace_re:
  0015f	eb 2f		 jmp	 SHORT $LN7@Emplace_re
__catch$??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z$0:

; 973  : 			}
; 974  : 		_CATCH_ALL
; 975  : 		_Destroy(_Constructed_first, _Constructed_last);

  00161	8b 45 d0	 mov	 eax, DWORD PTR __Constructed_last$[ebp]
  00164	50		 push	 eax
  00165	8b 4d cc	 mov	 ecx, DWORD PTR __Constructed_first$[ebp]
  00168	51		 push	 ecx
  00169	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0016c	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@0@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Destroy

; 976  : 		_Al.deallocate(_Newvec, _Newcapacity);

  00171	8b 45 d8	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00174	50		 push	 eax
  00175	8b 4d d4	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  00178	51		 push	 ecx
  00179	8b 4d e4	 mov	 ecx, DWORD PTR __Al$[ebp]
  0017c	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAEXQAUCMD_CS_S_RegisterPersonal@@I@Z ; std::allocator<CMD_CS_S_RegisterPersonal>::deallocate

; 977  : 		_RERAISE;

  00181	6a 00		 push	 0
  00183	6a 00		 push	 0
  00185	e8 00 00 00 00	 call	 __CxxThrowException@8

; 978  : 		_CATCH_END

  0018a	b8 00 00 00 00	 mov	 eax, $LN10@Emplace_re
  0018f	c3		 ret	 0
$LN7@Emplace_re:
  00190	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00197	eb 07		 jmp	 SHORT __tryend$??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z$1
$LN10@Emplace_re:
  00199	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z$1:

; 979  : 
; 980  : 		_Change_array(_Newvec, _Newsize, _Newcapacity);

  001a0	8b 45 d8	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  001a3	50		 push	 eax
  001a4	8b 4d dc	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  001a7	51		 push	 ecx
  001a8	8b 55 d4	 mov	 edx, DWORD PTR __Newvec$[ebp]
  001ab	52		 push	 edx
  001ac	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001af	e8 00 00 00 00	 call	 ?_Change_array@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXQAUCMD_CS_S_RegisterPersonal@@II@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Change_array

; 981  : 		return (this->_Myfirst() + _Whereoff);

  001b4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001b7	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  001bc	8b 00		 mov	 eax, DWORD PTR [eax]
  001be	8b 4d e8	 mov	 ecx, DWORD PTR __Whereoff$[ebp]
  001c1	8d 04 c8	 lea	 eax, DWORD PTR [eax+ecx*8]
$LN6@Emplace_re:

; 982  : 		}

  001c4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001c7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001ce	59		 pop	 ecx
  001cf	5f		 pop	 edi
  001d0	5e		 pop	 esi
  001d1	5b		 pop	 ebx
  001d2	8b e5		 mov	 esp, ebp
  001d4	5d		 pop	 ebp
  001d5	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 84	 mov	 ecx, DWORD PTR [edx-124]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Emplace_reallocate<CMD_CS_S_RegisterPersonal const &>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$construct@UCMD_CS_S_RegisterPersonal@@ABU1@@?$_Default_allocator_traits@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@SAXAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@1@QAUCMD_CS_S_RegisterPersonal@@ABU3@@Z
_TEXT	SEGMENT
$T1 = -68						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UCMD_CS_S_RegisterPersonal@@ABU1@@?$_Default_allocator_traits@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@SAXAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@1@QAUCMD_CS_S_RegisterPersonal@@ABU3@@Z PROC ; std::_Default_allocator_traits<std::allocator<CMD_CS_S_RegisterPersonal> >::construct<CMD_CS_S_RegisterPersonal,CMD_CS_S_RegisterPersonal const &>, COMDAT

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	6a 08		 push	 8
  0000f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00014	83 c4 08	 add	 esp, 8
  00017	89 45 bc	 mov	 DWORD PTR $T1[ebp], eax
  0001a	8b 4d 10	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??$forward@ABUCMD_CS_S_RegisterPersonal@@@std@@YAABUCMD_CS_S_RegisterPersonal@@ABU1@@Z ; std::forward<CMD_CS_S_RegisterPersonal const &>
  00023	83 c4 04	 add	 esp, 4
  00026	8b 10		 mov	 edx, DWORD PTR [eax]
  00028	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002b	8b 4d bc	 mov	 ecx, DWORD PTR $T1[ebp]
  0002e	89 11		 mov	 DWORD PTR [ecx], edx
  00030	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 881  : 			_Objty(_STD forward<_Types>(_Args)...);
; 882  : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
??$construct@UCMD_CS_S_RegisterPersonal@@ABU1@@?$_Default_allocator_traits@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@SAXAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@1@QAUCMD_CS_S_RegisterPersonal@@ABU3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<CMD_CS_S_RegisterPersonal> >::construct<CMD_CS_S_RegisterPersonal,CMD_CS_S_RegisterPersonal const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$_Unfancy@UCMD_CS_S_RegisterPersonal@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@PAU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@UCMD_CS_S_RegisterPersonal@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@PAU1@@Z PROC ; std::_Unfancy<CMD_CS_S_RegisterPersonal>, COMDAT

; 345  : 	{	// do nothing for plain pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 346  : 	return (_Ptr);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 347  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Unfancy@UCMD_CS_S_RegisterPersonal@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@PAU1@@Z ENDP ; std::_Unfancy<CMD_CS_S_RegisterPersonal>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAE@ABUCMD_CS_S_RegisterPersonal@@@Z
_TEXT	SEGMENT
tv142 = -76						; size = 4
__Result$ = -8						; size = 4
_this$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
??$_Emplace_back_with_unused_capacity@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAE@ABUCMD_CS_S_RegisterPersonal@@@Z PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Emplace_back_with_unused_capacity<CMD_CS_S_RegisterPersonal const &>, COMDAT
; _this$ = ecx

; 900  : 		{	// insert by perfectly forwarding into element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 901  : 			// pre: _Has_unused_capacity()
; 902  : 		_Alty_traits::construct(this->_Getal(), _Unfancy(this->_Mylast()), _STD forward<_Valty>(_Val)...);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$forward@ABUCMD_CS_S_RegisterPersonal@@@std@@YAABUCMD_CS_S_RegisterPersonal@@ABU1@@Z ; std::forward<CMD_CS_S_RegisterPersonal const &>
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  00021	8b 08		 mov	 ecx, DWORD PTR [eax]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??$_Unfancy@UCMD_CS_S_RegisterPersonal@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@PAU1@@Z ; std::_Unfancy<CMD_CS_S_RegisterPersonal>
  00029	83 c4 04	 add	 esp, 4
  0002c	50		 push	 eax
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??$construct@UCMD_CS_S_RegisterPersonal@@ABU1@@?$_Default_allocator_traits@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@SAXAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@1@QAUCMD_CS_S_RegisterPersonal@@ABU3@@Z ; std::_Default_allocator_traits<std::allocator<CMD_CS_S_RegisterPersonal> >::construct<CMD_CS_S_RegisterPersonal,CMD_CS_S_RegisterPersonal const &>
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 903  : 		_Orphan_range(this->_Mylast(), this->_Mylast());

  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  00046	8b 00		 mov	 eax, DWORD PTR [eax]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  00051	8b 08		 mov	 ecx, DWORD PTR [eax]
  00053	51		 push	 ecx
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEXPAUCMD_CS_S_RegisterPersonal@@0@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Orphan_range

; 904  : 		_Ty& _Result = *this->_Mylast();

  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  00064	8b 00		 mov	 eax, DWORD PTR [eax]
  00066	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 905  : 		++this->_Mylast();

  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  00071	89 45 b4	 mov	 DWORD PTR tv142[ebp], eax
  00074	8b 45 b4	 mov	 eax, DWORD PTR tv142[ebp]
  00077	8b 08		 mov	 ecx, DWORD PTR [eax]
  00079	83 c1 08	 add	 ecx, 8
  0007c	8b 55 b4	 mov	 edx, DWORD PTR tv142[ebp]
  0007f	89 0a		 mov	 DWORD PTR [edx], ecx

; 906  : #if _HAS_CXX17
; 907  : 		return (_Result);
; 908  : #else /* ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv */
; 909  : 		(void)_Result;
; 910  : #endif /* _HAS_CXX17 */
; 911  : 		}

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 04 00	 ret	 4
??$_Emplace_back_with_unused_capacity@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAE@ABUCMD_CS_S_RegisterPersonal@@@Z ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Emplace_back_with_unused_capacity<CMD_CS_S_RegisterPersonal const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$forward@ABUCMD_CS_S_RegisterPersonal@@@std@@YAABUCMD_CS_S_RegisterPersonal@@ABU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUCMD_CS_S_RegisterPersonal@@@std@@YAABUCMD_CS_S_RegisterPersonal@@ABU1@@Z PROC ; std::forward<CMD_CS_S_RegisterPersonal const &>, COMDAT

; 1573 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1574 : 	return (static_cast<_Ty&&>(_Arg));

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1575 : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@ABUCMD_CS_S_RegisterPersonal@@@std@@YAABUCMD_CS_S_RegisterPersonal@@ABU1@@Z ENDP ; std::forward<CMD_CS_S_RegisterPersonal const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$emplace_back@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@ABUCMD_CS_S_RegisterPersonal@@@Z
_TEXT	SEGMENT
__Result$ = -8						; size = 4
_this$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
??$emplace_back@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@ABUCMD_CS_S_RegisterPersonal@@@Z PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::emplace_back<CMD_CS_S_RegisterPersonal const &>, COMDAT
; _this$ = ecx

; 916  : 		{	// insert by perfectly forwarding into element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		if (_Has_unused_capacity())

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Has_unused_capacity@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABE_NXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Has_unused_capacity
  00014	0f b6 c0	 movzx	 eax, al
  00017	85 c0		 test	 eax, eax
  00019	74 17		 je	 SHORT $LN2@emplace_ba

; 918  : 			{
; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  0001b	8b 45 08	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$forward@ABUCMD_CS_S_RegisterPersonal@@@std@@YAABUCMD_CS_S_RegisterPersonal@@ABU1@@Z ; std::forward<CMD_CS_S_RegisterPersonal const &>
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAE@ABUCMD_CS_S_RegisterPersonal@@@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Emplace_back_with_unused_capacity<CMD_CS_S_RegisterPersonal const &>
  00030	eb 23		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00032	8b 45 08	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??$forward@ABUCMD_CS_S_RegisterPersonal@@@std@@YAABUCMD_CS_S_RegisterPersonal@@ABU1@@Z ; std::forward<CMD_CS_S_RegisterPersonal const &>
  0003b	83 c4 04	 add	 esp, 4
  0003e	50		 push	 eax
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	51		 push	 ecx
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@QAU2@ABU2@@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Emplace_reallocate<CMD_CS_S_RegisterPersonal const &>
  00052	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax
$LN1@emplace_ba:

; 923  : #if _HAS_CXX17
; 924  : 		return (_Result);
; 925  : #else /* ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv */
; 926  : 		(void)_Result;
; 927  : #endif /* _HAS_CXX17 */
; 928  : 		}

  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
??$emplace_back@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@ABUCMD_CS_S_RegisterPersonal@@@Z ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::emplace_back<CMD_CS_S_RegisterPersonal const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@ABV01@@Z
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -96						; size = 4
__Tmp$ = -28						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::operator+, COMDAT
; _this$ = ecx

; 299  : 		{	// return this + integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBE?AV01@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 54	 sub	 esp, 84			; 00000054H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 300  : 		_Vector_iterator _Tmp = *this;

  00032	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00035	50		 push	 eax
  00036	8d 4d e4	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@ABV01@@Z
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 301  : 		return (_Tmp += _Off);

  00045	8b 45 0c	 mov	 eax, DWORD PTR __Off$[ebp]
  00048	50		 push	 eax
  00049	8d 4d e4	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  0004c	e8 00 00 00 00	 call	 ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::operator+=
  00051	50		 push	 eax
  00052	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00055	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@ABV01@@Z
  0005a	8b 4d a0	 mov	 ecx, DWORD PTR $T2[ebp]
  0005d	83 c9 01	 or	 ecx, 1
  00060	89 4d a0	 mov	 DWORD PTR $T2[ebp], ecx
  00063	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006a	8d 4d e4	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  0006d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
  00072	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 302  : 		}

  00075	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00078	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007f	59		 pop	 ecx
  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBE?AV01@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBE?AV01@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::operator+
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::operator+=, COMDAT
; _this$ = ecx

; 293  : 		{	// increment by integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 294  : 		*(_Mybase *)this += _Off;

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::operator+=

; 295  : 		return (*this);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 296  : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@PAUtagPersonalTableInfo@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@PAUtagPersonalTableInfo@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >, COMDAT
; _this$ = ecx

; 253  : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 252  : 		: _Mybase(_Parg, _Pvector)

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@PAUtagPersonalTableInfo@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >

; 254  : 		}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@PAUtagPersonalTableInfo@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00021	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0001e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00021	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::operator+=, COMDAT
; _this$ = ecx

; 128  : 		{	// increment by integer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 129  : 		_Verify_offset(_Off);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEXH@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Verify_offset

; 130  : 		_Ptr += _Off;

  00018	69 45 08 d1 00
	00 00		 imul	 eax, DWORD PTR __Off$[ebp], 209
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	03 41 08	 add	 eax, DWORD PTR [ecx+8]
  00025	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00028	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 131  : 		return (*this);

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 132  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEXH@Z
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEXH@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Verify_offset, COMDAT
; _this$ = ecx

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 110  :  #if _ITERATOR_DEBUG_LEVEL == 0
; 111  : 		(void)_Off;
; 112  :  #else /* ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv */
; 113  : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00014	89 45 f8	 mov	 DWORD PTR __Mycont$[ebp], eax
$LN4@Verify_off:

; 114  : 		_STL_VERIFY(_Off == 0 || _Ptr, "cannot seek value-initialized vector iterator");

  00017	83 7d 08 00	 cmp	 DWORD PTR __Off$[ebp], 0
  0001b	74 09		 je	 SHORT $LN22@Verify_off
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00024	74 02		 je	 SHORT $LN7@Verify_off
$LN22@Verify_off:
  00026	eb 44		 jmp	 SHORT $LN2@Verify_off
$LN7@Verify_off:
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00032	6a 00		 push	 0
  00034	6a 72		 push	 114			; 00000072H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0GH@FKAHJGEE@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003b	6a 02		 push	 2
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00043	83 c4 18	 add	 esp, 24			; 00000018H
  00046	83 f8 01	 cmp	 eax, 1
  00049	75 01		 jne	 SHORT $LN30@Verify_off
  0004b	cc		 int	 3
$LN30@Verify_off:
  0004c	6a 00		 push	 0
  0004e	6a 72		 push	 114			; 00000072H
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1MO@OJBMIJHH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_1PM@OPIBNBPL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00065	83 c4 14	 add	 esp, 20			; 00000014H
  00068	33 c0		 xor	 eax, eax
  0006a	75 bc		 jne	 SHORT $LN7@Verify_off
$LN2@Verify_off:
  0006c	33 c0		 xor	 eax, eax
  0006e	75 a7		 jne	 SHORT $LN4@Verify_off

; 115  : 		if (_Off < 0)

  00070	83 7d 08 00	 cmp	 DWORD PTR __Off$[ebp], 0
  00074	7d 63		 jge	 SHORT $LN23@Verify_off
$LN10@Verify_off:

; 116  : 			{
; 117  : 			_STL_VERIFY(_Off >= _Mycont->_Myfirst - _Ptr, "cannot seek vector iterator before begin");

  00076	8b 45 f8	 mov	 eax, DWORD PTR __Mycont$[ebp]
  00079	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0007f	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  00082	99		 cdq
  00083	b9 d1 00 00 00	 mov	 ecx, 209		; 000000d1H
  00088	f7 f9		 idiv	 ecx
  0008a	39 45 08	 cmp	 DWORD PTR __Off$[ebp], eax
  0008d	7c 02		 jl	 SHORT $LN13@Verify_off
  0008f	eb 44		 jmp	 SHORT $LN8@Verify_off
$LN13@Verify_off:
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0009b	6a 00		 push	 0
  0009d	6a 75		 push	 117			; 00000075H
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_0GH@FKAHJGEE@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000a4	6a 02		 push	 2
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  000ac	83 c4 18	 add	 esp, 24			; 00000018H
  000af	83 f8 01	 cmp	 eax, 1
  000b2	75 01		 jne	 SHORT $LN31@Verify_off
  000b4	cc		 int	 3
$LN31@Verify_off:
  000b5	6a 00		 push	 0
  000b7	6a 75		 push	 117			; 00000075H
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_1MO@OJBMIJHH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  000be	68 00 00 00 00	 push	 OFFSET ??_C@_1PM@OPIBNBPL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
  000c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000ce	83 c4 14	 add	 esp, 20			; 00000014H
  000d1	33 c0		 xor	 eax, eax
  000d3	75 bc		 jne	 SHORT $LN13@Verify_off
$LN8@Verify_off:
  000d5	33 c0		 xor	 eax, eax
  000d7	75 9d		 jne	 SHORT $LN10@Verify_off
$LN23@Verify_off:

; 118  : 			}
; 119  : 
; 120  : 		if (_Off > 0)

  000d9	83 7d 08 00	 cmp	 DWORD PTR __Off$[ebp], 0
  000dd	7e 63		 jle	 SHORT $LN1@Verify_off
$LN16@Verify_off:

; 121  : 			{
; 122  : 			_STL_VERIFY(_Off <= _Mycont->_Mylast - _Ptr, "cannot seek vector iterator after end");

  000df	8b 45 f8	 mov	 eax, DWORD PTR __Mycont$[ebp]
  000e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  000e8	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  000eb	99		 cdq
  000ec	b9 d1 00 00 00	 mov	 ecx, 209		; 000000d1H
  000f1	f7 f9		 idiv	 ecx
  000f3	39 45 08	 cmp	 DWORD PTR __Off$[ebp], eax
  000f6	7f 02		 jg	 SHORT $LN19@Verify_off
  000f8	eb 44		 jmp	 SHORT $LN14@Verify_off
$LN19@Verify_off:
  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@
  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00104	6a 00		 push	 0
  00106	6a 7a		 push	 122			; 0000007aH
  00108	68 00 00 00 00	 push	 OFFSET ??_C@_0GH@FKAHJGEE@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0010d	6a 02		 push	 2
  0010f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00115	83 c4 18	 add	 esp, 24			; 00000018H
  00118	83 f8 01	 cmp	 eax, 1
  0011b	75 01		 jne	 SHORT $LN32@Verify_off
  0011d	cc		 int	 3
$LN32@Verify_off:
  0011e	6a 00		 push	 0
  00120	6a 7a		 push	 122			; 0000007aH
  00122	68 00 00 00 00	 push	 OFFSET ??_C@_1MO@OJBMIJHH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00127	68 00 00 00 00	 push	 OFFSET ??_C@_1PM@OPIBNBPL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  0012c	68 00 00 00 00	 push	 OFFSET ??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
  00131	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00137	83 c4 14	 add	 esp, 20			; 00000014H
  0013a	33 c0		 xor	 eax, eax
  0013c	75 bc		 jne	 SHORT $LN19@Verify_off
$LN14@Verify_off:
  0013e	33 c0		 xor	 eax, eax
  00140	75 9d		 jne	 SHORT $LN16@Verify_off
$LN1@Verify_off:

; 123  : 			}
; 124  :  #endif /* _ITERATOR_DEBUG_LEVEL == 0 */
; 125  : 		}

  00142	5f		 pop	 edi
  00143	5e		 pop	 esi
  00144	5b		 pop	 ebx
  00145	8b e5		 mov	 esp, ebp
  00147	5d		 pop	 ebp
  00148	c2 04 00	 ret	 4
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEXH@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Verify_offset
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@PAUtagPersonalTableInfo@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@PAUtagPersonalTableInfo@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >, COMDAT
; _this$ = ecx

; 42   : 		{	// construct with pointer _Parg

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12

; 41   : 		: _Ptr(_Parg)

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  0001a	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 43   : 		this->_Adopt(_Pvector);

  0001d	8b 45 0c	 mov	 eax, DWORD PTR __Pvector$[ebp]
  00020	50		 push	 eax
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 44   : 		}

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@PAUtagPersonalTableInfo@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCGlobalInfoManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCGlobalInfoManager@@UAEPAXI@Z PROC			; CGlobalInfoManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CGlobalInfoManager@@UAE@XZ ; CGlobalInfoManager::~CGlobalInfoManager
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 0c 01 00 00	 push	 268			; 0000010cH
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCGlobalInfoManager@@UAEPAXI@Z ENDP			; CGlobalInfoManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?FreeGlobalChatItem@CGlobalInfoManager@@AAE_NPAVCGlobalChatItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pGlobalChatItem$ = 8					; size = 4
?FreeGlobalChatItem@CGlobalInfoManager@@AAE_NPAVCGlobalChatItem@@@Z PROC ; CGlobalInfoManager::FreeGlobalChatItem, COMDAT
; _this$ = ecx

; 1228 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1229 : 	//效验参数
; 1230 : 	ASSERT(pGlobalChatItem!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pGlobalChatItem$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@FreeGlobal
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??FreeGlobalChatItem@CGlobalInfoManager@@AAE_NPAVCGlobalChatItem@@@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN4@FreeGlobal
  00029	cc		 int	 3
$LN4@FreeGlobal:

; 1231 : 	if (pGlobalChatItem==NULL) return false;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pGlobalChatItem$[ebp], 0
  0002e	75 04		 jne	 SHORT $LN2@FreeGlobal
  00030	32 c0		 xor	 al, al
  00032	eb 39		 jmp	 SHORT $LN1@FreeGlobal
$LN2@FreeGlobal:

; 1232 : 
; 1233 : 	//设置变量
; 1234 : 	pGlobalChatItem->m_wIndex=0;

  00034	33 c0		 xor	 eax, eax
  00036	8b 4d 08	 mov	 ecx, DWORD PTR _pGlobalChatItem$[ebp]
  00039	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 1235 : 	ZeroMemory(&pGlobalChatItem->m_ChatServer,sizeof(pGlobalChatItem->m_ChatServer));

  0003d	6a 0a		 push	 10			; 0000000aH
  0003f	6a 00		 push	 0
  00041	8b 45 08	 mov	 eax, DWORD PTR _pGlobalChatItem$[ebp]
  00044	83 c0 06	 add	 eax, 6
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 _memset
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1236 : 
; 1237 : 	//加入存储
; 1238 : 	pGlobalChatItem->m_pNextChatServerPtr=m_pGlobalChatItem;

  00050	8b 45 08	 mov	 eax, DWORD PTR _pGlobalChatItem$[ebp]
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	8b 91 08 01 00
	00		 mov	 edx, DWORD PTR [ecx+264]
  0005c	89 50 2c	 mov	 DWORD PTR [eax+44], edx

; 1239 : 	m_pGlobalChatItem=pGlobalChatItem;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 4d 08	 mov	 ecx, DWORD PTR _pGlobalChatItem$[ebp]
  00065	89 88 08 01 00
	00		 mov	 DWORD PTR [eax+264], ecx

; 1240 : 
; 1241 : 	return true;

  0006b	b0 01		 mov	 al, 1
$LN1@FreeGlobal:

; 1242 : }

  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	5b		 pop	 ebx
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 04 00	 ret	 4
?FreeGlobalChatItem@CGlobalInfoManager@@AAE_NPAVCGlobalChatItem@@@Z ENDP ; CGlobalInfoManager::FreeGlobalChatItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?FreeGlobalServerItem@CGlobalInfoManager@@AAE_NPAVCGlobalServerItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pGlobalServerItem$ = 8					; size = 4
?FreeGlobalServerItem@CGlobalInfoManager@@AAE_NPAVCGlobalServerItem@@@Z PROC ; CGlobalInfoManager::FreeGlobalServerItem, COMDAT
; _this$ = ecx

; 1207 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1208 : 	//效验参数
; 1209 : 	ASSERT(pGlobalServerItem!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pGlobalServerItem$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@FreeGlobal
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??FreeGlobalServerItem@CGlobalInfoManager@@AAE_NPAVCGlobalServerItem@@@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN4@FreeGlobal
  00029	cc		 int	 3
$LN4@FreeGlobal:

; 1210 : 	if (pGlobalServerItem==NULL) return false;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pGlobalServerItem$[ebp], 0
  0002e	75 04		 jne	 SHORT $LN2@FreeGlobal
  00030	32 c0		 xor	 al, al
  00032	eb 4d		 jmp	 SHORT $LN1@FreeGlobal
$LN2@FreeGlobal:

; 1211 : 
; 1212 : 	//设置索引
; 1213 : 	pGlobalServerItem->m_MapUserID.RemoveAll();

  00034	8b 4d 08	 mov	 ecx, DWORD PTR _pGlobalServerItem$[ebp]
  00037	81 c1 24 03 00
	00		 add	 ecx, 804		; 00000324H
  0003d	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveAll

; 1214 : 
; 1215 : 	//设置变量
; 1216 : 	pGlobalServerItem->m_wIndex=0;

  00042	33 c0		 xor	 eax, eax
  00044	8b 4d 08	 mov	 ecx, DWORD PTR _pGlobalServerItem$[ebp]
  00047	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 1217 : 	ZeroMemory(&pGlobalServerItem->m_GameServer,sizeof(pGlobalServerItem->m_GameServer));

  0004b	68 9b 00 00 00	 push	 155			; 0000009bH
  00050	6a 00		 push	 0
  00052	8b 45 08	 mov	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  00055	83 c0 06	 add	 eax, 6
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 _memset
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1218 : 
; 1219 : 	//加入存储
; 1220 : 	pGlobalServerItem->m_pNextServerItemPtr=m_pGlobalServerItem;

  00061	8b 45 08	 mov	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	8b 91 04 01 00
	00		 mov	 edx, DWORD PTR [ecx+260]
  0006d	89 90 40 03 00
	00		 mov	 DWORD PTR [eax+832], edx

; 1221 : 	m_pGlobalServerItem=pGlobalServerItem;

  00073	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00076	8b 4d 08	 mov	 ecx, DWORD PTR _pGlobalServerItem$[ebp]
  00079	89 88 04 01 00
	00		 mov	 DWORD PTR [eax+260], ecx

; 1222 : 
; 1223 : 	return true;

  0007f	b0 01		 mov	 al, 1
$LN1@FreeGlobal:

; 1224 : }

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 04 00	 ret	 4
?FreeGlobalServerItem@CGlobalInfoManager@@AAE_NPAVCGlobalServerItem@@@Z ENDP ; CGlobalInfoManager::FreeGlobalServerItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?FreeGlobalPlazaItem@CGlobalInfoManager@@AAE_NPAVCGlobalPlazaItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pGlobalPlazaItem$ = 8					; size = 4
?FreeGlobalPlazaItem@CGlobalInfoManager@@AAE_NPAVCGlobalPlazaItem@@@Z PROC ; CGlobalInfoManager::FreeGlobalPlazaItem, COMDAT
; _this$ = ecx

; 1189 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1190 : 	//效验参数
; 1191 : 	ASSERT(pGlobalPlazaItem!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pGlobalPlazaItem$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@FreeGlobal
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??FreeGlobalPlazaItem@CGlobalInfoManager@@AAE_NPAVCGlobalPlazaItem@@@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN4@FreeGlobal
  00029	cc		 int	 3
$LN4@FreeGlobal:

; 1192 : 	if (pGlobalPlazaItem==NULL) return false;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pGlobalPlazaItem$[ebp], 0
  0002e	75 04		 jne	 SHORT $LN2@FreeGlobal
  00030	32 c0		 xor	 al, al
  00032	eb 39		 jmp	 SHORT $LN1@FreeGlobal
$LN2@FreeGlobal:

; 1193 : 
; 1194 : 	//设置变量
; 1195 : 	pGlobalPlazaItem->m_wIndex=0;

  00034	33 c0		 xor	 eax, eax
  00036	8b 4d 08	 mov	 ecx, DWORD PTR _pGlobalPlazaItem$[ebp]
  00039	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 1196 : 	ZeroMemory(&pGlobalPlazaItem->m_GamePlaza,sizeof(pGlobalPlazaItem->m_GamePlaza));

  0003d	6a 42		 push	 66			; 00000042H
  0003f	6a 00		 push	 0
  00041	8b 45 08	 mov	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]
  00044	83 c0 06	 add	 eax, 6
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 _memset
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1197 : 
; 1198 : 	//加入存储
; 1199 : 	pGlobalPlazaItem->m_pNextPlazaItemPtr=m_pGlobalPlazaItem;

  00050	8b 45 08	 mov	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	8b 91 00 01 00
	00		 mov	 edx, DWORD PTR [ecx+256]
  0005c	89 50 64	 mov	 DWORD PTR [eax+100], edx

; 1200 : 	m_pGlobalPlazaItem=pGlobalPlazaItem;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 4d 08	 mov	 ecx, DWORD PTR _pGlobalPlazaItem$[ebp]
  00065	89 88 00 01 00
	00		 mov	 DWORD PTR [eax+256], ecx

; 1201 : 
; 1202 : 	return true;

  0006b	b0 01		 mov	 al, 1
$LN1@FreeGlobal:

; 1203 : }

  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	5b		 pop	 ebx
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 04 00	 ret	 4
?FreeGlobalPlazaItem@CGlobalInfoManager@@AAE_NPAVCGlobalPlazaItem@@@Z ENDP ; CGlobalInfoManager::FreeGlobalPlazaItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?FreeGlobalUserItem@CGlobalInfoManager@@AAE_NPAVCGlobalUserItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pGlobalUserItem$ = 8					; size = 4
?FreeGlobalUserItem@CGlobalInfoManager@@AAE_NPAVCGlobalUserItem@@@Z PROC ; CGlobalInfoManager::FreeGlobalUserItem, COMDAT
; _this$ = ecx

; 1168 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1169 : 	//效验参数
; 1170 : 	ASSERT(pGlobalUserItem!=NULL);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pGlobalUserItem$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@FreeGlobal
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??FreeGlobalUserItem@CGlobalInfoManager@@AAE_NPAVCGlobalUserItem@@@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00020	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00025	85 c0		 test	 eax, eax
  00027	74 01		 je	 SHORT $LN4@FreeGlobal
  00029	cc		 int	 3
$LN4@FreeGlobal:

; 1171 : 	if (pGlobalUserItem==NULL) return false;

  0002a	83 7d 08 00	 cmp	 DWORD PTR _pGlobalUserItem$[ebp], 0
  0002e	75 04		 jne	 SHORT $LN2@FreeGlobal
  00030	32 c0		 xor	 al, al
  00032	eb 68		 jmp	 SHORT $LN1@FreeGlobal
$LN2@FreeGlobal:

; 1172 : 
; 1173 : 	//设置变量
; 1174 : 	pGlobalUserItem->m_dwUserID=0L;

  00034	8b 45 08	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  00037	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1175 : 	pGlobalUserItem->m_dwGameID=0L;

  0003e	8b 45 08	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  00041	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 1176 : 	pGlobalUserItem->m_szNickName[0]=0;

  00048	b8 01 00 00 00	 mov	 eax, 1
  0004d	6b c8 00	 imul	 ecx, eax, 0
  00050	8b 55 08	 mov	 edx, DWORD PTR _pGlobalUserItem$[ebp]
  00053	c6 44 0a 0c 00	 mov	 BYTE PTR [edx+ecx+12], 0

; 1177 : 	ZeroMemory(&pGlobalUserItem->m_UserInfo, sizeof(tagUserInfo));

  00058	68 10 01 00 00	 push	 272			; 00000110H
  0005d	6a 00		 push	 0
  0005f	8b 45 08	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  00062	83 c0 2f	 add	 eax, 47			; 0000002fH
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 _memset
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1178 : 	pGlobalUserItem->m_GlobalServerItemArray.RemoveAll();

  0006e	8b 4d 08	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  00071	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  00077	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXXZ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::RemoveAll

; 1179 : 
; 1180 : 	//加入存储
; 1181 : 	pGlobalUserItem->m_pNextUserItemPtr=m_pGlobalUserItem;

  0007c	8b 45 08	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  0007f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	8b 91 fc 00 00
	00		 mov	 edx, DWORD PTR [ecx+252]
  00088	89 90 54 01 00
	00		 mov	 DWORD PTR [eax+340], edx

; 1182 : 	m_pGlobalUserItem=pGlobalUserItem;

  0008e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00091	8b 4d 08	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  00094	89 88 fc 00 00
	00		 mov	 DWORD PTR [eax+252], ecx

; 1183 : 
; 1184 : 	return true;

  0009a	b0 01		 mov	 al, 1
$LN1@FreeGlobal:

; 1185 : }

  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c2 04 00	 ret	 4
?FreeGlobalUserItem@CGlobalInfoManager@@AAE_NPAVCGlobalUserItem@@@Z ENDP ; CGlobalInfoManager::FreeGlobalUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ
_TEXT	SEGMENT
tv82 = -112						; size = 4
tv88 = -108						; size = 4
tv85 = -104						; size = 4
$T2 = -100						; size = 4
$T3 = -96						; size = 4
_pGlobalChatItem$4 = -28				; size = 4
_pGlobalChatItem$5 = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ PROC ; CGlobalInfoManager::CreateGlobalChatItem, COMDAT
; _this$ = ecx

; 1145 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 60	 sub	 esp, 96			; 00000060H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1146 : 	//使用存储
; 1147 : 	if (m_pGlobalChatItem!=NULL)

  0002f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00032	83 b8 08 01 00
	00 00		 cmp	 DWORD PTR [eax+264], 0
  00039	74 30		 je	 SHORT $LN2@CreateGlob

; 1148 : 	{
; 1149 : 		CGlobalChatItem * pGlobalChatItem=m_pGlobalChatItem;

  0003b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 88 08 01 00
	00		 mov	 ecx, DWORD PTR [eax+264]
  00044	89 4d e8	 mov	 DWORD PTR _pGlobalChatItem$5[ebp], ecx

; 1150 : 		m_pGlobalChatItem=m_pGlobalChatItem->m_pNextChatServerPtr;

  00047	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 88 08 01 00
	00		 mov	 ecx, DWORD PTR [eax+264]
  00050	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00053	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  00056	89 82 08 01 00
	00		 mov	 DWORD PTR [edx+264], eax

; 1151 : 		pGlobalChatItem->m_pNextChatServerPtr=NULL;

  0005c	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalChatItem$5[ebp]
  0005f	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [eax+44], 0

; 1152 : 		return pGlobalChatItem;

  00066	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalChatItem$5[ebp]
  00069	eb 6b		 jmp	 SHORT $LN1@CreateGlob
$LN2@CreateGlob:

; 1153 : 	}
; 1154 : 
; 1155 : 	//创建对象
; 1156 : 	try 

  0006b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1157 : 	{ 
; 1158 : 		CGlobalChatItem * pGlobalChatItem=new CGlobalChatItem;

  00072	6a 30		 push	 48			; 00000030H
  00074	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00079	83 c4 04	 add	 esp, 4
  0007c	89 45 98	 mov	 DWORD PTR tv85[ebp], eax
  0007f	8b 45 98	 mov	 eax, DWORD PTR tv85[ebp]
  00082	89 45 9c	 mov	 DWORD PTR $T2[ebp], eax
  00085	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00089	83 7d 9c 00	 cmp	 DWORD PTR $T2[ebp], 0
  0008d	74 13		 je	 SHORT $LN5@CreateGlob
  0008f	8b 4d 9c	 mov	 ecx, DWORD PTR $T2[ebp]
  00092	e8 00 00 00 00	 call	 ??0CGlobalChatItem@@IAE@XZ ; CGlobalChatItem::CGlobalChatItem
  00097	89 45 94	 mov	 DWORD PTR tv88[ebp], eax
  0009a	8b 4d 94	 mov	 ecx, DWORD PTR tv88[ebp]
  0009d	89 4d 90	 mov	 DWORD PTR tv82[ebp], ecx
  000a0	eb 07		 jmp	 SHORT $LN6@CreateGlob
$LN5@CreateGlob:
  000a2	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN6@CreateGlob:
  000a9	8b 55 90	 mov	 edx, DWORD PTR tv82[ebp]
  000ac	89 55 a0	 mov	 DWORD PTR $T3[ebp], edx
  000af	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  000b3	8b 45 a0	 mov	 eax, DWORD PTR $T3[ebp]
  000b6	89 45 e4	 mov	 DWORD PTR _pGlobalChatItem$4[ebp], eax

; 1159 : 		return pGlobalChatItem;

  000b9	8b 45 e4	 mov	 eax, DWORD PTR _pGlobalChatItem$4[ebp]
  000bc	eb 18		 jmp	 SHORT $LN1@CreateGlob
__catch$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ$0:

; 1160 : 	}
; 1161 : 	catch (...) {}

  000be	b8 00 00 00 00	 mov	 eax, $LN11@CreateGlob
  000c3	c3		 ret	 0
  000c4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000cb	eb 07		 jmp	 SHORT __tryend$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ$1
$LN11@CreateGlob:
  000cd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ$1:

; 1162 : 
; 1163 : 	return NULL;

  000d4	33 c0		 xor	 eax, eax
$LN1@CreateGlob:

; 1164 : }

  000d6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000d9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e0	59		 pop	 ecx
  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ$2:
  00000	6a 30		 push	 48			; 00000030H
  00002	8b 45 9c	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
__ehhandler$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ:
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a 8c	 mov	 ecx, DWORD PTR [edx-116]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ ENDP ; CGlobalInfoManager::CreateGlobalChatItem
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ
_TEXT	SEGMENT
tv82 = -112						; size = 4
tv88 = -108						; size = 4
tv85 = -104						; size = 4
$T2 = -100						; size = 4
$T3 = -96						; size = 4
_pGlobalServerItem$4 = -28				; size = 4
_pGlobalServerItem$5 = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ PROC ; CGlobalInfoManager::CreateGlobalServerItem, COMDAT
; _this$ = ecx

; 1122 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 60	 sub	 esp, 96			; 00000060H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1123 : 	//使用存储
; 1124 : 	if (m_pGlobalServerItem!=NULL)

  0002f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00032	83 b8 04 01 00
	00 00		 cmp	 DWORD PTR [eax+260], 0
  00039	74 36		 je	 SHORT $LN2@CreateGlob

; 1125 : 	{
; 1126 : 		CGlobalServerItem * pGlobalServerItem=m_pGlobalServerItem;

  0003b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 88 04 01 00
	00		 mov	 ecx, DWORD PTR [eax+260]
  00044	89 4d e8	 mov	 DWORD PTR _pGlobalServerItem$5[ebp], ecx

; 1127 : 		m_pGlobalServerItem=m_pGlobalServerItem->m_pNextServerItemPtr;

  00047	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 88 04 01 00
	00		 mov	 ecx, DWORD PTR [eax+260]
  00050	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00053	8b 81 40 03 00
	00		 mov	 eax, DWORD PTR [ecx+832]
  00059	89 82 04 01 00
	00		 mov	 DWORD PTR [edx+260], eax

; 1128 : 		pGlobalServerItem->m_pNextServerItemPtr=NULL;

  0005f	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalServerItem$5[ebp]
  00062	c7 80 40 03 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+832], 0

; 1129 : 		return pGlobalServerItem;

  0006c	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalServerItem$5[ebp]
  0006f	eb 6e		 jmp	 SHORT $LN1@CreateGlob
$LN2@CreateGlob:

; 1130 : 	}
; 1131 : 
; 1132 : 	//创建对象
; 1133 : 	try 

  00071	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1134 : 	{ 
; 1135 : 		CGlobalServerItem * pGlobalServerItem=new CGlobalServerItem;

  00078	68 44 03 00 00	 push	 836			; 00000344H
  0007d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00082	83 c4 04	 add	 esp, 4
  00085	89 45 98	 mov	 DWORD PTR tv85[ebp], eax
  00088	8b 45 98	 mov	 eax, DWORD PTR tv85[ebp]
  0008b	89 45 9c	 mov	 DWORD PTR $T2[ebp], eax
  0008e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00092	83 7d 9c 00	 cmp	 DWORD PTR $T2[ebp], 0
  00096	74 13		 je	 SHORT $LN5@CreateGlob
  00098	8b 4d 9c	 mov	 ecx, DWORD PTR $T2[ebp]
  0009b	e8 00 00 00 00	 call	 ??0CGlobalServerItem@@IAE@XZ ; CGlobalServerItem::CGlobalServerItem
  000a0	89 45 94	 mov	 DWORD PTR tv88[ebp], eax
  000a3	8b 4d 94	 mov	 ecx, DWORD PTR tv88[ebp]
  000a6	89 4d 90	 mov	 DWORD PTR tv82[ebp], ecx
  000a9	eb 07		 jmp	 SHORT $LN6@CreateGlob
$LN5@CreateGlob:
  000ab	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN6@CreateGlob:
  000b2	8b 55 90	 mov	 edx, DWORD PTR tv82[ebp]
  000b5	89 55 a0	 mov	 DWORD PTR $T3[ebp], edx
  000b8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  000bc	8b 45 a0	 mov	 eax, DWORD PTR $T3[ebp]
  000bf	89 45 e4	 mov	 DWORD PTR _pGlobalServerItem$4[ebp], eax

; 1136 : 		return pGlobalServerItem;

  000c2	8b 45 e4	 mov	 eax, DWORD PTR _pGlobalServerItem$4[ebp]
  000c5	eb 18		 jmp	 SHORT $LN1@CreateGlob
__catch$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ$0:

; 1137 : 	}
; 1138 : 	catch (...) {}

  000c7	b8 00 00 00 00	 mov	 eax, $LN11@CreateGlob
  000cc	c3		 ret	 0
  000cd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000d4	eb 07		 jmp	 SHORT __tryend$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ$1
$LN11@CreateGlob:
  000d6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ$1:

; 1139 : 
; 1140 : 	return NULL;

  000dd	33 c0		 xor	 eax, eax
$LN1@CreateGlob:

; 1141 : }

  000df	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000e2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e9	59		 pop	 ecx
  000ea	5f		 pop	 edi
  000eb	5e		 pop	 esi
  000ec	5b		 pop	 ebx
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ$2:
  00000	68 44 03 00 00	 push	 836			; 00000344H
  00005	8b 45 9c	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a 8c	 mov	 ecx, DWORD PTR [edx-116]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ ENDP ; CGlobalInfoManager::CreateGlobalServerItem
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ
_TEXT	SEGMENT
tv82 = -112						; size = 4
tv88 = -108						; size = 4
tv85 = -104						; size = 4
$T2 = -100						; size = 4
$T3 = -96						; size = 4
_pGlobalPlazaItem$4 = -28				; size = 4
_pGlobalPlazaItem$5 = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ PROC ; CGlobalInfoManager::CreateGlobalPlazaItem, COMDAT
; _this$ = ecx

; 1099 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 60	 sub	 esp, 96			; 00000060H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1100 : 	//使用存储
; 1101 : 	if (m_pGlobalPlazaItem!=NULL)

  0002f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00032	83 b8 00 01 00
	00 00		 cmp	 DWORD PTR [eax+256], 0
  00039	74 30		 je	 SHORT $LN2@CreateGlob

; 1102 : 	{
; 1103 : 		CGlobalPlazaItem * pGlobalPlazaItem=m_pGlobalPlazaItem;

  0003b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 88 00 01 00
	00		 mov	 ecx, DWORD PTR [eax+256]
  00044	89 4d e8	 mov	 DWORD PTR _pGlobalPlazaItem$5[ebp], ecx

; 1104 : 		m_pGlobalPlazaItem=m_pGlobalPlazaItem->m_pNextPlazaItemPtr;

  00047	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 88 00 01 00
	00		 mov	 ecx, DWORD PTR [eax+256]
  00050	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00053	8b 41 64	 mov	 eax, DWORD PTR [ecx+100]
  00056	89 82 00 01 00
	00		 mov	 DWORD PTR [edx+256], eax

; 1105 : 		pGlobalPlazaItem->m_pNextPlazaItemPtr=NULL;

  0005c	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalPlazaItem$5[ebp]
  0005f	c7 40 64 00 00
	00 00		 mov	 DWORD PTR [eax+100], 0

; 1106 : 		return pGlobalPlazaItem;

  00066	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalPlazaItem$5[ebp]
  00069	eb 6b		 jmp	 SHORT $LN1@CreateGlob
$LN2@CreateGlob:

; 1107 : 	}
; 1108 : 
; 1109 : 	//创建对象
; 1110 : 	try 

  0006b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1111 : 	{ 
; 1112 : 		CGlobalPlazaItem * pGlobalPlazaItem=new CGlobalPlazaItem;

  00072	6a 68		 push	 104			; 00000068H
  00074	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00079	83 c4 04	 add	 esp, 4
  0007c	89 45 98	 mov	 DWORD PTR tv85[ebp], eax
  0007f	8b 45 98	 mov	 eax, DWORD PTR tv85[ebp]
  00082	89 45 9c	 mov	 DWORD PTR $T2[ebp], eax
  00085	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00089	83 7d 9c 00	 cmp	 DWORD PTR $T2[ebp], 0
  0008d	74 13		 je	 SHORT $LN5@CreateGlob
  0008f	8b 4d 9c	 mov	 ecx, DWORD PTR $T2[ebp]
  00092	e8 00 00 00 00	 call	 ??0CGlobalPlazaItem@@IAE@XZ ; CGlobalPlazaItem::CGlobalPlazaItem
  00097	89 45 94	 mov	 DWORD PTR tv88[ebp], eax
  0009a	8b 4d 94	 mov	 ecx, DWORD PTR tv88[ebp]
  0009d	89 4d 90	 mov	 DWORD PTR tv82[ebp], ecx
  000a0	eb 07		 jmp	 SHORT $LN6@CreateGlob
$LN5@CreateGlob:
  000a2	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN6@CreateGlob:
  000a9	8b 55 90	 mov	 edx, DWORD PTR tv82[ebp]
  000ac	89 55 a0	 mov	 DWORD PTR $T3[ebp], edx
  000af	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  000b3	8b 45 a0	 mov	 eax, DWORD PTR $T3[ebp]
  000b6	89 45 e4	 mov	 DWORD PTR _pGlobalPlazaItem$4[ebp], eax

; 1113 : 		return pGlobalPlazaItem;

  000b9	8b 45 e4	 mov	 eax, DWORD PTR _pGlobalPlazaItem$4[ebp]
  000bc	eb 18		 jmp	 SHORT $LN1@CreateGlob
__catch$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ$0:

; 1114 : 	}
; 1115 : 	catch (...) {}

  000be	b8 00 00 00 00	 mov	 eax, $LN11@CreateGlob
  000c3	c3		 ret	 0
  000c4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000cb	eb 07		 jmp	 SHORT __tryend$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ$1
$LN11@CreateGlob:
  000cd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ$1:

; 1116 : 
; 1117 : 	return NULL;

  000d4	33 c0		 xor	 eax, eax
$LN1@CreateGlob:

; 1118 : }

  000d6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000d9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e0	59		 pop	 ecx
  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ$2:
  00000	6a 68		 push	 104			; 00000068H
  00002	8b 45 9c	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
__ehhandler$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ:
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a 8c	 mov	 ecx, DWORD PTR [edx-116]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ ENDP ; CGlobalInfoManager::CreateGlobalPlazaItem
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ
_TEXT	SEGMENT
tv82 = -112						; size = 4
tv88 = -108						; size = 4
tv85 = -104						; size = 4
$T2 = -100						; size = 4
$T3 = -96						; size = 4
_pGlobalUserItem$4 = -28				; size = 4
_pGlobalUserItem$5 = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ PROC ; CGlobalInfoManager::CreateGlobalUserItem, COMDAT
; _this$ = ecx

; 1076 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 60	 sub	 esp, 96			; 00000060H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1077 : 	//使用存储
; 1078 : 	if (m_pGlobalUserItem!=NULL)

  0002f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00032	83 b8 fc 00 00
	00 00		 cmp	 DWORD PTR [eax+252], 0
  00039	74 36		 je	 SHORT $LN2@CreateGlob

; 1079 : 	{
; 1080 : 		CGlobalUserItem * pGlobalUserItem=m_pGlobalUserItem;

  0003b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 88 fc 00 00
	00		 mov	 ecx, DWORD PTR [eax+252]
  00044	89 4d e8	 mov	 DWORD PTR _pGlobalUserItem$5[ebp], ecx

; 1081 : 		m_pGlobalUserItem=m_pGlobalUserItem->m_pNextUserItemPtr;

  00047	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 88 fc 00 00
	00		 mov	 ecx, DWORD PTR [eax+252]
  00050	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00053	8b 81 54 01 00
	00		 mov	 eax, DWORD PTR [ecx+340]
  00059	89 82 fc 00 00
	00		 mov	 DWORD PTR [edx+252], eax

; 1082 : 		pGlobalUserItem->m_pNextUserItemPtr=NULL;

  0005f	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalUserItem$5[ebp]
  00062	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0

; 1083 : 		return pGlobalUserItem;

  0006c	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalUserItem$5[ebp]
  0006f	eb 6e		 jmp	 SHORT $LN1@CreateGlob
$LN2@CreateGlob:

; 1084 : 	}
; 1085 : 
; 1086 : 	//创建对象
; 1087 : 	try 

  00071	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1088 : 	{ 
; 1089 : 		CGlobalUserItem * pGlobalUserItem=new CGlobalUserItem;

  00078	68 58 01 00 00	 push	 344			; 00000158H
  0007d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00082	83 c4 04	 add	 esp, 4
  00085	89 45 98	 mov	 DWORD PTR tv85[ebp], eax
  00088	8b 45 98	 mov	 eax, DWORD PTR tv85[ebp]
  0008b	89 45 9c	 mov	 DWORD PTR $T2[ebp], eax
  0008e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00092	83 7d 9c 00	 cmp	 DWORD PTR $T2[ebp], 0
  00096	74 13		 je	 SHORT $LN5@CreateGlob
  00098	8b 4d 9c	 mov	 ecx, DWORD PTR $T2[ebp]
  0009b	e8 00 00 00 00	 call	 ??0CGlobalUserItem@@IAE@XZ ; CGlobalUserItem::CGlobalUserItem
  000a0	89 45 94	 mov	 DWORD PTR tv88[ebp], eax
  000a3	8b 4d 94	 mov	 ecx, DWORD PTR tv88[ebp]
  000a6	89 4d 90	 mov	 DWORD PTR tv82[ebp], ecx
  000a9	eb 07		 jmp	 SHORT $LN6@CreateGlob
$LN5@CreateGlob:
  000ab	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN6@CreateGlob:
  000b2	8b 55 90	 mov	 edx, DWORD PTR tv82[ebp]
  000b5	89 55 a0	 mov	 DWORD PTR $T3[ebp], edx
  000b8	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  000bc	8b 45 a0	 mov	 eax, DWORD PTR $T3[ebp]
  000bf	89 45 e4	 mov	 DWORD PTR _pGlobalUserItem$4[ebp], eax

; 1090 : 		return pGlobalUserItem;

  000c2	8b 45 e4	 mov	 eax, DWORD PTR _pGlobalUserItem$4[ebp]
  000c5	eb 18		 jmp	 SHORT $LN1@CreateGlob
__catch$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ$0:

; 1091 : 	}
; 1092 : 	catch (...) {}

  000c7	b8 00 00 00 00	 mov	 eax, $LN11@CreateGlob
  000cc	c3		 ret	 0
  000cd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000d4	eb 07		 jmp	 SHORT __tryend$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ$1
$LN11@CreateGlob:
  000d6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ$1:

; 1093 : 
; 1094 : 	return NULL;

  000dd	33 c0		 xor	 eax, eax
$LN1@CreateGlob:

; 1095 : }

  000df	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000e2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e9	59		 pop	 ecx
  000ea	5f		 pop	 edi
  000eb	5e		 pop	 esi
  000ec	5b		 pop	 ebx
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ$2:
  00000	68 58 01 00 00	 push	 344			; 00000158H
  00005	8b 45 9c	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a 8c	 mov	 ecx, DWORD PTR [edx-116]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ ENDP ; CGlobalInfoManager::CreateGlobalUserItem
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?EnumChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_pGlobalChatItem$ = -12					; size = 4
_wChatID$ = -8						; size = 2
_this$ = -4						; size = 4
_Position$ = 8						; size = 4
?EnumChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@AAPAU__POSITION@@@Z PROC ; CGlobalInfoManager::EnumChatItem, COMDAT
; _this$ = ecx

; 1062 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1063 : 	//变量定义
; 1064 : 	WORD wChatID=0L;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wChatID$[ebp], ax

; 1065 : 	CGlobalChatItem * pGlobalChatItem=NULL;

  00012	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGlobalChatItem$[ebp], 0

; 1066 : 
; 1067 : 	//获取对象
; 1068 : 	if (Position==NULL) Position=m_MapChatID.GetStartPosition();

  00019	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  0001c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001f	75 10		 jne	 SHORT $LN2@EnumChatIt
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 58	 add	 ecx, 88			; 00000058H
  00027	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetStartPosition
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _Position$[ebp]
  0002f	89 01		 mov	 DWORD PTR [ecx], eax
$LN2@EnumChatIt:

; 1069 : 	if (Position!=NULL)	m_MapChatID.GetNextAssoc(Position,wChatID,pGlobalChatItem);

  00031	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  00034	83 38 00	 cmp	 DWORD PTR [eax], 0
  00037	74 17		 je	 SHORT $LN3@EnumChatIt
  00039	8d 45 f4	 lea	 eax, DWORD PTR _pGlobalChatItem$[ebp]
  0003c	50		 push	 eax
  0003d	8d 4d f8	 lea	 ecx, DWORD PTR _wChatID$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR _Position$[ebp]
  00044	52		 push	 edx
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	83 c1 58	 add	 ecx, 88			; 00000058H
  0004b	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalChatItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetNextAssoc
$LN3@EnumChatIt:

; 1070 : 
; 1071 : 	return pGlobalChatItem;

  00050	8b 45 f4	 mov	 eax, DWORD PTR _pGlobalChatItem$[ebp]

; 1072 : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?EnumChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@AAPAU__POSITION@@@Z ENDP ; CGlobalInfoManager::EnumChatItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?EnumServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_pGlobalServerItem$ = -12				; size = 4
_wServerID$ = -8					; size = 2
_this$ = -4						; size = 4
_Position$ = 8						; size = 4
?EnumServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@AAPAU__POSITION@@@Z PROC ; CGlobalInfoManager::EnumServerItem, COMDAT
; _this$ = ecx

; 1048 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1049 : 	//变量定义
; 1050 : 	WORD wServerID=0L;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wServerID$[ebp], ax

; 1051 : 	CGlobalServerItem * pGlobalServerItem=NULL;

  00012	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGlobalServerItem$[ebp], 0

; 1052 : 
; 1053 : 	//获取对象
; 1054 : 	if (Position==NULL) Position=m_MapServerID.GetStartPosition();

  00019	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  0001c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001f	75 10		 jne	 SHORT $LN2@EnumServer
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00027	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetStartPosition
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _Position$[ebp]
  0002f	89 01		 mov	 DWORD PTR [ecx], eax
$LN2@EnumServer:

; 1055 : 	if (Position!=NULL)	m_MapServerID.GetNextAssoc(Position,wServerID,pGlobalServerItem);

  00031	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  00034	83 38 00	 cmp	 DWORD PTR [eax], 0
  00037	74 17		 je	 SHORT $LN3@EnumServer
  00039	8d 45 f4	 lea	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  0003c	50		 push	 eax
  0003d	8d 4d f8	 lea	 ecx, DWORD PTR _wServerID$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR _Position$[ebp]
  00044	52		 push	 edx
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0004b	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalServerItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetNextAssoc
$LN3@EnumServer:

; 1056 : 
; 1057 : 	return pGlobalServerItem;

  00050	8b 45 f4	 mov	 eax, DWORD PTR _pGlobalServerItem$[ebp]

; 1058 : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?EnumServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@AAPAU__POSITION@@@Z ENDP ; CGlobalInfoManager::EnumServerItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?EnumPlazaItem@CGlobalInfoManager@@QAEPAVCGlobalPlazaItem@@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_pGlobalPlazaItem$ = -12				; size = 4
_wPlazaID$ = -8						; size = 2
_this$ = -4						; size = 4
_Position$ = 8						; size = 4
?EnumPlazaItem@CGlobalInfoManager@@QAEPAVCGlobalPlazaItem@@AAPAU__POSITION@@@Z PROC ; CGlobalInfoManager::EnumPlazaItem, COMDAT
; _this$ = ecx

; 1034 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1035 : 	//变量定义
; 1036 : 	WORD wPlazaID=0L;

  0000c	33 c0		 xor	 eax, eax
  0000e	66 89 45 f8	 mov	 WORD PTR _wPlazaID$[ebp], ax

; 1037 : 	CGlobalPlazaItem * pGlobalPlazaItem=NULL;

  00012	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGlobalPlazaItem$[ebp], 0

; 1038 : 
; 1039 : 	//获取对象
; 1040 : 	if (Position==NULL) Position=m_MapPlazaID.GetStartPosition();

  00019	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  0001c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001f	75 10		 jne	 SHORT $LN2@EnumPlazaI
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 20	 add	 ecx, 32			; 00000020H
  00027	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetStartPosition
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _Position$[ebp]
  0002f	89 01		 mov	 DWORD PTR [ecx], eax
$LN2@EnumPlazaI:

; 1041 : 	if (Position!=NULL)	m_MapPlazaID.GetNextAssoc(Position,wPlazaID,pGlobalPlazaItem);

  00031	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  00034	83 38 00	 cmp	 DWORD PTR [eax], 0
  00037	74 17		 je	 SHORT $LN3@EnumPlazaI
  00039	8d 45 f4	 lea	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]
  0003c	50		 push	 eax
  0003d	8d 4d f8	 lea	 ecx, DWORD PTR _wPlazaID$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR _Position$[ebp]
  00044	52		 push	 edx
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	83 c1 20	 add	 ecx, 32			; 00000020H
  0004b	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalPlazaItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetNextAssoc
$LN3@EnumPlazaI:

; 1042 : 
; 1043 : 	return pGlobalPlazaItem;

  00050	8b 45 f4	 mov	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]

; 1044 : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?EnumPlazaItem@CGlobalInfoManager@@QAEPAVCGlobalPlazaItem@@AAPAU__POSITION@@@Z ENDP ; CGlobalInfoManager::EnumPlazaItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?EnumUserItem@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_pGlobalUserItem$ = -12					; size = 4
_dwUserID$ = -8						; size = 4
_this$ = -4						; size = 4
_Position$ = 8						; size = 4
?EnumUserItem@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@AAPAU__POSITION@@@Z PROC ; CGlobalInfoManager::EnumUserItem, COMDAT
; _this$ = ecx

; 1020 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1021 : 	//变量定义
; 1022 : 	DWORD dwUserID=0L;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwUserID$[ebp], 0

; 1023 : 	CGlobalUserItem * pGlobalUserItem=NULL;

  00013	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGlobalUserItem$[ebp], 0

; 1024 : 
; 1025 : 	//获取对象
; 1026 : 	if (Position==NULL) Position=m_MapUserID.GetStartPosition();

  0001a	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  0001d	83 38 00	 cmp	 DWORD PTR [eax], 0
  00020	75 10		 jne	 SHORT $LN2@EnumUserIt
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	83 c1 04	 add	 ecx, 4
  00028	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetStartPosition
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _Position$[ebp]
  00030	89 01		 mov	 DWORD PTR [ecx], eax
$LN2@EnumUserIt:

; 1027 : 	if (Position!=NULL)	m_MapUserID.GetNextAssoc(Position,dwUserID,pGlobalUserItem);

  00032	8b 45 08	 mov	 eax, DWORD PTR _Position$[ebp]
  00035	83 38 00	 cmp	 DWORD PTR [eax], 0
  00038	74 17		 je	 SHORT $LN3@EnumUserIt
  0003a	8d 45 f4	 lea	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  0003d	50		 push	 eax
  0003e	8d 4d f8	 lea	 ecx, DWORD PTR _dwUserID$[ebp]
  00041	51		 push	 ecx
  00042	8b 55 08	 mov	 edx, DWORD PTR _Position$[ebp]
  00045	52		 push	 edx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	83 c1 04	 add	 ecx, 4
  0004c	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCGlobalUserItem@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetNextAssoc
$LN3@EnumUserIt:

; 1028 : 
; 1029 : 	return pGlobalUserItem;

  00051	8b 45 f4	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]

; 1030 : }

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
?EnumUserItem@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@AAPAU__POSITION@@@Z ENDP ; CGlobalInfoManager::EnumUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?SearchUserItemByNickName@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@PBD@Z
_TEXT	SEGMENT
_pGlobalUserItem$ = -8					; size = 4
_this$ = -4						; size = 4
_pszNickName$ = 8					; size = 4
?SearchUserItemByNickName@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@PBD@Z PROC ; CGlobalInfoManager::SearchUserItemByNickName, COMDAT
; _this$ = ecx

; 1010 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1011 : 	//寻找用户
; 1012 : 	VOID * pGlobalUserItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGlobalUserItem$[ebp], 0

; 1013 : 	m_MapNickName.Lookup(pszNickName,pGlobalUserItem);

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _pszNickName$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00024	e8 00 00 00 00	 call	 ?Lookup@CMapStringToPtr@@QBEHPBDAAPAX@Z ; CMapStringToPtr::Lookup

; 1014 : 
; 1015 : 	return (CGlobalUserItem *)pGlobalUserItem;

  00029	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]

; 1016 : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?SearchUserItemByNickName@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@PBD@Z ENDP ; CGlobalInfoManager::SearchUserItemByNickName
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?SearchUserItemByGameID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z
_TEXT	SEGMENT
_pGlobalUserItem$ = -8					; size = 4
_this$ = -4						; size = 4
_dwGameID$ = 8						; size = 4
?SearchUserItemByGameID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z PROC ; CGlobalInfoManager::SearchUserItemByGameID, COMDAT
; _this$ = ecx

; 1000 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1001 : 	//寻找用户
; 1002 : 	CGlobalUserItem * pGlobalUserItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGlobalUserItem$[ebp], 0

; 1003 : 	m_MapGameID.Lookup(dwGameID,pGlobalUserItem);

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _dwGameID$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	81 c1 c4 00 00
	00		 add	 ecx, 196		; 000000c4H
  00024	e8 00 00 00 00	 call	 ?Lookup@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEHKAAPAVCGlobalUserItem@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::Lookup

; 1004 : 
; 1005 : 	return pGlobalUserItem;

  00029	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]

; 1006 : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?SearchUserItemByGameID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z ENDP ; CGlobalInfoManager::SearchUserItemByGameID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?SearchUserItemByUserID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z
_TEXT	SEGMENT
_pGlobalUserItem$ = -8					; size = 4
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
?SearchUserItemByUserID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z PROC ; CGlobalInfoManager::SearchUserItemByUserID, COMDAT
; _this$ = ecx

; 990  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 991  : 	//寻找用户
; 992  : 	CGlobalUserItem * pGlobalUserItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGlobalUserItem$[ebp], 0

; 993  : 	m_MapUserID.Lookup(dwUserID,pGlobalUserItem);

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _dwUserID$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	83 c1 04	 add	 ecx, 4
  00021	e8 00 00 00 00	 call	 ?Lookup@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEHKAAPAVCGlobalUserItem@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::Lookup

; 994  : 
; 995  : 	return pGlobalUserItem;

  00026	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]

; 996  : }

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?SearchUserItemByUserID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z ENDP ; CGlobalInfoManager::SearchUserItemByUserID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?SearchChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@G@Z
_TEXT	SEGMENT
_pGlobalChatItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wChatID$ = 8						; size = 2
?SearchChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@G@Z PROC ; CGlobalInfoManager::SearchChatItem, COMDAT
; _this$ = ecx

; 980  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 981  : 	//寻找房间
; 982  : 	CGlobalChatItem * pGlobalChatItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGlobalChatItem$[ebp], 0

; 983  : 	m_MapChatID.Lookup(wChatID,pGlobalChatItem);

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGlobalChatItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wChatID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 58	 add	 ecx, 88			; 00000058H
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEHGAAPAVCGlobalChatItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::Lookup

; 984  : 
; 985  : 	return pGlobalChatItem;

  00027	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalChatItem$[ebp]

; 986  : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?SearchChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@G@Z ENDP ; CGlobalInfoManager::SearchChatItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z
_TEXT	SEGMENT
_pGlobalServerItem$ = -8				; size = 4
_this$ = -4						; size = 4
_wServerID$ = 8						; size = 2
?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z PROC ; CGlobalInfoManager::SearchServerItem, COMDAT
; _this$ = ecx

; 970  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 971  : 	//寻找房间
; 972  : 	CGlobalServerItem * pGlobalServerItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGlobalServerItem$[ebp], 0

; 973  : 	m_MapServerID.Lookup(wServerID,pGlobalServerItem);

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wServerID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEHGAAPAVCGlobalServerItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::Lookup

; 974  : 
; 975  : 	return pGlobalServerItem;

  00027	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalServerItem$[ebp]

; 976  : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ENDP ; CGlobalInfoManager::SearchServerItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?SearchPlazaItem@CGlobalInfoManager@@QAEPAVCGlobalPlazaItem@@G@Z
_TEXT	SEGMENT
_pGlobalPlazaItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wPlazaID$ = 8						; size = 2
?SearchPlazaItem@CGlobalInfoManager@@QAEPAVCGlobalPlazaItem@@G@Z PROC ; CGlobalInfoManager::SearchPlazaItem, COMDAT
; _this$ = ecx

; 960  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 961  : 	//寻找房间
; 962  : 	CGlobalPlazaItem * pGlobalPlazaItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGlobalPlazaItem$[ebp], 0

; 963  : 	m_MapPlazaID.Lookup(wPlazaID,pGlobalPlazaItem);

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wPlazaID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 20	 add	 ecx, 32			; 00000020H
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEHGAAPAVCGlobalPlazaItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::Lookup

; 964  : 
; 965  : 	return pGlobalPlazaItem;

  00027	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]

; 966  : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?SearchPlazaItem@CGlobalInfoManager@@QAEPAVCGlobalPlazaItem@@G@Z ENDP ; CGlobalInfoManager::SearchPlazaItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?ActiveChatItem@CGlobalInfoManager@@QAE_NGAAUtagChatServer@@@Z
_TEXT	SEGMENT
_pGlobalChatItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wBindIndex$ = 8					; size = 2
_ChatServer$ = 12					; size = 4
?ActiveChatItem@CGlobalInfoManager@@QAE_NGAAUtagChatServer@@@Z PROC ; CGlobalInfoManager::ActiveChatItem, COMDAT
; _this$ = ecx

; 931  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 932  : 	//寻找房间
; 933  : 	CGlobalChatItem * pGlobalChatItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGlobalChatItem$[ebp], 0

; 934  : 	if (m_MapChatID.Lookup(ChatServer.wChatID,pGlobalChatItem)==TRUE)

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGlobalChatItem$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _ChatServer$[ebp]
  0001a	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0001d	52		 push	 edx
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 58	 add	 ecx, 88			; 00000058H
  00024	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEHGAAPAVCGlobalChatItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::Lookup
  00029	83 f8 01	 cmp	 eax, 1
  0002c	75 21		 jne	 SHORT $LN2@ActiveChat

; 935  : 	{
; 936  : 		ASSERT(FALSE);

  0002e	33 c0		 xor	 eax, eax
  00030	75 19		 jne	 SHORT $LN5@ActiveChat
  00032	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActiveChatItem@CGlobalInfoManager@@QAE_NGAAUtagChatServer@@@Z@4JA
  00038	83 c1 05	 add	 ecx, 5
  0003b	51		 push	 ecx
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00041	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00046	85 c0		 test	 eax, eax
  00048	74 01		 je	 SHORT $LN5@ActiveChat
  0004a	cc		 int	 3
$LN5@ActiveChat:

; 937  : 		return false;

  0004b	32 c0		 xor	 al, al
  0004d	eb 71		 jmp	 SHORT $LN1@ActiveChat
$LN2@ActiveChat:

; 938  : 	}
; 939  : 
; 940  : 	//创建房间
; 941  : 	pGlobalChatItem=CreateGlobalChatItem();

  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?CreateGlobalChatItem@CGlobalInfoManager@@AAEPAVCGlobalChatItem@@XZ ; CGlobalInfoManager::CreateGlobalChatItem
  00057	89 45 f8	 mov	 DWORD PTR _pGlobalChatItem$[ebp], eax

; 942  : 	if (pGlobalChatItem==NULL)

  0005a	83 7d f8 00	 cmp	 DWORD PTR _pGlobalChatItem$[ebp], 0
  0005e	75 21		 jne	 SHORT $LN3@ActiveChat

; 943  : 	{
; 944  : 		ASSERT(FALSE);

  00060	33 c0		 xor	 eax, eax
  00062	75 19		 jne	 SHORT $LN6@ActiveChat
  00064	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActiveChatItem@CGlobalInfoManager@@QAE_NGAAUtagChatServer@@@Z@4JA
  0006a	83 c1 0d	 add	 ecx, 13			; 0000000dH
  0006d	51		 push	 ecx
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00073	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00078	85 c0		 test	 eax, eax
  0007a	74 01		 je	 SHORT $LN6@ActiveChat
  0007c	cc		 int	 3
$LN6@ActiveChat:

; 945  : 		return false;

  0007d	32 c0		 xor	 al, al
  0007f	eb 3f		 jmp	 SHORT $LN1@ActiveChat
$LN3@ActiveChat:

; 946  : 	}
; 947  : 
; 948  : 	//设置房间
; 949  : 	pGlobalChatItem->m_wIndex=wBindIndex;

  00081	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalChatItem$[ebp]
  00084	66 8b 4d 08	 mov	 cx, WORD PTR _wBindIndex$[ebp]
  00088	66 89 48 04	 mov	 WORD PTR [eax+4], cx

; 950  : 	pGlobalChatItem->m_ChatServer=ChatServer;

  0008c	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalChatItem$[ebp]
  0008f	83 c0 06	 add	 eax, 6
  00092	8b 4d 0c	 mov	 ecx, DWORD PTR _ChatServer$[ebp]
  00095	8b 11		 mov	 edx, DWORD PTR [ecx]
  00097	89 10		 mov	 DWORD PTR [eax], edx
  00099	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0009c	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0009f	66 8b 49 08	 mov	 cx, WORD PTR [ecx+8]
  000a3	66 89 48 08	 mov	 WORD PTR [eax+8], cx

; 951  : 
; 952  : 	//设置索引
; 953  : 	m_MapChatID[ChatServer.wChatID]=pGlobalChatItem;

  000a7	8b 45 0c	 mov	 eax, DWORD PTR _ChatServer$[ebp]
  000aa	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000ad	51		 push	 ecx
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	83 c1 58	 add	 ecx, 88			; 00000058H
  000b4	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEAAPAVCGlobalChatItem@@G@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::operator[]
  000b9	8b 55 f8	 mov	 edx, DWORD PTR _pGlobalChatItem$[ebp]
  000bc	89 10		 mov	 DWORD PTR [eax], edx

; 954  : 
; 955  : 	return true;

  000be	b0 01		 mov	 al, 1
$LN1@ActiveChat:

; 956  : }

  000c0	5f		 pop	 edi
  000c1	5e		 pop	 esi
  000c2	5b		 pop	 ebx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 08 00	 ret	 8
?ActiveChatItem@CGlobalInfoManager@@QAE_NGAAUtagChatServer@@@Z ENDP ; CGlobalInfoManager::ActiveChatItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?DeleteChatItem@CGlobalInfoManager@@QAE_NG@Z
_TEXT	SEGMENT
_pGlobalChatItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wChatID$ = 8						; size = 2
?DeleteChatItem@CGlobalInfoManager@@QAE_NG@Z PROC	; CGlobalInfoManager::DeleteChatItem, COMDAT
; _this$ = ecx

; 913  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 914  : 	//寻找广场
; 915  : 	CGlobalChatItem * pGlobalChatItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGlobalChatItem$[ebp], 0

; 916  : 	if (m_MapChatID.Lookup(wChatID,pGlobalChatItem)==FALSE)

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGlobalChatItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wChatID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 58	 add	 ecx, 88			; 00000058H
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEHGAAPAVCGlobalChatItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::Lookup
  00027	85 c0		 test	 eax, eax
  00029	75 21		 jne	 SHORT $LN2@DeleteChat

; 917  : 	{
; 918  : 		ASSERT(FALSE);

  0002b	33 c0		 xor	 eax, eax
  0002d	75 19		 jne	 SHORT $LN4@DeleteChat
  0002f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??DeleteChatItem@CGlobalInfoManager@@QAE_NG@Z@4JA
  00035	83 c1 05	 add	 ecx, 5
  00038	51		 push	 ecx
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00043	85 c0		 test	 eax, eax
  00045	74 01		 je	 SHORT $LN4@DeleteChat
  00047	cc		 int	 3
$LN4@DeleteChat:

; 919  : 		return false;

  00048	32 c0		 xor	 al, al
  0004a	eb 1e		 jmp	 SHORT $LN1@DeleteChat
$LN2@DeleteChat:

; 920  : 	}
; 921  : 
; 922  : 	//释放广场
; 923  : 	m_MapChatID.RemoveKey(wChatID);

  0004c	0f b7 45 08	 movzx	 eax, WORD PTR _wChatID$[ebp]
  00050	50		 push	 eax
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	83 c1 58	 add	 ecx, 88			; 00000058H
  00057	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEHG@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::RemoveKey

; 924  : 	FreeGlobalChatItem(pGlobalChatItem);

  0005c	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalChatItem$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	e8 00 00 00 00	 call	 ?FreeGlobalChatItem@CGlobalInfoManager@@AAE_NPAVCGlobalChatItem@@@Z ; CGlobalInfoManager::FreeGlobalChatItem

; 925  : 
; 926  : 	return true;

  00068	b0 01		 mov	 al, 1
$LN1@DeleteChat:

; 927  : }

  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
?DeleteChatItem@CGlobalInfoManager@@QAE_NG@Z ENDP	; CGlobalInfoManager::DeleteChatItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?ActiveServerItem@CGlobalInfoManager@@QAE_NGAAUtagGameServer@@@Z
_TEXT	SEGMENT
$T1 = -104						; size = 4
_pServerTableCount$2 = -36				; size = 4
_pServerTableCount$3 = -32				; size = 4
_i$4 = -28						; size = 4
_bExit$ = -21						; size = 1
_nSize$ = -20						; size = 4
_dwTableCount$ = -16					; size = 4
_dwServerID$ = -12					; size = 4
_pGlobalServerItem$ = -8				; size = 4
_this$ = -4						; size = 4
_wBindIndex$ = 8					; size = 2
_GameServer$ = 12					; size = 4
?ActiveServerItem@CGlobalInfoManager@@QAE_NGAAUtagGameServer@@@Z PROC ; CGlobalInfoManager::ActiveServerItem, COMDAT
; _this$ = ecx

; 857  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 858  : 	//寻找房间
; 859  : 	CGlobalServerItem * pGlobalServerItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGlobalServerItem$[ebp], 0

; 860  : 	if (m_MapServerID.Lookup(GameServer.wServerID,pGlobalServerItem)==TRUE)

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _GameServer$[ebp]
  0001a	0f b7 51 06	 movzx	 edx, WORD PTR [ecx+6]
  0001e	52		 push	 edx
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00025	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEHGAAPAVCGlobalServerItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::Lookup
  0002a	83 f8 01	 cmp	 eax, 1
  0002d	75 24		 jne	 SHORT $LN5@ActiveServ

; 861  : 	{
; 862  : 		ASSERT(FALSE);

  0002f	33 c0		 xor	 eax, eax
  00031	75 19		 jne	 SHORT $LN10@ActiveServ
  00033	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActiveServerItem@CGlobalInfoManager@@QAE_NGAAUtagGameServer@@@Z@4JA
  00039	83 c1 05	 add	 ecx, 5
  0003c	51		 push	 ecx
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00042	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00047	85 c0		 test	 eax, eax
  00049	74 01		 je	 SHORT $LN10@ActiveServ
  0004b	cc		 int	 3
$LN10@ActiveServ:

; 863  : 		return false;

  0004c	32 c0		 xor	 al, al
  0004e	e9 3a 01 00 00	 jmp	 $LN1@ActiveServ
$LN5@ActiveServ:

; 864  : 	}
; 865  : 
; 866  : 	//创建房间
; 867  : 	pGlobalServerItem=CreateGlobalServerItem();

  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?CreateGlobalServerItem@CGlobalInfoManager@@AAEPAVCGlobalServerItem@@XZ ; CGlobalInfoManager::CreateGlobalServerItem
  0005b	89 45 f8	 mov	 DWORD PTR _pGlobalServerItem$[ebp], eax

; 868  : 	if (pGlobalServerItem==NULL)

  0005e	83 7d f8 00	 cmp	 DWORD PTR _pGlobalServerItem$[ebp], 0
  00062	75 24		 jne	 SHORT $LN6@ActiveServ

; 869  : 	{
; 870  : 		ASSERT(FALSE);

  00064	33 c0		 xor	 eax, eax
  00066	75 19		 jne	 SHORT $LN11@ActiveServ
  00068	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActiveServerItem@CGlobalInfoManager@@QAE_NGAAUtagGameServer@@@Z@4JA
  0006e	83 c1 0d	 add	 ecx, 13			; 0000000dH
  00071	51		 push	 ecx
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00077	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0007c	85 c0		 test	 eax, eax
  0007e	74 01		 je	 SHORT $LN11@ActiveServ
  00080	cc		 int	 3
$LN11@ActiveServ:

; 871  : 		return false;

  00081	32 c0		 xor	 al, al
  00083	e9 05 01 00 00	 jmp	 $LN1@ActiveServ
$LN6@ActiveServ:

; 872  : 	}
; 873  : 
; 874  : 	//设置房间
; 875  : 	pGlobalServerItem->m_wIndex=wBindIndex;

  00088	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  0008b	66 8b 4d 08	 mov	 cx, WORD PTR _wBindIndex$[ebp]
  0008f	66 89 48 04	 mov	 WORD PTR [eax+4], cx

; 876  : 	pGlobalServerItem->m_GameServer=GameServer;

  00093	8b 7d f8	 mov	 edi, DWORD PTR _pGlobalServerItem$[ebp]
  00096	83 c7 06	 add	 edi, 6
  00099	b9 26 00 00 00	 mov	 ecx, 38			; 00000026H
  0009e	8b 75 0c	 mov	 esi, DWORD PTR _GameServer$[ebp]
  000a1	f3 a5		 rep movsd
  000a3	66 a5		 movsw
  000a5	a4		 movsb

; 877  : 
; 878  : 	//设置索引
; 879  : 	m_MapServerID[GameServer.wServerID]=pGlobalServerItem;

  000a6	8b 45 0c	 mov	 eax, DWORD PTR _GameServer$[ebp]
  000a9	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  000ad	51		 push	 ecx
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	83 c1 3c	 add	 ecx, 60			; 0000003cH
  000b4	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEAAPAVCGlobalServerItem@@G@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::operator[]
  000b9	8b 55 f8	 mov	 edx, DWORD PTR _pGlobalServerItem$[ebp]
  000bc	89 10		 mov	 DWORD PTR [eax], edx

; 880  : 
; 881  : 	//插入约战房间
; 882  : 	DWORD dwServerID = pGlobalServerItem->GetServerID();

  000be	8b 4d f8	 mov	 ecx, DWORD PTR _pGlobalServerItem$[ebp]
  000c1	e8 00 00 00 00	 call	 ?GetServerID@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetServerID
  000c6	0f b7 c0	 movzx	 eax, ax
  000c9	89 45 f4	 mov	 DWORD PTR _dwServerID$[ebp], eax

; 883  : 	DWORD dwTableCount = pGlobalServerItem->GetTabelCount();

  000cc	8b 4d f8	 mov	 ecx, DWORD PTR _pGlobalServerItem$[ebp]
  000cf	e8 00 00 00 00	 call	 ?GetTabelCount@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetTabelCount
  000d4	0f b7 c0	 movzx	 eax, ax
  000d7	89 45 f0	 mov	 DWORD PTR _dwTableCount$[ebp], eax

; 884  : 
; 885  : 	//查找房间
; 886  : 	INT_PTR nSize = m_ServerTableCountArray.GetCount();

  000da	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000dd	83 c1 74	 add	 ecx, 116		; 00000074H
  000e0	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QBEHXZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetCount
  000e5	89 45 ec	 mov	 DWORD PTR _nSize$[ebp], eax

; 887  : 	bool bExit = false;

  000e8	c6 45 eb 00	 mov	 BYTE PTR _bExit$[ebp], 0

; 888  : 	for(INT_PTR i = 0; i < nSize; ++i)

  000ec	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  000f3	eb 09		 jmp	 SHORT $LN4@ActiveServ
$LN2@ActiveServ:
  000f5	8b 45 e4	 mov	 eax, DWORD PTR _i$4[ebp]
  000f8	83 c0 01	 add	 eax, 1
  000fb	89 45 e4	 mov	 DWORD PTR _i$4[ebp], eax
$LN4@ActiveServ:
  000fe	8b 45 e4	 mov	 eax, DWORD PTR _i$4[ebp]
  00101	3b 45 ec	 cmp	 eax, DWORD PTR _nSize$[ebp]
  00104	7d 2d		 jge	 SHORT $LN3@ActiveServ

; 889  : 	{
; 890  : 		tagServerTableCount* pServerTableCount = m_ServerTableCountArray.GetAt(i);

  00106	8b 45 e4	 mov	 eax, DWORD PTR _i$4[ebp]
  00109	50		 push	 eax
  0010a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010d	83 c1 74	 add	 ecx, 116		; 00000074H
  00110	e8 00 00 00 00	 call	 ?GetAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEAAPAUtagServerTableCount@@H@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetAt
  00115	8b 08		 mov	 ecx, DWORD PTR [eax]
  00117	89 4d e0	 mov	 DWORD PTR _pServerTableCount$3[ebp], ecx

; 891  : 		if(pServerTableCount != NULL && pServerTableCount->dwServerID == dwServerID)

  0011a	83 7d e0 00	 cmp	 DWORD PTR _pServerTableCount$3[ebp], 0
  0011e	74 11		 je	 SHORT $LN7@ActiveServ
  00120	8b 45 e0	 mov	 eax, DWORD PTR _pServerTableCount$3[ebp]
  00123	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00126	3b 4d f4	 cmp	 ecx, DWORD PTR _dwServerID$[ebp]
  00129	75 06		 jne	 SHORT $LN7@ActiveServ

; 892  : 		{
; 893  : 			bExit = true;

  0012b	c6 45 eb 01	 mov	 BYTE PTR _bExit$[ebp], 1

; 894  : 			break;

  0012f	eb 02		 jmp	 SHORT $LN3@ActiveServ
$LN7@ActiveServ:

; 895  : 		}
; 896  : 	}

  00131	eb c2		 jmp	 SHORT $LN2@ActiveServ
$LN3@ActiveServ:

; 897  : 
; 898  : 	if(bExit == false && pGlobalServerItem->m_GameServer.wServerType == GAME_GENRE_PERSONAL)

  00133	0f b6 45 eb	 movzx	 eax, BYTE PTR _bExit$[ebp]
  00137	85 c0		 test	 eax, eax
  00139	75 50		 jne	 SHORT $LN8@ActiveServ
  0013b	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  0013e	0f b7 48 10	 movzx	 ecx, WORD PTR [eax+16]
  00142	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00145	75 44		 jne	 SHORT $LN8@ActiveServ

; 899  : 	{
; 900  : 		tagServerTableCount* pServerTableCount = new tagServerTableCount;

  00147	6a 0c		 push	 12			; 0000000cH
  00149	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0014e	83 c4 04	 add	 esp, 4
  00151	89 45 98	 mov	 DWORD PTR $T1[ebp], eax
  00154	8b 45 98	 mov	 eax, DWORD PTR $T1[ebp]
  00157	89 45 dc	 mov	 DWORD PTR _pServerTableCount$2[ebp], eax

; 901  : 		pServerTableCount->dwKindID = pGlobalServerItem->GetKindID();

  0015a	8b 4d f8	 mov	 ecx, DWORD PTR _pGlobalServerItem$[ebp]
  0015d	e8 00 00 00 00	 call	 ?GetKindID@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetKindID
  00162	0f b7 c0	 movzx	 eax, ax
  00165	8b 4d dc	 mov	 ecx, DWORD PTR _pServerTableCount$2[ebp]
  00168	89 01		 mov	 DWORD PTR [ecx], eax

; 902  : 		pServerTableCount->dwServerID = dwServerID;

  0016a	8b 45 dc	 mov	 eax, DWORD PTR _pServerTableCount$2[ebp]
  0016d	8b 4d f4	 mov	 ecx, DWORD PTR _dwServerID$[ebp]
  00170	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 903  : 		pServerTableCount->dwTableCount = dwTableCount;

  00173	8b 45 dc	 mov	 eax, DWORD PTR _pServerTableCount$2[ebp]
  00176	8b 4d f0	 mov	 ecx, DWORD PTR _dwTableCount$[ebp]
  00179	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 904  : 
; 905  : 		m_ServerTableCountArray.Add(pServerTableCount);

  0017c	8d 45 dc	 lea	 eax, DWORD PTR _pServerTableCount$2[ebp]
  0017f	50		 push	 eax
  00180	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00183	83 c1 74	 add	 ecx, 116		; 00000074H
  00186	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEHABQAUtagServerTableCount@@@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::Add
$LN8@ActiveServ:

; 906  : 	}
; 907  : 
; 908  : 	return true;

  0018b	b0 01		 mov	 al, 1
$LN1@ActiveServ:

; 909  : }

  0018d	5f		 pop	 edi
  0018e	5e		 pop	 esi
  0018f	5b		 pop	 ebx
  00190	8b e5		 mov	 esp, ebp
  00192	5d		 pop	 ebp
  00193	c2 08 00	 ret	 8
?ActiveServerItem@CGlobalInfoManager@@QAE_NGAAUtagGameServer@@@Z ENDP ; CGlobalInfoManager::ActiveServerItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z
_TEXT	SEGMENT
$T2 = -136						; size = 4
$T3 = -132						; size = 4
_pPersonalTableInfo$ = -64				; size = 4
_dwRoomID$ = -60					; size = 4
_pServerTableCount$4 = -56				; size = 4
_i$5 = -52						; size = 4
_nSize$ = -48						; size = 4
_pTempServerItem$6 = -44				; size = 4
_i$7 = -40						; size = 4
_Position$ = -36					; size = 4
_pGlobalUserItem$ = -32					; size = 4
_dwUserKey$ = -28					; size = 4
_pGlobalServerItem$ = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_wServerID$ = 8						; size = 2
?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z PROC	; CGlobalInfoManager::DeleteServerItem, COMDAT
; _this$ = ecx

; 774  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 78	 sub	 esp, 120		; 00000078H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 775  : 	//寻找房间
; 776  : 	CGlobalServerItem * pGlobalServerItem=NULL;

  0002f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pGlobalServerItem$[ebp], 0

; 777  : 	if (m_MapServerID.Lookup(wServerID,pGlobalServerItem)==FALSE)

  00036	8d 45 e8	 lea	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  00039	50		 push	 eax
  0003a	0f b7 4d 08	 movzx	 ecx, WORD PTR _wServerID$[ebp]
  0003e	51		 push	 ecx
  0003f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00045	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEHGAAPAVCGlobalServerItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::Lookup
  0004a	85 c0		 test	 eax, eax
  0004c	75 24		 jne	 SHORT $LN12@DeleteServ

; 778  : 	{
; 779  : 		ASSERT(FALSE);

  0004e	33 c0		 xor	 eax, eax
  00050	75 19		 jne	 SHORT $LN20@DeleteServ
  00052	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z@4JA
  00058	83 c1 05	 add	 ecx, 5
  0005b	51		 push	 ecx
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00061	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00066	85 c0		 test	 eax, eax
  00068	74 01		 je	 SHORT $LN20@DeleteServ
  0006a	cc		 int	 3
$LN20@DeleteServ:

; 780  : 		return false;

  0006b	32 c0		 xor	 al, al
  0006d	e9 93 02 00 00	 jmp	 $LN1@DeleteServ
$LN12@DeleteServ:

; 781  : 	}
; 782  : 
; 783  : 	//变量定义
; 784  : 	DWORD dwUserKey=0L;

  00072	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _dwUserKey$[ebp], 0

; 785  : 	CGlobalUserItem * pGlobalUserItem=NULL;

  00079	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pGlobalUserItem$[ebp], 0

; 786  : 	POSITION Position=pGlobalServerItem->m_MapUserID.GetStartPosition();

  00080	8b 4d e8	 mov	 ecx, DWORD PTR _pGlobalServerItem$[ebp]
  00083	81 c1 24 03 00
	00		 add	 ecx, 804		; 00000324H
  00089	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetStartPosition
  0008e	89 45 dc	 mov	 DWORD PTR _Position$[ebp], eax
$LN2@DeleteServ:

; 787  : 
; 788  : 	//删除用户
; 789  : 	while (Position!=NULL)

  00091	83 7d dc 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00095	0f 84 b3 00 00
	00		 je	 $LN3@DeleteServ

; 790  : 	{
; 791  : 		//获取数据
; 792  : 		pGlobalServerItem->m_MapUserID.GetNextAssoc(Position,dwUserKey,pGlobalUserItem);

  0009b	8d 45 e0	 lea	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  0009e	50		 push	 eax
  0009f	8d 4d e4	 lea	 ecx, DWORD PTR _dwUserKey$[ebp]
  000a2	51		 push	 ecx
  000a3	8d 55 dc	 lea	 edx, DWORD PTR _Position$[ebp]
  000a6	52		 push	 edx
  000a7	8b 4d e8	 mov	 ecx, DWORD PTR _pGlobalServerItem$[ebp]
  000aa	81 c1 24 03 00
	00		 add	 ecx, 804		; 00000324H
  000b0	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCGlobalUserItem@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetNextAssoc

; 793  : 
; 794  : 		//房间关联
; 795  : 		for (INT_PTR i=0;i<pGlobalUserItem->m_GlobalServerItemArray.GetCount();i++)

  000b5	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _i$7[ebp], 0
  000bc	eb 09		 jmp	 SHORT $LN6@DeleteServ
$LN4@DeleteServ:
  000be	8b 45 d8	 mov	 eax, DWORD PTR _i$7[ebp]
  000c1	83 c0 01	 add	 eax, 1
  000c4	89 45 d8	 mov	 DWORD PTR _i$7[ebp], eax
$LN6@DeleteServ:
  000c7	8b 4d e0	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  000ca	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  000d0	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QBEHXZ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::GetCount
  000d5	39 45 d8	 cmp	 DWORD PTR _i$7[ebp], eax
  000d8	7d 42		 jge	 SHORT $LN5@DeleteServ

; 796  : 		{
; 797  : 			//获取房间
; 798  : 			CGlobalServerItem * pTempServerItem=pGlobalUserItem->m_GlobalServerItemArray[i];

  000da	8b 45 d8	 mov	 eax, DWORD PTR _i$7[ebp]
  000dd	50		 push	 eax
  000de	8b 4d e0	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  000e1	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  000e7	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEAAPAVCGlobalServerItem@@H@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::operator[]
  000ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ee	89 4d d4	 mov	 DWORD PTR _pTempServerItem$6[ebp], ecx

; 799  : 
; 800  : 			//房间判断
; 801  : 			if (pTempServerItem->GetServerID()==wServerID)

  000f1	8b 4d d4	 mov	 ecx, DWORD PTR _pTempServerItem$6[ebp]
  000f4	e8 00 00 00 00	 call	 ?GetServerID@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetServerID
  000f9	0f b7 c0	 movzx	 eax, ax
  000fc	0f b7 4d 08	 movzx	 ecx, WORD PTR _wServerID$[ebp]
  00100	3b c1		 cmp	 eax, ecx
  00102	75 16		 jne	 SHORT $LN13@DeleteServ

; 802  : 			{
; 803  : 				pGlobalUserItem->m_GlobalServerItemArray.RemoveAt(i);

  00104	6a 01		 push	 1
  00106	8b 45 d8	 mov	 eax, DWORD PTR _i$7[ebp]
  00109	50		 push	 eax
  0010a	8b 4d e0	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  0010d	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  00113	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXHH@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::RemoveAt

; 804  : 				break;

  00118	eb 02		 jmp	 SHORT $LN5@DeleteServ
$LN13@DeleteServ:

; 805  : 			}
; 806  : 		}

  0011a	eb a2		 jmp	 SHORT $LN4@DeleteServ
$LN5@DeleteServ:

; 807  : 
; 808  : 		//释放用户
; 809  : 		if (pGlobalUserItem->m_GlobalServerItemArray.GetCount()==0)

  0011c	8b 4d e0	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  0011f	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  00125	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QBEHXZ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::GetCount
  0012a	85 c0		 test	 eax, eax
  0012c	75 1b		 jne	 SHORT $LN14@DeleteServ

; 810  : 		{
; 811  : 			m_MapUserID.RemoveKey(dwUserKey);

  0012e	8b 45 e4	 mov	 eax, DWORD PTR _dwUserKey$[ebp]
  00131	50		 push	 eax
  00132	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00135	83 c1 04	 add	 ecx, 4
  00138	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveKey

; 812  : 			FreeGlobalUserItem(pGlobalUserItem);

  0013d	8b 45 e0	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  00140	50		 push	 eax
  00141	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00144	e8 00 00 00 00	 call	 ?FreeGlobalUserItem@CGlobalInfoManager@@AAE_NPAVCGlobalUserItem@@@Z ; CGlobalInfoManager::FreeGlobalUserItem
$LN14@DeleteServ:

; 813  : 		}
; 814  : 	}

  00149	e9 43 ff ff ff	 jmp	 $LN2@DeleteServ
$LN3@DeleteServ:

; 815  : 
; 816  : 	//释放房间
; 817  : 	m_MapServerID.RemoveKey(wServerID);

  0014e	0f b7 45 08	 movzx	 eax, WORD PTR _wServerID$[ebp]
  00152	50		 push	 eax
  00153	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00156	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00159	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEHG@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::RemoveKey

; 818  : 	FreeGlobalServerItem(pGlobalServerItem);

  0015e	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  00161	50		 push	 eax
  00162	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00165	e8 00 00 00 00	 call	 ?FreeGlobalServerItem@CGlobalInfoManager@@AAE_NPAVCGlobalServerItem@@@Z ; CGlobalInfoManager::FreeGlobalServerItem

; 819  : 
; 820  : 	//查找房间
; 821  : 	INT_PTR nSize = m_ServerTableCountArray.GetCount();

  0016a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0016d	83 c1 74	 add	 ecx, 116		; 00000074H
  00170	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QBEHXZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetCount
  00175	89 45 d0	 mov	 DWORD PTR _nSize$[ebp], eax

; 822  : 	for(INT_PTR i = 0; i < nSize; ++i)

  00178	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _i$5[ebp], 0
  0017f	eb 09		 jmp	 SHORT $LN9@DeleteServ
$LN7@DeleteServ:
  00181	8b 45 cc	 mov	 eax, DWORD PTR _i$5[ebp]
  00184	83 c0 01	 add	 eax, 1
  00187	89 45 cc	 mov	 DWORD PTR _i$5[ebp], eax
$LN9@DeleteServ:
  0018a	8b 45 cc	 mov	 eax, DWORD PTR _i$5[ebp]
  0018d	3b 45 d0	 cmp	 eax, DWORD PTR _nSize$[ebp]
  00190	0f 8d 95 00 00
	00		 jge	 $LN8@DeleteServ

; 823  : 	{
; 824  : 		tagServerTableCount* pServerTableCount = m_ServerTableCountArray.GetAt(i);

  00196	8b 45 cc	 mov	 eax, DWORD PTR _i$5[ebp]
  00199	50		 push	 eax
  0019a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0019d	83 c1 74	 add	 ecx, 116		; 00000074H
  001a0	e8 00 00 00 00	 call	 ?GetAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEAAPAUtagServerTableCount@@H@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetAt
  001a5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a7	89 4d c8	 mov	 DWORD PTR _pServerTableCount$4[ebp], ecx

; 825  : 		if(pServerTableCount->dwServerID == wServerID)

  001aa	0f b7 45 08	 movzx	 eax, WORD PTR _wServerID$[ebp]
  001ae	8b 4d c8	 mov	 ecx, DWORD PTR _pServerTableCount$4[ebp]
  001b1	39 41 04	 cmp	 DWORD PTR [ecx+4], eax
  001b4	75 70		 jne	 SHORT $LN15@DeleteServ

; 826  : 		{
; 827  : 			SafeDelete(pServerTableCount);

  001b6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  001bd	8b 45 c8	 mov	 eax, DWORD PTR _pServerTableCount$4[ebp]
  001c0	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  001c6	6a 0c		 push	 12			; 0000000cH
  001c8	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  001ce	51		 push	 ecx
  001cf	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001d4	83 c4 08	 add	 esp, 8
  001d7	eb 23		 jmp	 SHORT $LN23@DeleteServ
__catch$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z$0:
  001d9	33 c0		 xor	 eax, eax
  001db	75 19		 jne	 SHORT $LN21@DeleteServ
  001dd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z@4JA
  001e3	83 c1 35	 add	 ecx, 53			; 00000035H
  001e6	51		 push	 ecx
  001e7	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  001ec	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  001f1	85 c0		 test	 eax, eax
  001f3	74 01		 je	 SHORT $LN21@DeleteServ
  001f5	cc		 int	 3
$LN21@DeleteServ:
  001f6	b8 00 00 00 00	 mov	 eax, $LN28@DeleteServ
  001fb	c3		 ret	 0
$LN23@DeleteServ:
  001fc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00203	eb 07		 jmp	 SHORT __tryend$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z$1
$LN28@DeleteServ:
  00205	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z$1:
  0020c	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _pServerTableCount$4[ebp], 0

; 828  : 			m_ServerTableCountArray.RemoveAt(i);

  00213	6a 01		 push	 1
  00215	8b 45 cc	 mov	 eax, DWORD PTR _i$5[ebp]
  00218	50		 push	 eax
  00219	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0021c	83 c1 74	 add	 ecx, 116		; 00000074H
  0021f	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXHH@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::RemoveAt

; 829  : 			break;

  00224	eb 05		 jmp	 SHORT $LN8@DeleteServ
$LN15@DeleteServ:

; 830  : 		}
; 831  : 	}

  00226	e9 56 ff ff ff	 jmp	 $LN7@DeleteServ
$LN8@DeleteServ:

; 832  : 
; 833  : 	//删除用户信息
; 834  : 	DWORD dwRoomID;
; 835  : 	tagPersonalTableInfo* pPersonalTableInfo = NULL;

  0022b	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pPersonalTableInfo$[ebp], 0

; 836  : 	Position = m_MapPersonalTableInfo.GetStartPosition();

  00232	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00235	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0023b	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetStartPosition
  00240	89 45 dc	 mov	 DWORD PTR _Position$[ebp], eax
$LN10@DeleteServ:

; 837  : 	while(Position != NULL)

  00243	83 7d dc 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00247	0f 84 a9 00 00
	00		 je	 $LN11@DeleteServ

; 838  : 	{
; 839  : 		m_MapPersonalTableInfo.GetNextAssoc(Position, dwRoomID, pPersonalTableInfo);

  0024d	8d 45 c0	 lea	 eax, DWORD PTR _pPersonalTableInfo$[ebp]
  00250	50		 push	 eax
  00251	8d 4d c4	 lea	 ecx, DWORD PTR _dwRoomID$[ebp]
  00254	51		 push	 ecx
  00255	8d 55 dc	 lea	 edx, DWORD PTR _Position$[ebp]
  00258	52		 push	 edx
  00259	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0025c	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00262	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEXAAPAU__POSITION@@AAKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetNextAssoc

; 840  : 
; 841  : 		if(pPersonalTableInfo != NULL && pPersonalTableInfo->dwServerID == wServerID)

  00267	83 7d c0 00	 cmp	 DWORD PTR _pPersonalTableInfo$[ebp], 0
  0026b	74 7d		 je	 SHORT $LN17@DeleteServ
  0026d	0f b7 45 08	 movzx	 eax, WORD PTR _wServerID$[ebp]
  00271	8b 4d c0	 mov	 ecx, DWORD PTR _pPersonalTableInfo$[ebp]
  00274	39 01		 cmp	 DWORD PTR [ecx], eax
  00276	75 72		 jne	 SHORT $LN17@DeleteServ

; 842  : 		{
; 843  : 
; 844  : 			SafeDelete(pPersonalTableInfo);

  00278	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 2
  0027f	8b 45 c0	 mov	 eax, DWORD PTR _pPersonalTableInfo$[ebp]
  00282	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00288	68 d1 00 00 00	 push	 209			; 000000d1H
  0028d	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00293	51		 push	 ecx
  00294	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00299	83 c4 08	 add	 esp, 8
  0029c	eb 23		 jmp	 SHORT $LN25@DeleteServ
__catch$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z$2:
  0029e	33 c0		 xor	 eax, eax
  002a0	75 19		 jne	 SHORT $LN22@DeleteServ
  002a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z@4JA
  002a8	83 c1 46	 add	 ecx, 70			; 00000046H
  002ab	51		 push	 ecx
  002ac	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  002b1	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  002b6	85 c0		 test	 eax, eax
  002b8	74 01		 je	 SHORT $LN22@DeleteServ
  002ba	cc		 int	 3
$LN22@DeleteServ:
  002bb	b8 00 00 00 00	 mov	 eax, $LN30@DeleteServ
  002c0	c3		 ret	 0
$LN25@DeleteServ:
  002c1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  002c8	eb 07		 jmp	 SHORT __tryend$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z$3
$LN30@DeleteServ:
  002ca	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z$3:
  002d1	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pPersonalTableInfo$[ebp], 0

; 845  : 			m_MapPersonalTableInfo.RemoveKey(dwRoomID);

  002d8	8b 45 c4	 mov	 eax, DWORD PTR _dwRoomID$[ebp]
  002db	50		 push	 eax
  002dc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002df	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  002e5	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::RemoveKey
$LN17@DeleteServ:

; 846  : 		}
; 847  : 		pPersonalTableInfo = NULL;

  002ea	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pPersonalTableInfo$[ebp], 0

; 848  : 	}

  002f1	e9 4d ff ff ff	 jmp	 $LN10@DeleteServ
$LN11@DeleteServ:

; 849  : 
; 850  : 	//删除用户信息
; 851  : 	RemoveServerTable(wServerID);

  002f6	0f b7 45 08	 movzx	 eax, WORD PTR _wServerID$[ebp]
  002fa	50		 push	 eax
  002fb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002fe	e8 00 00 00 00	 call	 ?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z ; CGlobalInfoManager::RemoveServerTable

; 852  : 	return true;

  00303	b0 01		 mov	 al, 1
$LN1@DeleteServ:

; 853  : }

  00305	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00308	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0030f	59		 pop	 ecx
  00310	5f		 pop	 edi
  00311	5e		 pop	 esi
  00312	5b		 pop	 ebx
  00313	8b e5		 mov	 esp, ebp
  00315	5d		 pop	 ebp
  00316	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 74 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-140]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z ENDP	; CGlobalInfoManager::DeleteServerItem
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?ActivePlazaItem@CGlobalInfoManager@@QAE_NGAAUtagGamePlaza@@@Z
_TEXT	SEGMENT
_pGlobalPlazaItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wBindIndex$ = 8					; size = 2
_GamePlaza$ = 12					; size = 4
?ActivePlazaItem@CGlobalInfoManager@@QAE_NGAAUtagGamePlaza@@@Z PROC ; CGlobalInfoManager::ActivePlazaItem, COMDAT
; _this$ = ecx

; 745  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 746  : 	//寻找广场
; 747  : 	CGlobalPlazaItem * pGlobalPlazaItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGlobalPlazaItem$[ebp], 0

; 748  : 	if (m_MapPlazaID.Lookup(GamePlaza.wPlazaID,pGlobalPlazaItem)==TRUE)

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _GamePlaza$[ebp]
  0001a	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0001d	52		 push	 edx
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 20	 add	 ecx, 32			; 00000020H
  00024	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEHGAAPAVCGlobalPlazaItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::Lookup
  00029	83 f8 01	 cmp	 eax, 1
  0002c	75 21		 jne	 SHORT $LN2@ActivePlaz

; 749  : 	{
; 750  : 		ASSERT(FALSE);

  0002e	33 c0		 xor	 eax, eax
  00030	75 19		 jne	 SHORT $LN5@ActivePlaz
  00032	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActivePlazaItem@CGlobalInfoManager@@QAE_NGAAUtagGamePlaza@@@Z@4JA
  00038	83 c1 05	 add	 ecx, 5
  0003b	51		 push	 ecx
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00041	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00046	85 c0		 test	 eax, eax
  00048	74 01		 je	 SHORT $LN5@ActivePlaz
  0004a	cc		 int	 3
$LN5@ActivePlaz:

; 751  : 		return false;

  0004b	32 c0		 xor	 al, al
  0004d	eb 68		 jmp	 SHORT $LN1@ActivePlaz
$LN2@ActivePlaz:

; 752  : 	}
; 753  : 
; 754  : 	//创建广场
; 755  : 	pGlobalPlazaItem=CreateGlobalPlazaItem();

  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?CreateGlobalPlazaItem@CGlobalInfoManager@@AAEPAVCGlobalPlazaItem@@XZ ; CGlobalInfoManager::CreateGlobalPlazaItem
  00057	89 45 f8	 mov	 DWORD PTR _pGlobalPlazaItem$[ebp], eax

; 756  : 	if (pGlobalPlazaItem==NULL)

  0005a	83 7d f8 00	 cmp	 DWORD PTR _pGlobalPlazaItem$[ebp], 0
  0005e	75 21		 jne	 SHORT $LN3@ActivePlaz

; 757  : 	{
; 758  : 		ASSERT(FALSE);

  00060	33 c0		 xor	 eax, eax
  00062	75 19		 jne	 SHORT $LN6@ActivePlaz
  00064	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActivePlazaItem@CGlobalInfoManager@@QAE_NGAAUtagGamePlaza@@@Z@4JA
  0006a	83 c1 0d	 add	 ecx, 13			; 0000000dH
  0006d	51		 push	 ecx
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00073	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00078	85 c0		 test	 eax, eax
  0007a	74 01		 je	 SHORT $LN6@ActivePlaz
  0007c	cc		 int	 3
$LN6@ActivePlaz:

; 759  : 		return false;

  0007d	32 c0		 xor	 al, al
  0007f	eb 36		 jmp	 SHORT $LN1@ActivePlaz
$LN3@ActivePlaz:

; 760  : 	}
; 761  : 
; 762  : 	//设置广场
; 763  : 	pGlobalPlazaItem->m_wIndex=wBindIndex;

  00081	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]
  00084	66 8b 4d 08	 mov	 cx, WORD PTR _wBindIndex$[ebp]
  00088	66 89 48 04	 mov	 WORD PTR [eax+4], cx

; 764  : 	pGlobalPlazaItem->m_GamePlaza=GamePlaza;

  0008c	8b 7d f8	 mov	 edi, DWORD PTR _pGlobalPlazaItem$[ebp]
  0008f	83 c7 06	 add	 edi, 6
  00092	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00097	8b 75 0c	 mov	 esi, DWORD PTR _GamePlaza$[ebp]
  0009a	f3 a5		 rep movsd
  0009c	66 a5		 movsw

; 765  : 
; 766  : 	//设置索引
; 767  : 	m_MapPlazaID[GamePlaza.wPlazaID]=pGlobalPlazaItem;

  0009e	8b 45 0c	 mov	 eax, DWORD PTR _GamePlaza$[ebp]
  000a1	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a4	51		 push	 ecx
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	83 c1 20	 add	 ecx, 32			; 00000020H
  000ab	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEAAPAVCGlobalPlazaItem@@G@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::operator[]
  000b0	8b 55 f8	 mov	 edx, DWORD PTR _pGlobalPlazaItem$[ebp]
  000b3	89 10		 mov	 DWORD PTR [eax], edx

; 768  : 
; 769  : 	return true;

  000b5	b0 01		 mov	 al, 1
$LN1@ActivePlaz:

; 770  : }

  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c2 08 00	 ret	 8
?ActivePlazaItem@CGlobalInfoManager@@QAE_NGAAUtagGamePlaza@@@Z ENDP ; CGlobalInfoManager::ActivePlazaItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?DeletePlazaItem@CGlobalInfoManager@@QAE_NG@Z
_TEXT	SEGMENT
_pGlobalPlazaItem$ = -8					; size = 4
_this$ = -4						; size = 4
_wPlazaID$ = 8						; size = 2
?DeletePlazaItem@CGlobalInfoManager@@QAE_NG@Z PROC	; CGlobalInfoManager::DeletePlazaItem, COMDAT
; _this$ = ecx

; 727  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 728  : 	//寻找广场
; 729  : 	CGlobalPlazaItem * pGlobalPlazaItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGlobalPlazaItem$[ebp], 0

; 730  : 	if (m_MapPlazaID.Lookup(wPlazaID,pGlobalPlazaItem)==FALSE)

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]
  00016	50		 push	 eax
  00017	0f b7 4d 08	 movzx	 ecx, WORD PTR _wPlazaID$[ebp]
  0001b	51		 push	 ecx
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	83 c1 20	 add	 ecx, 32			; 00000020H
  00022	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEHGAAPAVCGlobalPlazaItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::Lookup
  00027	85 c0		 test	 eax, eax
  00029	75 21		 jne	 SHORT $LN2@DeletePlaz

; 731  : 	{
; 732  : 		ASSERT(FALSE);

  0002b	33 c0		 xor	 eax, eax
  0002d	75 19		 jne	 SHORT $LN4@DeletePlaz
  0002f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??DeletePlazaItem@CGlobalInfoManager@@QAE_NG@Z@4JA
  00035	83 c1 05	 add	 ecx, 5
  00038	51		 push	 ecx
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00043	85 c0		 test	 eax, eax
  00045	74 01		 je	 SHORT $LN4@DeletePlaz
  00047	cc		 int	 3
$LN4@DeletePlaz:

; 733  : 		return false;

  00048	32 c0		 xor	 al, al
  0004a	eb 1e		 jmp	 SHORT $LN1@DeletePlaz
$LN2@DeletePlaz:

; 734  : 	}
; 735  : 
; 736  : 	//释放广场
; 737  : 	m_MapPlazaID.RemoveKey(wPlazaID);

  0004c	0f b7 45 08	 movzx	 eax, WORD PTR _wPlazaID$[ebp]
  00050	50		 push	 eax
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	83 c1 20	 add	 ecx, 32			; 00000020H
  00057	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEHG@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::RemoveKey

; 738  : 	FreeGlobalPlazaItem(pGlobalPlazaItem);

  0005c	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	e8 00 00 00 00	 call	 ?FreeGlobalPlazaItem@CGlobalInfoManager@@AAE_NPAVCGlobalPlazaItem@@@Z ; CGlobalInfoManager::FreeGlobalPlazaItem

; 739  : 
; 740  : 	return true;

  00068	b0 01		 mov	 al, 1
$LN1@DeletePlaz:

; 741  : }

  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
?DeletePlazaItem@CGlobalInfoManager@@QAE_NG@Z ENDP	; CGlobalInfoManager::DeletePlazaItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?ActiveUserItem@CGlobalInfoManager@@QAE_NAAUtagGlobalUserInfo@@G@Z
_TEXT	SEGMENT
_i$1 = -52						; size = 4
_szNickName$2 = -48					; size = 32
_pGlobalUserItem$ = -16					; size = 4
_pGlobalServerItem$ = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_GlobalUserInfo$ = 8					; size = 4
_wServerID$ = 12					; size = 2
?ActiveUserItem@CGlobalInfoManager@@QAE_NAAUtagGlobalUserInfo@@G@Z PROC ; CGlobalInfoManager::ActiveUserItem, COMDAT
; _this$ = ecx

; 662  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 663  : 	//寻找房间
; 664  : 	CGlobalServerItem * pGlobalServerItem=NULL;

  00016	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGlobalServerItem$[ebp], 0

; 665  : 	if (m_MapServerID.Lookup(wServerID,pGlobalServerItem)==FALSE)

  0001d	8d 45 f4	 lea	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  00020	50		 push	 eax
  00021	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wServerID$[ebp]
  00025	51		 push	 ecx
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0002c	e8 00 00 00 00	 call	 ?Lookup@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEHGAAPAVCGlobalServerItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::Lookup
  00031	85 c0		 test	 eax, eax
  00033	75 24		 jne	 SHORT $LN5@ActiveUser

; 666  : 	{
; 667  : 		ASSERT(FALSE);

  00035	33 c0		 xor	 eax, eax
  00037	75 19		 jne	 SHORT $LN11@ActiveUser
  00039	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActiveUserItem@CGlobalInfoManager@@QAE_NAAUtagGlobalUserInfo@@G@Z@4JA
  0003f	83 c1 05	 add	 ecx, 5
  00042	51		 push	 ecx
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00048	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0004d	85 c0		 test	 eax, eax
  0004f	74 01		 je	 SHORT $LN11@ActiveUser
  00051	cc		 int	 3
$LN11@ActiveUser:

; 668  : 		return false;

  00052	32 c0		 xor	 al, al
  00054	e9 e0 01 00 00	 jmp	 $LN1@ActiveUser
$LN5@ActiveUser:

; 669  : 	}
; 670  : 
; 671  : 	//寻找用户
; 672  : 	CGlobalUserItem * pGlobalUserItem=NULL;

  00059	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pGlobalUserItem$[ebp], 0

; 673  : 	if (m_MapUserID.Lookup(GlobalUserInfo.dwUserID,pGlobalUserItem)==FALSE)

  00060	8d 45 f0	 lea	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  00063	50		 push	 eax
  00064	8b 4d 08	 mov	 ecx, DWORD PTR _GlobalUserInfo$[ebp]
  00067	8b 11		 mov	 edx, DWORD PTR [ecx]
  00069	52		 push	 edx
  0006a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	83 c1 04	 add	 ecx, 4
  00070	e8 00 00 00 00	 call	 ?Lookup@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEHKAAPAVCGlobalUserItem@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::Lookup
  00075	85 c0		 test	 eax, eax
  00077	0f 85 23 01 00
	00		 jne	 $LN6@ActiveUser

; 674  : 	{
; 675  : 		//创建用户
; 676  : 		pGlobalUserItem=CreateGlobalUserItem();

  0007d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	e8 00 00 00 00	 call	 ?CreateGlobalUserItem@CGlobalInfoManager@@AAEPAVCGlobalUserItem@@XZ ; CGlobalInfoManager::CreateGlobalUserItem
  00085	89 45 f0	 mov	 DWORD PTR _pGlobalUserItem$[ebp], eax

; 677  : 		if (pGlobalUserItem==NULL) 

  00088	83 7d f0 00	 cmp	 DWORD PTR _pGlobalUserItem$[ebp], 0
  0008c	75 24		 jne	 SHORT $LN8@ActiveUser

; 678  : 		{
; 679  : 			ASSERT(FALSE);

  0008e	33 c0		 xor	 eax, eax
  00090	75 19		 jne	 SHORT $LN12@ActiveUser
  00092	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActiveUserItem@CGlobalInfoManager@@QAE_NAAUtagGlobalUserInfo@@G@Z@4JA
  00098	83 c1 11	 add	 ecx, 17			; 00000011H
  0009b	51		 push	 ecx
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000a1	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a6	85 c0		 test	 eax, eax
  000a8	74 01		 je	 SHORT $LN12@ActiveUser
  000aa	cc		 int	 3
$LN12@ActiveUser:

; 680  : 			return false;

  000ab	32 c0		 xor	 al, al
  000ad	e9 87 01 00 00	 jmp	 $LN1@ActiveUser
$LN8@ActiveUser:

; 681  : 		}
; 682  : 
; 683  : 		//构造昵称
; 684  : 		TCHAR szNickName[LEN_NICKNAME]=TEXT("");

  000b2	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  000b7	88 45 d0	 mov	 BYTE PTR _szNickName$2[ebp], al
  000ba	33 c0		 xor	 eax, eax
  000bc	89 45 d1	 mov	 DWORD PTR _szNickName$2[ebp+1], eax
  000bf	89 45 d5	 mov	 DWORD PTR _szNickName$2[ebp+5], eax
  000c2	89 45 d9	 mov	 DWORD PTR _szNickName$2[ebp+9], eax
  000c5	89 45 dd	 mov	 DWORD PTR _szNickName$2[ebp+13], eax
  000c8	89 45 e1	 mov	 DWORD PTR _szNickName$2[ebp+17], eax
  000cb	89 45 e5	 mov	 DWORD PTR _szNickName$2[ebp+21], eax
  000ce	89 45 e9	 mov	 DWORD PTR _szNickName$2[ebp+25], eax
  000d1	66 89 45 ed	 mov	 WORD PTR _szNickName$2[ebp+29], ax
  000d5	88 45 ef	 mov	 BYTE PTR _szNickName$2[ebp+31], al

; 685  : 		lstrcpyn(szNickName,GlobalUserInfo.szNickName,CountArray(szNickName));

  000d8	6a 20		 push	 32			; 00000020H
  000da	8b 45 08	 mov	 eax, DWORD PTR _GlobalUserInfo$[ebp]
  000dd	83 c0 08	 add	 eax, 8
  000e0	50		 push	 eax
  000e1	8d 4d d0	 lea	 ecx, DWORD PTR _szNickName$2[ebp]
  000e4	51		 push	 ecx
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 686  : 
; 687  : 		//设置用户
; 688  : 		pGlobalUserItem->m_dwUserID=GlobalUserInfo.dwUserID;

  000eb	8b 45 f0	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _GlobalUserInfo$[ebp]
  000f1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f3	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 689  : 		pGlobalUserItem->m_dwGameID=GlobalUserInfo.dwGameID;

  000f6	8b 45 f0	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  000f9	8b 4d 08	 mov	 ecx, DWORD PTR _GlobalUserInfo$[ebp]
  000fc	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ff	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 690  : 		lstrcpyn(pGlobalUserItem->m_szNickName,GlobalUserInfo.szNickName,CountArray(pGlobalUserItem->m_szNickName));

  00102	6a 20		 push	 32			; 00000020H
  00104	8b 45 08	 mov	 eax, DWORD PTR _GlobalUserInfo$[ebp]
  00107	83 c0 08	 add	 eax, 8
  0010a	50		 push	 eax
  0010b	8b 4d f0	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  0010e	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00111	51		 push	 ecx
  00112	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 691  : 
; 692  : 		//辅助信息
; 693  : 		pGlobalUserItem->m_cbGender=GlobalUserInfo.cbGender;

  00118	8b 45 f0	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  0011b	8b 4d 08	 mov	 ecx, DWORD PTR _GlobalUserInfo$[ebp]
  0011e	8a 51 28	 mov	 dl, BYTE PTR [ecx+40]
  00121	88 50 2c	 mov	 BYTE PTR [eax+44], dl

; 694  : 		pGlobalUserItem->m_cbMemberOrder=GlobalUserInfo.cbMemberOrder;

  00124	8b 45 f0	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  00127	8b 4d 08	 mov	 ecx, DWORD PTR _GlobalUserInfo$[ebp]
  0012a	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  0012d	88 50 2d	 mov	 BYTE PTR [eax+45], dl

; 695  : 		pGlobalUserItem->m_cbMasterOrder=GlobalUserInfo.cbMasterOrder;

  00130	8b 45 f0	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  00133	8b 4d 08	 mov	 ecx, DWORD PTR _GlobalUserInfo$[ebp]
  00136	8a 51 2a	 mov	 dl, BYTE PTR [ecx+42]
  00139	88 50 2e	 mov	 BYTE PTR [eax+46], dl

; 696  : 		memcpy(&pGlobalUserItem->m_UserInfo, &GlobalUserInfo.userInfo, sizeof(tagUserInfo));

  0013c	68 10 01 00 00	 push	 272			; 00000110H
  00141	8b 45 08	 mov	 eax, DWORD PTR _GlobalUserInfo$[ebp]
  00144	83 c0 2b	 add	 eax, 43			; 0000002bH
  00147	50		 push	 eax
  00148	8b 4d f0	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  0014b	83 c1 2f	 add	 ecx, 47			; 0000002fH
  0014e	51		 push	 ecx
  0014f	e8 00 00 00 00	 call	 _memcpy
  00154	83 c4 0c	 add	 esp, 12			; 0000000cH

; 697  : 
; 698  : 		//昵称索引
; 699  : 		m_MapNickName[szNickName]=pGlobalUserItem;

  00157	8d 45 d0	 lea	 eax, DWORD PTR _szNickName$2[ebp]
  0015a	50		 push	 eax
  0015b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015e	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00164	e8 00 00 00 00	 call	 ??ACMapStringToPtr@@QAEAAPAXPBD@Z ; CMapStringToPtr::operator[]
  00169	8b 4d f0	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  0016c	89 08		 mov	 DWORD PTR [eax], ecx

; 700  : 
; 701  : 		//设置索引
; 702  : 		m_MapUserID[GlobalUserInfo.dwUserID]=pGlobalUserItem;

  0016e	8b 45 08	 mov	 eax, DWORD PTR _GlobalUserInfo$[ebp]
  00171	8b 08		 mov	 ecx, DWORD PTR [eax]
  00173	51		 push	 ecx
  00174	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00177	83 c1 04	 add	 ecx, 4
  0017a	e8 00 00 00 00	 call	 ??A?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEAAPAVCGlobalUserItem@@K@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::operator[]
  0017f	8b 55 f0	 mov	 edx, DWORD PTR _pGlobalUserItem$[ebp]
  00182	89 10		 mov	 DWORD PTR [eax], edx

; 703  : 		m_MapGameID[GlobalUserInfo.dwGameID]=pGlobalUserItem;

  00184	8b 45 08	 mov	 eax, DWORD PTR _GlobalUserInfo$[ebp]
  00187	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0018a	51		 push	 ecx
  0018b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018e	81 c1 c4 00 00
	00		 add	 ecx, 196		; 000000c4H
  00194	e8 00 00 00 00	 call	 ??A?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEAAPAVCGlobalUserItem@@K@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::operator[]
  00199	8b 55 f0	 mov	 edx, DWORD PTR _pGlobalUserItem$[ebp]
  0019c	89 10		 mov	 DWORD PTR [eax], edx

; 704  : 	}
; 705  : 	else

  0019e	eb 6c		 jmp	 SHORT $LN7@ActiveUser
$LN6@ActiveUser:

; 706  : 	{
; 707  : 		//重复判断
; 708  : 		for (INT_PTR i=0;i<pGlobalUserItem->m_GlobalServerItemArray.GetCount();i++)

  001a0	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  001a7	eb 09		 jmp	 SHORT $LN4@ActiveUser
$LN2@ActiveUser:
  001a9	8b 45 cc	 mov	 eax, DWORD PTR _i$1[ebp]
  001ac	83 c0 01	 add	 eax, 1
  001af	89 45 cc	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@ActiveUser:
  001b2	8b 4d f0	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  001b5	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  001bb	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QBEHXZ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::GetCount
  001c0	39 45 cc	 cmp	 DWORD PTR _i$1[ebp], eax
  001c3	7d 47		 jge	 SHORT $LN7@ActiveUser

; 709  : 		{
; 710  : 			if (pGlobalUserItem->m_GlobalServerItemArray[i]->GetServerID()==wServerID)

  001c5	8b 45 cc	 mov	 eax, DWORD PTR _i$1[ebp]
  001c8	50		 push	 eax
  001c9	8b 4d f0	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  001cc	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  001d2	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEAAPAVCGlobalServerItem@@H@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::operator[]
  001d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d9	e8 00 00 00 00	 call	 ?GetServerID@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetServerID
  001de	0f b7 c8	 movzx	 ecx, ax
  001e1	0f b7 55 0c	 movzx	 edx, WORD PTR _wServerID$[ebp]
  001e5	3b ca		 cmp	 ecx, edx
  001e7	75 21		 jne	 SHORT $LN9@ActiveUser

; 711  : 			{
; 712  : 				ASSERT(FALSE);

  001e9	33 c0		 xor	 eax, eax
  001eb	75 19		 jne	 SHORT $LN13@ActiveUser
  001ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??ActiveUserItem@CGlobalInfoManager@@QAE_NAAUtagGlobalUserInfo@@G@Z@4JA
  001f3	83 c1 32	 add	 ecx, 50			; 00000032H
  001f6	51		 push	 ecx
  001f7	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  001fc	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00201	85 c0		 test	 eax, eax
  00203	74 01		 je	 SHORT $LN13@ActiveUser
  00205	cc		 int	 3
$LN13@ActiveUser:

; 713  : 				return false;

  00206	32 c0		 xor	 al, al
  00208	eb 2f		 jmp	 SHORT $LN1@ActiveUser
$LN9@ActiveUser:

; 714  : 			}
; 715  : 		}

  0020a	eb 9d		 jmp	 SHORT $LN2@ActiveUser
$LN7@ActiveUser:

; 716  : 	}
; 717  : 
; 718  : 	//设置关联
; 719  : 	pGlobalUserItem->m_GlobalServerItemArray.Add(pGlobalServerItem);

  0020c	8d 45 f4	 lea	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  0020f	50		 push	 eax
  00210	8b 4d f0	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  00213	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  00219	e8 00 00 00 00	 call	 ?Add@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEHABQAVCGlobalServerItem@@@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::Add

; 720  : 	pGlobalServerItem->m_MapUserID[GlobalUserInfo.dwUserID]=pGlobalUserItem;

  0021e	8b 45 08	 mov	 eax, DWORD PTR _GlobalUserInfo$[ebp]
  00221	8b 08		 mov	 ecx, DWORD PTR [eax]
  00223	51		 push	 ecx
  00224	8b 4d f4	 mov	 ecx, DWORD PTR _pGlobalServerItem$[ebp]
  00227	81 c1 24 03 00
	00		 add	 ecx, 804		; 00000324H
  0022d	e8 00 00 00 00	 call	 ??A?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEAAPAVCGlobalUserItem@@K@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::operator[]
  00232	8b 55 f0	 mov	 edx, DWORD PTR _pGlobalUserItem$[ebp]
  00235	89 10		 mov	 DWORD PTR [eax], edx

; 721  : 
; 722  : 	return true;

  00237	b0 01		 mov	 al, 1
$LN1@ActiveUser:

; 723  : }

  00239	5f		 pop	 edi
  0023a	5e		 pop	 esi
  0023b	5b		 pop	 ebx
  0023c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0023f	33 cd		 xor	 ecx, ebp
  00241	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00246	8b e5		 mov	 esp, ebp
  00248	5d		 pop	 ebp
  00249	c2 08 00	 ret	 8
?ActiveUserItem@CGlobalInfoManager@@QAE_NAAUtagGlobalUserInfo@@G@Z ENDP ; CGlobalInfoManager::ActiveUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?DeleteUserItem@CGlobalInfoManager@@QAE_NKG@Z
_TEXT	SEGMENT
_i$1 = -20						; size = 4
_nServerCount$ = -16					; size = 4
_pGlobalServerItem$ = -12				; size = 4
_pGlobalUserItem$ = -8					; size = 4
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
_wServerID$ = 12					; size = 2
?DeleteUserItem@CGlobalInfoManager@@QAE_NKG@Z PROC	; CGlobalInfoManager::DeleteUserItem, COMDAT
; _this$ = ecx

; 612  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 613  : 	//寻找用户
; 614  : 	CGlobalUserItem * pGlobalUserItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGlobalUserItem$[ebp], 0

; 615  : 	if (m_MapUserID.Lookup(dwUserID,pGlobalUserItem)==FALSE) 

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _dwUserID$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	83 c1 04	 add	 ecx, 4
  00021	e8 00 00 00 00	 call	 ?Lookup@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEHKAAPAVCGlobalUserItem@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::Lookup
  00026	85 c0		 test	 eax, eax
  00028	75 24		 jne	 SHORT $LN5@DeleteUser

; 616  : 	{
; 617  : 		ASSERT(FALSE);

  0002a	33 c0		 xor	 eax, eax
  0002c	75 19		 jne	 SHORT $LN9@DeleteUser
  0002e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??DeleteUserItem@CGlobalInfoManager@@QAE_NKG@Z@4JA
  00034	83 c1 05	 add	 ecx, 5
  00037	51		 push	 ecx
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00042	85 c0		 test	 eax, eax
  00044	74 01		 je	 SHORT $LN9@DeleteUser
  00046	cc		 int	 3
$LN9@DeleteUser:

; 618  : 		return false;

  00047	32 c0		 xor	 al, al
  00049	e9 0d 01 00 00	 jmp	 $LN1@DeleteUser
$LN5@DeleteUser:

; 619  : 	}
; 620  : 
; 621  : 	//变量定义
; 622  : 	CGlobalServerItem * pGlobalServerItem=NULL;

  0004e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGlobalServerItem$[ebp], 0

; 623  : 	INT_PTR nServerCount=pGlobalUserItem->m_GlobalServerItemArray.GetCount();

  00055	8b 4d f8	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  00058	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  0005e	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QBEHXZ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::GetCount
  00063	89 45 f0	 mov	 DWORD PTR _nServerCount$[ebp], eax

; 624  : 
; 625  : 	//退出房间
; 626  : 	for (INT_PTR i=0;i<nServerCount;i++)

  00066	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0006d	eb 09		 jmp	 SHORT $LN4@DeleteUser
$LN2@DeleteUser:
  0006f	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00072	83 c0 01	 add	 eax, 1
  00075	89 45 ec	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@DeleteUser:
  00078	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  0007b	3b 45 f0	 cmp	 eax, DWORD PTR _nServerCount$[ebp]
  0007e	0f 8d b8 00 00
	00		 jge	 $LN3@DeleteUser

; 627  : 	{
; 628  : 		//获取房间
; 629  : 		pGlobalServerItem=pGlobalUserItem->m_GlobalServerItemArray[i];

  00084	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00087	50		 push	 eax
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  0008b	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  00091	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEAAPAVCGlobalServerItem@@H@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::operator[]
  00096	8b 08		 mov	 ecx, DWORD PTR [eax]
  00098	89 4d f4	 mov	 DWORD PTR _pGlobalServerItem$[ebp], ecx

; 630  : 
; 631  : 		//房间判断
; 632  : 		if (pGlobalServerItem->GetServerID()==wServerID)

  0009b	8b 4d f4	 mov	 ecx, DWORD PTR _pGlobalServerItem$[ebp]
  0009e	e8 00 00 00 00	 call	 ?GetServerID@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetServerID
  000a3	0f b7 c0	 movzx	 eax, ax
  000a6	0f b7 4d 0c	 movzx	 ecx, WORD PTR _wServerID$[ebp]
  000aa	3b c1		 cmp	 eax, ecx
  000ac	0f 85 85 00 00
	00		 jne	 $LN6@DeleteUser

; 633  : 		{
; 634  : 			//删除关联
; 635  : 			pGlobalServerItem->m_MapUserID.RemoveKey(dwUserID);

  000b2	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  000b5	50		 push	 eax
  000b6	8b 4d f4	 mov	 ecx, DWORD PTR _pGlobalServerItem$[ebp]
  000b9	81 c1 24 03 00
	00		 add	 ecx, 804		; 00000324H
  000bf	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveKey

; 636  : 			pGlobalUserItem->m_GlobalServerItemArray.RemoveAt(i);

  000c4	6a 01		 push	 1
  000c6	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  000c9	50		 push	 eax
  000ca	8b 4d f8	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  000cd	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  000d3	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXHH@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::RemoveAt

; 637  : 
; 638  : 			//释放用户
; 639  : 			if (pGlobalUserItem->m_GlobalServerItemArray.GetCount()==0L) 

  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  000db	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  000e1	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QBEHXZ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::GetCount
  000e6	85 c0		 test	 eax, eax
  000e8	75 49		 jne	 SHORT $LN7@DeleteUser

; 640  : 			{
; 641  : 				//释放索引
; 642  : 				m_MapUserID.RemoveKey(dwUserID);

  000ea	8b 45 08	 mov	 eax, DWORD PTR _dwUserID$[ebp]
  000ed	50		 push	 eax
  000ee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	83 c1 04	 add	 ecx, 4
  000f4	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveKey

; 643  : 				m_MapGameID.RemoveKey(pGlobalUserItem->GetGameID());

  000f9	8b 4d f8	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  000fc	e8 00 00 00 00	 call	 ?GetGameID@CGlobalUserItem@@QAEKXZ ; CGlobalUserItem::GetGameID
  00101	50		 push	 eax
  00102	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	81 c1 c4 00 00
	00		 add	 ecx, 196		; 000000c4H
  0010b	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveKey

; 644  : 				m_MapNickName.RemoveKey(pGlobalUserItem->GetNickName());

  00110	8b 4d f8	 mov	 ecx, DWORD PTR _pGlobalUserItem$[ebp]
  00113	e8 00 00 00 00	 call	 ?GetNickName@CGlobalUserItem@@QAEPBDXZ ; CGlobalUserItem::GetNickName
  00118	50		 push	 eax
  00119	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00122	e8 00 00 00 00	 call	 ?RemoveKey@CMapStringToPtr@@QAEHPBD@Z ; CMapStringToPtr::RemoveKey

; 645  : 
; 646  : 				//释放对象
; 647  : 				FreeGlobalUserItem(pGlobalUserItem);

  00127	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  0012a	50		 push	 eax
  0012b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012e	e8 00 00 00 00	 call	 ?FreeGlobalUserItem@CGlobalInfoManager@@AAE_NPAVCGlobalUserItem@@@Z ; CGlobalInfoManager::FreeGlobalUserItem
$LN7@DeleteUser:

; 648  : 			}
; 649  : 
; 650  : 			return true;

  00133	b0 01		 mov	 al, 1
  00135	eb 24		 jmp	 SHORT $LN1@DeleteUser
$LN6@DeleteUser:

; 651  : 		}
; 652  : 	}

  00137	e9 33 ff ff ff	 jmp	 $LN2@DeleteUser
$LN3@DeleteUser:

; 653  : 
; 654  : 	//错误断言
; 655  : 	ASSERT(FALSE);

  0013c	33 c0		 xor	 eax, eax
  0013e	75 19		 jne	 SHORT $LN10@DeleteUser
  00140	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??DeleteUserItem@CGlobalInfoManager@@QAE_NKG@Z@4JA
  00146	83 c1 2b	 add	 ecx, 43			; 0000002bH
  00149	51		 push	 ecx
  0014a	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0014f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00154	85 c0		 test	 eax, eax
  00156	74 01		 je	 SHORT $LN10@DeleteUser
  00158	cc		 int	 3
$LN10@DeleteUser:

; 656  : 
; 657  : 	return false;

  00159	32 c0		 xor	 al, al
$LN1@DeleteUser:

; 658  : }

  0015b	5f		 pop	 edi
  0015c	5e		 pop	 esi
  0015d	5b		 pop	 ebx
  0015e	8b e5		 mov	 esp, ebp
  00160	5d		 pop	 ebp
  00161	c2 08 00	 ret	 8
?DeleteUserItem@CGlobalInfoManager@@QAE_NKG@Z ENDP	; CGlobalInfoManager::DeleteUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?CanCreatePersonalRoom@CGlobalInfoManager@@QAE_NKK@Z
_TEXT	SEGMENT
_iHaveCreate$ = -20					; size = 4
_i$1 = -16						; size = 4
_iMaxCreateCount$ = -12					; size = 4
_iCount$ = -8						; size = 4
_this$ = -4						; size = 4
_dwKindID$ = 8						; size = 4
_dwUserID$ = 12						; size = 4
?CanCreatePersonalRoom@CGlobalInfoManager@@QAE_NKK@Z PROC ; CGlobalInfoManager::CanCreatePersonalRoom, COMDAT
; _this$ = ecx

; 1271 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1272 : 	//获取可以创建房间的最大数目
; 1273 : 	int iCount = m_vecPersonalRoomMaxCreate.size();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  00015	e8 00 00 00 00	 call	 ?size@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::size
  0001a	89 45 f8	 mov	 DWORD PTR _iCount$[ebp], eax

; 1274 : 	int iMaxCreateCount = 0;

  0001d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _iMaxCreateCount$[ebp], 0

; 1275 : 	for (int i = 0; i < iCount; i++)

  00024	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0002b	eb 09		 jmp	 SHORT $LN4@CanCreateP
$LN2@CanCreateP:
  0002d	8b 45 f0	 mov	 eax, DWORD PTR _i$1[ebp]
  00030	83 c0 01	 add	 eax, 1
  00033	89 45 f0	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@CanCreateP:
  00036	8b 45 f0	 mov	 eax, DWORD PTR _i$1[ebp]
  00039	3b 45 f8	 cmp	 eax, DWORD PTR _iCount$[ebp]
  0003c	7d 35		 jge	 SHORT $LN3@CanCreateP

; 1276 : 	{
; 1277 : 		if (m_vecPersonalRoomMaxCreate[i].dwKindID == dwKindID)

  0003e	8b 45 f0	 mov	 eax, DWORD PTR _i$1[ebp]
  00041	50		 push	 eax
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  0004b	e8 00 00 00 00	 call	 ??A?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEAAUCMD_CS_S_RegisterPersonal@@I@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::operator[]
  00050	8b 08		 mov	 ecx, DWORD PTR [eax]
  00052	3b 4d 08	 cmp	 ecx, DWORD PTR _dwKindID$[ebp]
  00055	75 1a		 jne	 SHORT $LN5@CanCreateP

; 1278 : 		{
; 1279 : 			iMaxCreateCount = m_vecPersonalRoomMaxCreate[i].dwMaxCreate;

  00057	8b 45 f0	 mov	 eax, DWORD PTR _i$1[ebp]
  0005a	50		 push	 eax
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  00064	e8 00 00 00 00	 call	 ??A?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEAAUCMD_CS_S_RegisterPersonal@@I@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::operator[]
  00069	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006c	89 4d f4	 mov	 DWORD PTR _iMaxCreateCount$[ebp], ecx

; 1280 : 			break;

  0006f	eb 02		 jmp	 SHORT $LN3@CanCreateP
$LN5@CanCreateP:

; 1281 : 		}
; 1282 : 	}

  00071	eb ba		 jmp	 SHORT $LN2@CanCreateP
$LN3@CanCreateP:

; 1283 : 
; 1284 : 	if (iMaxCreateCount == 0)

  00073	83 7d f4 00	 cmp	 DWORD PTR _iMaxCreateCount$[ebp], 0
  00077	75 07		 jne	 SHORT $LN6@CanCreateP

; 1285 : 	{
; 1286 : 		iMaxCreateCount = MAX_CREATE_COUNT;

  00079	c7 45 f4 05 00
	00 00		 mov	 DWORD PTR _iMaxCreateCount$[ebp], 5
$LN6@CanCreateP:

; 1287 : 	}
; 1288 : 
; 1289 : 	//获得约战房间数目
; 1290 : 	int iHaveCreate = GetHostCreatePersonalRoomCount(dwUserID, dwKindID);

  00080	8b 45 08	 mov	 eax, DWORD PTR _dwKindID$[ebp]
  00083	50		 push	 eax
  00084	8b 4d 0c	 mov	 ecx, DWORD PTR _dwUserID$[ebp]
  00087	51		 push	 ecx
  00088	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?GetHostCreatePersonalRoomCount@CGlobalInfoManager@@QAEHKK@Z ; CGlobalInfoManager::GetHostCreatePersonalRoomCount
  00090	89 45 ec	 mov	 DWORD PTR _iHaveCreate$[ebp], eax

; 1291 : 	if (iHaveCreate < iMaxCreateCount)

  00093	8b 45 ec	 mov	 eax, DWORD PTR _iHaveCreate$[ebp]
  00096	3b 45 f4	 cmp	 eax, DWORD PTR _iMaxCreateCount$[ebp]
  00099	7d 04		 jge	 SHORT $LN7@CanCreateP

; 1292 : 	{
; 1293 : 		return true;

  0009b	b0 01		 mov	 al, 1
  0009d	eb 02		 jmp	 SHORT $LN1@CanCreateP
$LN7@CanCreateP:

; 1294 : 	}
; 1295 : 
; 1296 : 	return false;

  0009f	32 c0		 xor	 al, al
$LN1@CanCreateP:

; 1297 : }

  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
?CanCreatePersonalRoom@CGlobalInfoManager@@QAE_NKK@Z ENDP ; CGlobalInfoManager::CanCreatePersonalRoom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?AddPersonalMaxCreate@CGlobalInfoManager@@QAE_NUCMD_CS_S_RegisterPersonal@@@Z
_TEXT	SEGMENT
_i$1 = -16						; size = 4
_bIsExist$ = -9						; size = 1
_iCount$ = -8						; size = 4
_this$ = -4						; size = 4
_RegisterPersonal$ = 8					; size = 8
?AddPersonalMaxCreate@CGlobalInfoManager@@QAE_NUCMD_CS_S_RegisterPersonal@@@Z PROC ; CGlobalInfoManager::AddPersonalMaxCreate, COMDAT
; _this$ = ecx

; 1246 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1247 : 	int iCount = m_vecPersonalRoomMaxCreate.size();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  00015	e8 00 00 00 00	 call	 ?size@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::size
  0001a	89 45 f8	 mov	 DWORD PTR _iCount$[ebp], eax

; 1248 : 
; 1249 : 	//遍历，如果不存在则加入， 如果存在则修改
; 1250 : 	bool bIsExist = false;

  0001d	c6 45 f7 00	 mov	 BYTE PTR _bIsExist$[ebp], 0

; 1251 : 	for (int i = 0; i < iCount; i++)

  00021	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00028	eb 09		 jmp	 SHORT $LN4@AddPersona
$LN2@AddPersona:
  0002a	8b 45 f0	 mov	 eax, DWORD PTR _i$1[ebp]
  0002d	83 c0 01	 add	 eax, 1
  00030	89 45 f0	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@AddPersona:
  00033	8b 45 f0	 mov	 eax, DWORD PTR _i$1[ebp]
  00036	3b 45 f8	 cmp	 eax, DWORD PTR _iCount$[ebp]
  00039	7d 39		 jge	 SHORT $LN3@AddPersona

; 1252 : 	{
; 1253 : 		if (m_vecPersonalRoomMaxCreate[i].dwKindID == RegisterPersonal.dwKindID)

  0003b	8b 45 f0	 mov	 eax, DWORD PTR _i$1[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  00048	e8 00 00 00 00	 call	 ??A?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEAAUCMD_CS_S_RegisterPersonal@@I@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::operator[]
  0004d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004f	3b 4d 08	 cmp	 ecx, DWORD PTR _RegisterPersonal$[ebp]
  00052	75 1e		 jne	 SHORT $LN5@AddPersona

; 1254 : 		{
; 1255 : 			m_vecPersonalRoomMaxCreate[i].dwMaxCreate = RegisterPersonal.dwMaxCreate;

  00054	8b 45 f0	 mov	 eax, DWORD PTR _i$1[ebp]
  00057	50		 push	 eax
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  00061	e8 00 00 00 00	 call	 ??A?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEAAUCMD_CS_S_RegisterPersonal@@I@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::operator[]
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _RegisterPersonal$[ebp+4]
  00069	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1256 : 			bIsExist = true;

  0006c	c6 45 f7 01	 mov	 BYTE PTR _bIsExist$[ebp], 1

; 1257 : 			break;

  00070	eb 02		 jmp	 SHORT $LN3@AddPersona
$LN5@AddPersona:

; 1258 : 		}
; 1259 : 	}

  00072	eb b6		 jmp	 SHORT $LN2@AddPersona
$LN3@AddPersona:

; 1260 : 
; 1261 : 	if (!bIsExist)

  00074	0f b6 45 f7	 movzx	 eax, BYTE PTR _bIsExist$[ebp]
  00078	85 c0		 test	 eax, eax
  0007a	75 12		 jne	 SHORT $LN6@AddPersona

; 1262 : 	{
; 1263 : 		m_vecPersonalRoomMaxCreate.push_back(RegisterPersonal);

  0007c	8d 45 08	 lea	 eax, DWORD PTR _RegisterPersonal$[ebp]
  0007f	50		 push	 eax
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  00089	e8 00 00 00 00	 call	 ?push_back@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEXABUCMD_CS_S_RegisterPersonal@@@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::push_back
$LN6@AddPersona:

; 1264 : 	}
; 1265 : 
; 1266 : 	return true;

  0008e	b0 01		 mov	 al, 1

; 1267 : }

  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	5b		 pop	 ebx
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 08 00	 ret	 8
?AddPersonalMaxCreate@CGlobalInfoManager@@QAE_NUCMD_CS_S_RegisterPersonal@@@Z ENDP ; CGlobalInfoManager::AddPersonalMaxCreate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?GetHostCreatePersonalRoomCount@CGlobalInfoManager@@QAEHKK@Z
_TEXT	SEGMENT
_dwRoomID$ = -20					; size = 4
_iHostCreateRoomCount$ = -16				; size = 4
_Position$ = -12					; size = 4
_pPersonalTable$ = -8					; size = 4
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
_dwKindID$ = 12						; size = 4
?GetHostCreatePersonalRoomCount@CGlobalInfoManager@@QAEHKK@Z PROC ; CGlobalInfoManager::GetHostCreatePersonalRoomCount, COMDAT
; _this$ = ecx

; 510  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 511  : 	tagPersonalTableInfo* pPersonalTable = NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pPersonalTable$[ebp], 0

; 512  : 	POSITION Position = NULL;

  00013	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _Position$[ebp], 0

; 513  : 	int iHostCreateRoomCount = 0;

  0001a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _iHostCreateRoomCount$[ebp], 0

; 514  : 	DWORD dwRoomID;
; 515  : 	Position = m_MapPersonalTableInfo.GetStartPosition();

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0002a	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetStartPosition
  0002f	89 45 f4	 mov	 DWORD PTR _Position$[ebp], eax
$LN2@GetHostCre:

; 516  : 	while(Position != NULL)

  00032	83 7d f4 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00036	74 41		 je	 SHORT $LN3@GetHostCre

; 517  : 	{
; 518  : 		m_MapPersonalTableInfo.GetNextAssoc(Position, dwRoomID, pPersonalTable);

  00038	8d 45 f8	 lea	 eax, DWORD PTR _pPersonalTable$[ebp]
  0003b	50		 push	 eax
  0003c	8d 4d ec	 lea	 ecx, DWORD PTR _dwRoomID$[ebp]
  0003f	51		 push	 ecx
  00040	8d 55 f4	 lea	 edx, DWORD PTR _Position$[ebp]
  00043	52		 push	 edx
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0004d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEXAAPAU__POSITION@@AAKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetNextAssoc

; 519  : 		if(pPersonalTable != NULL && pPersonalTable->dwUserID == dwUserID &&  pPersonalTable->dwKindID == dwKindID)

  00052	83 7d f8 00	 cmp	 DWORD PTR _pPersonalTable$[ebp], 0
  00056	74 1f		 je	 SHORT $LN4@GetHostCre
  00058	8b 45 f8	 mov	 eax, DWORD PTR _pPersonalTable$[ebp]
  0005b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0005e	3b 4d 08	 cmp	 ecx, DWORD PTR _dwUserID$[ebp]
  00061	75 14		 jne	 SHORT $LN4@GetHostCre
  00063	8b 45 f8	 mov	 eax, DWORD PTR _pPersonalTable$[ebp]
  00066	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00069	3b 4d 0c	 cmp	 ecx, DWORD PTR _dwKindID$[ebp]
  0006c	75 09		 jne	 SHORT $LN4@GetHostCre

; 520  : 		{
; 521  : 			iHostCreateRoomCount++;

  0006e	8b 45 f0	 mov	 eax, DWORD PTR _iHostCreateRoomCount$[ebp]
  00071	83 c0 01	 add	 eax, 1
  00074	89 45 f0	 mov	 DWORD PTR _iHostCreateRoomCount$[ebp], eax
$LN4@GetHostCre:

; 522  : 		}
; 523  : 	}

  00077	eb b9		 jmp	 SHORT $LN2@GetHostCre
$LN3@GetHostCre:

; 524  : 	return  iHostCreateRoomCount;

  00079	8b 45 f0	 mov	 eax, DWORD PTR _iHostCreateRoomCount$[ebp]

; 525  : }

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 08 00	 ret	 8
?GetHostCreatePersonalRoomCount@CGlobalInfoManager@@QAEHKK@Z ENDP ; CGlobalInfoManager::GetHostCreatePersonalRoomCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?GetHostCreatePersonalRoom@CGlobalInfoManager@@QAEXAAUtagHostCreatRoomInfo@@@Z
_TEXT	SEGMENT
_i$1 = -288						; size = 4
_iHostCreateRoomCount$ = -284				; size = 4
_dwRoomID$ = -280					; size = 4
_pPersonalTable$ = -276					; size = 4
_Position$ = -272					; size = 4
_szInfo$ = -268						; size = 260
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_HostCreatRoomInfo$ = 8					; size = 4
?GetHostCreatePersonalRoom@CGlobalInfoManager@@QAEXAAUtagHostCreatRoomInfo@@@Z PROC ; CGlobalInfoManager::GetHostCreatePersonalRoom, COMDAT
; _this$ = ecx

; 464  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 60 01 00
	00		 sub	 esp, 352		; 00000160H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 465  : 	TCHAR szInfo[260] = {0};

  00019	68 04 01 00 00	 push	 260			; 00000104H
  0001e	6a 00		 push	 0
  00020	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _szInfo$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 466  : 	//移除桌子
; 467  : 	POSITION Position = NULL;

  0002f	c7 85 f0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _Position$[ebp], 0

; 468  : 	tagPersonalTableInfo* pPersonalTable = NULL;

  00039	c7 85 ec fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _pPersonalTable$[ebp], 0

; 469  : 	DWORD dwRoomID;
; 470  : 	int iHostCreateRoomCount = 0;

  00043	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _iHostCreateRoomCount$[ebp], 0

; 471  : 	Position = m_MapPersonalTableInfo.GetStartPosition();

  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00056	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetStartPosition
  0005b	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _Position$[ebp], eax
$LN2@GetHostCre:

; 472  : 	while(Position != NULL)

  00061	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _Position$[ebp], 0
  00068	0f 84 da 00 00
	00		 je	 $LN3@GetHostCre

; 473  : 	{
; 474  : 		m_MapPersonalTableInfo.GetNextAssoc(Position, dwRoomID, pPersonalTable);

  0006e	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _pPersonalTable$[ebp]
  00074	50		 push	 eax
  00075	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _dwRoomID$[ebp]
  0007b	51		 push	 ecx
  0007c	8d 95 f0 fe ff
	ff		 lea	 edx, DWORD PTR _Position$[ebp]
  00082	52		 push	 edx
  00083	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0008c	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEXAAPAU__POSITION@@AAKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetNextAssoc

; 475  : 		if(pPersonalTable != NULL && pPersonalTable->dwUserID == HostCreatRoomInfo.dwUserID)

  00091	83 bd ec fe ff
	ff 00		 cmp	 DWORD PTR _pPersonalTable$[ebp], 0
  00098	0f 84 a5 00 00
	00		 je	 $LN7@GetHostCre
  0009e	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _pPersonalTable$[ebp]
  000a4	8b 4d 08	 mov	 ecx, DWORD PTR _HostCreatRoomInfo$[ebp]
  000a7	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000aa	3b 11		 cmp	 edx, DWORD PTR [ecx]
  000ac	0f 85 91 00 00
	00		 jne	 $LN7@GetHostCre

; 476  : 		{
; 477  : 			HostCreatRoomInfo.hRoomCreateInfo[iHostCreateRoomCount].dwPersonalRoomID =  pPersonalTable->dwPersonalRoomID;

  000b2	6b 85 e4 fe ff
	ff 0a		 imul	 eax, DWORD PTR _iHostCreateRoomCount$[ebp], 10
  000b9	8b 4d 08	 mov	 ecx, DWORD PTR _HostCreatRoomInfo$[ebp]
  000bc	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR _pPersonalTable$[ebp]
  000c2	8b 52 20	 mov	 edx, DWORD PTR [edx+32]
  000c5	89 94 01 94 00
	00 00		 mov	 DWORD PTR [ecx+eax+148], edx

; 478  : 			HostCreatRoomInfo.hRoomCreateInfo[iHostCreateRoomCount].wBeginFreeTime = pPersonalTable->wBeginFreeTime;

  000cc	6b 85 e4 fe ff
	ff 0a		 imul	 eax, DWORD PTR _iHostCreateRoomCount$[ebp], 10
  000d3	8b 4d 08	 mov	 ecx, DWORD PTR _HostCreatRoomInfo$[ebp]
  000d6	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR _pPersonalTable$[ebp]
  000dc	66 8b 92 cb 00
	00 00		 mov	 dx, WORD PTR [edx+203]
  000e3	66 89 94 01 98
	00 00 00	 mov	 WORD PTR [ecx+eax+152], dx

; 479  : 			HostCreatRoomInfo.hRoomCreateInfo[iHostCreateRoomCount].wEndFreeTime = pPersonalTable->wEndFreeTime;

  000eb	6b 85 e4 fe ff
	ff 0a		 imul	 eax, DWORD PTR _iHostCreateRoomCount$[ebp], 10
  000f2	8b 4d 08	 mov	 ecx, DWORD PTR _HostCreatRoomInfo$[ebp]
  000f5	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR _pPersonalTable$[ebp]
  000fb	66 8b 92 cd 00
	00 00		 mov	 dx, WORD PTR [edx+205]
  00102	66 89 94 01 9a
	00 00 00	 mov	 WORD PTR [ecx+eax+154], dx

; 480  : 			HostCreatRoomInfo.hRoomCreateInfo[iHostCreateRoomCount].wCurSitCount = pPersonalTable->wCurSitPlayer;

  0010a	6b 85 e4 fe ff
	ff 0a		 imul	 eax, DWORD PTR _iHostCreateRoomCount$[ebp], 10
  00111	8b 4d 08	 mov	 ecx, DWORD PTR _HostCreatRoomInfo$[ebp]
  00114	8b 95 ec fe ff
	ff		 mov	 edx, DWORD PTR _pPersonalTable$[ebp]
  0011a	66 8b 92 cf 00
	00 00		 mov	 dx, WORD PTR [edx+207]
  00121	66 89 94 01 9c
	00 00 00	 mov	 WORD PTR [ecx+eax+156], dx

; 481  : 
; 482  : 			iHostCreateRoomCount++;

  00129	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _iHostCreateRoomCount$[ebp]
  0012f	83 c0 01	 add	 eax, 1
  00132	89 85 e4 fe ff
	ff		 mov	 DWORD PTR _iHostCreateRoomCount$[ebp], eax

; 483  : 			//大于最大房间数目返回
; 484  : 			if(iHostCreateRoomCount >= MAX_CREATE_PERSONAL_ROOM)

  00138	83 bd e4 fe ff
	ff 14		 cmp	 DWORD PTR _iHostCreateRoomCount$[ebp], 20 ; 00000014H
  0013f	7c 02		 jl	 SHORT $LN7@GetHostCre

; 485  : 			{
; 486  : 				break;

  00141	eb 05		 jmp	 SHORT $LN3@GetHostCre
$LN7@GetHostCre:

; 487  : 			}
; 488  : 		}
; 489  : 
; 490  : 	}

  00143	e9 19 ff ff ff	 jmp	 $LN2@GetHostCre
$LN3@GetHostCre:

; 491  : 
; 492  : 	//加上已经解散的桌子
; 493  : 	for (int i = m_VecDissumePersonalTableInfo.size() - 1; i >= 0 ; i--)

  00148	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  00151	e8 00 00 00 00	 call	 ?size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::size
  00156	83 e8 01	 sub	 eax, 1
  00159	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _i$1[ebp], eax
  0015f	eb 0f		 jmp	 SHORT $LN6@GetHostCre
$LN4@GetHostCre:
  00161	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _i$1[ebp]
  00167	83 e8 01	 sub	 eax, 1
  0016a	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _i$1[ebp], eax
$LN6@GetHostCre:
  00170	83 bd e0 fe ff
	ff 00		 cmp	 DWORD PTR _i$1[ebp], 0
  00177	7c 64		 jl	 SHORT $LN1@GetHostCre

; 494  : 	{
; 495  : 		if (m_VecDissumePersonalTableInfo[i].dwUserID == HostCreatRoomInfo.dwUserID)

  00179	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _i$1[ebp]
  0017f	50		 push	 eax
  00180	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00183	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  00189	e8 00 00 00 00	 call	 ??A?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEAAUtagPersonalTableInfo@@I@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::operator[]
  0018e	8b 4d 08	 mov	 ecx, DWORD PTR _HostCreatRoomInfo$[ebp]
  00191	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00194	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00196	75 43		 jne	 SHORT $LN9@GetHostCre

; 496  : 		{
; 497  : 			HostCreatRoomInfo.hRoomCreateInfo[iHostCreateRoomCount].dwPersonalRoomID = m_VecDissumePersonalTableInfo[i].dwPersonalRoomID;		

  00198	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _i$1[ebp]
  0019e	50		 push	 eax
  0019f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a2	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  001a8	e8 00 00 00 00	 call	 ??A?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEAAUtagPersonalTableInfo@@I@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::operator[]
  001ad	6b 8d e4 fe ff
	ff 0a		 imul	 ecx, DWORD PTR _iHostCreateRoomCount$[ebp], 10
  001b4	8b 55 08	 mov	 edx, DWORD PTR _HostCreatRoomInfo$[ebp]
  001b7	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  001ba	89 84 0a 94 00
	00 00		 mov	 DWORD PTR [edx+ecx+148], eax

; 498  : 			iHostCreateRoomCount++;

  001c1	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR _iHostCreateRoomCount$[ebp]
  001c7	83 c0 01	 add	 eax, 1
  001ca	89 85 e4 fe ff
	ff		 mov	 DWORD PTR _iHostCreateRoomCount$[ebp], eax

; 499  : 			if(iHostCreateRoomCount >= MAX_CREATE_PERSONAL_ROOM)

  001d0	83 bd e4 fe ff
	ff 14		 cmp	 DWORD PTR _iHostCreateRoomCount$[ebp], 20 ; 00000014H
  001d7	7c 02		 jl	 SHORT $LN9@GetHostCre

; 500  : 			{
; 501  : 				break;

  001d9	eb 02		 jmp	 SHORT $LN1@GetHostCre
$LN9@GetHostCre:

; 502  : 			}
; 503  : 		}
; 504  : 	}

  001db	eb 84		 jmp	 SHORT $LN4@GetHostCre
$LN1@GetHostCre:

; 505  : }

  001dd	5f		 pop	 edi
  001de	5e		 pop	 esi
  001df	5b		 pop	 ebx
  001e0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e3	33 cd		 xor	 ecx, ebp
  001e5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ea	8b e5		 mov	 esp, ebp
  001ec	5d		 pop	 ebp
  001ed	c2 04 00	 ret	 4
?GetHostCreatePersonalRoom@CGlobalInfoManager@@QAEXAAUtagHostCreatRoomInfo@@@Z ENDP ; CGlobalInfoManager::GetHostCreatePersonalRoom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?RandPersonalRoomID@CGlobalInfoManager@@QAEKXZ
_TEXT	SEGMENT
_pPersonalTable$1 = -16					; size = 4
_bExit$ = -9						; size = 1
_dwRoomID$ = -8						; size = 4
_this$ = -4						; size = 4
?RandPersonalRoomID@CGlobalInfoManager@@QAEKXZ PROC	; CGlobalInfoManager::RandPersonalRoomID, COMDAT
; _this$ = ecx

; 590  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 591  : 	//定义变量
; 592  : 	DWORD dwRoomID = 0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwRoomID$[ebp], 0

; 593  : 	bool bExit = true;

  00013	c6 45 f7 01	 mov	 BYTE PTR _bExit$[ebp], 1

; 594  : 	srand(rand());

  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  0001d	50		 push	 eax
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__srand
  00024	83 c4 04	 add	 esp, 4
$LN2@RandPerson:

; 595  : 	while(bExit)

  00027	0f b6 45 f7	 movzx	 eax, BYTE PTR _bExit$[ebp]
  0002b	85 c0		 test	 eax, eax
  0002d	74 6e		 je	 SHORT $LN3@RandPerson

; 596  : 	{		
; 597  : 		dwRoomID = rand() % 9999 + (rand() % 88 + 10) * 10000;

  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  00035	99		 cdq
  00036	b9 0f 27 00 00	 mov	 ecx, 9999		; 0000270fH
  0003b	f7 f9		 idiv	 ecx
  0003d	8b f2		 mov	 esi, edx
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  00045	99		 cdq
  00046	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  0004b	f7 f9		 idiv	 ecx
  0004d	83 c2 0a	 add	 edx, 10			; 0000000aH
  00050	69 d2 10 27 00
	00		 imul	 edx, edx, 10000
  00056	03 f2		 add	 esi, edx
  00058	89 75 f8	 mov	 DWORD PTR _dwRoomID$[ebp], esi

; 598  : 		
; 599  : 		if (dwRoomID > 999999 || dwRoomID < 100000) continue;

  0005b	81 7d f8 3f 42
	0f 00		 cmp	 DWORD PTR _dwRoomID$[ebp], 999999 ; 000f423fH
  00062	77 09		 ja	 SHORT $LN5@RandPerson
  00064	81 7d f8 a0 86
	01 00		 cmp	 DWORD PTR _dwRoomID$[ebp], 100000 ; 000186a0H
  0006b	73 02		 jae	 SHORT $LN4@RandPerson
$LN5@RandPerson:
  0006d	eb b8		 jmp	 SHORT $LN2@RandPerson
$LN4@RandPerson:

; 600  : 		//查找ID
; 601  : 		tagPersonalTableInfo* pPersonalTable = NULL;

  0006f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _pPersonalTable$1[ebp], 0

; 602  : 		if (m_MapPersonalTableInfo.Lookup(dwRoomID, pPersonalTable) == TRUE)

  00076	8d 45 f0	 lea	 eax, DWORD PTR _pPersonalTable$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d f8	 mov	 ecx, DWORD PTR _dwRoomID$[ebp]
  0007d	51		 push	 ecx
  0007e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00087	e8 00 00 00 00	 call	 ?Lookup@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEHKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::Lookup
  0008c	83 f8 01	 cmp	 eax, 1
  0008f	75 06		 jne	 SHORT $LN6@RandPerson

; 603  : 			bExit = true;

  00091	c6 45 f7 01	 mov	 BYTE PTR _bExit$[ebp], 1

; 604  : 		else

  00095	eb 04		 jmp	 SHORT $LN7@RandPerson
$LN6@RandPerson:

; 605  : 			bExit = false;

  00097	c6 45 f7 00	 mov	 BYTE PTR _bExit$[ebp], 0
$LN7@RandPerson:

; 606  : 	}

  0009b	eb 8a		 jmp	 SHORT $LN2@RandPerson
$LN3@RandPerson:

; 607  : 	return dwRoomID;

  0009d	8b 45 f8	 mov	 eax, DWORD PTR _dwRoomID$[ebp]

; 608  : }

  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
?RandPersonalRoomID@CGlobalInfoManager@@QAEKXZ ENDP	; CGlobalInfoManager::RandPersonalRoomID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?GetFreeServerCount@CGlobalInfoManager@@QAEKK@Z
_TEXT	SEGMENT
_pServerTableCount$1 = -20				; size = 4
_i$2 = -16						; size = 4
_nSize$ = -12						; size = 4
_iServerCount$ = -8					; size = 4
_this$ = -4						; size = 4
_dwKindID$ = 8						; size = 4
?GetFreeServerCount@CGlobalInfoManager@@QAEKK@Z PROC	; CGlobalInfoManager::GetFreeServerCount, COMDAT
; _this$ = ecx

; 572  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 573  : 	int iServerCount = 0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _iServerCount$[ebp], 0

; 574  : 	//查找房间
; 575  : 	INT_PTR nSize = m_ServerTableCountArray.GetCount();

  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 74	 add	 ecx, 116		; 00000074H
  00019	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QBEHXZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetCount
  0001e	89 45 f4	 mov	 DWORD PTR _nSize$[ebp], eax

; 576  : 	for(INT_PTR i = 0; i < nSize; ++i)

  00021	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00028	eb 09		 jmp	 SHORT $LN4@GetFreeSer
$LN2@GetFreeSer:
  0002a	8b 45 f0	 mov	 eax, DWORD PTR _i$2[ebp]
  0002d	83 c0 01	 add	 eax, 1
  00030	89 45 f0	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@GetFreeSer:
  00033	8b 45 f0	 mov	 eax, DWORD PTR _i$2[ebp]
  00036	3b 45 f4	 cmp	 eax, DWORD PTR _nSize$[ebp]
  00039	7d 29		 jge	 SHORT $LN3@GetFreeSer

; 577  : 	{
; 578  : 		tagServerTableCount* pServerTableCount = m_ServerTableCountArray.GetAt(i);

  0003b	8b 45 f0	 mov	 eax, DWORD PTR _i$2[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	83 c1 74	 add	 ecx, 116		; 00000074H
  00045	e8 00 00 00 00	 call	 ?GetAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEAAPAUtagServerTableCount@@H@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetAt
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	89 4d ec	 mov	 DWORD PTR _pServerTableCount$1[ebp], ecx

; 579  : 		if(pServerTableCount->dwKindID == dwKindID)

  0004f	8b 45 ec	 mov	 eax, DWORD PTR _pServerTableCount$1[ebp]
  00052	8b 08		 mov	 ecx, DWORD PTR [eax]
  00054	3b 4d 08	 cmp	 ecx, DWORD PTR _dwKindID$[ebp]
  00057	75 09		 jne	 SHORT $LN5@GetFreeSer

; 580  : 		{
; 581  : 			iServerCount++;

  00059	8b 45 f8	 mov	 eax, DWORD PTR _iServerCount$[ebp]
  0005c	83 c0 01	 add	 eax, 1
  0005f	89 45 f8	 mov	 DWORD PTR _iServerCount$[ebp], eax
$LN5@GetFreeSer:

; 582  : 		}
; 583  : 	}

  00062	eb c6		 jmp	 SHORT $LN2@GetFreeSer
$LN3@GetFreeSer:

; 584  : 
; 585  : 	return iServerCount;

  00064	8b 45 f8	 mov	 eax, DWORD PTR _iServerCount$[ebp]

; 586  : }

  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 04 00	 ret	 4
?GetFreeServerCount@CGlobalInfoManager@@QAEKK@Z ENDP	; CGlobalInfoManager::GetFreeServerCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?GetFreeServer@CGlobalInfoManager@@QAEKKKE@Z
_TEXT	SEGMENT
_pServerTableCount$1 = -32				; size = 4
_i$2 = -28						; size = 4
_nSize$ = -24						; size = 4
_pPersonalTableInfo$3 = -20				; size = 4
_dwRoomID$ = -16					; size = 4
_bExit$ = -9						; size = 1
_Position$ = -8						; size = 4
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
_dwKindID$ = 12						; size = 4
_cbIsJoinGame$ = 16					; size = 1
?GetFreeServer@CGlobalInfoManager@@QAEKKKE@Z PROC	; CGlobalInfoManager::GetFreeServer, COMDAT
; _this$ = ecx

; 529  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 530  : 
; 531  : 	//变量定义
; 532  : 	POSITION Position;
; 533  : 	bool bExit = false;

  0000c	c6 45 f7 00	 mov	 BYTE PTR _bExit$[ebp], 0

; 534  : 	DWORD dwRoomID;
; 535  : 
; 536  : 	//如果房主参与游戏
; 537  : 	if (cbIsJoinGame)

  00010	0f b6 45 10	 movzx	 eax, BYTE PTR _cbIsJoinGame$[ebp]
  00014	85 c0		 test	 eax, eax
  00016	74 4c		 je	 SHORT $LN7@GetFreeSer

; 538  : 	{
; 539  : 		tagPersonalTableInfo* pPersonalTableInfo;
; 540  : 		//查找用户
; 541  : 		Position=m_MapPersonalTableInfo.GetStartPosition();

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00021	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetStartPosition
  00026	89 45 f8	 mov	 DWORD PTR _Position$[ebp], eax
$LN2@GetFreeSer:

; 542  : 		while(Position != NULL)

  00029	83 7d f8 00	 cmp	 DWORD PTR _Position$[ebp], 0
  0002d	74 35		 je	 SHORT $LN7@GetFreeSer

; 543  : 		{
; 544  : 			m_MapPersonalTableInfo.GetNextAssoc(Position, dwRoomID, pPersonalTableInfo);

  0002f	8d 45 ec	 lea	 eax, DWORD PTR _pPersonalTableInfo$3[ebp]
  00032	50		 push	 eax
  00033	8d 4d f0	 lea	 ecx, DWORD PTR _dwRoomID$[ebp]
  00036	51		 push	 ecx
  00037	8d 55 f8	 lea	 edx, DWORD PTR _Position$[ebp]
  0003a	52		 push	 edx
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00044	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEXAAPAU__POSITION@@AAKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetNextAssoc

; 545  : 			if(pPersonalTableInfo != NULL)

  00049	83 7d ec 00	 cmp	 DWORD PTR _pPersonalTableInfo$3[ebp], 0
  0004d	74 13		 je	 SHORT $LN8@GetFreeSer

; 546  : 			{
; 547  : 				if(pPersonalTableInfo->dwUserID == dwUserID)

  0004f	8b 45 ec	 mov	 eax, DWORD PTR _pPersonalTableInfo$3[ebp]
  00052	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00055	3b 4d 08	 cmp	 ecx, DWORD PTR _dwUserID$[ebp]
  00058	75 08		 jne	 SHORT $LN8@GetFreeSer

; 548  : 				{
; 549  : 					bExit = true;

  0005a	c6 45 f7 01	 mov	 BYTE PTR _bExit$[ebp], 1

; 550  : 					return 0;

  0005e	33 c0		 xor	 eax, eax
  00060	eb 5d		 jmp	 SHORT $LN1@GetFreeSer
$LN8@GetFreeSer:

; 551  : 				}
; 552  : 			}
; 553  : 		}

  00062	eb c5		 jmp	 SHORT $LN2@GetFreeSer
$LN7@GetFreeSer:

; 554  : 	}
; 555  : 
; 556  : 
; 557  : 	//查找房间
; 558  : 	INT_PTR nSize = m_ServerTableCountArray.GetCount();

  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	83 c1 74	 add	 ecx, 116		; 00000074H
  0006a	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QBEHXZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetCount
  0006f	89 45 e8	 mov	 DWORD PTR _nSize$[ebp], eax

; 559  : 	for(INT_PTR i = 0; i < nSize; ++i)

  00072	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00079	eb 09		 jmp	 SHORT $LN6@GetFreeSer
$LN4@GetFreeSer:
  0007b	8b 45 e4	 mov	 eax, DWORD PTR _i$2[ebp]
  0007e	83 c0 01	 add	 eax, 1
  00081	89 45 e4	 mov	 DWORD PTR _i$2[ebp], eax
$LN6@GetFreeSer:
  00084	8b 45 e4	 mov	 eax, DWORD PTR _i$2[ebp]
  00087	3b 45 e8	 cmp	 eax, DWORD PTR _nSize$[ebp]
  0008a	7d 31		 jge	 SHORT $LN5@GetFreeSer

; 560  : 	{
; 561  : 		tagServerTableCount* pServerTableCount = m_ServerTableCountArray.GetAt(i);

  0008c	8b 45 e4	 mov	 eax, DWORD PTR _i$2[ebp]
  0008f	50		 push	 eax
  00090	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	83 c1 74	 add	 ecx, 116		; 00000074H
  00096	e8 00 00 00 00	 call	 ?GetAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEAAPAUtagServerTableCount@@H@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetAt
  0009b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009d	89 4d e0	 mov	 DWORD PTR _pServerTableCount$1[ebp], ecx

; 562  : 		if(pServerTableCount->dwKindID == dwKindID && pServerTableCount->dwTableCount > 0)

  000a0	8b 45 e0	 mov	 eax, DWORD PTR _pServerTableCount$1[ebp]
  000a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a5	3b 4d 0c	 cmp	 ecx, DWORD PTR _dwKindID$[ebp]
  000a8	75 11		 jne	 SHORT $LN10@GetFreeSer
  000aa	8b 45 e0	 mov	 eax, DWORD PTR _pServerTableCount$1[ebp]
  000ad	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  000b1	76 08		 jbe	 SHORT $LN10@GetFreeSer

; 563  : 		{
; 564  : 			return pServerTableCount->dwServerID;

  000b3	8b 45 e0	 mov	 eax, DWORD PTR _pServerTableCount$1[ebp]
  000b6	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000b9	eb 04		 jmp	 SHORT $LN1@GetFreeSer
$LN10@GetFreeSer:

; 565  : 		}
; 566  : 	}

  000bb	eb be		 jmp	 SHORT $LN4@GetFreeSer
$LN5@GetFreeSer:

; 567  : 	return 0;

  000bd	33 c0		 xor	 eax, eax
$LN1@GetFreeSer:

; 568  : }

  000bf	5f		 pop	 edi
  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c2 0c 00	 ret	 12			; 0000000cH
?GetFreeServer@CGlobalInfoManager@@QAEKKKE@Z ENDP	; CGlobalInfoManager::GetFreeServer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z
_TEXT	SEGMENT
$T2 = -100						; size = 4
_dwRoomID$ = -32					; size = 4
_pPersonalTable$ = -28					; size = 4
_Position$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_dwServerID$ = 8					; size = 4
?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z PROC	; CGlobalInfoManager::RemoveServerTable, COMDAT
; _this$ = ecx

; 436  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 54	 sub	 esp, 84			; 00000054H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 437  : 	//移除桌子
; 438  : 	POSITION Position = NULL;

  0002f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _Position$[ebp], 0

; 439  : 	tagPersonalTableInfo* pPersonalTable = NULL;

  00036	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pPersonalTable$[ebp], 0

; 440  : 	DWORD dwRoomID;
; 441  : 
; 442  : 	Position = m_MapPersonalTableInfo.GetStartPosition();

  0003d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00046	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetStartPosition
  0004b	89 45 e8	 mov	 DWORD PTR _Position$[ebp], eax
$LN2@RemoveServ:

; 443  : 	while(Position != NULL)

  0004e	83 7d e8 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00052	0f 84 a6 00 00
	00		 je	 $LN3@RemoveServ

; 444  : 	{
; 445  : 		m_MapPersonalTableInfo.GetNextAssoc(Position, dwRoomID, pPersonalTable);

  00058	8d 45 e4	 lea	 eax, DWORD PTR _pPersonalTable$[ebp]
  0005b	50		 push	 eax
  0005c	8d 4d e0	 lea	 ecx, DWORD PTR _dwRoomID$[ebp]
  0005f	51		 push	 ecx
  00060	8d 55 e8	 lea	 edx, DWORD PTR _Position$[ebp]
  00063	52		 push	 edx
  00064	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0006d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEXAAPAU__POSITION@@AAKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetNextAssoc

; 446  : 		if (Position == NULL)

  00072	83 7d e8 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00076	75 05		 jne	 SHORT $LN4@RemoveServ

; 447  : 		{
; 448  : 			break;

  00078	e9 81 00 00 00	 jmp	 $LN3@RemoveServ
$LN4@RemoveServ:

; 449  : 		}
; 450  : 		if(pPersonalTable != NULL && pPersonalTable->dwServerID == dwServerID)

  0007d	83 7d e4 00	 cmp	 DWORD PTR _pPersonalTable$[ebp], 0
  00081	74 76		 je	 SHORT $LN5@RemoveServ
  00083	8b 45 e4	 mov	 eax, DWORD PTR _pPersonalTable$[ebp]
  00086	8b 08		 mov	 ecx, DWORD PTR [eax]
  00088	3b 4d 08	 cmp	 ecx, DWORD PTR _dwServerID$[ebp]
  0008b	75 6c		 jne	 SHORT $LN5@RemoveServ

; 451  : 		{
; 452  : 
; 453  : 			SafeDelete(pPersonalTable);

  0008d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00094	8b 45 e4	 mov	 eax, DWORD PTR _pPersonalTable$[ebp]
  00097	89 45 9c	 mov	 DWORD PTR $T2[ebp], eax
  0009a	68 d1 00 00 00	 push	 209			; 000000d1H
  0009f	8b 4d 9c	 mov	 ecx, DWORD PTR $T2[ebp]
  000a2	51		 push	 ecx
  000a3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000a8	83 c4 08	 add	 esp, 8
  000ab	eb 23		 jmp	 SHORT $LN9@RemoveServ
__catch$?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z$0:
  000ad	33 c0		 xor	 eax, eax
  000af	75 19		 jne	 SHORT $LN8@RemoveServ
  000b1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z@4JA
  000b7	83 c1 11	 add	 ecx, 17			; 00000011H
  000ba	51		 push	 ecx
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000c0	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c5	85 c0		 test	 eax, eax
  000c7	74 01		 je	 SHORT $LN8@RemoveServ
  000c9	cc		 int	 3
$LN8@RemoveServ:
  000ca	b8 00 00 00 00	 mov	 eax, $LN12@RemoveServ
  000cf	c3		 ret	 0
$LN9@RemoveServ:
  000d0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000d7	eb 07		 jmp	 SHORT __tryend$?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z$1
$LN12@RemoveServ:
  000d9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z$1:
  000e0	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pPersonalTable$[ebp], 0

; 454  : 			m_MapPersonalTableInfo.RemoveKey(dwRoomID);

  000e7	8b 45 e0	 mov	 eax, DWORD PTR _dwRoomID$[ebp]
  000ea	50		 push	 eax
  000eb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  000f4	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::RemoveKey
$LN5@RemoveServ:

; 455  : 
; 456  : 		}
; 457  : 	}

  000f9	e9 50 ff ff ff	 jmp	 $LN2@RemoveServ
$LN3@RemoveServ:

; 458  : 	return true;

  000fe	b0 01		 mov	 al, 1

; 459  : }

  00100	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00103	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010a	59		 pop	 ecx
  0010b	5f		 pop	 edi
  0010c	5e		 pop	 esi
  0010d	5b		 pop	 ebx
  0010e	8b e5		 mov	 esp, ebp
  00110	5d		 pop	 ebp
  00111	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a 98	 mov	 ecx, DWORD PTR [edx-104]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RemoveServerTable@CGlobalInfoManager@@QAE_NK@Z ENDP	; CGlobalInfoManager::RemoveServerTable
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z
_TEXT	SEGMENT
tv192 = -176						; size = 4
tv189 = -172						; size = 4
tv196 = -168						; size = 4
tv187 = -164						; size = 4
tv195 = -160						; size = 4
$T2 = -156						; size = 4
$T3 = -152						; size = 12
$T4 = -140						; size = 12
$T5 = -128						; size = 12
$T6 = -116						; size = 4
_i$7 = -48						; size = 4
_nOneHostDissumeCount$8 = -44				; size = 4
_i$9 = -40						; size = 4
_nOneHostDissumeCount$10 = -36				; size = 4
_dwRoomID$ = -32					; size = 4
_pPersonalTable$ = -28					; size = 4
_Position$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_dwServerID$ = 8					; size = 4
_dwTableID$ = 12					; size = 4
?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z PROC	; CGlobalInfoManager::RemoveServerTable, COMDAT
; _this$ = ecx

; 385  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	50		 push	 eax
  00023	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00026	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002c	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 386  : 	//移除桌子
; 387  : 	POSITION Position = NULL;

  00032	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _Position$[ebp], 0

; 388  : 	tagPersonalTableInfo* pPersonalTable = NULL;

  00039	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pPersonalTable$[ebp], 0

; 389  : 	DWORD dwRoomID;
; 390  : 
; 391  : 	Position = m_MapPersonalTableInfo.GetStartPosition();

  00040	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00049	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetStartPosition
  0004e	89 45 e8	 mov	 DWORD PTR _Position$[ebp], eax
$LN2@RemoveServ:

; 392  : 	while(Position != NULL)

  00051	83 7d e8 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00055	0f 84 3b 02 00
	00		 je	 $LN3@RemoveServ

; 393  : 	{
; 394  : 		m_MapPersonalTableInfo.GetNextAssoc(Position, dwRoomID, pPersonalTable);

  0005b	8d 45 e4	 lea	 eax, DWORD PTR _pPersonalTable$[ebp]
  0005e	50		 push	 eax
  0005f	8d 4d e0	 lea	 ecx, DWORD PTR _dwRoomID$[ebp]
  00062	51		 push	 ecx
  00063	8d 55 e8	 lea	 edx, DWORD PTR _Position$[ebp]
  00066	52		 push	 edx
  00067	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00070	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEXAAPAU__POSITION@@AAKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetNextAssoc

; 395  : 		if(pPersonalTable != NULL && pPersonalTable->dwServerID == dwServerID && pPersonalTable->dwTableID == dwTableID)

  00075	83 7d e4 00	 cmp	 DWORD PTR _pPersonalTable$[ebp], 0
  00079	0f 84 12 02 00
	00		 je	 $LN10@RemoveServ
  0007f	8b 45 e4	 mov	 eax, DWORD PTR _pPersonalTable$[ebp]
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	3b 4d 08	 cmp	 ecx, DWORD PTR _dwServerID$[ebp]
  00087	0f 85 04 02 00
	00		 jne	 $LN10@RemoveServ
  0008d	8b 45 e4	 mov	 eax, DWORD PTR _pPersonalTable$[ebp]
  00090	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00093	3b 4d 0c	 cmp	 ecx, DWORD PTR _dwTableID$[ebp]
  00096	0f 85 f5 01 00
	00		 jne	 $LN10@RemoveServ

; 396  : 		{
; 397  : 			//将被解散的坐桌放入解散桌子集合 约战房
; 398  : 			//统计同一个房主被解散的房间数量
; 399  : 			int nOneHostDissumeCount = 0;

  0009c	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _nOneHostDissumeCount$10[ebp], 0

; 400  : 			for (int i = 0; i < (int)m_VecDissumePersonalTableInfo.size(); i++)

  000a3	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _i$9[ebp], 0
  000aa	eb 09		 jmp	 SHORT $LN6@RemoveServ
$LN4@RemoveServ:
  000ac	8b 45 d8	 mov	 eax, DWORD PTR _i$9[ebp]
  000af	83 c0 01	 add	 eax, 1
  000b2	89 45 d8	 mov	 DWORD PTR _i$9[ebp], eax
$LN6@RemoveServ:
  000b5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  000be	e8 00 00 00 00	 call	 ?size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::size
  000c3	39 45 d8	 cmp	 DWORD PTR _i$9[ebp], eax
  000c6	7d 28		 jge	 SHORT $LN5@RemoveServ

; 401  : 			{
; 402  : 				if (m_VecDissumePersonalTableInfo[i].dwUserID == pPersonalTable->dwUserID)

  000c8	8b 45 d8	 mov	 eax, DWORD PTR _i$9[ebp]
  000cb	50		 push	 eax
  000cc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000cf	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  000d5	e8 00 00 00 00	 call	 ??A?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEAAUtagPersonalTableInfo@@I@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::operator[]
  000da	8b 4d e4	 mov	 ecx, DWORD PTR _pPersonalTable$[ebp]
  000dd	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000e0	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  000e3	75 09		 jne	 SHORT $LN11@RemoveServ

; 403  : 				{
; 404  : 					nOneHostDissumeCount++;

  000e5	8b 45 dc	 mov	 eax, DWORD PTR _nOneHostDissumeCount$10[ebp]
  000e8	83 c0 01	 add	 eax, 1
  000eb	89 45 dc	 mov	 DWORD PTR _nOneHostDissumeCount$10[ebp], eax
$LN11@RemoveServ:

; 405  : 				}
; 406  : 			}

  000ee	eb bc		 jmp	 SHORT $LN4@RemoveServ
$LN5@RemoveServ:

; 407  : 
; 408  : 			//删除最先被解散的约战房
; 409  : 			if (nOneHostDissumeCount > MAX_CREATE_PERSONAL_ROOM)

  000f0	83 7d dc 14	 cmp	 DWORD PTR _nOneHostDissumeCount$10[ebp], 20 ; 00000014H
  000f4	0f 8e 0f 01 00
	00		 jle	 $LN12@RemoveServ

; 410  : 			{
; 411  : 				int nOneHostDissumeCount = 0;

  000fa	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _nOneHostDissumeCount$8[ebp], 0

; 412  : 				for (int i = 0; i < (int)m_VecDissumePersonalTableInfo.size(); i++)

  00101	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _i$7[ebp], 0
  00108	eb 09		 jmp	 SHORT $LN9@RemoveServ
$LN7@RemoveServ:
  0010a	8b 45 d0	 mov	 eax, DWORD PTR _i$7[ebp]
  0010d	83 c0 01	 add	 eax, 1
  00110	89 45 d0	 mov	 DWORD PTR _i$7[ebp], eax
$LN9@RemoveServ:
  00113	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00116	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  0011c	e8 00 00 00 00	 call	 ?size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::size
  00121	39 45 d0	 cmp	 DWORD PTR _i$7[ebp], eax
  00124	0f 8d df 00 00
	00		 jge	 $LN12@RemoveServ

; 413  : 				{
; 414  : 					if (m_VecDissumePersonalTableInfo[i].dwUserID == pPersonalTable->dwUserID)

  0012a	8b 45 d0	 mov	 eax, DWORD PTR _i$7[ebp]
  0012d	50		 push	 eax
  0012e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00131	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  00137	e8 00 00 00 00	 call	 ??A?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEAAUtagPersonalTableInfo@@I@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::operator[]
  0013c	8b 4d e4	 mov	 ecx, DWORD PTR _pPersonalTable$[ebp]
  0013f	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00142	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00145	0f 85 b9 00 00
	00		 jne	 $LN13@RemoveServ

; 415  : 					{
; 416  : 						nOneHostDissumeCount = i;

  0014b	8b 45 d0	 mov	 eax, DWORD PTR _i$7[ebp]
  0014e	89 45 d4	 mov	 DWORD PTR _nOneHostDissumeCount$8[ebp], eax

; 417  : 						m_VecDissumePersonalTableInfo.erase(m_VecDissumePersonalTableInfo.begin() + i);

  00151	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00154	8b f4		 mov	 esi, esp
  00156	89 65 8c	 mov	 DWORD PTR $T6[ebp], esp
  00159	8b 45 d0	 mov	 eax, DWORD PTR _i$7[ebp]
  0015c	50		 push	 eax
  0015d	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00163	51		 push	 ecx
  00164	8d 55 80	 lea	 edx, DWORD PTR $T5[ebp]
  00167	52		 push	 edx
  00168	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0016b	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  00171	e8 00 00 00 00	 call	 ?begin@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@XZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::begin
  00176	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv195[ebp], eax
  0017c	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv195[ebp]
  00182	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv187[ebp], eax
  00188	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0018f	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv187[ebp]
  00195	e8 00 00 00 00	 call	 ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::operator+
  0019a	89 85 58 ff ff
	ff		 mov	 DWORD PTR tv196[ebp], eax
  001a0	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR tv196[ebp]
  001a6	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv189[ebp], ecx
  001ac	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  001b0	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR tv189[ebp]
  001b6	52		 push	 edx
  001b7	8b ce		 mov	 ecx, esi
  001b9	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  001be	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  001c4	50		 push	 eax
  001c5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001c8	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  001ce	e8 00 00 00 00	 call	 ?erase@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::erase
  001d3	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv192[ebp], eax
  001d9	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  001df	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
  001e4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  001e8	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  001ee	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
  001f3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  001fa	8d 4d 80	 lea	 ecx, DWORD PTR $T5[ebp]
  001fd	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ

; 418  : 						break;

  00202	eb 05		 jmp	 SHORT $LN12@RemoveServ
$LN13@RemoveServ:

; 419  : 					}
; 420  : 				}

  00204	e9 01 ff ff ff	 jmp	 $LN7@RemoveServ
$LN12@RemoveServ:

; 421  : 
; 422  : 			}
; 423  : 			m_VecDissumePersonalTableInfo.push_back(*pPersonalTable);

  00209	8b 45 e4	 mov	 eax, DWORD PTR _pPersonalTable$[ebp]
  0020c	50		 push	 eax
  0020d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00210	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  00216	e8 00 00 00 00	 call	 ?push_back@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEXABUtagPersonalTableInfo@@@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::push_back

; 424  : 
; 425  : 			SafeDelete(pPersonalTable);

  0021b	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 2
  00222	8b 45 e4	 mov	 eax, DWORD PTR _pPersonalTable$[ebp]
  00225	89 85 64 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0022b	68 d1 00 00 00	 push	 209			; 000000d1H
  00230	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00236	51		 push	 ecx
  00237	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0023c	83 c4 08	 add	 esp, 8
  0023f	eb 23		 jmp	 SHORT $LN17@RemoveServ
__catch$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z$0:
  00241	33 c0		 xor	 eax, eax
  00243	75 19		 jne	 SHORT $LN16@RemoveServ
  00245	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z@4JA
  0024b	83 c1 28	 add	 ecx, 40			; 00000028H
  0024e	51		 push	 ecx
  0024f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00254	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00259	85 c0		 test	 eax, eax
  0025b	74 01		 je	 SHORT $LN16@RemoveServ
  0025d	cc		 int	 3
$LN16@RemoveServ:
  0025e	b8 00 00 00 00	 mov	 eax, $LN24@RemoveServ
  00263	c3		 ret	 0
$LN17@RemoveServ:
  00264	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0026b	eb 07		 jmp	 SHORT __tryend$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z$1
$LN24@RemoveServ:
  0026d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z$1:
  00274	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pPersonalTable$[ebp], 0

; 426  : 			m_MapPersonalTableInfo.RemoveKey(dwRoomID);

  0027b	8b 45 e0	 mov	 eax, DWORD PTR _dwRoomID$[ebp]
  0027e	50		 push	 eax
  0027f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00282	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00288	e8 00 00 00 00	 call	 ?RemoveKey@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEHK@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::RemoveKey

; 427  : 			return true;

  0028d	b0 01		 mov	 al, 1
  0028f	eb 07		 jmp	 SHORT $LN1@RemoveServ
$LN10@RemoveServ:

; 428  : 		}
; 429  : 	}

  00291	e9 bb fd ff ff	 jmp	 $LN2@RemoveServ
$LN3@RemoveServ:

; 430  : 	return false;

  00296	32 c0		 xor	 al, al
$LN1@RemoveServ:

; 431  : }

  00298	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0029b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002a2	59		 pop	 ecx
  002a3	5f		 pop	 edi
  002a4	5e		 pop	 esi
  002a5	5b		 pop	 ebx
  002a6	8b e5		 mov	 esp, ebp
  002a8	5d		 pop	 ebp
  002a9	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z$2:
  00000	8d 4d 80	 lea	 ecx, DWORD PTR $T5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z$3:
  00008	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 8a 4c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-180]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z ENDP	; CGlobalInfoManager::RemoveServerTable
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?RemoveFreeServerTable@CGlobalInfoManager@@QAE_NK@Z
_TEXT	SEGMENT
_pServerTableCount$1 = -20				; size = 4
_i$2 = -16						; size = 4
_pServerItem$ = -12					; size = 4
_nSize$ = -8						; size = 4
_this$ = -4						; size = 4
_dwServerID$ = 8					; size = 4
?RemoveFreeServerTable@CGlobalInfoManager@@QAE_NK@Z PROC ; CGlobalInfoManager::RemoveFreeServerTable, COMDAT
; _this$ = ecx

; 365  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 366  : 	//查找房间
; 367  : 	INT_PTR nSize = m_ServerTableCountArray.GetCount();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 74	 add	 ecx, 116		; 00000074H
  00012	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QBEHXZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetCount
  00017	89 45 f8	 mov	 DWORD PTR _nSize$[ebp], eax

; 368  : 	CGlobalServerItem* pServerItem = SearchServerItem(static_cast<WORD>(dwServerID));

  0001a	0f b7 45 08	 movzx	 eax, WORD PTR _dwServerID$[ebp]
  0001e	50		 push	 eax
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  00027	89 45 f4	 mov	 DWORD PTR _pServerItem$[ebp], eax

; 369  : 	if(pServerItem == NULL) return true;

  0002a	83 7d f4 00	 cmp	 DWORD PTR _pServerItem$[ebp], 0
  0002e	75 04		 jne	 SHORT $LN5@RemoveFree
  00030	b0 01		 mov	 al, 1
  00032	eb 5b		 jmp	 SHORT $LN1@RemoveFree
$LN5@RemoveFree:

; 370  : 	for(INT_PTR i = 0; i < nSize; ++i)

  00034	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  0003b	eb 09		 jmp	 SHORT $LN4@RemoveFree
$LN2@RemoveFree:
  0003d	8b 45 f0	 mov	 eax, DWORD PTR _i$2[ebp]
  00040	83 c0 01	 add	 eax, 1
  00043	89 45 f0	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@RemoveFree:
  00046	8b 45 f0	 mov	 eax, DWORD PTR _i$2[ebp]
  00049	3b 45 f8	 cmp	 eax, DWORD PTR _nSize$[ebp]
  0004c	7d 3f		 jge	 SHORT $LN3@RemoveFree

; 371  : 	{
; 372  : 		tagServerTableCount* pServerTableCount = m_ServerTableCountArray.GetAt(i);

  0004e	8b 45 f0	 mov	 eax, DWORD PTR _i$2[ebp]
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	83 c1 74	 add	 ecx, 116		; 00000074H
  00058	e8 00 00 00 00	 call	 ?GetAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEAAPAUtagServerTableCount@@H@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetAt
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	89 4d ec	 mov	 DWORD PTR _pServerTableCount$1[ebp], ecx

; 373  : 		if(pServerTableCount->dwServerID == dwServerID)

  00062	8b 45 ec	 mov	 eax, DWORD PTR _pServerTableCount$1[ebp]
  00065	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00068	3b 4d 08	 cmp	 ecx, DWORD PTR _dwServerID$[ebp]
  0006b	75 1e		 jne	 SHORT $LN6@RemoveFree

; 374  : 		{
; 375  : 			if(pServerTableCount->dwTableCount < 1) return true;

  0006d	8b 45 ec	 mov	 eax, DWORD PTR _pServerTableCount$1[ebp]
  00070	83 78 08 01	 cmp	 DWORD PTR [eax+8], 1
  00074	73 04		 jae	 SHORT $LN7@RemoveFree
  00076	b0 01		 mov	 al, 1
  00078	eb 15		 jmp	 SHORT $LN1@RemoveFree
$LN7@RemoveFree:

; 376  : 			pServerTableCount->dwTableCount -= 1;

  0007a	8b 45 ec	 mov	 eax, DWORD PTR _pServerTableCount$1[ebp]
  0007d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00080	83 e9 01	 sub	 ecx, 1
  00083	8b 55 ec	 mov	 edx, DWORD PTR _pServerTableCount$1[ebp]
  00086	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 377  : 			break;

  00089	eb 02		 jmp	 SHORT $LN3@RemoveFree
$LN6@RemoveFree:

; 378  : 		}
; 379  : 	}

  0008b	eb b0		 jmp	 SHORT $LN2@RemoveFree
$LN3@RemoveFree:

; 380  : 	return true;

  0008d	b0 01		 mov	 al, 1
$LN1@RemoveFree:

; 381  : }

  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	5b		 pop	 ebx
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 04 00	 ret	 4
?RemoveFreeServerTable@CGlobalInfoManager@@QAE_NK@Z ENDP ; CGlobalInfoManager::RemoveFreeServerTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?AddServerTable@CGlobalInfoManager@@QAE_NKUtagPersonalTableInfo@@@Z
_TEXT	SEGMENT
$T1 = -76						; size = 4
_pPersonalTable$ = -8					; size = 4
_this$ = -4						; size = 4
_dwRoomID$ = 8						; size = 4
_PersonalTable$ = 12					; size = 209
?AddServerTable@CGlobalInfoManager@@QAE_NKUtagPersonalTableInfo@@@Z PROC ; CGlobalInfoManager::AddServerTable, COMDAT
; _this$ = ecx

; 336  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 337  : 	//添加桌子
; 338  : 	tagPersonalTableInfo* pPersonalTable = NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pPersonalTable$[ebp], 0

; 339  : 
; 340  : 	//检查房主创建约战房间的数目，如果创建的数目大于最大数目则不允许创建
; 341  : 	if (GetHostCreatePersonalRoomCount(PersonalTable.dwUserID,  PersonalTable.dwKindID) > MAX_CREATE_PERSONAL_ROOM)

  00013	8b 45 10	 mov	 eax, DWORD PTR _PersonalTable$[ebp+4]
  00016	50		 push	 eax
  00017	8b 4d 18	 mov	 ecx, DWORD PTR _PersonalTable$[ebp+12]
  0001a	51		 push	 ecx
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?GetHostCreatePersonalRoomCount@CGlobalInfoManager@@QAEHKK@Z ; CGlobalInfoManager::GetHostCreatePersonalRoomCount
  00023	83 f8 14	 cmp	 eax, 20			; 00000014H
  00026	7e 04		 jle	 SHORT $LN2@AddServerT

; 342  : 	{
; 343  : 		return false;

  00028	32 c0		 xor	 al, al
  0002a	eb 6b		 jmp	 SHORT $LN1@AddServerT
$LN2@AddServerT:

; 344  : 	}
; 345  : 
; 346  : 	//添加桌子
; 347  : 	pPersonalTable = NULL;

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pPersonalTable$[ebp], 0

; 348  : 	if (m_MapPersonalTableInfo.Lookup(dwRoomID, pPersonalTable) == FALSE)

  00033	8d 45 f8	 lea	 eax, DWORD PTR _pPersonalTable$[ebp]
  00036	50		 push	 eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR _dwRoomID$[ebp]
  0003a	51		 push	 ecx
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00044	e8 00 00 00 00	 call	 ?Lookup@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEHKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::Lookup
  00049	85 c0		 test	 eax, eax
  0004b	75 44		 jne	 SHORT $LN3@AddServerT

; 349  : 	{
; 350  : 		pPersonalTable = new tagPersonalTableInfo;

  0004d	68 d1 00 00 00	 push	 209			; 000000d1H
  00052	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00057	83 c4 04	 add	 esp, 4
  0005a	89 45 b4	 mov	 DWORD PTR $T1[ebp], eax
  0005d	8b 45 b4	 mov	 eax, DWORD PTR $T1[ebp]
  00060	89 45 f8	 mov	 DWORD PTR _pPersonalTable$[ebp], eax

; 351  : 
; 352  : 		m_MapPersonalTableInfo[dwRoomID] = pPersonalTable;

  00063	8b 45 08	 mov	 eax, DWORD PTR _dwRoomID$[ebp]
  00066	50		 push	 eax
  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00070	e8 00 00 00 00	 call	 ??A?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEAAPAUtagPersonalTableInfo@@K@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::operator[]
  00075	8b 4d f8	 mov	 ecx, DWORD PTR _pPersonalTable$[ebp]
  00078	89 08		 mov	 DWORD PTR [eax], ecx

; 353  : 		CopyMemory(pPersonalTable, &PersonalTable, sizeof(tagPersonalTableInfo));

  0007a	68 d1 00 00 00	 push	 209			; 000000d1H
  0007f	8d 45 0c	 lea	 eax, DWORD PTR _PersonalTable$[ebp]
  00082	50		 push	 eax
  00083	8b 4d f8	 mov	 ecx, DWORD PTR _pPersonalTable$[ebp]
  00086	51		 push	 ecx
  00087	e8 00 00 00 00	 call	 _memcpy
  0008c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 354  : 	}
; 355  : 	else

  0008f	eb 04		 jmp	 SHORT $LN4@AddServerT
$LN3@AddServerT:

; 356  : 	{
; 357  : 		return false;

  00091	32 c0		 xor	 al, al
  00093	eb 02		 jmp	 SHORT $LN1@AddServerT
$LN4@AddServerT:

; 358  : 	}
; 359  : 
; 360  : 	return true;

  00095	b0 01		 mov	 al, 1
$LN1@AddServerT:

; 361  : }

  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c2 d8 00	 ret	 216			; 000000d8H
?AddServerTable@CGlobalInfoManager@@QAE_NKUtagPersonalTableInfo@@@Z ENDP ; CGlobalInfoManager::AddServerTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?AddFreeServerTable@CGlobalInfoManager@@QAE_NK@Z
_TEXT	SEGMENT
_pServerTableCount$1 = -20				; size = 4
_i$2 = -16						; size = 4
_pServerItem$ = -12					; size = 4
_nSize$ = -8						; size = 4
_this$ = -4						; size = 4
_dwServerID$ = 8					; size = 4
?AddFreeServerTable@CGlobalInfoManager@@QAE_NK@Z PROC	; CGlobalInfoManager::AddFreeServerTable, COMDAT
; _this$ = ecx

; 316  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  : 	//查找房间
; 318  : 	INT_PTR nSize = m_ServerTableCountArray.GetCount();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 74	 add	 ecx, 116		; 00000074H
  00012	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QBEHXZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetCount
  00017	89 45 f8	 mov	 DWORD PTR _nSize$[ebp], eax

; 319  : 	CGlobalServerItem* pServerItem = SearchServerItem(static_cast<WORD>(dwServerID));

  0001a	0f b7 45 08	 movzx	 eax, WORD PTR _dwServerID$[ebp]
  0001e	50		 push	 eax
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  00027	89 45 f4	 mov	 DWORD PTR _pServerItem$[ebp], eax

; 320  : 	if(pServerItem == NULL) return true;

  0002a	83 7d f4 00	 cmp	 DWORD PTR _pServerItem$[ebp], 0
  0002e	75 04		 jne	 SHORT $LN5@AddFreeSer
  00030	b0 01		 mov	 al, 1
  00032	eb 66		 jmp	 SHORT $LN1@AddFreeSer
$LN5@AddFreeSer:

; 321  : 	for(INT_PTR i = 0; i < nSize; ++i)

  00034	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  0003b	eb 09		 jmp	 SHORT $LN4@AddFreeSer
$LN2@AddFreeSer:
  0003d	8b 45 f0	 mov	 eax, DWORD PTR _i$2[ebp]
  00040	83 c0 01	 add	 eax, 1
  00043	89 45 f0	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@AddFreeSer:
  00046	8b 45 f0	 mov	 eax, DWORD PTR _i$2[ebp]
  00049	3b 45 f8	 cmp	 eax, DWORD PTR _nSize$[ebp]
  0004c	7d 4a		 jge	 SHORT $LN3@AddFreeSer

; 322  : 	{
; 323  : 		tagServerTableCount* pServerTableCount = m_ServerTableCountArray.GetAt(i);

  0004e	8b 45 f0	 mov	 eax, DWORD PTR _i$2[ebp]
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	83 c1 74	 add	 ecx, 116		; 00000074H
  00058	e8 00 00 00 00	 call	 ?GetAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEAAPAUtagServerTableCount@@H@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetAt
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	89 4d ec	 mov	 DWORD PTR _pServerTableCount$1[ebp], ecx

; 324  : 		if(pServerTableCount->dwServerID == dwServerID)

  00062	8b 45 ec	 mov	 eax, DWORD PTR _pServerTableCount$1[ebp]
  00065	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00068	3b 4d 08	 cmp	 ecx, DWORD PTR _dwServerID$[ebp]
  0006b	75 29		 jne	 SHORT $LN6@AddFreeSer

; 325  : 		{
; 326  : 			if(pServerItem->m_GameServer.wTableCount < pServerTableCount->dwTableCount +1) return true;

  0006d	8b 45 f4	 mov	 eax, DWORD PTR _pServerItem$[ebp]
  00070	0f b7 48 7b	 movzx	 ecx, WORD PTR [eax+123]
  00074	8b 55 ec	 mov	 edx, DWORD PTR _pServerTableCount$1[ebp]
  00077	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0007a	83 c0 01	 add	 eax, 1
  0007d	3b c8		 cmp	 ecx, eax
  0007f	73 04		 jae	 SHORT $LN7@AddFreeSer
  00081	b0 01		 mov	 al, 1
  00083	eb 15		 jmp	 SHORT $LN1@AddFreeSer
$LN7@AddFreeSer:

; 327  : 			pServerTableCount->dwTableCount += 1;

  00085	8b 45 ec	 mov	 eax, DWORD PTR _pServerTableCount$1[ebp]
  00088	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0008b	83 c1 01	 add	 ecx, 1
  0008e	8b 55 ec	 mov	 edx, DWORD PTR _pServerTableCount$1[ebp]
  00091	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 328  : 			break;

  00094	eb 02		 jmp	 SHORT $LN3@AddFreeSer
$LN6@AddFreeSer:

; 329  : 		}
; 330  : 	}

  00096	eb a5		 jmp	 SHORT $LN2@AddFreeSer
$LN3@AddFreeSer:

; 331  : 	return true;

  00098	b0 01		 mov	 al, 1
$LN1@AddFreeSer:

; 332  : }

  0009a	5f		 pop	 edi
  0009b	5e		 pop	 esi
  0009c	5b		 pop	 ebx
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c2 04 00	 ret	 4
?AddFreeServerTable@CGlobalInfoManager@@QAE_NK@Z ENDP	; CGlobalInfoManager::AddFreeServerTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?SearchTableByTableIDAndServerID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@KK@Z
_TEXT	SEGMENT
_iHostCreateRoomCount$ = -20				; size = 4
_dwRoomID$ = -16					; size = 4
_pPersonalTable$ = -12					; size = 4
_Position$ = -8						; size = 4
_this$ = -4						; size = 4
_dwServerID$ = 8					; size = 4
_dwTableID$ = 12					; size = 4
?SearchTableByTableIDAndServerID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@KK@Z PROC ; CGlobalInfoManager::SearchTableByTableIDAndServerID, COMDAT
; _this$ = ecx

; 295  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 296  : 	//移除桌子
; 297  : 	POSITION Position = NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _Position$[ebp], 0

; 298  : 	tagPersonalTableInfo* pPersonalTable = NULL;

  00013	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pPersonalTable$[ebp], 0

; 299  : 	DWORD dwRoomID;
; 300  : 	int iHostCreateRoomCount = 0;

  0001a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _iHostCreateRoomCount$[ebp], 0

; 301  : 	Position = m_MapPersonalTableInfo.GetStartPosition();

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0002a	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetStartPosition
  0002f	89 45 f8	 mov	 DWORD PTR _Position$[ebp], eax
$LN2@SearchTabl:

; 302  : 	while(Position != NULL)

  00032	83 7d f8 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00036	74 3c		 je	 SHORT $LN3@SearchTabl

; 303  : 	{
; 304  : 		m_MapPersonalTableInfo.GetNextAssoc(Position,dwRoomID,pPersonalTable);

  00038	8d 45 f4	 lea	 eax, DWORD PTR _pPersonalTable$[ebp]
  0003b	50		 push	 eax
  0003c	8d 4d f0	 lea	 ecx, DWORD PTR _dwRoomID$[ebp]
  0003f	51		 push	 ecx
  00040	8d 55 f8	 lea	 edx, DWORD PTR _Position$[ebp]
  00043	52		 push	 edx
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  0004d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEXAAPAU__POSITION@@AAKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetNextAssoc

; 305  : 		if(pPersonalTable != NULL && pPersonalTable->dwServerID == dwServerID &&  pPersonalTable->dwTableID == dwTableID)

  00052	83 7d f4 00	 cmp	 DWORD PTR _pPersonalTable$[ebp], 0
  00056	74 1a		 je	 SHORT $LN4@SearchTabl
  00058	8b 45 f4	 mov	 eax, DWORD PTR _pPersonalTable$[ebp]
  0005b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005d	3b 4d 08	 cmp	 ecx, DWORD PTR _dwServerID$[ebp]
  00060	75 10		 jne	 SHORT $LN4@SearchTabl
  00062	8b 45 f4	 mov	 eax, DWORD PTR _pPersonalTable$[ebp]
  00065	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00068	3b 4d 0c	 cmp	 ecx, DWORD PTR _dwTableID$[ebp]
  0006b	75 05		 jne	 SHORT $LN4@SearchTabl

; 306  : 		{
; 307  : 			return pPersonalTable;

  0006d	8b 45 f4	 mov	 eax, DWORD PTR _pPersonalTable$[ebp]
  00070	eb 04		 jmp	 SHORT $LN1@SearchTabl
$LN4@SearchTabl:

; 308  : 		}
; 309  : 	}

  00072	eb be		 jmp	 SHORT $LN2@SearchTabl
$LN3@SearchTabl:

; 310  : 
; 311  : 	return NULL;

  00074	33 c0		 xor	 eax, eax
$LN1@SearchTabl:

; 312  : }

  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 08 00	 ret	 8
?SearchTableByTableIDAndServerID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@KK@Z ENDP ; CGlobalInfoManager::SearchTableByTableIDAndServerID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?SearchTableByID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@K@Z
_TEXT	SEGMENT
_pPersonalTable$ = -8					; size = 4
_this$ = -4						; size = 4
_dwRoomID$ = 8						; size = 4
?SearchTableByID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@K@Z PROC ; CGlobalInfoManager::SearchTableByID, COMDAT
; _this$ = ecx

; 286  : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 287  : 	//定义变量
; 288  : 	tagPersonalTableInfo* pPersonalTable = NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pPersonalTable$[ebp], 0

; 289  : 	if(m_MapPersonalTableInfo.Lookup(dwRoomID, pPersonalTable) == TRUE)

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pPersonalTable$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _dwRoomID$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00024	e8 00 00 00 00	 call	 ?Lookup@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEHKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::Lookup
  00029	83 f8 01	 cmp	 eax, 1
  0002c	75 05		 jne	 SHORT $LN2@SearchTabl

; 290  : 		return pPersonalTable;

  0002e	8b 45 f8	 mov	 eax, DWORD PTR _pPersonalTable$[ebp]
  00031	eb 02		 jmp	 SHORT $LN1@SearchTabl
$LN2@SearchTabl:

; 291  : 	return NULL;

  00033	33 c0		 xor	 eax, eax
$LN1@SearchTabl:

; 292  : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?SearchTableByID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@K@Z ENDP ; CGlobalInfoManager::SearchTableByID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?ResetData@CGlobalInfoManager@@QAEXXZ
_TEXT	SEGMENT
_pGlobalChatItem$ = -40					; size = 4
_wChatID$ = -36						; size = 2
_pGlobalServerItem$ = -32				; size = 4
_wServerID$ = -28					; size = 2
_pGlobalPlazaItem$ = -24				; size = 4
_wPlazaID$ = -20					; size = 2
_Position$ = -16					; size = 4
_pGlobalUserItem$ = -12					; size = 4
_dwUserID$ = -8						; size = 4
_this$ = -4						; size = 4
?ResetData@CGlobalInfoManager@@QAEXXZ PROC		; CGlobalInfoManager::ResetData, COMDAT
; _this$ = ecx

; 224  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 225  : 	//删除用户
; 226  : 	DWORD dwUserID=0L;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _dwUserID$[ebp], 0

; 227  : 	CGlobalUserItem * pGlobalUserItem=NULL;

  00013	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pGlobalUserItem$[ebp], 0

; 228  : 	POSITION Position=m_MapUserID.GetStartPosition();

  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	83 c1 04	 add	 ecx, 4
  00020	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetStartPosition
  00025	89 45 f0	 mov	 DWORD PTR _Position$[ebp], eax
$LN2@ResetData:

; 229  : 
; 230  : 	//删除用户
; 231  : 	while (Position!=NULL)

  00028	83 7d f0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  0002c	74 2b		 je	 SHORT $LN3@ResetData

; 232  : 	{
; 233  : 		m_MapUserID.GetNextAssoc(Position,dwUserID,pGlobalUserItem);

  0002e	8d 45 f4	 lea	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  00031	50		 push	 eax
  00032	8d 4d f8	 lea	 ecx, DWORD PTR _dwUserID$[ebp]
  00035	51		 push	 ecx
  00036	8d 55 f0	 lea	 edx, DWORD PTR _Position$[ebp]
  00039	52		 push	 edx
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 c1 04	 add	 ecx, 4
  00040	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCGlobalUserItem@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetNextAssoc

; 234  : 		if (pGlobalUserItem!=NULL) FreeGlobalUserItem(pGlobalUserItem);

  00045	83 7d f4 00	 cmp	 DWORD PTR _pGlobalUserItem$[ebp], 0
  00049	74 0c		 je	 SHORT $LN10@ResetData
  0004b	8b 45 f4	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?FreeGlobalUserItem@CGlobalInfoManager@@AAE_NPAVCGlobalUserItem@@@Z ; CGlobalInfoManager::FreeGlobalUserItem
$LN10@ResetData:

; 235  : 	}

  00057	eb cf		 jmp	 SHORT $LN2@ResetData
$LN3@ResetData:

; 236  : 
; 237  : 	//删除广场
; 238  : 	WORD wPlazaID=0;

  00059	33 c0		 xor	 eax, eax
  0005b	66 89 45 ec	 mov	 WORD PTR _wPlazaID$[ebp], ax

; 239  : 	CGlobalPlazaItem * pGlobalPlazaItem=NULL;

  0005f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _pGlobalPlazaItem$[ebp], 0

; 240  : 	Position=m_MapPlazaID.GetStartPosition();

  00066	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	83 c1 20	 add	 ecx, 32			; 00000020H
  0006c	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetStartPosition
  00071	89 45 f0	 mov	 DWORD PTR _Position$[ebp], eax
$LN4@ResetData:

; 241  : 
; 242  : 	//删除广场
; 243  : 	while (Position!=NULL)

  00074	83 7d f0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00078	74 2b		 je	 SHORT $LN5@ResetData

; 244  : 	{
; 245  : 		m_MapPlazaID.GetNextAssoc(Position,wPlazaID,pGlobalPlazaItem);

  0007a	8d 45 e8	 lea	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]
  0007d	50		 push	 eax
  0007e	8d 4d ec	 lea	 ecx, DWORD PTR _wPlazaID$[ebp]
  00081	51		 push	 ecx
  00082	8d 55 f0	 lea	 edx, DWORD PTR _Position$[ebp]
  00085	52		 push	 edx
  00086	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	83 c1 20	 add	 ecx, 32			; 00000020H
  0008c	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalPlazaItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetNextAssoc

; 246  : 		if (pGlobalPlazaItem!=NULL) FreeGlobalPlazaItem(pGlobalPlazaItem);

  00091	83 7d e8 00	 cmp	 DWORD PTR _pGlobalPlazaItem$[ebp], 0
  00095	74 0c		 je	 SHORT $LN11@ResetData
  00097	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]
  0009a	50		 push	 eax
  0009b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	e8 00 00 00 00	 call	 ?FreeGlobalPlazaItem@CGlobalInfoManager@@AAE_NPAVCGlobalPlazaItem@@@Z ; CGlobalInfoManager::FreeGlobalPlazaItem
$LN11@ResetData:

; 247  : 	}

  000a3	eb cf		 jmp	 SHORT $LN4@ResetData
$LN5@ResetData:

; 248  : 
; 249  : 	//删除房间
; 250  : 	WORD wServerID=0;

  000a5	33 c0		 xor	 eax, eax
  000a7	66 89 45 e4	 mov	 WORD PTR _wServerID$[ebp], ax

; 251  : 	CGlobalServerItem * pGlobalServerItem=NULL;

  000ab	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pGlobalServerItem$[ebp], 0

; 252  : 	Position=m_MapServerID.GetStartPosition();

  000b2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	83 c1 3c	 add	 ecx, 60			; 0000003cH
  000b8	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetStartPosition
  000bd	89 45 f0	 mov	 DWORD PTR _Position$[ebp], eax
$LN6@ResetData:

; 253  : 
; 254  : 	//删除房间
; 255  : 	while (Position!=NULL)

  000c0	83 7d f0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  000c4	74 2b		 je	 SHORT $LN7@ResetData

; 256  : 	{
; 257  : 		m_MapServerID.GetNextAssoc(Position,wServerID,pGlobalServerItem);

  000c6	8d 45 e0	 lea	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  000c9	50		 push	 eax
  000ca	8d 4d e4	 lea	 ecx, DWORD PTR _wServerID$[ebp]
  000cd	51		 push	 ecx
  000ce	8d 55 f0	 lea	 edx, DWORD PTR _Position$[ebp]
  000d1	52		 push	 edx
  000d2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	83 c1 3c	 add	 ecx, 60			; 0000003cH
  000d8	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalServerItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetNextAssoc

; 258  : 		if (pGlobalServerItem!=NULL) FreeGlobalServerItem(pGlobalServerItem);

  000dd	83 7d e0 00	 cmp	 DWORD PTR _pGlobalServerItem$[ebp], 0
  000e1	74 0c		 je	 SHORT $LN12@ResetData
  000e3	8b 45 e0	 mov	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  000e6	50		 push	 eax
  000e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?FreeGlobalServerItem@CGlobalInfoManager@@AAE_NPAVCGlobalServerItem@@@Z ; CGlobalInfoManager::FreeGlobalServerItem
$LN12@ResetData:

; 259  : 	}

  000ef	eb cf		 jmp	 SHORT $LN6@ResetData
$LN7@ResetData:

; 260  : 
; 261  : 	//删除聊天
; 262  : 	WORD wChatID=0;

  000f1	33 c0		 xor	 eax, eax
  000f3	66 89 45 dc	 mov	 WORD PTR _wChatID$[ebp], ax

; 263  : 	CGlobalChatItem * pGlobalChatItem=NULL;

  000f7	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _pGlobalChatItem$[ebp], 0

; 264  : 	Position=m_MapChatID.GetStartPosition();

  000fe	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00101	83 c1 58	 add	 ecx, 88			; 00000058H
  00104	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetStartPosition
  00109	89 45 f0	 mov	 DWORD PTR _Position$[ebp], eax
$LN8@ResetData:

; 265  : 
; 266  : 	//删除广场
; 267  : 	while (Position!=NULL)

  0010c	83 7d f0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00110	74 2b		 je	 SHORT $LN9@ResetData

; 268  : 	{
; 269  : 		m_MapChatID.GetNextAssoc(Position,wPlazaID,pGlobalChatItem);

  00112	8d 45 d8	 lea	 eax, DWORD PTR _pGlobalChatItem$[ebp]
  00115	50		 push	 eax
  00116	8d 4d ec	 lea	 ecx, DWORD PTR _wPlazaID$[ebp]
  00119	51		 push	 ecx
  0011a	8d 55 f0	 lea	 edx, DWORD PTR _Position$[ebp]
  0011d	52		 push	 edx
  0011e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00121	83 c1 58	 add	 ecx, 88			; 00000058H
  00124	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalChatItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetNextAssoc

; 270  : 		if (pGlobalChatItem!=NULL) FreeGlobalChatItem(pGlobalChatItem);

  00129	83 7d d8 00	 cmp	 DWORD PTR _pGlobalChatItem$[ebp], 0
  0012d	74 0c		 je	 SHORT $LN13@ResetData
  0012f	8b 45 d8	 mov	 eax, DWORD PTR _pGlobalChatItem$[ebp]
  00132	50		 push	 eax
  00133	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00136	e8 00 00 00 00	 call	 ?FreeGlobalChatItem@CGlobalInfoManager@@AAE_NPAVCGlobalChatItem@@@Z ; CGlobalInfoManager::FreeGlobalChatItem
$LN13@ResetData:

; 271  : 	}

  0013b	eb cf		 jmp	 SHORT $LN8@ResetData
$LN9@ResetData:

; 272  : 
; 273  : 	//删除索引
; 274  : 	m_MapUserID.RemoveAll();

  0013d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00140	83 c1 04	 add	 ecx, 4
  00143	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveAll

; 275  : 	m_MapGameID.RemoveAll();

  00148	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	81 c1 c4 00 00
	00		 add	 ecx, 196		; 000000c4H
  00151	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveAll

; 276  : 	m_MapPlazaID.RemoveAll();

  00156	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00159	83 c1 20	 add	 ecx, 32			; 00000020H
  0015c	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::RemoveAll

; 277  : 	m_MapServerID.RemoveAll();

  00161	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00164	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00167	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::RemoveAll

; 278  : 	m_MapNickName.RemoveAll();

  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00175	e8 00 00 00 00	 call	 ?RemoveAll@CMapStringToPtr@@QAEXXZ ; CMapStringToPtr::RemoveAll

; 279  : 	m_MapChatID.RemoveAll();

  0017a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	83 c1 58	 add	 ecx, 88			; 00000058H
  00180	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::RemoveAll

; 280  : 
; 281  : 	return;
; 282  : }

  00185	5f		 pop	 edi
  00186	5e		 pop	 esi
  00187	5b		 pop	 ebx
  00188	8b e5		 mov	 esp, ebp
  0018a	5d		 pop	 ebp
  0018b	c3		 ret	 0
?ResetData@CGlobalInfoManager@@QAEXXZ ENDP		; CGlobalInfoManager::ResetData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ??1CGlobalInfoManager@@UAE@XZ
_TEXT	SEGMENT
tv289 = -188						; size = 4
tv269 = -188						; size = 4
tv249 = -188						; size = 4
tv229 = -188						; size = 4
tv207 = -188						; size = 4
tv182 = -188						; size = 4
tv157 = -188						; size = 4
tv132 = -188						; size = 4
$T2 = -184						; size = 4
$T3 = -180						; size = 4
$T4 = -176						; size = 4
$T5 = -172						; size = 4
$T6 = -168						; size = 4
$T7 = -164						; size = 4
$T8 = -160						; size = 4
$T9 = -156						; size = 4
$T10 = -152						; size = 4
$T11 = -148						; size = 4
$T12 = -144						; size = 4
$T13 = -140						; size = 4
$T14 = -136						; size = 4
$T15 = -132						; size = 4
$T16 = -128						; size = 4
$T17 = -124						; size = 4
_pGlobalChatItem$ = -56					; size = 4
_wChatID$ = -52						; size = 2
_pGlobalServerItem$ = -48				; size = 4
_wServerID$ = -44					; size = 2
_pGlobalPlazaItem$ = -40				; size = 4
_wPlazaID$ = -36					; size = 2
_Position$ = -32					; size = 4
_pGlobalUserItem$ = -28					; size = 4
_dwUserID$ = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
??1CGlobalInfoManager@@UAE@XZ PROC			; CGlobalInfoManager::~CGlobalInfoManager, COMDAT
; _this$ = ecx

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGlobalInfoManager@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	50		 push	 eax
  00023	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00026	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002c	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00032	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00035	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGlobalInfoManager@@6B@
  0003b	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9

; 143  : 	//删除用户
; 144  : 	DWORD dwUserID=0L;

  00042	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _dwUserID$[ebp], 0

; 145  : 	CGlobalUserItem * pGlobalUserItem=NULL;

  00049	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pGlobalUserItem$[ebp], 0

; 146  : 	POSITION Position=m_MapUserID.GetStartPosition();

  00050	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	83 c1 04	 add	 ecx, 4
  00056	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetStartPosition
  0005b	89 45 e0	 mov	 DWORD PTR _Position$[ebp], eax
$LN2@CGlobalInf:

; 147  : 	while (Position!=NULL)

  0005e	83 7d e0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00062	0f 84 8e 00 00
	00		 je	 $LN3@CGlobalInf

; 148  : 	{
; 149  : 		m_MapUserID.GetNextAssoc(Position,dwUserID,pGlobalUserItem);

  00068	8d 45 e4	 lea	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  0006b	50		 push	 eax
  0006c	8d 4d e8	 lea	 ecx, DWORD PTR _dwUserID$[ebp]
  0006f	51		 push	 ecx
  00070	8d 55 e0	 lea	 edx, DWORD PTR _Position$[ebp]
  00073	52		 push	 edx
  00074	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	83 c1 04	 add	 ecx, 4
  0007a	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCGlobalUserItem@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetNextAssoc

; 150  : 		SafeDelete(pGlobalUserItem);

  0007f	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+12], 10 ; 0000000aH
  00083	8b 45 e4	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  00086	89 45 80	 mov	 DWORD PTR $T16[ebp], eax
  00089	8b 4d 80	 mov	 ecx, DWORD PTR $T16[ebp]
  0008c	89 4d 84	 mov	 DWORD PTR $T17[ebp], ecx
  0008f	83 7d 84 00	 cmp	 DWORD PTR $T17[ebp], 0
  00093	74 16		 je	 SHORT $LN27@CGlobalInf
  00095	6a 01		 push	 1
  00097	8b 55 84	 mov	 edx, DWORD PTR $T17[ebp]
  0009a	8b 02		 mov	 eax, DWORD PTR [edx]
  0009c	8b 4d 84	 mov	 ecx, DWORD PTR $T17[ebp]
  0009f	8b 10		 mov	 edx, DWORD PTR [eax]
  000a1	ff d2		 call	 edx
  000a3	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv132[ebp], eax
  000a9	eb 0a		 jmp	 SHORT $LN28@CGlobalInf
$LN27@CGlobalInf:
  000ab	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv132[ebp], 0
$LN28@CGlobalInf:
  000b5	eb 23		 jmp	 SHORT $LN51@CGlobalInf
__catch$??1CGlobalInfoManager@@UAE@XZ$0:
  000b7	33 c0		 xor	 eax, eax
  000b9	75 19		 jne	 SHORT $LN29@CGlobalInf
  000bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CGlobalInfoManager@@UAE@XZ@4JA
  000c1	83 c1 08	 add	 ecx, 8
  000c4	51		 push	 ecx
  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000ca	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000cf	85 c0		 test	 eax, eax
  000d1	74 01		 je	 SHORT $LN29@CGlobalInf
  000d3	cc		 int	 3
$LN29@CGlobalInf:
  000d4	b8 00 00 00 00	 mov	 eax, $LN78@CGlobalInf
  000d9	c3		 ret	 0
$LN51@CGlobalInf:
  000da	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  000e1	eb 07		 jmp	 SHORT __tryend$??1CGlobalInfoManager@@UAE@XZ$1
$LN78@CGlobalInf:
  000e3	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CGlobalInfoManager@@UAE@XZ$1:
  000ea	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pGlobalUserItem$[ebp], 0

; 151  : 	}

  000f1	e9 68 ff ff ff	 jmp	 $LN2@CGlobalInf
$LN3@CGlobalInf:

; 152  : 	m_MapUserID.RemoveAll();

  000f6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	83 c1 04	 add	 ecx, 4
  000fc	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveAll

; 153  : 
; 154  : 	//删除广场
; 155  : 	WORD wPlazaID=0;

  00101	33 c0		 xor	 eax, eax
  00103	66 89 45 dc	 mov	 WORD PTR _wPlazaID$[ebp], ax

; 156  : 	CGlobalPlazaItem * pGlobalPlazaItem=NULL;

  00107	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _pGlobalPlazaItem$[ebp], 0

; 157  : 	Position=m_MapPlazaID.GetStartPosition();

  0010e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00111	83 c1 20	 add	 ecx, 32			; 00000020H
  00114	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetStartPosition
  00119	89 45 e0	 mov	 DWORD PTR _Position$[ebp], eax
$LN4@CGlobalInf:

; 158  : 	while (Position!=NULL)

  0011c	83 7d e0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  00120	0f 84 a0 00 00
	00		 je	 $LN5@CGlobalInf

; 159  : 	{
; 160  : 		m_MapPlazaID.GetNextAssoc(Position,wPlazaID,pGlobalPlazaItem);

  00126	8d 45 d8	 lea	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]
  00129	50		 push	 eax
  0012a	8d 4d dc	 lea	 ecx, DWORD PTR _wPlazaID$[ebp]
  0012d	51		 push	 ecx
  0012e	8d 55 e0	 lea	 edx, DWORD PTR _Position$[ebp]
  00131	52		 push	 edx
  00132	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00135	83 c1 20	 add	 ecx, 32			; 00000020H
  00138	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalPlazaItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetNextAssoc

; 161  : 		SafeDelete(pGlobalPlazaItem);

  0013d	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+12], 12 ; 0000000cH
  00141	8b 45 d8	 mov	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]
  00144	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T14[ebp], eax
  0014a	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR $T14[ebp]
  00150	89 8d 7c ff ff
	ff		 mov	 DWORD PTR $T15[ebp], ecx
  00156	83 bd 7c ff ff
	ff 00		 cmp	 DWORD PTR $T15[ebp], 0
  0015d	74 1c		 je	 SHORT $LN30@CGlobalInf
  0015f	6a 01		 push	 1
  00161	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR $T15[ebp]
  00167	8b 02		 mov	 eax, DWORD PTR [edx]
  00169	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR $T15[ebp]
  0016f	8b 10		 mov	 edx, DWORD PTR [eax]
  00171	ff d2		 call	 edx
  00173	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv157[ebp], eax
  00179	eb 0a		 jmp	 SHORT $LN31@CGlobalInf
$LN30@CGlobalInf:
  0017b	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv157[ebp], 0
$LN31@CGlobalInf:
  00185	eb 23		 jmp	 SHORT $LN53@CGlobalInf
__catch$??1CGlobalInfoManager@@UAE@XZ$2:
  00187	33 c0		 xor	 eax, eax
  00189	75 19		 jne	 SHORT $LN32@CGlobalInf
  0018b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CGlobalInfoManager@@UAE@XZ@4JA
  00191	83 c1 13	 add	 ecx, 19			; 00000013H
  00194	51		 push	 ecx
  00195	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0019a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0019f	85 c0		 test	 eax, eax
  001a1	74 01		 je	 SHORT $LN32@CGlobalInf
  001a3	cc		 int	 3
$LN32@CGlobalInf:
  001a4	b8 00 00 00 00	 mov	 eax, $LN80@CGlobalInf
  001a9	c3		 ret	 0
$LN53@CGlobalInf:
  001aa	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  001b1	eb 07		 jmp	 SHORT __tryend$??1CGlobalInfoManager@@UAE@XZ$3
$LN80@CGlobalInf:
  001b3	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CGlobalInfoManager@@UAE@XZ$3:
  001ba	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _pGlobalPlazaItem$[ebp], 0

; 162  : 	}

  001c1	e9 56 ff ff ff	 jmp	 $LN4@CGlobalInf
$LN5@CGlobalInf:

; 163  : 	m_MapPlazaID.RemoveAll();

  001c6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001c9	83 c1 20	 add	 ecx, 32			; 00000020H
  001cc	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::RemoveAll

; 164  : 
; 165  : 	//删除房间
; 166  : 	WORD wServerID=0;

  001d1	33 c0		 xor	 eax, eax
  001d3	66 89 45 d4	 mov	 WORD PTR _wServerID$[ebp], ax

; 167  : 	CGlobalServerItem * pGlobalServerItem=NULL;

  001d7	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _pGlobalServerItem$[ebp], 0

; 168  : 	Position=m_MapServerID.GetStartPosition();

  001de	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001e1	83 c1 3c	 add	 ecx, 60			; 0000003cH
  001e4	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetStartPosition
  001e9	89 45 e0	 mov	 DWORD PTR _Position$[ebp], eax
$LN6@CGlobalInf:

; 169  : 	while (Position!=NULL)

  001ec	83 7d e0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  001f0	0f 84 a0 00 00
	00		 je	 $LN7@CGlobalInf

; 170  : 	{
; 171  : 		m_MapServerID.GetNextAssoc(Position,wServerID,pGlobalServerItem);

  001f6	8d 45 d0	 lea	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  001f9	50		 push	 eax
  001fa	8d 4d d4	 lea	 ecx, DWORD PTR _wServerID$[ebp]
  001fd	51		 push	 ecx
  001fe	8d 55 e0	 lea	 edx, DWORD PTR _Position$[ebp]
  00201	52		 push	 edx
  00202	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00205	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00208	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalServerItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetNextAssoc

; 172  : 		SafeDelete(pGlobalServerItem);

  0020d	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+12], 14 ; 0000000eH
  00211	8b 45 d0	 mov	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  00214	89 85 70 ff ff
	ff		 mov	 DWORD PTR $T12[ebp], eax
  0021a	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR $T12[ebp]
  00220	89 8d 74 ff ff
	ff		 mov	 DWORD PTR $T13[ebp], ecx
  00226	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR $T13[ebp], 0
  0022d	74 1c		 je	 SHORT $LN33@CGlobalInf
  0022f	6a 01		 push	 1
  00231	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR $T13[ebp]
  00237	8b 02		 mov	 eax, DWORD PTR [edx]
  00239	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR $T13[ebp]
  0023f	8b 10		 mov	 edx, DWORD PTR [eax]
  00241	ff d2		 call	 edx
  00243	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv182[ebp], eax
  00249	eb 0a		 jmp	 SHORT $LN34@CGlobalInf
$LN33@CGlobalInf:
  0024b	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv182[ebp], 0
$LN34@CGlobalInf:
  00255	eb 23		 jmp	 SHORT $LN55@CGlobalInf
__catch$??1CGlobalInfoManager@@UAE@XZ$4:
  00257	33 c0		 xor	 eax, eax
  00259	75 19		 jne	 SHORT $LN35@CGlobalInf
  0025b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CGlobalInfoManager@@UAE@XZ@4JA
  00261	83 c1 1e	 add	 ecx, 30			; 0000001eH
  00264	51		 push	 ecx
  00265	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0026a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0026f	85 c0		 test	 eax, eax
  00271	74 01		 je	 SHORT $LN35@CGlobalInf
  00273	cc		 int	 3
$LN35@CGlobalInf:
  00274	b8 00 00 00 00	 mov	 eax, $LN82@CGlobalInf
  00279	c3		 ret	 0
$LN55@CGlobalInf:
  0027a	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  00281	eb 07		 jmp	 SHORT __tryend$??1CGlobalInfoManager@@UAE@XZ$5
$LN82@CGlobalInf:
  00283	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CGlobalInfoManager@@UAE@XZ$5:
  0028a	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _pGlobalServerItem$[ebp], 0

; 173  : 	}

  00291	e9 56 ff ff ff	 jmp	 $LN6@CGlobalInf
$LN7@CGlobalInf:

; 174  : 	m_MapServerID.RemoveAll();

  00296	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00299	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0029c	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::RemoveAll

; 175  : 
; 176  : 	//删除聊天
; 177  : 	WORD wChatID=0;

  002a1	33 c0		 xor	 eax, eax
  002a3	66 89 45 cc	 mov	 WORD PTR _wChatID$[ebp], ax

; 178  : 	CGlobalChatItem * pGlobalChatItem=NULL;

  002a7	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _pGlobalChatItem$[ebp], 0

; 179  : 	Position=m_MapChatID.GetStartPosition();

  002ae	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002b1	83 c1 58	 add	 ecx, 88			; 00000058H
  002b4	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetStartPosition
  002b9	89 45 e0	 mov	 DWORD PTR _Position$[ebp], eax
$LN8@CGlobalInf:

; 180  : 	while (Position!=NULL)

  002bc	83 7d e0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  002c0	0f 84 a0 00 00
	00		 je	 $LN9@CGlobalInf

; 181  : 	{
; 182  : 		m_MapChatID.GetNextAssoc(Position,wChatID,pGlobalChatItem);

  002c6	8d 45 c8	 lea	 eax, DWORD PTR _pGlobalChatItem$[ebp]
  002c9	50		 push	 eax
  002ca	8d 4d cc	 lea	 ecx, DWORD PTR _wChatID$[ebp]
  002cd	51		 push	 ecx
  002ce	8d 55 e0	 lea	 edx, DWORD PTR _Position$[ebp]
  002d1	52		 push	 edx
  002d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002d5	83 c1 58	 add	 ecx, 88			; 00000058H
  002d8	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalChatItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetNextAssoc

; 183  : 		SafeDelete(pGlobalChatItem);

  002dd	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+12], 16 ; 00000010H
  002e1	8b 45 c8	 mov	 eax, DWORD PTR _pGlobalChatItem$[ebp]
  002e4	89 85 68 ff ff
	ff		 mov	 DWORD PTR $T10[ebp], eax
  002ea	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR $T10[ebp]
  002f0	89 8d 6c ff ff
	ff		 mov	 DWORD PTR $T11[ebp], ecx
  002f6	83 bd 6c ff ff
	ff 00		 cmp	 DWORD PTR $T11[ebp], 0
  002fd	74 1c		 je	 SHORT $LN36@CGlobalInf
  002ff	6a 01		 push	 1
  00301	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR $T11[ebp]
  00307	8b 02		 mov	 eax, DWORD PTR [edx]
  00309	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR $T11[ebp]
  0030f	8b 10		 mov	 edx, DWORD PTR [eax]
  00311	ff d2		 call	 edx
  00313	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv207[ebp], eax
  00319	eb 0a		 jmp	 SHORT $LN37@CGlobalInf
$LN36@CGlobalInf:
  0031b	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv207[ebp], 0
$LN37@CGlobalInf:
  00325	eb 23		 jmp	 SHORT $LN57@CGlobalInf
__catch$??1CGlobalInfoManager@@UAE@XZ$6:
  00327	33 c0		 xor	 eax, eax
  00329	75 19		 jne	 SHORT $LN38@CGlobalInf
  0032b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CGlobalInfoManager@@UAE@XZ@4JA
  00331	83 c1 29	 add	 ecx, 41			; 00000029H
  00334	51		 push	 ecx
  00335	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0033a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0033f	85 c0		 test	 eax, eax
  00341	74 01		 je	 SHORT $LN38@CGlobalInf
  00343	cc		 int	 3
$LN38@CGlobalInf:
  00344	b8 00 00 00 00	 mov	 eax, $LN84@CGlobalInf
  00349	c3		 ret	 0
$LN57@CGlobalInf:
  0034a	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  00351	eb 07		 jmp	 SHORT __tryend$??1CGlobalInfoManager@@UAE@XZ$7
$LN84@CGlobalInf:
  00353	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CGlobalInfoManager@@UAE@XZ$7:
  0035a	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _pGlobalChatItem$[ebp], 0

; 184  : 	}

  00361	e9 56 ff ff ff	 jmp	 $LN8@CGlobalInf
$LN9@CGlobalInf:

; 185  : 	m_MapChatID.RemoveAll();

  00366	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00369	83 c1 58	 add	 ecx, 88			; 00000058H
  0036c	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::RemoveAll
$LN10@CGlobalInf:

; 186  : 
; 187  : 	//删除用户
; 188  : 	while (m_pGlobalUserItem!=NULL)

  00371	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00374	83 b8 fc 00 00
	00 00		 cmp	 DWORD PTR [eax+252], 0
  0037b	0f 84 ad 00 00
	00		 je	 $LN12@CGlobalInf

; 189  : 	{
; 190  : 		pGlobalUserItem=m_pGlobalUserItem;

  00381	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00384	8b 88 fc 00 00
	00		 mov	 ecx, DWORD PTR [eax+252]
  0038a	89 4d e4	 mov	 DWORD PTR _pGlobalUserItem$[ebp], ecx

; 191  : 		m_pGlobalUserItem=m_pGlobalUserItem->m_pNextUserItemPtr;

  0038d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00390	8b 88 fc 00 00
	00		 mov	 ecx, DWORD PTR [eax+252]
  00396	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00399	8b 81 54 01 00
	00		 mov	 eax, DWORD PTR [ecx+340]
  0039f	89 82 fc 00 00
	00		 mov	 DWORD PTR [edx+252], eax

; 192  : 		SafeDelete(pGlobalUserItem);

  003a5	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+12], 18 ; 00000012H
  003a9	8b 45 e4	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  003ac	89 85 60 ff ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  003b2	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR $T8[ebp]
  003b8	89 8d 64 ff ff
	ff		 mov	 DWORD PTR $T9[ebp], ecx
  003be	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR $T9[ebp], 0
  003c5	74 1c		 je	 SHORT $LN39@CGlobalInf
  003c7	6a 01		 push	 1
  003c9	8b 95 64 ff ff
	ff		 mov	 edx, DWORD PTR $T9[ebp]
  003cf	8b 02		 mov	 eax, DWORD PTR [edx]
  003d1	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR $T9[ebp]
  003d7	8b 10		 mov	 edx, DWORD PTR [eax]
  003d9	ff d2		 call	 edx
  003db	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv229[ebp], eax
  003e1	eb 0a		 jmp	 SHORT $LN40@CGlobalInf
$LN39@CGlobalInf:
  003e3	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv229[ebp], 0
$LN40@CGlobalInf:
  003ed	eb 23		 jmp	 SHORT $LN59@CGlobalInf
__catch$??1CGlobalInfoManager@@UAE@XZ$8:
  003ef	33 c0		 xor	 eax, eax
  003f1	75 19		 jne	 SHORT $LN41@CGlobalInf
  003f3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CGlobalInfoManager@@UAE@XZ@4JA
  003f9	83 c1 32	 add	 ecx, 50			; 00000032H
  003fc	51		 push	 ecx
  003fd	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00402	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00407	85 c0		 test	 eax, eax
  00409	74 01		 je	 SHORT $LN41@CGlobalInf
  0040b	cc		 int	 3
$LN41@CGlobalInf:
  0040c	b8 00 00 00 00	 mov	 eax, $LN86@CGlobalInf
  00411	c3		 ret	 0
$LN59@CGlobalInf:
  00412	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  00419	eb 07		 jmp	 SHORT __tryend$??1CGlobalInfoManager@@UAE@XZ$9
$LN86@CGlobalInf:
  0041b	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CGlobalInfoManager@@UAE@XZ$9:
  00422	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pGlobalUserItem$[ebp], 0

; 193  : 	}

  00429	e9 43 ff ff ff	 jmp	 $LN10@CGlobalInf
$LN12@CGlobalInf:

; 194  : 
; 195  : 	//删除广场
; 196  : 	while (m_pGlobalPlazaItem!=NULL)

  0042e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00431	83 b8 00 01 00
	00 00		 cmp	 DWORD PTR [eax+256], 0
  00438	0f 84 aa 00 00
	00		 je	 $LN14@CGlobalInf

; 197  : 	{
; 198  : 		pGlobalPlazaItem=m_pGlobalPlazaItem;

  0043e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00441	8b 88 00 01 00
	00		 mov	 ecx, DWORD PTR [eax+256]
  00447	89 4d d8	 mov	 DWORD PTR _pGlobalPlazaItem$[ebp], ecx

; 199  : 		m_pGlobalPlazaItem=m_pGlobalPlazaItem->m_pNextPlazaItemPtr;

  0044a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0044d	8b 88 00 01 00
	00		 mov	 ecx, DWORD PTR [eax+256]
  00453	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00456	8b 41 64	 mov	 eax, DWORD PTR [ecx+100]
  00459	89 82 00 01 00
	00		 mov	 DWORD PTR [edx+256], eax

; 200  : 		SafeDelete(pGlobalPlazaItem);

  0045f	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+12], 20 ; 00000014H
  00463	8b 45 d8	 mov	 eax, DWORD PTR _pGlobalPlazaItem$[ebp]
  00466	89 85 58 ff ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  0046c	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
  00472	89 8d 5c ff ff
	ff		 mov	 DWORD PTR $T7[ebp], ecx
  00478	83 bd 5c ff ff
	ff 00		 cmp	 DWORD PTR $T7[ebp], 0
  0047f	74 1c		 je	 SHORT $LN42@CGlobalInf
  00481	6a 01		 push	 1
  00483	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR $T7[ebp]
  00489	8b 02		 mov	 eax, DWORD PTR [edx]
  0048b	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR $T7[ebp]
  00491	8b 10		 mov	 edx, DWORD PTR [eax]
  00493	ff d2		 call	 edx
  00495	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv249[ebp], eax
  0049b	eb 0a		 jmp	 SHORT $LN43@CGlobalInf
$LN42@CGlobalInf:
  0049d	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv249[ebp], 0
$LN43@CGlobalInf:
  004a7	eb 23		 jmp	 SHORT $LN61@CGlobalInf
__catch$??1CGlobalInfoManager@@UAE@XZ$10:
  004a9	33 c0		 xor	 eax, eax
  004ab	75 19		 jne	 SHORT $LN44@CGlobalInf
  004ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CGlobalInfoManager@@UAE@XZ@4JA
  004b3	83 c1 3a	 add	 ecx, 58			; 0000003aH
  004b6	51		 push	 ecx
  004b7	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  004bc	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  004c1	85 c0		 test	 eax, eax
  004c3	74 01		 je	 SHORT $LN44@CGlobalInf
  004c5	cc		 int	 3
$LN44@CGlobalInf:
  004c6	b8 00 00 00 00	 mov	 eax, $LN88@CGlobalInf
  004cb	c3		 ret	 0
$LN61@CGlobalInf:
  004cc	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  004d3	eb 07		 jmp	 SHORT __tryend$??1CGlobalInfoManager@@UAE@XZ$11
$LN88@CGlobalInf:
  004d5	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CGlobalInfoManager@@UAE@XZ$11:
  004dc	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _pGlobalPlazaItem$[ebp], 0

; 201  : 	}

  004e3	e9 46 ff ff ff	 jmp	 $LN12@CGlobalInf
$LN14@CGlobalInf:

; 202  : 
; 203  : 	//删除房间
; 204  : 	while (m_pGlobalServerItem!=NULL)

  004e8	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  004eb	83 b8 04 01 00
	00 00		 cmp	 DWORD PTR [eax+260], 0
  004f2	0f 84 ad 00 00
	00		 je	 $LN16@CGlobalInf

; 205  : 	{
; 206  : 		pGlobalServerItem=m_pGlobalServerItem;

  004f8	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  004fb	8b 88 04 01 00
	00		 mov	 ecx, DWORD PTR [eax+260]
  00501	89 4d d0	 mov	 DWORD PTR _pGlobalServerItem$[ebp], ecx

; 207  : 		m_pGlobalServerItem=m_pGlobalServerItem->m_pNextServerItemPtr;

  00504	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00507	8b 88 04 01 00
	00		 mov	 ecx, DWORD PTR [eax+260]
  0050d	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00510	8b 81 40 03 00
	00		 mov	 eax, DWORD PTR [ecx+832]
  00516	89 82 04 01 00
	00		 mov	 DWORD PTR [edx+260], eax

; 208  : 		SafeDelete(pGlobalServerItem);

  0051c	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+12], 22 ; 00000016H
  00520	8b 45 d0	 mov	 eax, DWORD PTR _pGlobalServerItem$[ebp]
  00523	89 85 50 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  00529	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  0052f	89 8d 54 ff ff
	ff		 mov	 DWORD PTR $T5[ebp], ecx
  00535	83 bd 54 ff ff
	ff 00		 cmp	 DWORD PTR $T5[ebp], 0
  0053c	74 1c		 je	 SHORT $LN45@CGlobalInf
  0053e	6a 01		 push	 1
  00540	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR $T5[ebp]
  00546	8b 02		 mov	 eax, DWORD PTR [edx]
  00548	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR $T5[ebp]
  0054e	8b 10		 mov	 edx, DWORD PTR [eax]
  00550	ff d2		 call	 edx
  00552	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv269[ebp], eax
  00558	eb 0a		 jmp	 SHORT $LN46@CGlobalInf
$LN45@CGlobalInf:
  0055a	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv269[ebp], 0
$LN46@CGlobalInf:
  00564	eb 23		 jmp	 SHORT $LN63@CGlobalInf
__catch$??1CGlobalInfoManager@@UAE@XZ$12:
  00566	33 c0		 xor	 eax, eax
  00568	75 19		 jne	 SHORT $LN47@CGlobalInf
  0056a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CGlobalInfoManager@@UAE@XZ@4JA
  00570	83 c1 42	 add	 ecx, 66			; 00000042H
  00573	51		 push	 ecx
  00574	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00579	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0057e	85 c0		 test	 eax, eax
  00580	74 01		 je	 SHORT $LN47@CGlobalInf
  00582	cc		 int	 3
$LN47@CGlobalInf:
  00583	b8 00 00 00 00	 mov	 eax, $LN90@CGlobalInf
  00588	c3		 ret	 0
$LN63@CGlobalInf:
  00589	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  00590	eb 07		 jmp	 SHORT __tryend$??1CGlobalInfoManager@@UAE@XZ$13
$LN90@CGlobalInf:
  00592	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CGlobalInfoManager@@UAE@XZ$13:
  00599	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _pGlobalServerItem$[ebp], 0

; 209  : 	}

  005a0	e9 43 ff ff ff	 jmp	 $LN14@CGlobalInf
$LN16@CGlobalInf:

; 210  : 
; 211  : 	//删除聊天
; 212  : 	while (m_pGlobalChatItem!=NULL)

  005a5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  005a8	83 b8 08 01 00
	00 00		 cmp	 DWORD PTR [eax+264], 0
  005af	0f 84 aa 00 00
	00		 je	 $LN1@CGlobalInf

; 213  : 	{
; 214  : 		pGlobalChatItem=m_pGlobalChatItem;

  005b5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  005b8	8b 88 08 01 00
	00		 mov	 ecx, DWORD PTR [eax+264]
  005be	89 4d c8	 mov	 DWORD PTR _pGlobalChatItem$[ebp], ecx

; 215  : 		m_pGlobalChatItem=m_pGlobalChatItem->m_pNextChatServerPtr;

  005c1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  005c4	8b 88 08 01 00
	00		 mov	 ecx, DWORD PTR [eax+264]
  005ca	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  005cd	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  005d0	89 82 08 01 00
	00		 mov	 DWORD PTR [edx+264], eax

; 216  : 		SafeDelete(pGlobalChatItem);

  005d6	c6 45 fc 18	 mov	 BYTE PTR __$EHRec$[ebp+12], 24 ; 00000018H
  005da	8b 45 c8	 mov	 eax, DWORD PTR _pGlobalChatItem$[ebp]
  005dd	89 85 48 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  005e3	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  005e9	89 8d 4c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], ecx
  005ef	83 bd 4c ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  005f6	74 1c		 je	 SHORT $LN48@CGlobalInf
  005f8	6a 01		 push	 1
  005fa	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00600	8b 02		 mov	 eax, DWORD PTR [edx]
  00602	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00608	8b 10		 mov	 edx, DWORD PTR [eax]
  0060a	ff d2		 call	 edx
  0060c	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv289[ebp], eax
  00612	eb 0a		 jmp	 SHORT $LN49@CGlobalInf
$LN48@CGlobalInf:
  00614	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv289[ebp], 0
$LN49@CGlobalInf:
  0061e	eb 23		 jmp	 SHORT $LN65@CGlobalInf
__catch$??1CGlobalInfoManager@@UAE@XZ$14:
  00620	33 c0		 xor	 eax, eax
  00622	75 19		 jne	 SHORT $LN50@CGlobalInf
  00624	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0???1CGlobalInfoManager@@UAE@XZ@4JA
  0062a	83 c1 4a	 add	 ecx, 74			; 0000004aH
  0062d	51		 push	 ecx
  0062e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MAJEPLPJ@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00633	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00638	85 c0		 test	 eax, eax
  0063a	74 01		 je	 SHORT $LN50@CGlobalInf
  0063c	cc		 int	 3
$LN50@CGlobalInf:
  0063d	b8 00 00 00 00	 mov	 eax, $LN92@CGlobalInf
  00642	c3		 ret	 0
$LN65@CGlobalInf:
  00643	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
  0064a	eb 07		 jmp	 SHORT __tryend$??1CGlobalInfoManager@@UAE@XZ$15
$LN92@CGlobalInf:
  0064c	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 9
__tryend$??1CGlobalInfoManager@@UAE@XZ$15:
  00653	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _pGlobalChatItem$[ebp], 0

; 217  : 	}

  0065a	e9 46 ff ff ff	 jmp	 $LN16@CGlobalInf
$LN1@CGlobalInf:

; 218  : 
; 219  : 	return;
; 220  : }

  0065f	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+12], 8
  00663	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00666	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  0066c	e8 00 00 00 00	 call	 ??1CMapStringToPtr@@UAE@XZ ; CMapStringToPtr::~CMapStringToPtr
  00671	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+12], 7
  00675	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00678	81 c1 c4 00 00
	00		 add	 ecx, 196		; 000000c4H
  0067e	e8 00 00 00 00	 call	 ??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::~CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
  00683	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+12], 6
  00687	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0068a	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  00690	e8 00 00 00 00	 call	 ??1?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::~vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >
  00695	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+12], 5
  00699	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0069c	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  006a2	e8 00 00 00 00	 call	 ??1?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::~vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >
  006a7	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+12], 4
  006ab	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006ae	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  006b4	e8 00 00 00 00	 call	 ??1?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAE@XZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::~CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>
  006b9	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+12], 3
  006bd	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006c0	83 c1 74	 add	 ecx, 116		; 00000074H
  006c3	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@UAE@XZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::~CWHArray<tagServerTableCount *,tagServerTableCount * const &>
  006c8	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  006cc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006cf	83 c1 58	 add	 ecx, 88			; 00000058H
  006d2	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAE@XZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::~CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>
  006d7	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  006db	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006de	83 c1 3c	 add	 ecx, 60			; 0000003cH
  006e1	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAE@XZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::~CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>
  006e6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  006ea	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006ed	83 c1 20	 add	 ecx, 32			; 00000020H
  006f0	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAE@XZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::~CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>
  006f5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  006fc	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  006ff	83 c1 04	 add	 ecx, 4
  00702	e8 00 00 00 00	 call	 ??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::~CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
  00707	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0070a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00711	59		 pop	 ecx
  00712	5f		 pop	 edi
  00713	5e		 pop	 esi
  00714	5b		 pop	 ebx
  00715	8b e5		 mov	 esp, ebp
  00717	5d		 pop	 ebp
  00718	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$16:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::~CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$17:
  0000b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 20	 add	 ecx, 32			; 00000020H
  00011	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAE@XZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::~CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>
__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$18:
  00016	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0001c	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAE@XZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::~CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>
__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$19:
  00021	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 58	 add	 ecx, 88			; 00000058H
  00027	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAE@XZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::~CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>
__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$20:
  0002c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 74	 add	 ecx, 116		; 00000074H
  00032	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@UAE@XZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::~CWHArray<tagServerTableCount *,tagServerTableCount * const &>
__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$21:
  00037	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00040	e9 00 00 00 00	 jmp	 ??1?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAE@XZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::~CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>
__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$22:
  00045	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  0004e	e9 00 00 00 00	 jmp	 ??1?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::~vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >
__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$23:
  00053	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  0005c	e9 00 00 00 00	 jmp	 ??1?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::~vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >
__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$24:
  00061	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	81 c1 c4 00 00
	00		 add	 ecx, 196		; 000000c4H
  0006a	e9 00 00 00 00	 jmp	 ??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::~CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
__unwindfunclet$??1CGlobalInfoManager@@UAE@XZ$25:
  0006f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00078	e9 00 00 00 00	 jmp	 ??1CMapStringToPtr@@UAE@XZ ; CMapStringToPtr::~CMapStringToPtr
__ehhandler$??1CGlobalInfoManager@@UAE@XZ:
  0007d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00081	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00084	8b 8a 40 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-192]
  0008a	33 c8		 xor	 ecx, eax
  0008c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00091	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGlobalInfoManager@@UAE@XZ
  00096	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGlobalInfoManager@@UAE@XZ ENDP			; CGlobalInfoManager::~CGlobalInfoManager
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ??0CGlobalInfoManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CGlobalInfoManager@@QAE@XZ PROC			; CGlobalInfoManager::CGlobalInfoManager, COMDAT
; _this$ = ecx

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGlobalInfoManager@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGlobalInfoManager@@6B@
  00034	6a 0a		 push	 10			; 0000000aH
  00036	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	83 c1 04	 add	 ecx, 4
  0003c	e8 00 00 00 00	 call	 ??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00048	6a 0a		 push	 10			; 0000000aH
  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	83 c1 20	 add	 ecx, 32			; 00000020H
  00050	e8 00 00 00 00	 call	 ??0?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@H@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>
  00055	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00059	6a 0a		 push	 10			; 0000000aH
  0005b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00061	e8 00 00 00 00	 call	 ??0?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@H@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>
  00066	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0006a	6a 0a		 push	 10			; 0000000aH
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	83 c1 58	 add	 ecx, 88			; 00000058H
  00072	e8 00 00 00 00	 call	 ??0?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@H@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>
  00077	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0007b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	83 c1 74	 add	 ecx, 116		; 00000074H
  00081	e8 00 00 00 00	 call	 ??0?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAE@XZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::CWHArray<tagServerTableCount *,tagServerTableCount * const &>
  00086	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0008a	6a 0a		 push	 10			; 0000000aH
  0008c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00095	e8 00 00 00 00	 call	 ??0?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@H@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>
  0009a	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0009e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  000a7	e8 00 00 00 00	 call	 ??0?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >
  000ac	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  000b0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  000b9	e8 00 00 00 00	 call	 ??0?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >
  000be	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  000c2	6a 0a		 push	 10			; 0000000aH
  000c4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	81 c1 c4 00 00
	00		 add	 ecx, 196		; 000000c4H
  000cd	e8 00 00 00 00	 call	 ??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
  000d2	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  000d6	6a 0a		 push	 10			; 0000000aH
  000d8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000db	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  000e1	e8 00 00 00 00	 call	 ??0CMapStringToPtr@@QAE@H@Z ; CMapStringToPtr::CMapStringToPtr
  000e6	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9

; 121  : 	//存储变量
; 122  : 	m_pGlobalUserItem=NULL;

  000ea	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	c7 80 fc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+252], 0

; 123  : 	m_pGlobalPlazaItem=NULL;

  000f7	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000fa	c7 80 00 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+256], 0

; 124  : 	m_pGlobalServerItem=NULL;

  00104	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00107	c7 80 04 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+260], 0

; 125  : 	m_pGlobalChatItem = NULL;

  00111	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00114	c7 80 08 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+264], 0

; 126  : 
; 127  : 	//设置索引
; 128  : 	m_MapPlazaID.InitHashTable(PRIME_SERVER);

  0011e	6a 01		 push	 1
  00120	68 f1 03 00 00	 push	 1009			; 000003f1H
  00125	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00128	83 c1 20	 add	 ecx, 32			; 00000020H
  0012b	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::InitHashTable

; 129  : 	m_MapServerID.InitHashTable(PRIME_SERVER);

  00130	6a 01		 push	 1
  00132	68 f1 03 00 00	 push	 1009			; 000003f1H
  00137	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0013a	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0013d	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::InitHashTable

; 130  : 	m_MapUserID.InitHashTable(PRIME_PLATFORM_USER);

  00142	6a 01		 push	 1
  00144	68 a3 86 01 00	 push	 100003			; 000186a3H
  00149	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014c	83 c1 04	 add	 ecx, 4
  0014f	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::InitHashTable

; 131  : 	m_MapGameID.InitHashTable(PRIME_PLATFORM_USER);

  00154	6a 01		 push	 1
  00156	68 a3 86 01 00	 push	 100003			; 000186a3H
  0015b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0015e	81 c1 c4 00 00
	00		 add	 ecx, 196		; 000000c4H
  00164	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::InitHashTable

; 132  : 	m_MapNickName.InitHashTable(PRIME_PLATFORM_USER);

  00169	6a 01		 push	 1
  0016b	68 a3 86 01 00	 push	 100003			; 000186a3H
  00170	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00173	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00179	e8 00 00 00 00	 call	 ?InitHashTable@CMapStringToPtr@@QAEXIH@Z ; CMapStringToPtr::InitHashTable

; 133  : 	m_MapChatID.InitHashTable(PRIME_SERVER);

  0017e	6a 01		 push	 1
  00180	68 f1 03 00 00	 push	 1009			; 000003f1H
  00185	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00188	83 c1 58	 add	 ecx, 88			; 00000058H
  0018b	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::InitHashTable

; 134  : 	//约战房
; 135  : 	m_MapPersonalTableInfo.InitHashTable(MAX_SERVER);

  00190	6a 01		 push	 1
  00192	68 00 04 00 00	 push	 1024			; 00000400H
  00197	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0019a	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  001a0	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::InitHashTable

; 136  : 	m_ServerTableCountArray.RemoveAll();

  001a5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001a8	83 c1 74	 add	 ecx, 116		; 00000074H
  001ab	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXXZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::RemoveAll

; 137  : 	return;
; 138  : }

  001b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001b7	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001c4	59		 pop	 ecx
  001c5	5f		 pop	 edi
  001c6	5e		 pop	 esi
  001c7	5b		 pop	 ebx
  001c8	8b e5		 mov	 esp, ebp
  001ca	5d		 pop	 ebp
  001cb	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::~CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 20	 add	 ecx, 32			; 00000020H
  00011	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAE@XZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::~CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>
__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0001c	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAE@XZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::~CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>
__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$3:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 58	 add	 ecx, 88			; 00000058H
  00027	e9 00 00 00 00	 jmp	 ??1?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAE@XZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::~CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>
__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$4:
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 74	 add	 ecx, 116		; 00000074H
  00032	e9 00 00 00 00	 jmp	 ??1?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@UAE@XZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::~CWHArray<tagServerTableCount *,tagServerTableCount * const &>
__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$5:
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	81 c1 88 00 00
	00		 add	 ecx, 136		; 00000088H
  00040	e9 00 00 00 00	 jmp	 ??1?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAE@XZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::~CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>
__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$6:
  00045	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  0004e	e9 00 00 00 00	 jmp	 ??1?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::~vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >
__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$7:
  00053	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	81 c1 b4 00 00
	00		 add	 ecx, 180		; 000000b4H
  0005c	e9 00 00 00 00	 jmp	 ??1?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::~vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >
__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$8:
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	81 c1 c4 00 00
	00		 add	 ecx, 196		; 000000c4H
  0006a	e9 00 00 00 00	 jmp	 ??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::~CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
__unwindfunclet$??0CGlobalInfoManager@@QAE@XZ$9:
  0006f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	81 c1 e0 00 00
	00		 add	 ecx, 224		; 000000e0H
  00078	e9 00 00 00 00	 jmp	 ??1CMapStringToPtr@@UAE@XZ ; CMapStringToPtr::~CMapStringToPtr
__ehhandler$??0CGlobalInfoManager@@QAE@XZ:
  0007d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00081	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00084	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00087	33 c8		 xor	 ecx, eax
  00089	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGlobalInfoManager@@QAE@XZ
  00093	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGlobalInfoManager@@QAE@XZ ENDP			; CGlobalInfoManager::CGlobalInfoManager
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Orphan_range@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEXPAUCMD_CS_S_RegisterPersonal@@0@Z
_TEXT	SEGMENT
__Pnext$ = -24						; size = 4
__Lock$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEXPAUCMD_CS_S_RegisterPersonal@@0@Z PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1936 : 		{	// orphan iterators within specified (inclusive) range

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEXPAUCMD_CS_S_RegisterPersonal@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1937 : 		_Lockit _Lock(_LOCK_DEBUG);

  0002b	6a 03		 push	 3
  0002d	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1938 : 
; 1939 : 		const_iterator ** _Pnext = reinterpret_cast<const_iterator **>(this->_Getpfirst());

  0003d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getpfirst
  00045	89 45 e8	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1940 : 
; 1941 : 		if (_Pnext)

  00048	83 7d e8 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  0004c	74 4e		 je	 SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1942 : 			{
; 1943 : 			while (*_Pnext)

  0004e	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00051	83 38 00	 cmp	 DWORD PTR [eax], 0
  00054	74 46		 je	 SHORT $LN4@Orphan_ran

; 1944 : 				{
; 1945 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

  00056	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00059	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005b	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0005e	3b 55 08	 cmp	 edx, DWORD PTR __First$[ebp]
  00061	72 0d		 jb	 SHORT $LN7@Orphan_ran
  00063	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0006b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0006e	73 0f		 jae	 SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1946 : 					{	// skip the iterator
; 1947 : 					_Pnext = reinterpret_cast<const_iterator **>((*_Pnext)->_Getpnext());

  00070	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00073	8b 08		 mov	 ecx, DWORD PTR [eax]
  00075	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  0007a	89 45 e8	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1948 : 					}
; 1949 : 				else

  0007d	eb 1b		 jmp	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1950 : 					{	// orphan the iterator
; 1951 : 					(*_Pnext)->_Clrcont();

  0007f	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont

; 1952 : 					*_Pnext = *reinterpret_cast<const_iterator **>((*_Pnext)->_Getpnext());

  00089	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0008c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008e	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  00093	8b 4d e8	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00096	8b 10		 mov	 edx, DWORD PTR [eax]
  00098	89 11		 mov	 DWORD PTR [ecx], edx
$LN6@Orphan_ran:

; 1953 : 					}
; 1954 : 				}

  0009a	eb b2		 jmp	 SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1955 : 			}
; 1956 : 		}

  0009c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a3	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ac	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000af	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b6	59		 pop	 ecx
  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEXPAUCMD_CS_S_RegisterPersonal@@0@Z$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
__ehhandler$?_Orphan_range@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEXPAUCMD_CS_S_RegisterPersonal@@0@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEXPAUCMD_CS_S_RegisterPersonal@@0@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEXPAUCMD_CS_S_RegisterPersonal@@0@Z ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Orphan_range
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Xlength@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@CAXXZ PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Xlength, COMDAT

; 1925 : 		{	// report a length_error

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1926 : 		_Xlength_error("vector<T> too long");

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0000e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1927 : 		}

  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Xlength@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@CAXXZ ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Tidy@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXXZ PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Tidy, COMDAT
; _this$ = ecx

; 1910 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1911 : 		this->_Orphan_all();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Orphan_all

; 1912 : 
; 1913 : 		if (this->_Myfirst() != pointer())

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  0001c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001f	74 6b		 je	 SHORT $LN1@Tidy

; 1914 : 			{	// destroy and deallocate old array
; 1915 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  00029	8b 00		 mov	 eax, DWORD PTR [eax]
  0002b	50		 push	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	51		 push	 ecx
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@0@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Destroy

; 1916 : 			this->_Getal().deallocate(this->_Myfirst(), capacity());

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?capacity@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::capacity
  00047	50		 push	 eax
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  00050	8b 00		 mov	 eax, DWORD PTR [eax]
  00052	50		 push	 eax
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal
  0005b	8b c8		 mov	 ecx, eax
  0005d	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAEXQAUCMD_CS_S_RegisterPersonal@@I@Z ; std::allocator<CMD_CS_S_RegisterPersonal>::deallocate

; 1917 : 
; 1918 : 			this->_Myfirst() = pointer();

  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  0006a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1919 : 			this->_Mylast() = pointer();

  00070	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  00078	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1920 : 			this->_Myend() = pointer();

  0007e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myend
  00086	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@Tidy:

; 1921 : 			}
; 1922 : 		}

  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
?_Tidy@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXXZ ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Change_array@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXQAUCMD_CS_S_RegisterPersonal@@II@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXQAUCMD_CS_S_RegisterPersonal@@II@Z PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Change_array, COMDAT
; _this$ = ecx

; 1895 : 		{	// orphan all iterators, discard old array, acquire new array

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1896 : 		this->_Orphan_all();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Orphan_all

; 1897 : 
; 1898 : 		if (this->_Myfirst() != pointer())

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  0001c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001f	74 41		 je	 SHORT $LN2@Change_arr

; 1899 : 			{	// destroy and deallocate old array
; 1900 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  00029	8b 00		 mov	 eax, DWORD PTR [eax]
  0002b	50		 push	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	51		 push	 ecx
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@0@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Destroy

; 1901 : 			this->_Getal().deallocate(this->_Myfirst(), capacity());

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?capacity@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::capacity
  00047	50		 push	 eax
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  00050	8b 00		 mov	 eax, DWORD PTR [eax]
  00052	50		 push	 eax
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal
  0005b	8b c8		 mov	 ecx, eax
  0005d	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAEXQAUCMD_CS_S_RegisterPersonal@@I@Z ; std::allocator<CMD_CS_S_RegisterPersonal>::deallocate
$LN2@Change_arr:

; 1902 : 			}
; 1903 : 
; 1904 : 		this->_Myfirst() = _Newvec;

  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  0006a	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  0006d	89 08		 mov	 DWORD PTR [eax], ecx

; 1905 : 		this->_Mylast() = _Newvec + _Newsize;

  0006f	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00072	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  00075	8d 34 c1	 lea	 esi, DWORD PTR [ecx+eax*8]
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  00080	89 30		 mov	 DWORD PTR [eax], esi

; 1906 : 		this->_Myend() = _Newvec + _Newcapacity;

  00082	8b 45 10	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  00088	8d 34 c1	 lea	 esi, DWORD PTR [ecx+eax*8]
  0008b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myend
  00093	89 30		 mov	 DWORD PTR [eax], esi

; 1907 : 		}

  00095	5f		 pop	 edi
  00096	5e		 pop	 esi
  00097	5b		 pop	 ebx
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 0c 00	 ret	 12			; 0000000cH
?_Change_array@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXQAUCMD_CS_S_RegisterPersonal@@II@Z ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEII@Z
_TEXT	SEGMENT
__Geometric$ = -12					; size = 4
__Oldcapacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEII@Z PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Calculate_growth, COMDAT
; _this$ = ecx

; 1853 : 		{	// given _Oldcapacity and _Newsize, calculate geometric growth

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1854 : 		const size_type _Oldcapacity = capacity();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?capacity@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::capacity
  00014	89 45 f8	 mov	 DWORD PTR __Oldcapacity$[ebp], eax

; 1855 : 
; 1856 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?max_size@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::max_size
  0001f	8b 4d f8	 mov	 ecx, DWORD PTR __Oldcapacity$[ebp]
  00022	d1 e9		 shr	 ecx, 1
  00024	2b c1		 sub	 eax, ecx
  00026	39 45 f8	 cmp	 DWORD PTR __Oldcapacity$[ebp], eax
  00029	76 05		 jbe	 SHORT $LN2@Calculate_

; 1857 : 			{
; 1858 : 			return (_Newsize);	// geometric growth would overflow

  0002b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0002e	eb 1b		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1859 : 			}
; 1860 : 
; 1861 : 		const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00030	8b 45 f8	 mov	 eax, DWORD PTR __Oldcapacity$[ebp]
  00033	d1 e8		 shr	 eax, 1
  00035	03 45 f8	 add	 eax, DWORD PTR __Oldcapacity$[ebp]
  00038	89 45 f4	 mov	 DWORD PTR __Geometric$[ebp], eax

; 1862 : 
; 1863 : 		if (_Geometric < _Newsize)

  0003b	8b 45 f4	 mov	 eax, DWORD PTR __Geometric$[ebp]
  0003e	3b 45 08	 cmp	 eax, DWORD PTR __Newsize$[ebp]
  00041	73 05		 jae	 SHORT $LN3@Calculate_

; 1864 : 			{
; 1865 : 			return (_Newsize);	// geometric growth would be insufficient

  00043	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00046	eb 03		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1866 : 			}
; 1867 : 
; 1868 : 		return (_Geometric);	// geometric growth is sufficient

  00048	8b 45 f4	 mov	 eax, DWORD PTR __Geometric$[ebp]
$LN1@Calculate_:

; 1869 : 		}

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
?_Calculate_growth@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABEII@Z ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Destroy@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@0@Z PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Destroy, COMDAT
; _this$ = ecx

; 1848 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1849 : 		_Destroy_range(_First, _Last, this->_Getal());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal
  00014	50		 push	 eax
  00015	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAXPAUCMD_CS_S_RegisterPersonal@@0AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@@Z ; std::_Destroy_range<std::allocator<CMD_CS_S_RegisterPersonal> >
  00022	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1850 : 		}

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?_Destroy@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@0@Z ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@00@Z
_TEXT	SEGMENT
$T1 = -69						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove_if_noexcept@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@00@Z PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Umove_if_noexcept, COMDAT
; _this$ = ecx

; 1842 : 		{	// move_if_noexcept [_First, _Last) to raw _Dest, using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1843 : 		_Umove_if_noexcept1(_First, _Last, _Dest,

  0000c	33 c0		 xor	 eax, eax
  0000e	88 45 bb	 mov	 BYTE PTR $T1[ebp], al
  00011	0f b6 4d bb	 movzx	 ecx, BYTE PTR $T1[ebp]
  00015	51		 push	 ecx
  00016	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00019	52		 push	 edx
  0001a	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00021	51		 push	 ecx
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@00U?$integral_constant@_N$00@2@@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Umove_if_noexcept1

; 1844 : 			bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1845 : 		}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 0c 00	 ret	 12			; 0000000cH
?_Umove_if_noexcept@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@00@Z ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
?_Umove_if_noexcept1@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Umove_if_noexcept1, COMDAT
; _this$ = ecx

; 1832 : 		{	// move [_First, _Last) to raw _Dest, using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1833 : 		_Uninitialized_move(_First, _Last, _Dest, this->_Getal());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal
  00014	50		 push	 eax
  00015	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00020	52		 push	 edx
  00021	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUCMD_CS_S_RegisterPersonal@@PAU1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@0PAU1@AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@@Z ; std::_Uninitialized_move<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *,std::allocator<CMD_CS_S_RegisterPersonal> >
  00026	83 c4 10	 add	 esp, 16			; 00000010H

; 1834 : 		}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 10 00	 ret	 16			; 00000010H
?_Umove_if_noexcept1@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXPAUCMD_CS_S_RegisterPersonal@@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEPAUCMD_CS_S_RegisterPersonal@@PAU3@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEPAUCMD_CS_S_RegisterPersonal@@PAU3@00@Z PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Umove, COMDAT
; _this$ = ecx

; 1827 : 		{	// move [_First, _Last) to raw _Dest, using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1828 : 		return (_Uninitialized_move(_First, _Last, _Dest, this->_Getal()));

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal
  00014	50		 push	 eax
  00015	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00020	52		 push	 edx
  00021	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUCMD_CS_S_RegisterPersonal@@PAU1@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@YAPAUCMD_CS_S_RegisterPersonal@@QAU1@0PAU1@AAV?$allocator@UCMD_CS_S_RegisterPersonal@@@0@@Z ; std::_Uninitialized_move<CMD_CS_S_RegisterPersonal *,CMD_CS_S_RegisterPersonal *,std::allocator<CMD_CS_S_RegisterPersonal> >
  00026	83 c4 10	 add	 esp, 16			; 00000010H

; 1829 : 		}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?_Umove@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEPAUCMD_CS_S_RegisterPersonal@@PAU3@00@Z ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??A?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEAAUCMD_CS_S_RegisterPersonal@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEAAUCMD_CS_S_RegisterPersonal@@I@Z PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::operator[], COMDAT
; _this$ = ecx

; 1731 : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@operator:

; 1732 :  #if _ITERATOR_DEBUG_LEVEL != 0
; 1733 : 		_STL_VERIFY(_Pos < size(), "vector subscript out of range");

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?size@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::size
  00014	39 45 08	 cmp	 DWORD PTR __Pos$[ebp], eax
  00017	73 02		 jae	 SHORT $LN7@operator
  00019	eb 4a		 jmp	 SHORT $LN2@operator
$LN7@operator:
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00025	6a 00		 push	 0
  00027	68 c5 06 00 00	 push	 1733			; 000006c5H
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0GH@FKAHJGEE@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00031	6a 02		 push	 2
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00039	83 c4 18	 add	 esp, 24			; 00000018H
  0003c	83 f8 01	 cmp	 eax, 1
  0003f	75 01		 jne	 SHORT $LN11@operator
  00041	cc		 int	 3
$LN11@operator:
  00042	6a 00		 push	 0
  00044	68 c5 06 00 00	 push	 1733			; 000006c5H
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_1MO@OJBMIJHH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1OG@HDLNKHLM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0005e	83 c4 14	 add	 esp, 20			; 00000014H
  00061	33 c0		 xor	 eax, eax
  00063	75 b6		 jne	 SHORT $LN7@operator
$LN2@operator:
  00065	33 c0		 xor	 eax, eax
  00067	75 a3		 jne	 SHORT $LN4@operator

; 1734 :  #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 1735 : 
; 1736 : 		return (this->_Myfirst()[_Pos]);

  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  00071	8b 00		 mov	 eax, DWORD PTR [eax]
  00073	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00076	8d 04 c8	 lea	 eax, DWORD PTR [eax+ecx*8]

; 1737 : 		}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
??A?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEAAUCMD_CS_S_RegisterPersonal@@I@Z ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Has_unused_capacity@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABE_NXZ
_TEXT	SEGMENT
tv77 = -72						; size = 4
_this$ = -4						; size = 4
?_Has_unused_capacity@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABE_NXZ PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Has_unused_capacity, COMDAT
; _this$ = ecx

; 1725 : 		{	// micro-optimization for capacity() != size()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myend
  00014	8b f0		 mov	 esi, eax
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  0001e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00020	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00022	74 09		 je	 SHORT $LN3@Has_unused
  00024	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv77[ebp], 1
  0002b	eb 07		 jmp	 SHORT $LN4@Has_unused
$LN3@Has_unused:
  0002d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN4@Has_unused:
  00034	8a 45 b8	 mov	 al, BYTE PTR tv77[ebp]

; 1727 : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?_Has_unused_capacity@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@ABE_NXZ ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Has_unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?capacity@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::capacity, COMDAT
; _this$ = ecx

; 1714 : 		{	// return current length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1715 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myend
  00014	8b f0		 mov	 esi, eax
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  0001e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00020	2b 08		 sub	 ecx, DWORD PTR [eax]
  00022	c1 f9 03	 sar	 ecx, 3
  00025	8b c1		 mov	 eax, ecx

; 1716 : 		}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?capacity@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?max_size@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
$T2 = -72						; size = 4
_this$ = -4						; size = 4
?max_size@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::max_size, COMDAT
; _this$ = ecx

; 1708 : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1709 : 		return (_Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@SAIABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@@Z ; std::_Default_allocator_traits<std::allocator<CMD_CS_S_RegisterPersonal> >::max_size
  0001a	83 c4 04	 add	 esp, 4
  0001d	89 45 b8	 mov	 DWORD PTR $T2[ebp], eax
  00020	e8 00 00 00 00	 call	 ?max@?$numeric_limits@H@std@@SAHXZ ; std::numeric_limits<int>::max
  00025	89 45 b4	 mov	 DWORD PTR $T1[ebp], eax
  00028	8d 45 b8	 lea	 eax, DWORD PTR $T2[ebp]
  0002b	50		 push	 eax
  0002c	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ??$_Min_value@I@std@@YAABIABI0@Z ; std::_Min_value<unsigned int>
  00035	83 c4 08	 add	 esp, 8
  00038	8b 00		 mov	 eax, DWORD PTR [eax]

; 1710 : 			_Alty_traits::max_size(this->_Getal())));
; 1711 : 		}

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?max_size@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?size@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::size, COMDAT
; _this$ = ecx

; 1703 : 		{	// return length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
  00014	8b f0		 mov	 esi, eax
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
  0001e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00020	2b 08		 sub	 ecx, DWORD PTR [eax]
  00022	c1 f9 03	 sar	 ecx, 3
  00025	8b c1		 mov	 eax, ecx

; 1705 : 		}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?size@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QBEIXZ ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?push_back@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEXABUCMD_CS_S_RegisterPersonal@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEXABUCMD_CS_S_RegisterPersonal@@@Z PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::push_back, COMDAT
; _this$ = ecx

; 931  : 		{	// insert element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 932  : 		emplace_back(_Val);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??$emplace_back@ABUCMD_CS_S_RegisterPersonal@@@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@ABUCMD_CS_S_RegisterPersonal@@@Z ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::emplace_back<CMD_CS_S_RegisterPersonal const &>

; 933  : 		}

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?push_back@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAEXABUCMD_CS_S_RegisterPersonal@@@Z ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??1?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::~vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >, COMDAT
; _this$ = ecx

; 893  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 894  : 		_Tidy();

  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@AAEXXZ ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::_Tidy

; 895  : 		}

  00033	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::~_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >
  0003b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00045	59		 pop	 ecx
  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::~vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ PROC ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >, COMDAT
; _this$ = ecx

; 651  : 		{	// construct empty vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 650  : 		: _Mybase()

  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >

; 652  : 		}

  00033	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00039	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00040	59		 pop	 ecx
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ ENDP ; std::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >::vector<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> >
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 306  : 		{	// return const reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 307  : 		return (_Myval2);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 308  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Get_second@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 301  : 		{	// return reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 302  : 		return (_Myval2);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 303  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Get_second@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QBEABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QBEABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 296  : 		{	// return const reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 297  : 		return (*this);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 298  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QBEABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 291  : 		{	// return reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 292  : 		return (*this);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 293  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >, COMDAT
; _this$ = ecx

; 392  : 		{	// initialize values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QAE@XZ ; std::_Container_base12::_Container_base12

; 389  : 		: _Myfirst(),

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 390  : 		_Mylast(),

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 391  : 		_Myend()

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 393  : 		}

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myend, COMDAT
; _this$ = ecx

; 600  : 		{	// return const reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 601  : 		return (_Get_data()._Myend);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data
  00014	83 c0 0c	 add	 eax, 12			; 0000000cH

; 602  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myend, COMDAT
; _this$ = ecx

; 595  : 		{	// return reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 596  : 		return (_Get_data()._Myend);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data
  00014	83 c0 0c	 add	 eax, 12			; 0000000cH

; 597  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast, COMDAT
; _this$ = ecx

; 590  : 		{	// return const reference to _Mylast

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Get_data()._Mylast);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data
  00014	83 c0 08	 add	 eax, 8

; 592  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast, COMDAT
; _this$ = ecx

; 585  : 		{	// return reference to _Mylast

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 586  : 		return (_Get_data()._Mylast);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data
  00014	83 c0 08	 add	 eax, 8

; 587  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst, COMDAT
; _this$ = ecx

; 580  : 		{	// return const reference to _Myfirst

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 581  : 		return (_Get_data()._Myfirst);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data
  00014	83 c0 04	 add	 eax, 4

; 582  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABQAUCMD_CS_S_RegisterPersonal@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst, COMDAT
; _this$ = ecx

; 575  : 		{	// return reference to _Myfirst

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 576  : 		return (_Get_data()._Myfirst);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data
  00014	83 c0 04	 add	 eax, 4

; 577  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAUCMD_CS_S_RegisterPersonal@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data, COMDAT
; _this$ = ecx

; 559  : 		{	// return const reference to _Vector_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 560  : 		return (_Mypair._Get_second());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_second

; 561  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data, COMDAT
; _this$ = ecx

; 554  : 		{	// return reference to _Vector_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 555  : 		return (_Mypair._Get_second());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_second

; 556  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal, COMDAT
; _this$ = ecx

; 549  : 		{	// return const reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 550  : 		return (_Mypair._Get_first());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QBEABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_first

; 551  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal, COMDAT
; _this$ = ecx

; 544  : 		{	// return reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 545  : 		return (_Mypair._Get_first());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Get_first

; 546  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 534  : 		{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 535  : 		_Get_data()._Orphan_all();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data
  00014	8b c8		 mov	 ecx, eax
  00016	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 536  : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myproxy, COMDAT
; _this$ = ecx

; 523  : 		{	// return reference to _Myproxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 524  : 		return (_Get_data()._Myproxy);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data

; 525  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getpfirst, COMDAT
; _this$ = ecx

; 518  : 		{	// get address of iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 519  : 		return (_Get_data()._Getpfirst());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data
  00014	8b c8		 mov	 ecx, eax
  00016	e8 00 00 00 00	 call	 ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 520  : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Proxy_allocator$ = -5					; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Free_proxy, COMDAT
; _this$ = ecx

; 509  : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 510  : 		_Alproxy _Proxy_allocator(_Getal());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal
  00014	50		 push	 eax
  00015	8d 4d fb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00018	e8 00 00 00 00	 call	 ??$?0UCMD_CS_S_RegisterPersonal@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UCMD_CS_S_RegisterPersonal@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><CMD_CS_S_RegisterPersonal>

; 511  : 		_Orphan_all();

  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Orphan_all

; 512  : 		_Alproxy_traits::destroy(_Proxy_allocator, _Myproxy());

  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myproxy
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	50		 push	 eax
  00030	8d 4d fb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
  00039	83 c4 08	 add	 esp, 8

; 513  : 		_Deallocate_plain(_Proxy_allocator, _Myproxy());

  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myproxy
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	50		 push	 eax
  00047	8d 4d fb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>
  00050	83 c4 08	 add	 esp, 8

; 514  : 		_Myproxy() = nullptr;

  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myproxy
  0005b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 515  : 		}

  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 8
__Proxy_allocator$ = -5					; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 501  : 		{	// construct proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 502  : 		_Alproxy _Proxy_allocator(_Getal());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Getal
  00014	50		 push	 eax
  00015	8d 4d fb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00018	e8 00 00 00 00	 call	 ??$?0UCMD_CS_S_RegisterPersonal@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UCMD_CS_S_RegisterPersonal@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><CMD_CS_S_RegisterPersonal>

; 503  : 		_Myproxy() = _Unfancy(_Proxy_allocator.allocate(1));

  0001d	6a 01		 push	 1
  0001f	8d 4d fb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00022	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0002d	83 c4 04	 add	 esp, 4
  00030	8b f0		 mov	 esi, eax
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myproxy
  0003a	89 30		 mov	 DWORD PTR [eax], esi

; 504  : 		_Alproxy_traits::construct(_Proxy_allocator, _Myproxy(), _Container_proxy());

  0003c	8d 4d b0	 lea	 ecx, DWORD PTR $T1[ebp]
  0003f	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  00044	50		 push	 eax
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myproxy
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	50		 push	 eax
  00050	8d 4d fb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00053	51		 push	 ecx
  00054	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@$$QAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 505  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Get_data
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> > >
  0006a	83 c4 04	 add	 esp, 4
  0006d	8b f0		 mov	 esi, eax
  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Myproxy
  00077	8b 00		 mov	 eax, DWORD PTR [eax]
  00079	89 30		 mov	 DWORD PTR [eax], esi

; 506  : 		}

  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c3		 ret	 0
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??1?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::~_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >, COMDAT
; _this$ = ecx

; 460  : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 461  : 		_Free_proxy();

  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Free_proxy

; 462  : 		}

  00033	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00036	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003d	59		 pop	 ecx
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::~_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -69						; size = 1
_this$ = -4						; size = 4
??0?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >, COMDAT
; _this$ = ecx

; 446  : 		{	// default construct allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 445  : 		: _Mypair(_Zero_then_variadic_args_t())

  0000c	0f b6 45 bb	 movzx	 eax, BYTE PTR $T1[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@V?$_Vector_val@U?$_Simple_types@UCMD_CS_S_RegisterPersonal@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1>::_Compressed_pair<std::allocator<CMD_CS_S_RegisterPersonal>,std::_Vector_val<std::_Simple_types<CMD_CS_S_RegisterPersonal> >,1><>

; 447  : 		_Alloc_proxy();

  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Alloc_proxy

; 448  : 		}

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??0?$_Vector_alloc@U?$_Vec_base_types@UCMD_CS_S_RegisterPersonal@@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >::_Vector_alloc<std::_Vec_base_types<CMD_CS_S_RegisterPersonal,std::allocator<CMD_CS_S_RegisterPersonal> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@SAIABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@SAIABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<CMD_CS_S_RegisterPersonal> >::max_size, COMDAT

; 891  : 		{	// get maximum size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 892  : 		return (static_cast<size_t>(-1) / sizeof(value_type));

  00009	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 893  : 		}

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@@std@@SAIABV?$allocator@UCMD_CS_S_RegisterPersonal@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<CMD_CS_S_RegisterPersonal> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?allocate@?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@I@Z PROC ; std::allocator<CMD_CS_S_RegisterPersonal>::allocate, COMDAT
; _this$ = ecx

; 996  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$07@std@@YAII@Z ; std::_Get_size_of_n<8>
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  0001e	83 c4 04	 add	 esp, 4

; 998  : 		}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAEPAUCMD_CS_S_RegisterPersonal@@I@Z ENDP ; std::allocator<CMD_CS_S_RegisterPersonal>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?deallocate@?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAEXQAUCMD_CS_S_RegisterPersonal@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAEXQAUCMD_CS_S_RegisterPersonal@@I@Z PROC ; std::allocator<CMD_CS_S_RegisterPersonal>::deallocate, COMDAT
; _this$ = ecx

; 990  : 		{	// deallocate object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 991  : 		// no overflow check on the following multiply; we assume _Allocate did that check
; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0000f	c1 e0 03	 shl	 eax, 3
  00012	50		 push	 eax
  00013	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001c	83 c4 08	 add	 esp, 8

; 993  : 		}

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
?deallocate@?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAEXQAUCMD_CS_S_RegisterPersonal@@I@Z ENDP ; std::allocator<CMD_CS_S_RegisterPersonal>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??0?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAE@XZ PROC ; std::allocator<CMD_CS_S_RegisterPersonal>::allocator<CMD_CS_S_RegisterPersonal>, COMDAT
; _this$ = ecx

; 979  : 	constexpr allocator() noexcept

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 980  : 		{	// construct default allocator (do nothing)
; 981  : 		}

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0?$allocator@UCMD_CS_S_RegisterPersonal@@@std@@QAE@XZ ENDP ; std::allocator<CMD_CS_S_RegisterPersonal>::allocator<CMD_CS_S_RegisterPersonal>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Orphan_range@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEXPAUtagPersonalTableInfo@@0@Z
_TEXT	SEGMENT
__Pnext$ = -24						; size = 4
__Lock$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEXPAUtagPersonalTableInfo@@0@Z PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1936 : 		{	// orphan iterators within specified (inclusive) range

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEXPAUtagPersonalTableInfo@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1937 : 		_Lockit _Lock(_LOCK_DEBUG);

  0002b	6a 03		 push	 3
  0002d	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1938 : 
; 1939 : 		const_iterator ** _Pnext = reinterpret_cast<const_iterator **>(this->_Getpfirst());

  0003d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getpfirst
  00045	89 45 e8	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1940 : 
; 1941 : 		if (_Pnext)

  00048	83 7d e8 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  0004c	74 4e		 je	 SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1942 : 			{
; 1943 : 			while (*_Pnext)

  0004e	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00051	83 38 00	 cmp	 DWORD PTR [eax], 0
  00054	74 46		 je	 SHORT $LN4@Orphan_ran

; 1944 : 				{
; 1945 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

  00056	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00059	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005b	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0005e	3b 55 08	 cmp	 edx, DWORD PTR __First$[ebp]
  00061	72 0d		 jb	 SHORT $LN7@Orphan_ran
  00063	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0006b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0006e	73 0f		 jae	 SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1946 : 					{	// skip the iterator
; 1947 : 					_Pnext = reinterpret_cast<const_iterator **>((*_Pnext)->_Getpnext());

  00070	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00073	8b 08		 mov	 ecx, DWORD PTR [eax]
  00075	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  0007a	89 45 e8	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1948 : 					}
; 1949 : 				else

  0007d	eb 1b		 jmp	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1950 : 					{	// orphan the iterator
; 1951 : 					(*_Pnext)->_Clrcont();

  0007f	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00082	8b 08		 mov	 ecx, DWORD PTR [eax]
  00084	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont

; 1952 : 					*_Pnext = *reinterpret_cast<const_iterator **>((*_Pnext)->_Getpnext());

  00089	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0008c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008e	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  00093	8b 4d e8	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00096	8b 10		 mov	 edx, DWORD PTR [eax]
  00098	89 11		 mov	 DWORD PTR [ecx], edx
$LN6@Orphan_ran:

; 1953 : 					}
; 1954 : 				}

  0009a	eb b2		 jmp	 SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1955 : 			}
; 1956 : 		}

  0009c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a3	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000ac	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000af	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b6	59		 pop	 ecx
  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEXPAUtagPersonalTableInfo@@0@Z$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
__ehhandler$?_Orphan_range@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEXPAUtagPersonalTableInfo@@0@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEXPAUtagPersonalTableInfo@@0@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEXPAUtagPersonalTableInfo@@0@Z ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Orphan_range
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Xlength@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@CAXXZ PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Xlength, COMDAT

; 1925 : 		{	// report a length_error

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1926 : 		_Xlength_error("vector<T> too long");

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0000e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1927 : 		}

  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Xlength@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@CAXXZ ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Tidy@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXXZ PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Tidy, COMDAT
; _this$ = ecx

; 1910 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1911 : 		this->_Orphan_all();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Orphan_all

; 1912 : 
; 1913 : 		if (this->_Myfirst() != pointer())

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  0001c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001f	74 6b		 je	 SHORT $LN1@Tidy

; 1914 : 			{	// destroy and deallocate old array
; 1915 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00029	8b 00		 mov	 eax, DWORD PTR [eax]
  0002b	50		 push	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	51		 push	 ecx
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@0@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Destroy

; 1916 : 			this->_Getal().deallocate(this->_Myfirst(), capacity());

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?capacity@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::capacity
  00047	50		 push	 eax
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  00050	8b 00		 mov	 eax, DWORD PTR [eax]
  00052	50		 push	 eax
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
  0005b	8b c8		 mov	 ecx, eax
  0005d	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UtagPersonalTableInfo@@@std@@QAEXQAUtagPersonalTableInfo@@I@Z ; std::allocator<tagPersonalTableInfo>::deallocate

; 1917 : 
; 1918 : 			this->_Myfirst() = pointer();

  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  0006a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1919 : 			this->_Mylast() = pointer();

  00070	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00078	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1920 : 			this->_Myend() = pointer();

  0007e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myend
  00086	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@Tidy:

; 1921 : 			}
; 1922 : 		}

  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
?_Tidy@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXXZ ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Change_array@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXQAUtagPersonalTableInfo@@II@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXQAUtagPersonalTableInfo@@II@Z PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Change_array, COMDAT
; _this$ = ecx

; 1895 : 		{	// orphan all iterators, discard old array, acquire new array

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1896 : 		this->_Orphan_all();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Orphan_all

; 1897 : 
; 1898 : 		if (this->_Myfirst() != pointer())

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  0001c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001f	74 41		 je	 SHORT $LN2@Change_arr

; 1899 : 			{	// destroy and deallocate old array
; 1900 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00029	8b 00		 mov	 eax, DWORD PTR [eax]
  0002b	50		 push	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  00034	8b 08		 mov	 ecx, DWORD PTR [eax]
  00036	51		 push	 ecx
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@0@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Destroy

; 1901 : 			this->_Getal().deallocate(this->_Myfirst(), capacity());

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?capacity@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::capacity
  00047	50		 push	 eax
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  00050	8b 00		 mov	 eax, DWORD PTR [eax]
  00052	50		 push	 eax
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
  0005b	8b c8		 mov	 ecx, eax
  0005d	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UtagPersonalTableInfo@@@std@@QAEXQAUtagPersonalTableInfo@@I@Z ; std::allocator<tagPersonalTableInfo>::deallocate
$LN2@Change_arr:

; 1902 : 			}
; 1903 : 
; 1904 : 		this->_Myfirst() = _Newvec;

  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  0006a	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  0006d	89 08		 mov	 DWORD PTR [eax], ecx

; 1905 : 		this->_Mylast() = _Newvec + _Newsize;

  0006f	69 75 0c d1 00
	00 00		 imul	 esi, DWORD PTR __Newsize$[ebp], 209
  00076	03 75 08	 add	 esi, DWORD PTR __Newvec$[ebp]
  00079	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00081	89 30		 mov	 DWORD PTR [eax], esi

; 1906 : 		this->_Myend() = _Newvec + _Newcapacity;

  00083	69 75 10 d1 00
	00 00		 imul	 esi, DWORD PTR __Newcapacity$[ebp], 209
  0008a	03 75 08	 add	 esi, DWORD PTR __Newvec$[ebp]
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myend
  00095	89 30		 mov	 DWORD PTR [eax], esi

; 1907 : 		}

  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c2 0c 00	 ret	 12			; 0000000cH
?_Change_array@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXQAUtagPersonalTableInfo@@II@Z ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEII@Z
_TEXT	SEGMENT
__Geometric$ = -12					; size = 4
__Oldcapacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEII@Z PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Calculate_growth, COMDAT
; _this$ = ecx

; 1853 : 		{	// given _Oldcapacity and _Newsize, calculate geometric growth

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1854 : 		const size_type _Oldcapacity = capacity();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?capacity@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::capacity
  00014	89 45 f8	 mov	 DWORD PTR __Oldcapacity$[ebp], eax

; 1855 : 
; 1856 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?max_size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::max_size
  0001f	8b 4d f8	 mov	 ecx, DWORD PTR __Oldcapacity$[ebp]
  00022	d1 e9		 shr	 ecx, 1
  00024	2b c1		 sub	 eax, ecx
  00026	39 45 f8	 cmp	 DWORD PTR __Oldcapacity$[ebp], eax
  00029	76 05		 jbe	 SHORT $LN2@Calculate_

; 1857 : 			{
; 1858 : 			return (_Newsize);	// geometric growth would overflow

  0002b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0002e	eb 1b		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1859 : 			}
; 1860 : 
; 1861 : 		const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00030	8b 45 f8	 mov	 eax, DWORD PTR __Oldcapacity$[ebp]
  00033	d1 e8		 shr	 eax, 1
  00035	03 45 f8	 add	 eax, DWORD PTR __Oldcapacity$[ebp]
  00038	89 45 f4	 mov	 DWORD PTR __Geometric$[ebp], eax

; 1862 : 
; 1863 : 		if (_Geometric < _Newsize)

  0003b	8b 45 f4	 mov	 eax, DWORD PTR __Geometric$[ebp]
  0003e	3b 45 08	 cmp	 eax, DWORD PTR __Newsize$[ebp]
  00041	73 05		 jae	 SHORT $LN3@Calculate_

; 1864 : 			{
; 1865 : 			return (_Newsize);	// geometric growth would be insufficient

  00043	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00046	eb 03		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1866 : 			}
; 1867 : 
; 1868 : 		return (_Geometric);	// geometric growth is sufficient

  00048	8b 45 f4	 mov	 eax, DWORD PTR __Geometric$[ebp]
$LN1@Calculate_:

; 1869 : 		}

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
?_Calculate_growth@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEII@Z ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Destroy@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@0@Z PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Destroy, COMDAT
; _this$ = ecx

; 1848 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1849 : 		_Destroy_range(_First, _Last, this->_Getal());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
  00014	50		 push	 eax
  00015	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAXPAUtagPersonalTableInfo@@0AAV?$allocator@UtagPersonalTableInfo@@@0@@Z ; std::_Destroy_range<std::allocator<tagPersonalTableInfo> >
  00022	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1850 : 		}

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?_Destroy@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@0@Z ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@00@Z
_TEXT	SEGMENT
$T1 = -69						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove_if_noexcept@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@00@Z PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Umove_if_noexcept, COMDAT
; _this$ = ecx

; 1842 : 		{	// move_if_noexcept [_First, _Last) to raw _Dest, using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1843 : 		_Umove_if_noexcept1(_First, _Last, _Dest,

  0000c	33 c0		 xor	 eax, eax
  0000e	88 45 bb	 mov	 BYTE PTR $T1[ebp], al
  00011	0f b6 4d bb	 movzx	 ecx, BYTE PTR $T1[ebp]
  00015	51		 push	 ecx
  00016	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00019	52		 push	 edx
  0001a	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00021	51		 push	 ecx
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@00U?$integral_constant@_N$00@2@@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Umove_if_noexcept1

; 1844 : 			bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1845 : 		}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 0c 00	 ret	 12			; 0000000cH
?_Umove_if_noexcept@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@00@Z ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
?_Umove_if_noexcept1@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Umove_if_noexcept1, COMDAT
; _this$ = ecx

; 1832 : 		{	// move [_First, _Last) to raw _Dest, using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1833 : 		_Uninitialized_move(_First, _Last, _Dest, this->_Getal());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
  00014	50		 push	 eax
  00015	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00020	52		 push	 edx
  00021	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUtagPersonalTableInfo@@PAU1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAPAUtagPersonalTableInfo@@QAU1@0PAU1@AAV?$allocator@UtagPersonalTableInfo@@@0@@Z ; std::_Uninitialized_move<tagPersonalTableInfo *,tagPersonalTableInfo *,std::allocator<tagPersonalTableInfo> >
  00026	83 c4 10	 add	 esp, 16			; 00000010H

; 1834 : 		}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 10 00	 ret	 16			; 00000010H
?_Umove_if_noexcept1@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXPAUtagPersonalTableInfo@@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEPAUtagPersonalTableInfo@@PAU3@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEPAUtagPersonalTableInfo@@PAU3@00@Z PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Umove, COMDAT
; _this$ = ecx

; 1827 : 		{	// move [_First, _Last) to raw _Dest, using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1828 : 		return (_Uninitialized_move(_First, _Last, _Dest, this->_Getal()));

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
  00014	50		 push	 eax
  00015	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00020	52		 push	 edx
  00021	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUtagPersonalTableInfo@@PAU1@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@YAPAUtagPersonalTableInfo@@QAU1@0PAU1@AAV?$allocator@UtagPersonalTableInfo@@@0@@Z ; std::_Uninitialized_move<tagPersonalTableInfo *,tagPersonalTableInfo *,std::allocator<tagPersonalTableInfo> >
  00026	83 c4 10	 add	 esp, 16			; 00000010H

; 1829 : 		}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?_Umove@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEPAUtagPersonalTableInfo@@PAU3@00@Z ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??A?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEAAUtagPersonalTableInfo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEAAUtagPersonalTableInfo@@I@Z PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::operator[], COMDAT
; _this$ = ecx

; 1731 : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@operator:

; 1732 :  #if _ITERATOR_DEBUG_LEVEL != 0
; 1733 : 		_STL_VERIFY(_Pos < size(), "vector subscript out of range");

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::size
  00014	39 45 08	 cmp	 DWORD PTR __Pos$[ebp], eax
  00017	73 02		 jae	 SHORT $LN7@operator
  00019	eb 4a		 jmp	 SHORT $LN2@operator
$LN7@operator:
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00025	6a 00		 push	 0
  00027	68 c5 06 00 00	 push	 1733			; 000006c5H
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0GH@FKAHJGEE@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00031	6a 02		 push	 2
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00039	83 c4 18	 add	 esp, 24			; 00000018H
  0003c	83 f8 01	 cmp	 eax, 1
  0003f	75 01		 jne	 SHORT $LN11@operator
  00041	cc		 int	 3
$LN11@operator:
  00042	6a 00		 push	 0
  00044	68 c5 06 00 00	 push	 1733			; 000006c5H
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_1MO@OJBMIJHH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1NC@IPECMLIE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0005e	83 c4 14	 add	 esp, 20			; 00000014H
  00061	33 c0		 xor	 eax, eax
  00063	75 b6		 jne	 SHORT $LN7@operator
$LN2@operator:
  00065	33 c0		 xor	 eax, eax
  00067	75 a3		 jne	 SHORT $LN4@operator

; 1734 :  #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 1735 : 
; 1736 : 		return (this->_Myfirst()[_Pos]);

  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  00071	69 4d 08 d1 00
	00 00		 imul	 ecx, DWORD PTR __Pos$[ebp], 209
  00078	03 08		 add	 ecx, DWORD PTR [eax]
  0007a	8b c1		 mov	 eax, ecx

; 1737 : 		}

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
??A?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEAAUtagPersonalTableInfo@@I@Z ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Has_unused_capacity@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABE_NXZ
_TEXT	SEGMENT
tv77 = -72						; size = 4
_this$ = -4						; size = 4
?_Has_unused_capacity@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABE_NXZ PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Has_unused_capacity, COMDAT
; _this$ = ecx

; 1725 : 		{	// micro-optimization for capacity() != size()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myend
  00014	8b f0		 mov	 esi, eax
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  0001e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00020	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00022	74 09		 je	 SHORT $LN3@Has_unused
  00024	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv77[ebp], 1
  0002b	eb 07		 jmp	 SHORT $LN4@Has_unused
$LN3@Has_unused:
  0002d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN4@Has_unused:
  00034	8a 45 b8	 mov	 al, BYTE PTR tv77[ebp]

; 1727 : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?_Has_unused_capacity@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABE_NXZ ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Has_unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?capacity@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::capacity, COMDAT
; _this$ = ecx

; 1714 : 		{	// return current length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1715 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myend
  00014	8b f0		 mov	 esi, eax
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  0001e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00020	2b 08		 sub	 ecx, DWORD PTR [eax]
  00022	8b c1		 mov	 eax, ecx
  00024	99		 cdq
  00025	b9 d1 00 00 00	 mov	 ecx, 209		; 000000d1H
  0002a	f7 f9		 idiv	 ecx

; 1716 : 		}

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?capacity@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?max_size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
$T2 = -72						; size = 4
_this$ = -4						; size = 4
?max_size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::max_size, COMDAT
; _this$ = ecx

; 1708 : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1709 : 		return (_Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAIABV?$allocator@UtagPersonalTableInfo@@@2@@Z ; std::_Default_allocator_traits<std::allocator<tagPersonalTableInfo> >::max_size
  0001a	83 c4 04	 add	 esp, 4
  0001d	89 45 b8	 mov	 DWORD PTR $T2[ebp], eax
  00020	e8 00 00 00 00	 call	 ?max@?$numeric_limits@H@std@@SAHXZ ; std::numeric_limits<int>::max
  00025	89 45 b4	 mov	 DWORD PTR $T1[ebp], eax
  00028	8d 45 b8	 lea	 eax, DWORD PTR $T2[ebp]
  0002b	50		 push	 eax
  0002c	8d 4d b4	 lea	 ecx, DWORD PTR $T1[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ??$_Min_value@I@std@@YAABIABI0@Z ; std::_Min_value<unsigned int>
  00035	83 c4 08	 add	 esp, 8
  00038	8b 00		 mov	 eax, DWORD PTR [eax]

; 1710 : 			_Alty_traits::max_size(this->_Getal())));
; 1711 : 		}

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?max_size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::size, COMDAT
; _this$ = ecx

; 1703 : 		{	// return length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00014	8b f0		 mov	 esi, eax
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  0001e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00020	2b 08		 sub	 ecx, DWORD PTR [eax]
  00022	8b c1		 mov	 eax, ecx
  00024	99		 cdq
  00025	b9 d1 00 00 00	 mov	 ecx, 209		; 000000d1H
  0002a	f7 f9		 idiv	 ecx

; 1705 : 		}

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?size@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?begin@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@XZ PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::begin, COMDAT
; _this$ = ecx

; 1618 : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?begin@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1619 : 		return (iterator(this->_Myfirst(), _STD addressof(this->_Get_data())));

  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
  00039	83 c4 04	 add	 esp, 4
  0003c	50		 push	 eax
  0003d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  00045	8b 00		 mov	 eax, DWORD PTR [eax]
  00047	50		 push	 eax
  00048	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0004b	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@PAUtagPersonalTableInfo@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
  00050	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1620 : 		}

  00053	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00056	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005d	59		 pop	 ecx
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?begin@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?begin@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@XZ ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::begin
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?erase@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv188 = -88						; size = 4
$T2 = -84						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@@Z PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::erase, COMDAT
; _this$ = ecx

; 1553 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?erase@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$LN4@erase:

; 1554 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1555 : 		_STL_VERIFY(_Where._Getcont() == _STD addressof(this->_Get_data())

  00039	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0003c	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00041	8b f0		 mov	 esi, eax
  00043	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
  00051	83 c4 04	 add	 esp, 4
  00054	3b f0		 cmp	 esi, eax
  00056	75 20		 jne	 SHORT $LN7@erase
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
  00060	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  00063	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00065	72 11		 jb	 SHORT $LN7@erase
  00067	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  0006f	8b 00		 mov	 eax, DWORD PTR [eax]
  00071	3b 45 14	 cmp	 eax, DWORD PTR __Where$[ebp+8]
  00074	76 02		 jbe	 SHORT $LN7@erase
  00076	eb 4a		 jmp	 SHORT $LN2@erase
$LN7@erase:
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00082	6a 00		 push	 0
  00084	68 15 06 00 00	 push	 1557			; 00000615H
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_0GH@FKAHJGEE@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0008e	6a 02		 push	 2
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00096	83 c4 18	 add	 esp, 24			; 00000018H
  00099	83 f8 01	 cmp	 eax, 1
  0009c	75 01		 jne	 SHORT $LN11@erase
  0009e	cc		 int	 3
$LN11@erase:
  0009f	6a 00		 push	 0
  000a1	68 15 06 00 00	 push	 1557			; 00000615H
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_1MO@OJBMIJHH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  000ab	68 00 00 00 00	 push	 OFFSET ??_C@_1MG@DGHPNNHF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000bb	83 c4 14	 add	 esp, 20			; 00000014H

; 1556 : 			&& _Where._Ptr >= this->_Myfirst()
; 1557 : 			&& this->_Mylast() > _Where._Ptr, "vector erase iterator outside range");

  000be	33 c0		 xor	 eax, eax
  000c0	75 b6		 jne	 SHORT $LN7@erase
$LN2@erase:
  000c2	33 c0		 xor	 eax, eax
  000c4	0f 85 6f ff ff
	ff		 jne	 $LN4@erase

; 1558 : 		_Orphan_range(_Where._Ptr, this->_Mylast());

  000ca	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  000d2	8b 00		 mov	 eax, DWORD PTR [eax]
  000d4	50		 push	 eax
  000d5	8b 4d 14	 mov	 ecx, DWORD PTR __Where$[ebp+8]
  000d8	51		 push	 ecx
  000d9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@ABEXPAUtagPersonalTableInfo@@0@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Orphan_range

; 1559 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1560 : 
; 1561 : 		_Move_unchecked(_Where._Ptr + 1, this->_Mylast(), _Where._Ptr);

  000e1	8b 45 14	 mov	 eax, DWORD PTR __Where$[ebp+8]
  000e4	50		 push	 eax
  000e5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  000ed	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ef	51		 push	 ecx
  000f0	8b 55 14	 mov	 edx, DWORD PTR __Where$[ebp+8]
  000f3	81 c2 d1 00 00
	00		 add	 edx, 209		; 000000d1H
  000f9	52		 push	 edx
  000fa	e8 00 00 00 00	 call	 ??$_Move_unchecked@PAUtagPersonalTableInfo@@PAU1@@std@@YAPAUtagPersonalTableInfo@@PAU1@00@Z ; std::_Move_unchecked<tagPersonalTableInfo *,tagPersonalTableInfo *>
  000ff	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1562 : 		_Alty_traits::destroy(this->_Getal(), _Unfancy(this->_Mylast() - 1));

  00102	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  0010a	8b 00		 mov	 eax, DWORD PTR [eax]
  0010c	2d d1 00 00 00	 sub	 eax, 209		; 000000d1H
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ??$_Unfancy@UtagPersonalTableInfo@@@std@@YAPAUtagPersonalTableInfo@@PAU1@@Z ; std::_Unfancy<tagPersonalTableInfo>
  00117	83 c4 04	 add	 esp, 4
  0011a	50		 push	 eax
  0011b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
  00123	50		 push	 eax
  00124	e8 00 00 00 00	 call	 ??$destroy@UtagPersonalTableInfo@@@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAXAAV?$allocator@UtagPersonalTableInfo@@@1@QAUtagPersonalTableInfo@@@Z ; std::_Default_allocator_traits<std::allocator<tagPersonalTableInfo> >::destroy<tagPersonalTableInfo>
  00129	83 c4 08	 add	 esp, 8

; 1563 : 		--this->_Mylast();

  0012c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0012f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
  00134	89 45 a8	 mov	 DWORD PTR tv188[ebp], eax
  00137	8b 45 a8	 mov	 eax, DWORD PTR tv188[ebp]
  0013a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013c	81 e9 d1 00 00
	00		 sub	 ecx, 209		; 000000d1H
  00142	8b 55 a8	 mov	 edx, DWORD PTR tv188[ebp]
  00145	89 0a		 mov	 DWORD PTR [edx], ecx

; 1564 : 		return (iterator(_Where._Ptr, _STD addressof(this->_Get_data())));

  00147	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
  0014f	50		 push	 eax
  00150	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
  00155	83 c4 04	 add	 esp, 4
  00158	50		 push	 eax
  00159	8b 45 14	 mov	 eax, DWORD PTR __Where$[ebp+8]
  0015c	50		 push	 eax
  0015d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00160	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@PAUtagPersonalTableInfo@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
  00165	8b 4d ac	 mov	 ecx, DWORD PTR $T2[ebp]
  00168	83 c9 01	 or	 ecx, 1
  0016b	89 4d ac	 mov	 DWORD PTR $T2[ebp], ecx
  0016e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00175	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00178	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
  0017d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1565 : 		}

  00180	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00183	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0018a	59		 pop	 ecx
  0018b	5f		 pop	 edi
  0018c	5e		 pop	 esi
  0018d	5b		 pop	 ebx
  0018e	8b e5		 mov	 esp, ebp
  00190	5d		 pop	 ebp
  00191	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?erase@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?erase@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@2@@Z ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::erase
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?push_back@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEXABUtagPersonalTableInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEXABUtagPersonalTableInfo@@@Z PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::push_back, COMDAT
; _this$ = ecx

; 931  : 		{	// insert element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 932  : 		emplace_back(_Val);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??$emplace_back@ABUtagPersonalTableInfo@@@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@ABUtagPersonalTableInfo@@@Z ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::emplace_back<tagPersonalTableInfo const &>

; 933  : 		}

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?push_back@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAEXABUtagPersonalTableInfo@@@Z ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??1?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::~vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >, COMDAT
; _this$ = ecx

; 893  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 894  : 		_Tidy();

  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@AAEXXZ ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::_Tidy

; 895  : 		}

  00033	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::~_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >
  0003b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00045	59		 pop	 ecx
  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::~vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ PROC ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >, COMDAT
; _this$ = ecx

; 651  : 		{	// construct empty vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 650  : 		: _Mybase()

  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >

; 652  : 		}

  00033	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00039	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00040	59		 pop	 ecx
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ ENDP ; std::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >::vector<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> >
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 306  : 		{	// return const reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 307  : 		return (_Myval2);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 308  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Get_second@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 301  : 		{	// return reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 302  : 		return (_Myval2);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 303  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Get_second@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QBEABV?$allocator@UtagPersonalTableInfo@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QBEABV?$allocator@UtagPersonalTableInfo@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 296  : 		{	// return const reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 297  : 		return (*this);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 298  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QBEABV?$allocator@UtagPersonalTableInfo@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 291  : 		{	// return reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 292  : 		return (*this);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 293  : 		}

  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >, COMDAT
; _this$ = ecx

; 392  : 		{	// initialize values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QAE@XZ ; std::_Container_base12::_Container_base12

; 389  : 		: _Myfirst(),

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 390  : 		_Mylast(),

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 391  : 		_Myend()

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 393  : 		}

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myend, COMDAT
; _this$ = ecx

; 600  : 		{	// return const reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 601  : 		return (_Get_data()._Myend);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
  00014	83 c0 0c	 add	 eax, 12			; 0000000cH

; 602  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myend, COMDAT
; _this$ = ecx

; 595  : 		{	// return reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 596  : 		return (_Get_data()._Myend);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
  00014	83 c0 0c	 add	 eax, 12			; 0000000cH

; 597  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast, COMDAT
; _this$ = ecx

; 590  : 		{	// return const reference to _Mylast

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Get_data()._Mylast);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
  00014	83 c0 08	 add	 eax, 8

; 592  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast, COMDAT
; _this$ = ecx

; 585  : 		{	// return reference to _Mylast

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 586  : 		return (_Get_data()._Mylast);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
  00014	83 c0 08	 add	 eax, 8

; 587  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst, COMDAT
; _this$ = ecx

; 580  : 		{	// return const reference to _Myfirst

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 581  : 		return (_Get_data()._Myfirst);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
  00014	83 c0 04	 add	 eax, 4

; 582  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABQAUtagPersonalTableInfo@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst, COMDAT
; _this$ = ecx

; 575  : 		{	// return reference to _Myfirst

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 576  : 		return (_Get_data()._Myfirst);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
  00014	83 c0 04	 add	 eax, 4

; 577  : 		}

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAUtagPersonalTableInfo@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data, COMDAT
; _this$ = ecx

; 559  : 		{	// return const reference to _Vector_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 560  : 		return (_Mypair._Get_second());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_second

; 561  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data, COMDAT
; _this$ = ecx

; 554  : 		{	// return reference to _Vector_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 555  : 		return (_Mypair._Get_second());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_second

; 556  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABV?$allocator@UtagPersonalTableInfo@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABV?$allocator@UtagPersonalTableInfo@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal, COMDAT
; _this$ = ecx

; 549  : 		{	// return const reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 550  : 		return (_Mypair._Get_first());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QBEABV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_first

; 551  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABV?$allocator@UtagPersonalTableInfo@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal, COMDAT
; _this$ = ecx

; 544  : 		{	// return reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 545  : 		return (_Mypair._Get_first());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Get_first

; 546  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 534  : 		{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 535  : 		_Get_data()._Orphan_all();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
  00014	8b c8		 mov	 ecx, eax
  00016	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 536  : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myproxy, COMDAT
; _this$ = ecx

; 523  : 		{	// return reference to _Myproxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 524  : 		return (_Get_data()._Myproxy);

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data

; 525  : 		}

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getpfirst, COMDAT
; _this$ = ecx

; 518  : 		{	// get address of iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 519  : 		return (_Get_data()._Getpfirst());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
  00014	8b c8		 mov	 ecx, eax
  00016	e8 00 00 00 00	 call	 ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 520  : 		}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Proxy_allocator$ = -5					; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Free_proxy, COMDAT
; _this$ = ecx

; 509  : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 510  : 		_Alproxy _Proxy_allocator(_Getal());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
  00014	50		 push	 eax
  00015	8d 4d fb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00018	e8 00 00 00 00	 call	 ??$?0UtagPersonalTableInfo@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UtagPersonalTableInfo@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><tagPersonalTableInfo>

; 511  : 		_Orphan_all();

  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Orphan_all

; 512  : 		_Alproxy_traits::destroy(_Proxy_allocator, _Myproxy());

  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myproxy
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	50		 push	 eax
  00030	8d 4d fb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
  00039	83 c4 08	 add	 esp, 8

; 513  : 		_Deallocate_plain(_Proxy_allocator, _Myproxy());

  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myproxy
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	50		 push	 eax
  00047	8d 4d fb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>
  00050	83 c4 08	 add	 esp, 8

; 514  : 		_Myproxy() = nullptr;

  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myproxy
  0005b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 515  : 		}

  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 8
__Proxy_allocator$ = -5					; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 501  : 		{	// construct proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 502  : 		_Alproxy _Proxy_allocator(_Getal());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$allocator@UtagPersonalTableInfo@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Getal
  00014	50		 push	 eax
  00015	8d 4d fb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00018	e8 00 00 00 00	 call	 ??$?0UtagPersonalTableInfo@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UtagPersonalTableInfo@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><tagPersonalTableInfo>

; 503  : 		_Myproxy() = _Unfancy(_Proxy_allocator.allocate(1));

  0001d	6a 01		 push	 1
  0001f	8d 4d fb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00022	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0002d	83 c4 04	 add	 esp, 4
  00030	8b f0		 mov	 esi, eax
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myproxy
  0003a	89 30		 mov	 DWORD PTR [eax], esi

; 504  : 		_Alproxy_traits::construct(_Proxy_allocator, _Myproxy(), _Container_proxy());

  0003c	8d 4d b0	 lea	 ecx, DWORD PTR $T1[ebp]
  0003f	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  00044	50		 push	 eax
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myproxy
  0004d	8b 00		 mov	 eax, DWORD PTR [eax]
  0004f	50		 push	 eax
  00050	8d 4d fb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00053	51		 push	 ecx
  00054	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@$$QAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 505  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Get_data
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> > >
  0006a	83 c4 04	 add	 esp, 4
  0006d	8b f0		 mov	 esi, eax
  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Myproxy
  00077	8b 00		 mov	 eax, DWORD PTR [eax]
  00079	89 30		 mov	 DWORD PTR [eax], esi

; 506  : 		}

  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c3		 ret	 0
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??1?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::~_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >, COMDAT
; _this$ = ecx

; 460  : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 461  : 		_Free_proxy();

  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Free_proxy

; 462  : 		}

  00033	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00036	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003d	59		 pop	 ecx
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::~_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -69						; size = 1
_this$ = -4						; size = 4
??0?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >, COMDAT
; _this$ = ecx

; 446  : 		{	// default construct allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 445  : 		: _Mypair(_Zero_then_variadic_args_t())

  0000c	0f b6 45 bb	 movzx	 eax, BYTE PTR $T1[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@UtagPersonalTableInfo@@@std@@V?$_Vector_val@U?$_Simple_types@UtagPersonalTableInfo@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1>::_Compressed_pair<std::allocator<tagPersonalTableInfo>,std::_Vector_val<std::_Simple_types<tagPersonalTableInfo> >,1><>

; 447  : 		_Alloc_proxy();

  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Alloc_proxy

; 448  : 		}

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??0?$_Vector_alloc@U?$_Vec_base_types@UtagPersonalTableInfo@@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >::_Vector_alloc<std::_Vec_base_types<tagPersonalTableInfo,std::allocator<tagPersonalTableInfo> > >
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAIABV?$allocator@UtagPersonalTableInfo@@@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAIABV?$allocator@UtagPersonalTableInfo@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<tagPersonalTableInfo> >::max_size, COMDAT

; 891  : 		{	// get maximum size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 892  : 		return (static_cast<size_t>(-1) / sizeof(value_type));

  00009	b8 c2 91 39 01	 mov	 eax, 20550082		; 013991c2H

; 893  : 		}

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@UtagPersonalTableInfo@@@std@@@std@@SAIABV?$allocator@UtagPersonalTableInfo@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<tagPersonalTableInfo> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?allocate@?$allocator@UtagPersonalTableInfo@@@std@@QAEPAUtagPersonalTableInfo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UtagPersonalTableInfo@@@std@@QAEPAUtagPersonalTableInfo@@I@Z PROC ; std::allocator<tagPersonalTableInfo>::allocate, COMDAT
; _this$ = ecx

; 996  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0NB@@std@@YAII@Z ; std::_Get_size_of_n<209>
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  0001e	83 c4 04	 add	 esp, 4

; 998  : 		}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$allocator@UtagPersonalTableInfo@@@std@@QAEPAUtagPersonalTableInfo@@I@Z ENDP ; std::allocator<tagPersonalTableInfo>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?deallocate@?$allocator@UtagPersonalTableInfo@@@std@@QAEXQAUtagPersonalTableInfo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@UtagPersonalTableInfo@@@std@@QAEXQAUtagPersonalTableInfo@@I@Z PROC ; std::allocator<tagPersonalTableInfo>::deallocate, COMDAT
; _this$ = ecx

; 990  : 		{	// deallocate object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 991  : 		// no overflow check on the following multiply; we assume _Allocate did that check
; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	69 45 0c d1 00
	00 00		 imul	 eax, DWORD PTR __Count$[ebp], 209
  00013	50		 push	 eax
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001d	83 c4 08	 add	 esp, 8

; 993  : 		}

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 08 00	 ret	 8
?deallocate@?$allocator@UtagPersonalTableInfo@@@std@@QAEXQAUtagPersonalTableInfo@@I@Z ENDP ; std::allocator<tagPersonalTableInfo>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??0?$allocator@UtagPersonalTableInfo@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UtagPersonalTableInfo@@@std@@QAE@XZ PROC	; std::allocator<tagPersonalTableInfo>::allocator<tagPersonalTableInfo>, COMDAT
; _this$ = ecx

; 979  : 	constexpr allocator() noexcept

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 980  : 		{	// construct default allocator (do nothing)
; 981  : 		}

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	5f		 pop	 edi
  00010	5e		 pop	 esi
  00011	5b		 pop	 ebx
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0?$allocator@UtagPersonalTableInfo@@@std@@QAE@XZ ENDP	; std::allocator<tagPersonalTableInfo>::allocator<tagPersonalTableInfo>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAEPAXI@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAE@XZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::~CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAEPAXI@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UBEXXZ PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UBEXXZ ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 4
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UBEXAAVCDumpContext@@@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 04 00 00 00	 mov	 eax, 4
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEXAAPAU__POSITION@@AAKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z ; DumpElements<unsigned long>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@PAUtagPersonalTableInfo@@@@YGXAAVCDumpContext@@PBQAUtagPersonalTableInfo@@H@Z ; DumpElements<tagPersonalTableInfo *>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UBEXAAVCDumpContext@@@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 4
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAEXAAVCArchive@@@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f8 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@PAUtagPersonalTableInfo@@@@YGXAAVCArchive@@PAPAUtagPersonalTableInfo@@H@Z ; SerializeElements<tagPersonalTableInfo *>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 62		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 42		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@PAUtagPersonalTableInfo@@@@YGXAAVCArchive@@PAPAUtagPersonalTableInfo@@H@Z ; SerializeElements<tagPersonalTableInfo *>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8d 54 0d e0	 lea	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 04 00 00 00	 mov	 eax, 4
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	8b 54 0d e4	 mov	 edx, DWORD PTR _newKey$2[ebp+ecx]
  00145	52		 push	 edx
  00146	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00149	e8 00 00 00 00	 call	 ?SetAt@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXKAAPAUtagPersonalTableInfo@@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::SetAt

; 1787 : 		}

  0014e	eb a9		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00150	5f		 pop	 edi
  00151	5e		 pop	 esi
  00152	5b		 pop	 ebx
  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c2 04 00	 ret	 4
?Serialize@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAEXAAVCArchive@@@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAE@XZ PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::~CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXXZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@UAE@XZ ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::~CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IBEPAVCAssoc@1@KAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IBEPAVCAssoc@1@KAAI0@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$HashKey@K@@YGIK@Z	; HashKey<unsigned long>
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00018	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001a	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
  00022	33 d2		 xor	 edx, edx
  00024	f7 71 08	 div	 DWORD PTR [ecx+8]
  00027	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002a	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00033	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00035	33 c0		 xor	 eax, eax
  00037	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00039	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00044	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00047	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004a	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00055	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  00059	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005b	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005e	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00061	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00064	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00066	75 16		 jne	 SHORT $LN6@GetAssocAt
  00068	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0006f	51		 push	 ecx
  00070	e8 00 00 00 00	 call	 ??$CompareElements@KK@@YGHPBK0@Z ; CompareElements<unsigned long,unsigned long>
  00075	85 c0		 test	 eax, eax
  00077	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  00079	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007c	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007e	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00080	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IBEPAVCAssoc@1@KAAI0@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAEXPAVCAssoc@1@@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXXZ ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAEXPAVCAssoc@1@@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAEPAVCAssoc@1@K@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?NewAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAEPAVCAssoc@1@K@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  00149	51		 push	 ecx
  0014a	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014d	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@K@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00152	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00155	5f		 pop	 edi
  00156	5e		 pop	 esi
  00157	5b		 pop	 ebx
  00158	8b e5		 mov	 esp, ebp
  0015a	5d		 pop	 ebp
  0015b	c2 04 00	 ret	 4
?NewAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAEPAVCAssoc@1@K@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXIH@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXIH@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEXAAPAU__POSITION@@AAKAAPAUtagPersonalTableInfo@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEXAAPAU__POSITION@@AAKAAPAUtagPersonalTableInfo@@@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	8b 11		 mov	 edx, DWORD PTR [ecx]
  001bc	89 10		 mov	 DWORD PTR [eax], edx

; 1676 : 	rValue = pAssocRet->value;

  001be	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c1	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c7	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001c9	5f		 pop	 edi
  001ca	5e		 pop	 esi
  001cb	5b		 pop	 ebx
  001cc	8b e5		 mov	 esp, ebp
  001ce	5d		 pop	 ebp
  001cf	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEXAAPAU__POSITION@@AAKAAPAUtagPersonalTableInfo@@@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXXZ PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXXZ ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEHK@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?RemoveKey@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEHK@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 83 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$HashKey@K@@YGIK@Z	; HashKey<unsigned long>
  00038	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00041	33 d2		 xor	 edx, edx
  00043	f7 71 08	 div	 DWORD PTR [ecx+8]
  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004c	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  0004f	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00052	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00055	8b 08		 mov	 ecx, DWORD PTR [eax]
  00057	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005a	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00062	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00065	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  00069	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006b	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00071	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00074	75 2f		 jne	 SHORT $LN6@RemoveKey
  00076	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ??$CompareElements@KK@@YGHPBK0@Z ; CompareElements<unsigned long,unsigned long>
  00083	85 c0		 test	 eax, eax
  00085	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00087	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008a	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00090	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00092	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00095	50		 push	 eax
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::FreeAssoc

; 1630 : 			return TRUE;

  0009e	b8 01 00 00 00	 mov	 eax, 1
  000a3	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a5	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a8	83 c0 08	 add	 eax, 8
  000ab	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000ae	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b0	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 04 00	 ret	 4
?RemoveKey@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEHK@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXKAAPAUtagPersonalTableInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_newValue$ = 12						; size = 4
?SetAt@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXKAAPAUtagPersonalTableInfo@@@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??A?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEAAPAUtagPersonalTableInfo@@K@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::operator[]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001d	89 10		 mov	 DWORD PTR [eax], edx
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
?SetAt@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXKAAPAUtagPersonalTableInfo@@@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEAAPAUtagPersonalTableInfo@@K@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
??A?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEAAPAUtagPersonalTableInfo@@K@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0002a	52		 push	 edx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetAssocAt
  00033	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00036	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003a	0f 85 9b 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00047	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  00049	6a 01		 push	 1
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00051	51		 push	 ecx
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00061	74 09		 je	 SHORT $LN9@operator
  00063	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006a	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00073	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00076	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  00079	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007d	75 14		 jne	 SHORT $LN11@operator
  0007f	68 3b 06 00 00	 push	 1595			; 0000063bH
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00089	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008e	85 c0		 test	 eax, eax
  00090	74 01		 je	 SHORT $LN11@operator
  00092	cc		 int	 3
$LN11@operator:
  00093	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00097	75 05		 jne	 SHORT $LN2@operator
  00099	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009e	33 c0		 xor	 eax, eax
  000a0	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a2	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  000a5	50		 push	 eax
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IAEPAVCAssoc@1@K@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::NewAssoc
  000ae	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b1	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b4	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b7	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c0	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c3	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c6	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000c9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d2	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d5	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000d8	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000db	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000de	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 04 00	 ret	 4
??A?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAEAAPAUtagPersonalTableInfo@@K@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEHKAAPAUtagPersonalTableInfo@@@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_rValue$ = 12						; size = 4
?Lookup@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEHKAAPAUtagPersonalTableInfo@@@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1552 : 	ASSERT_VALID(this);

  0000c	68 10 06 00 00	 push	 1552			; 00000610H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0002a	52		 push	 edx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::GetAssocAt
  00033	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1556 : 	if (pAssoc == NULL)

  00036	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003a	75 04		 jne	 SHORT $LN2@Lookup

; 1557 : 		return FALSE;  // not in map

  0003c	33 c0		 xor	 eax, eax
  0003e	eb 10		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00040	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00043	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00046	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00049	89 10		 mov	 DWORD PTR [eax], edx

; 1560 : 	return TRUE;

  0004b	b8 01 00 00 00	 mov	 eax, 1
$LN1@Lookup:

; 1561 : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
?Lookup@?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QBEHKAAPAUtagPersonalTableInfo@@@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@H@Z PROC ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@KKPAUtagPersonalTableInfo@@AAPAU1@@@QAE@H@Z ENDP ; CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>::CMap<unsigned long,unsigned long,tagPersonalTableInfo *,tagPersonalTableInfo * &>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@UAEPAXI@Z PROC ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@UAE@XZ ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::~CWHArray<tagServerTableCount *,tagServerTableCount * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@UAEPAXI@Z ENDP ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXXZ PROC ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXXZ ENDP ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXHH@Z PROC ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXHH@Z ENDP ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXHABQAUtagServerTableCount@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXHABQAUtagServerTableCount@@@Z PROC ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXH@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXHABQAUtagServerTableCount@@@Z ENDP ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXH@Z PROC ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXH@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXH@Z ENDP ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEAAPAUtagServerTableCount@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?GetAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEAAPAUtagServerTableCount@@H@Z PROC ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetAt, COMDAT
; _this$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 213  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN5@GetAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN6@GetAt
$LN5@GetAt:
  0001d	68 d5 00 00 00	 push	 213			; 000000d5H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN6@GetAt
  00030	cc		 int	 3
$LN6@GetAt:

; 214  : 	if ((nIndex<0)||(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7c 0b		 jl	 SHORT $LN3@GetAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@GetAt
$LN3@GetAt:
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetAt:

; 215  : 	
; 216  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN4@GetAt:

; 217  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?GetAt@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEAAPAUtagServerTableCount@@H@Z ENDP ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEHABQAUtagServerTableCount@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEHABQAUtagServerTableCount@@@Z PROC ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEXHABQAUtagServerTableCount@@@Z ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAEHABQAUtagServerTableCount@@@Z ENDP ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QBEHXZ PROC ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QBEHXZ ENDP ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@UAE@XZ PROC ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::~CWHArray<tagServerTableCount *,tagServerTableCount * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@UAE@XZ ENDP ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::~CWHArray<tagServerTableCount *,tagServerTableCount * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAE@XZ PROC ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::CWHArray<tagServerTableCount *,tagServerTableCount * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAUtagServerTableCount@@ABQAU1@@@QAE@XZ ENDP ; CWHArray<tagServerTableCount *,tagServerTableCount * const &>::CWHArray<tagServerTableCount *,tagServerTableCount * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAEPAXI@Z PROC	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAE@XZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::~CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAEPAXI@Z ENDP	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UBEXXZ PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UBEXXZ ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 2
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UBEXAAVCDumpContext@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 02 00 00 00	 mov	 eax, 2
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalChatItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z ; DumpElements<unsigned short>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@PAVCGlobalChatItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalChatItem@@H@Z ; DumpElements<CGlobalChatItem *>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UBEXAAVCDumpContext@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 2
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAEXAAVCArchive@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f9 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGlobalChatItem@@@@YGXAAVCArchive@@PAPAVCGlobalChatItem@@H@Z ; SerializeElements<CGlobalChatItem *>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 63		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 43		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGlobalChatItem@@@@YGXAAVCArchive@@PAPAVCGlobalChatItem@@H@Z ; SerializeElements<CGlobalChatItem *>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8b 54 0d e0	 mov	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 02 00 00 00	 mov	 eax, 2
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	0f b7 54 0d e4	 movzx	 edx, WORD PTR _newKey$2[ebp+ecx]
  00146	52		 push	 edx
  00147	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	e8 00 00 00 00	 call	 ?SetAt@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXGPAVCGlobalChatItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::SetAt

; 1787 : 		}

  0014f	eb a8		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00151	5f		 pop	 edi
  00152	5e		 pop	 esi
  00153	5b		 pop	 ebx
  00154	8b e5		 mov	 esp, ebp
  00156	5d		 pop	 ebp
  00157	c2 04 00	 ret	 4
?Serialize@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAEXAAVCArchive@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAE@XZ PROC	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::~CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGlobalChatItem@@PAV1@@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@GGPAVCGlobalChatItem@@PAV1@@@UAE@XZ ENDP	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::~CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00016	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00019	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001b	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	8b 00		 mov	 eax, DWORD PTR [eax]
  00023	33 d2		 xor	 edx, edx
  00025	f7 71 08	 div	 DWORD PTR [ecx+8]
  00028	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002b	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00034	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00036	33 c0		 xor	 eax, eax
  00038	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00045	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00048	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004b	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004d	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00050	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00053	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00056	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0005a	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00062	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00065	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00067	75 16		 jne	 SHORT $LN6@GetAssocAt
  00069	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00076	85 c0		 test	 eax, eax
  00078	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  0007a	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007d	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007f	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00081	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAEXPAVCAssoc@1@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAEPAVCAssoc@1@G@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?NewAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAEPAVCAssoc@1@G@Z PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	0f b7 4d 08	 movzx	 ecx, WORD PTR _key$[ebp]
  0014a	51		 push	 ecx
  0014b	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014e	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@G@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00153	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5b		 pop	 ebx
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c2 04 00	 ret	 4
?NewAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAEPAVCAssoc@1@G@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXIH@Z PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXIH@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalChatItem@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalChatItem@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	66 8b 11	 mov	 dx, WORD PTR [ecx]
  001bd	66 89 10	 mov	 WORD PTR [eax], dx

; 1676 : 	rValue = pAssocRet->value;

  001c0	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c3	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c9	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001cb	5f		 pop	 edi
  001cc	5e		 pop	 esi
  001cd	5b		 pop	 ebx
  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalChatItem@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXXZ PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXXZ ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEHG@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?RemoveKey@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEHG@Z PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 84 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00039	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00042	33 d2		 xor	 edx, edx
  00044	f7 71 08	 div	 DWORD PTR [ecx+8]
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  00050	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00053	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005b	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00060	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00063	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00066	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0006a	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00072	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00075	75 2f		 jne	 SHORT $LN6@RemoveKey
  00077	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00084	85 c0		 test	 eax, eax
  00086	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00088	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00091	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00093	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00096	50		 push	 eax
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::FreeAssoc

; 1630 : 			return TRUE;

  0009f	b8 01 00 00 00	 mov	 eax, 1
  000a4	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a6	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a9	83 c0 08	 add	 eax, 8
  000ac	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000af	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b1	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?RemoveKey@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEHG@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXGPAVCGlobalChatItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_newValue$ = 12						; size = 4
?SetAt@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXGPAVCGlobalChatItem@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEAAPAVCGlobalChatItem@@G@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::operator[]
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001c	89 08		 mov	 DWORD PTR [eax], ecx
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?SetAt@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXGPAVCGlobalChatItem@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEAAPAVCGlobalChatItem@@G@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??A?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEAAPAVCGlobalChatItem@@G@Z PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	0f 85 9c 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00048	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  0004a	6a 01		 push	 1
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	51		 push	 ecx
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00062	74 09		 je	 SHORT $LN9@operator
  00064	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006b	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00074	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00077	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  0007a	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007e	75 14		 jne	 SHORT $LN11@operator
  00080	68 3b 06 00 00	 push	 1595			; 0000063bH
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0008a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008f	85 c0		 test	 eax, eax
  00091	74 01		 je	 SHORT $LN11@operator
  00093	cc		 int	 3
$LN11@operator:
  00094	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00098	75 05		 jne	 SHORT $LN2@operator
  0009a	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009f	33 c0		 xor	 eax, eax
  000a1	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a3	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  000a7	50		 push	 eax
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::NewAssoc
  000b0	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b3	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b6	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b9	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c2	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c5	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c8	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000cb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d4	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d7	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000da	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000dd	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e0	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 04 00	 ret	 4
??A?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAEAAPAVCGlobalChatItem@@G@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEHGAAPAVCGlobalChatItem@@@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_rValue$ = 12						; size = 4
?Lookup@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEHGAAPAVCGlobalChatItem@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1552 : 	ASSERT_VALID(this);

  0000c	68 10 06 00 00	 push	 1552			; 00000610H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1556 : 	if (pAssoc == NULL)

  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	75 04		 jne	 SHORT $LN2@Lookup

; 1557 : 		return FALSE;  // not in map

  0003d	33 c0		 xor	 eax, eax
  0003f	eb 10		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00047	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004a	89 10		 mov	 DWORD PTR [eax], edx

; 1560 : 	return TRUE;

  0004c	b8 01 00 00 00	 mov	 eax, 1
$LN1@Lookup:

; 1561 : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?Lookup@?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QBEHGAAPAVCGlobalChatItem@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@H@Z PROC	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGlobalChatItem@@PAV1@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@GGPAVCGlobalChatItem@@PAV1@@@QAE@H@Z ENDP	; CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>::CMap<unsigned short,unsigned short,CGlobalChatItem *,CGlobalChatItem *>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAEPAXI@Z PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAE@XZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::~CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAEPAXI@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UBEXXZ PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UBEXXZ ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 2
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UBEXAAVCDumpContext@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 02 00 00 00	 mov	 eax, 2
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalServerItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z ; DumpElements<unsigned short>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@PAVCGlobalServerItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalServerItem@@H@Z ; DumpElements<CGlobalServerItem *>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UBEXAAVCDumpContext@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 2
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAEXAAVCArchive@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f9 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGlobalServerItem@@@@YGXAAVCArchive@@PAPAVCGlobalServerItem@@H@Z ; SerializeElements<CGlobalServerItem *>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 63		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 43		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGlobalServerItem@@@@YGXAAVCArchive@@PAPAVCGlobalServerItem@@H@Z ; SerializeElements<CGlobalServerItem *>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8b 54 0d e0	 mov	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 02 00 00 00	 mov	 eax, 2
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	0f b7 54 0d e4	 movzx	 edx, WORD PTR _newKey$2[ebp+ecx]
  00146	52		 push	 edx
  00147	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	e8 00 00 00 00	 call	 ?SetAt@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXGPAVCGlobalServerItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::SetAt

; 1787 : 		}

  0014f	eb a8		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00151	5f		 pop	 edi
  00152	5e		 pop	 esi
  00153	5b		 pop	 ebx
  00154	8b e5		 mov	 esp, ebp
  00156	5d		 pop	 ebp
  00157	c2 04 00	 ret	 4
?Serialize@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAEXAAVCArchive@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAE@XZ PROC	; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::~CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGlobalServerItem@@PAV1@@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@GGPAVCGlobalServerItem@@PAV1@@@UAE@XZ ENDP	; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::~CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00016	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00019	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001b	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	8b 00		 mov	 eax, DWORD PTR [eax]
  00023	33 d2		 xor	 edx, edx
  00025	f7 71 08	 div	 DWORD PTR [ecx+8]
  00028	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002b	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00034	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00036	33 c0		 xor	 eax, eax
  00038	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00045	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00048	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004b	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004d	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00050	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00053	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00056	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0005a	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00062	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00065	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00067	75 16		 jne	 SHORT $LN6@GetAssocAt
  00069	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00076	85 c0		 test	 eax, eax
  00078	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  0007a	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007d	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007f	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00081	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAEXPAVCAssoc@1@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAEPAVCAssoc@1@G@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?NewAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAEPAVCAssoc@1@G@Z PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	0f b7 4d 08	 movzx	 ecx, WORD PTR _key$[ebp]
  0014a	51		 push	 ecx
  0014b	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014e	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@G@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00153	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5b		 pop	 ebx
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c2 04 00	 ret	 4
?NewAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAEPAVCAssoc@1@G@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXIH@Z PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXIH@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalServerItem@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalServerItem@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	66 8b 11	 mov	 dx, WORD PTR [ecx]
  001bd	66 89 10	 mov	 WORD PTR [eax], dx

; 1676 : 	rValue = pAssocRet->value;

  001c0	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c3	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c9	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001cb	5f		 pop	 edi
  001cc	5e		 pop	 esi
  001cd	5b		 pop	 ebx
  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalServerItem@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXXZ PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXXZ ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEHG@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?RemoveKey@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEHG@Z PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 84 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00039	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00042	33 d2		 xor	 edx, edx
  00044	f7 71 08	 div	 DWORD PTR [ecx+8]
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  00050	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00053	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005b	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00060	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00063	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00066	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0006a	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00072	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00075	75 2f		 jne	 SHORT $LN6@RemoveKey
  00077	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00084	85 c0		 test	 eax, eax
  00086	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00088	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00091	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00093	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00096	50		 push	 eax
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::FreeAssoc

; 1630 : 			return TRUE;

  0009f	b8 01 00 00 00	 mov	 eax, 1
  000a4	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a6	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a9	83 c0 08	 add	 eax, 8
  000ac	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000af	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b1	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?RemoveKey@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEHG@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXGPAVCGlobalServerItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_newValue$ = 12						; size = 4
?SetAt@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXGPAVCGlobalServerItem@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEAAPAVCGlobalServerItem@@G@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::operator[]
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001c	89 08		 mov	 DWORD PTR [eax], ecx
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?SetAt@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXGPAVCGlobalServerItem@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEAAPAVCGlobalServerItem@@G@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??A?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEAAPAVCGlobalServerItem@@G@Z PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	0f 85 9c 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00048	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  0004a	6a 01		 push	 1
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	51		 push	 ecx
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00062	74 09		 je	 SHORT $LN9@operator
  00064	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006b	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00074	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00077	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  0007a	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007e	75 14		 jne	 SHORT $LN11@operator
  00080	68 3b 06 00 00	 push	 1595			; 0000063bH
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0008a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008f	85 c0		 test	 eax, eax
  00091	74 01		 je	 SHORT $LN11@operator
  00093	cc		 int	 3
$LN11@operator:
  00094	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00098	75 05		 jne	 SHORT $LN2@operator
  0009a	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009f	33 c0		 xor	 eax, eax
  000a1	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a3	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  000a7	50		 push	 eax
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::NewAssoc
  000b0	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b3	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b6	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b9	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c2	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c5	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c8	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000cb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d4	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d7	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000da	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000dd	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e0	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 04 00	 ret	 4
??A?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAEAAPAVCGlobalServerItem@@G@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEHGAAPAVCGlobalServerItem@@@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_rValue$ = 12						; size = 4
?Lookup@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEHGAAPAVCGlobalServerItem@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1552 : 	ASSERT_VALID(this);

  0000c	68 10 06 00 00	 push	 1552			; 00000610H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1556 : 	if (pAssoc == NULL)

  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	75 04		 jne	 SHORT $LN2@Lookup

; 1557 : 		return FALSE;  // not in map

  0003d	33 c0		 xor	 eax, eax
  0003f	eb 10		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00047	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004a	89 10		 mov	 DWORD PTR [eax], edx

; 1560 : 	return TRUE;

  0004c	b8 01 00 00 00	 mov	 eax, 1
$LN1@Lookup:

; 1561 : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?Lookup@?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QBEHGAAPAVCGlobalServerItem@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@H@Z PROC	; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGlobalServerItem@@PAV1@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@GGPAVCGlobalServerItem@@PAV1@@@QAE@H@Z ENDP	; CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>::CMap<unsigned short,unsigned short,CGlobalServerItem *,CGlobalServerItem *>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAEPAXI@Z PROC	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAE@XZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::~CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAEPAXI@Z ENDP	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UBEXXZ PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UBEXXZ ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 2
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UBEXAAVCDumpContext@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 02 00 00 00	 mov	 eax, 2
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalPlazaItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@G@@YGXAAVCDumpContext@@PBGH@Z ; DumpElements<unsigned short>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@PAVCGlobalPlazaItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalPlazaItem@@H@Z ; DumpElements<CGlobalPlazaItem *>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UBEXAAVCDumpContext@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 2
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAEXAAVCArchive@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f9 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGlobalPlazaItem@@@@YGXAAVCArchive@@PAPAVCGlobalPlazaItem@@H@Z ; SerializeElements<CGlobalPlazaItem *>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 63		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 43		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@G@@YGXAAVCArchive@@PAGH@Z ; SerializeElements<unsigned short>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGlobalPlazaItem@@@@YGXAAVCArchive@@PAPAVCGlobalPlazaItem@@H@Z ; SerializeElements<CGlobalPlazaItem *>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8b 54 0d e0	 mov	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 02 00 00 00	 mov	 eax, 2
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	0f b7 54 0d e4	 movzx	 edx, WORD PTR _newKey$2[ebp+ecx]
  00146	52		 push	 edx
  00147	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	e8 00 00 00 00	 call	 ?SetAt@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXGPAVCGlobalPlazaItem@@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::SetAt

; 1787 : 		}

  0014f	eb a8		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00151	5f		 pop	 edi
  00152	5e		 pop	 esi
  00153	5b		 pop	 ebx
  00154	8b e5		 mov	 esp, ebp
  00156	5d		 pop	 ebp
  00157	c2 04 00	 ret	 4
?Serialize@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAEXAAVCArchive@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAE@XZ PROC	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::~CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@UAE@XZ ENDP	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::~CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00016	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00019	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001b	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	8b 00		 mov	 eax, DWORD PTR [eax]
  00023	33 d2		 xor	 edx, edx
  00025	f7 71 08	 div	 DWORD PTR [ecx+8]
  00028	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002b	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00034	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00036	33 c0		 xor	 eax, eax
  00038	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00045	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00048	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004b	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004d	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00050	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00053	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00056	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0005a	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00062	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00065	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00067	75 16		 jne	 SHORT $LN6@GetAssocAt
  00069	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00076	85 c0		 test	 eax, eax
  00078	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  0007a	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007d	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007f	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00081	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAEXPAVCAssoc@1@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXXZ ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAEPAVCAssoc@1@G@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?NewAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAEPAVCAssoc@1@G@Z PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	0f b7 4d 08	 movzx	 ecx, WORD PTR _key$[ebp]
  0014a	51		 push	 ecx
  0014b	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014e	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@G@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00153	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5b		 pop	 ebx
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c2 04 00	 ret	 4
?NewAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAEPAVCAssoc@1@G@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXIH@Z PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXIH@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalPlazaItem@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalPlazaItem@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	66 8b 11	 mov	 dx, WORD PTR [ecx]
  001bd	66 89 10	 mov	 WORD PTR [eax], dx

; 1676 : 	rValue = pAssocRet->value;

  001c0	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c3	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c9	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001cb	5f		 pop	 edi
  001cc	5e		 pop	 esi
  001cd	5b		 pop	 ebx
  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEXAAPAU__POSITION@@AAGAAPAVCGlobalPlazaItem@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXXZ PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXXZ ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEHG@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?RemoveKey@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEHG@Z PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 84 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??$HashKey@G@@YGIG@Z	; HashKey<unsigned short>
  00039	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00042	33 d2		 xor	 edx, edx
  00044	f7 71 08	 div	 DWORD PTR [ecx+8]
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  00050	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00053	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005b	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00060	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00063	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00066	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0006a	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00072	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00075	75 2f		 jne	 SHORT $LN6@RemoveKey
  00077	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 ??$CompareElements@GG@@YGHPBG0@Z ; CompareElements<unsigned short,unsigned short>
  00084	85 c0		 test	 eax, eax
  00086	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00088	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008b	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00091	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00093	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00096	50		 push	 eax
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::FreeAssoc

; 1630 : 			return TRUE;

  0009f	b8 01 00 00 00	 mov	 eax, 1
  000a4	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a6	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a9	83 c0 08	 add	 eax, 8
  000ac	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000af	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b1	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?RemoveKey@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEHG@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXGPAVCGlobalPlazaItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_newValue$ = 12						; size = 4
?SetAt@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXGPAVCGlobalPlazaItem@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??A?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEAAPAVCGlobalPlazaItem@@G@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::operator[]
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001c	89 08		 mov	 DWORD PTR [eax], ecx
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?SetAt@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXGPAVCGlobalPlazaItem@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEAAPAVCGlobalPlazaItem@@G@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
??A?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEAAPAVCGlobalPlazaItem@@G@Z PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	0f 85 9c 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00048	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  0004a	6a 01		 push	 1
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	51		 push	 ecx
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00062	74 09		 je	 SHORT $LN9@operator
  00064	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006b	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00074	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00077	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  0007a	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007e	75 14		 jne	 SHORT $LN11@operator
  00080	68 3b 06 00 00	 push	 1595			; 0000063bH
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0008a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008f	85 c0		 test	 eax, eax
  00091	74 01		 je	 SHORT $LN11@operator
  00093	cc		 int	 3
$LN11@operator:
  00094	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00098	75 05		 jne	 SHORT $LN2@operator
  0009a	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009f	33 c0		 xor	 eax, eax
  000a1	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a3	0f b7 45 08	 movzx	 eax, WORD PTR _key$[ebp]
  000a7	50		 push	 eax
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IAEPAVCAssoc@1@G@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::NewAssoc
  000b0	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b3	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b6	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b9	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000bc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c2	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c5	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c8	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000cb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d4	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d7	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000da	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000dd	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e0	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 04 00	 ret	 4
??A?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAEAAPAVCGlobalPlazaItem@@G@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEHGAAPAVCGlobalPlazaItem@@@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 2
_rValue$ = 12						; size = 4
?Lookup@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEHGAAPAVCGlobalPlazaItem@@@Z PROC ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1552 : 	ASSERT_VALID(this);

  0000c	68 10 06 00 00	 push	 1552			; 00000610H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	0f b7 55 08	 movzx	 edx, WORD PTR _key$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@IBEPAVCAssoc@1@GAAI0@Z ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::GetAssocAt
  00034	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1556 : 	if (pAssoc == NULL)

  00037	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003b	75 04		 jne	 SHORT $LN2@Lookup

; 1557 : 		return FALSE;  // not in map

  0003d	33 c0		 xor	 eax, eax
  0003f	eb 10		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00047	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004a	89 10		 mov	 DWORD PTR [eax], edx

; 1560 : 	return TRUE;

  0004c	b8 01 00 00 00	 mov	 eax, 1
$LN1@Lookup:

; 1561 : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 08 00	 ret	 8
?Lookup@?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QBEHGAAPAVCGlobalPlazaItem@@@Z ENDP ; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@H@Z PROC	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@GGPAVCGlobalPlazaItem@@PAV1@@@QAE@H@Z ENDP	; CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>::CMap<unsigned short,unsigned short,CGlobalPlazaItem *,CGlobalPlazaItem *>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCGlobalChatItem@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCGlobalChatItem@@MAEPAXI@Z PROC			; CGlobalChatItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CGlobalChatItem@@MAE@XZ ; CGlobalChatItem::~CGlobalChatItem
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 30		 push	 48			; 00000030H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCGlobalChatItem@@MAEPAXI@Z ENDP			; CGlobalChatItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ??1CGlobalChatItem@@MAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CGlobalChatItem@@MAE@XZ PROC				; CGlobalChatItem::~CGlobalChatItem, COMDAT
; _this$ = ecx

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGlobalChatItem@@6B@

; 81   : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 c1 10	 add	 ecx, 16			; 00000010H
  0001b	e8 00 00 00 00	 call	 ??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::~CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??1CGlobalChatItem@@MAE@XZ ENDP				; CGlobalChatItem::~CGlobalChatItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ??0CGlobalChatItem@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGlobalChatItem@@IAE@XZ PROC				; CGlobalChatItem::CGlobalChatItem, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGlobalChatItem@@6B@
  00015	6a 0a		 push	 10			; 0000000aH
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	83 c1 10	 add	 ecx, 16			; 00000010H
  0001d	e8 00 00 00 00	 call	 ??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>

; 68   : 	//设置变量
; 69   : 	m_wIndex=0;

  00022	33 c0		 xor	 eax, eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 70   : 	ZeroMemory(&m_ChatServer,sizeof(m_ChatServer));

  0002b	6a 0a		 push	 10			; 0000000aH
  0002d	6a 00		 push	 0
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	83 c0 06	 add	 eax, 6
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 _memset
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 71   : 
; 72   : 	//链表属性
; 73   : 	m_pNextChatServerPtr=NULL;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [eax+44], 0

; 74   : 
; 75   : 	return;
; 76   : }

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
??0CGlobalChatItem@@IAE@XZ ENDP				; CGlobalChatItem::CGlobalChatItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCGlobalServerItem@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCGlobalServerItem@@MAEPAXI@Z PROC			; CGlobalServerItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CGlobalServerItem@@MAE@XZ ; CGlobalServerItem::~CGlobalServerItem
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 44 03 00 00	 push	 836			; 00000344H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCGlobalServerItem@@MAEPAXI@Z ENDP			; CGlobalServerItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?SearchUserItem@CGlobalServerItem@@QAEPAVCGlobalUserItem@@K@Z
_TEXT	SEGMENT
_pGlobalUserItem$ = -8					; size = 4
_this$ = -4						; size = 4
_dwUserID$ = 8						; size = 4
?SearchUserItem@CGlobalServerItem@@QAEPAVCGlobalUserItem@@K@Z PROC ; CGlobalServerItem::SearchUserItem, COMDAT
; _this$ = ecx

; 108  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 109  : 	//搜索用户
; 110  : 	CGlobalUserItem * pGlobalUserItem=NULL;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pGlobalUserItem$[ebp], 0

; 111  : 	m_MapUserID.Lookup(dwUserID,pGlobalUserItem);

  00013	8d 45 f8	 lea	 eax, DWORD PTR _pGlobalUserItem$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 08	 mov	 ecx, DWORD PTR _dwUserID$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	81 c1 24 03 00
	00		 add	 ecx, 804		; 00000324H
  00024	e8 00 00 00 00	 call	 ?Lookup@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEHKAAPAVCGlobalUserItem@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::Lookup

; 112  : 
; 113  : 	return pGlobalUserItem;

  00029	8b 45 f8	 mov	 eax, DWORD PTR _pGlobalUserItem$[ebp]

; 114  : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?SearchUserItem@CGlobalServerItem@@QAEPAVCGlobalUserItem@@K@Z ENDP ; CGlobalServerItem::SearchUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetTabelCount@CGlobalServerItem@@QAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTabelCount@CGlobalServerItem@@QAEGXZ PROC		; CGlobalServerItem::GetTabelCount, COMDAT
; _this$ = ecx

; 200  : 	WORD GetTabelCount() { return m_GameServer.wTableCount; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 40 7b	 mov	 ax, WORD PTR [eax+123]
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetTabelCount@CGlobalServerItem@@QAEGXZ ENDP		; CGlobalServerItem::GetTabelCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetServerID@CGlobalServerItem@@QAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetServerID@CGlobalServerItem@@QAEGXZ PROC		; CGlobalServerItem::GetServerID, COMDAT
; _this$ = ecx

; 196  : 	WORD GetServerID() { return m_GameServer.wServerID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 40 0c	 mov	 ax, WORD PTR [eax+12]
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetServerID@CGlobalServerItem@@QAEGXZ ENDP		; CGlobalServerItem::GetServerID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetKindID@CGlobalServerItem@@QAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetKindID@CGlobalServerItem@@QAEGXZ PROC		; CGlobalServerItem::GetKindID, COMDAT
; _this$ = ecx

; 194  : 	WORD GetKindID() { return m_GameServer.wKindID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 40 06	 mov	 ax, WORD PTR [eax+6]
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetKindID@CGlobalServerItem@@QAEGXZ ENDP		; CGlobalServerItem::GetKindID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ??1CGlobalServerItem@@MAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CGlobalServerItem@@MAE@XZ PROC			; CGlobalServerItem::~CGlobalServerItem, COMDAT
; _this$ = ecx

; 103  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGlobalServerItem@@6B@

; 104  : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 24 03 00
	00		 add	 ecx, 804		; 00000324H
  0001e	e8 00 00 00 00	 call	 ??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::~CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??1CGlobalServerItem@@MAE@XZ ENDP			; CGlobalServerItem::~CGlobalServerItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ??0CGlobalServerItem@@IAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CGlobalServerItem@@IAE@XZ PROC			; CGlobalServerItem::CGlobalServerItem, COMDAT
; _this$ = ecx

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGlobalServerItem@@IAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGlobalServerItem@@6B@
  00034	6a 0a		 push	 10			; 0000000aH
  00036	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	81 c1 24 03 00
	00		 add	 ecx, 804		; 00000324H
  0003f	e8 00 00 00 00	 call	 ??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 88   : 	//设置变量
; 89   : 	m_wIndex=0;

  0004b	33 c0		 xor	 eax, eax
  0004d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 90   : 	ZeroMemory(&m_GameServer,sizeof(m_GameServer));

  00054	68 9b 00 00 00	 push	 155			; 0000009bH
  00059	6a 00		 push	 0
  0005b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	83 c0 06	 add	 eax, 6
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 _memset
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH

; 91   : 
; 92   : 	//链表属性
; 93   : 	m_pNextServerItemPtr=NULL;

  0006a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	c7 80 40 03 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+832], 0

; 94   : 
; 95   : 	//设置质数
; 96   : 	m_MapUserID.InitHashTable(PRIME_SERVER_USER);

  00077	6a 01		 push	 1
  00079	68 f7 01 00 00	 push	 503			; 000001f7H
  0007e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	81 c1 24 03 00
	00		 add	 ecx, 804		; 00000324H
  00087	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::InitHashTable

; 97   : 
; 98   : 	return;
; 99   : }

  0008c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00093	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00096	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00099	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a0	59		 pop	 ecx
  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGlobalServerItem@@IAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	81 c1 24 03 00
	00		 add	 ecx, 804		; 00000324H
  00009	e9 00 00 00 00	 jmp	 ??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::~CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
__ehhandler$??0CGlobalServerItem@@IAE@XZ:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGlobalServerItem@@IAE@XZ
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGlobalServerItem@@IAE@XZ ENDP			; CGlobalServerItem::CGlobalServerItem
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCGlobalPlazaItem@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCGlobalPlazaItem@@MAEPAXI@Z PROC			; CGlobalPlazaItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CGlobalPlazaItem@@MAE@XZ ; CGlobalPlazaItem::~CGlobalPlazaItem
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 68		 push	 104			; 00000068H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCGlobalPlazaItem@@MAEPAXI@Z ENDP			; CGlobalPlazaItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ??1CGlobalPlazaItem@@MAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CGlobalPlazaItem@@MAE@XZ PROC			; CGlobalPlazaItem::~CGlobalPlazaItem, COMDAT
; _this$ = ecx

; 60   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGlobalPlazaItem@@6B@

; 61   : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 c1 48	 add	 ecx, 72			; 00000048H
  0001b	e8 00 00 00 00	 call	 ??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::~CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??1CGlobalPlazaItem@@MAE@XZ ENDP			; CGlobalPlazaItem::~CGlobalPlazaItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ??0CGlobalPlazaItem@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGlobalPlazaItem@@IAE@XZ PROC			; CGlobalPlazaItem::CGlobalPlazaItem, COMDAT
; _this$ = ecx

; 47   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGlobalPlazaItem@@6B@
  00015	6a 0a		 push	 10			; 0000000aH
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	83 c1 48	 add	 ecx, 72			; 00000048H
  0001d	e8 00 00 00 00	 call	 ??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>

; 48   : 	//设置变量
; 49   : 	m_wIndex=0;

  00022	33 c0		 xor	 eax, eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 50   : 	ZeroMemory(&m_GamePlaza,sizeof(m_GamePlaza));

  0002b	6a 42		 push	 66			; 00000042H
  0002d	6a 00		 push	 0
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	83 c0 06	 add	 eax, 6
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 _memset
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 51   : 
; 52   : 	//链表属性
; 53   : 	m_pNextPlazaItemPtr=NULL;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	c7 40 64 00 00
	00 00		 mov	 DWORD PTR [eax+100], 0

; 54   : 
; 55   : 	return;
; 56   : }

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
??0CGlobalPlazaItem@@IAE@XZ ENDP			; CGlobalPlazaItem::CGlobalPlazaItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAEPAXI@Z PROC	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::~CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 21		 je	 SHORT $LN2@scalar
  0001c	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001f	83 e0 04	 and	 eax, 4
  00022	75 0b		 jne	 SHORT $LN3@scalar
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002d	eb 0e		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  0002f	6a 1c		 push	 28			; 0000001cH
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??_G?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAEPAXI@Z ENDP	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?AssertValid@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UBEXXZ PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::AssertValid, COMDAT
; _this$ = ecx

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1821 : 	CObject::AssertValid();

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?AssertValid@CObject@@UBEXXZ ; CObject::AssertValid

; 1822 : 
; 1823 : 	ASSERT(m_nHashTableSize > 0);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001b	77 14		 ja	 SHORT $LN3@AssertVali
  0001d	68 1f 07 00 00	 push	 1823			; 0000071fH
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN3@AssertVali
  00030	cc		 int	 3
$LN3@AssertVali:

; 1824 : 	ASSERT(m_nCount == 0 || m_pHashTable != NULL);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00038	74 1d		 je	 SHORT $LN1@AssertVali
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00041	75 14		 jne	 SHORT $LN1@AssertVali
  00043	68 20 07 00 00	 push	 1824			; 00000720H
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00052	85 c0		 test	 eax, eax
  00054	74 01		 je	 SHORT $LN1@AssertVali
  00056	cc		 int	 3
$LN1@AssertVali:

; 1825 : 		// non-empty map should have hash table
; 1826 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?AssertValid@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UBEXXZ ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Dump@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z
_TEXT	SEGMENT
_pos$1 = -16						; size = 4
_val$2 = -12						; size = 4
_key$3 = -8						; size = 4
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::Dump, COMDAT
; _this$ = ecx

; 1794 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 	CObject::Dump(dc);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?Dump@CObject@@UBEXAAVCDumpContext@@@Z ; CObject::Dump

; 1796 : 
; 1797 : 	dc << "with " << m_nCount << " elements";

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_09HCLNAIDE@?5elements@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	51		 push	 ecx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_05PLCFPPOI@with?5@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0002c	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<
  00031	8b c8		 mov	 ecx, eax
  00033	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@H@Z ; CDumpContext::operator<<
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1798 : 	if (dc.GetDepth() > 0)

  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00042	e8 00 00 00 00	 call	 ?GetDepth@CDumpContext@@QBEHXZ ; CDumpContext::GetDepth
  00047	85 c0		 test	 eax, eax
  00049	7e 71		 jle	 SHORT $LN4@Dump

; 1799 : 	{
; 1800 : 		// Dump in format "[key] -> value"
; 1801 : 		KEY key[1];
; 1802 : 		VALUE val[1];
; 1803 : 
; 1804 : 		POSITION pos = GetStartPosition();

  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetStartPosition@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetStartPosition
  00053	89 45 f0	 mov	 DWORD PTR _pos$1[ebp], eax
$LN2@Dump:

; 1805 : 		while (pos != NULL)

  00056	83 7d f0 00	 cmp	 DWORD PTR _pos$1[ebp], 0
  0005a	74 60		 je	 SHORT $LN4@Dump

; 1806 : 		{
; 1807 : 			GetNextAssoc(pos, key[0], val[0]);

  0005c	b8 04 00 00 00	 mov	 eax, 4
  00061	6b c8 00	 imul	 ecx, eax, 0
  00064	8d 54 0d f4	 lea	 edx, DWORD PTR _val$2[ebp+ecx]
  00068	52		 push	 edx
  00069	b8 04 00 00 00	 mov	 eax, 4
  0006e	6b c8 00	 imul	 ecx, eax, 0
  00071	8d 54 0d f8	 lea	 edx, DWORD PTR _key$3[ebp+ecx]
  00075	52		 push	 edx
  00076	8d 45 f0	 lea	 eax, DWORD PTR _pos$1[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?GetNextAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCGlobalUserItem@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetNextAssoc

; 1808 : 			dc << "\n\t[";

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_03OHJIHPJH@?6?7?$FL@
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  0008a	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1809 : 			DumpElements<KEY>(dc, key, 1);

  0008f	6a 01		 push	 1
  00091	8d 45 f8	 lea	 eax, DWORD PTR _key$3[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$DumpElements@K@@YGXAAVCDumpContext@@PBKH@Z ; DumpElements<unsigned long>

; 1810 : 			dc << "] = ";

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_04OAFLPOMH@?$FN?5?$DN?5@
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000a6	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1811 : 			DumpElements<VALUE>(dc, val, 1);

  000ab	6a 01		 push	 1
  000ad	8d 45 f4	 lea	 eax, DWORD PTR _val$2[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ??$DumpElements@PAVCGlobalUserItem@@@@YGXAAVCDumpContext@@PBQAVCGlobalUserItem@@H@Z ; DumpElements<CGlobalUserItem *>

; 1812 : 		}

  000ba	eb 9a		 jmp	 SHORT $LN2@Dump
$LN4@Dump:

; 1813 : 	}
; 1814 : 
; 1815 : 	dc << "\n";

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ??6CDumpContext@@QAEAAV0@PBD@Z ; CDumpContext::operator<<

; 1816 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 04 00	 ret	 4
?Dump@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UBEXAAVCDumpContext@@@Z ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Serialize@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
tv154 = -100						; size = 4
_newValue$1 = -32					; size = 4
_newKey$2 = -28						; size = 4
_nNewCount$3 = -24					; size = 4
_pValue$4 = -20						; size = 4
_pKey$5 = -16						; size = 4
_pAssoc$6 = -12						; size = 4
_nHash$7 = -8						; size = 4
_this$ = -4						; size = 4
_ar$ = 8						; size = 4
?Serialize@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAEXAAVCArchive@@@Z PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::Serialize, COMDAT
; _this$ = ecx

; 1743 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1744 : 	ASSERT_VALID(this);

  0000c	68 d0 06 00 00	 push	 1744			; 000006d0H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1745 : 
; 1746 : 	CObject::Serialize(ar);

  0001f	8b 45 08	 mov	 eax, DWORD PTR _ar$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Serialize@CObject@@UAEXAAVCArchive@@@Z ; CObject::Serialize

; 1747 : 
; 1748 : 	if (ar.IsStoring())

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  0002e	e8 00 00 00 00	 call	 ?IsStoring@CArchive@@QBEHXZ ; CArchive::IsStoring
  00033	85 c0		 test	 eax, eax
  00035	0f 84 b3 00 00
	00		 je	 $LN10@Serialize

; 1749 : 	{
; 1750 : 		ar.WriteCount(m_nCount);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	51		 push	 ecx
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00045	e8 00 00 00 00	 call	 ?WriteCount@CArchive@@QAEXK@Z ; CArchive::WriteCount

; 1751 : 		if (m_nCount == 0)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00051	75 05		 jne	 SHORT $LN12@Serialize

; 1752 : 			return;  // nothing more to do

  00053	e9 f8 00 00 00	 jmp	 $LN1@Serialize
$LN12@Serialize:

; 1753 : 
; 1754 : 		ASSERT(m_pHashTable != NULL);

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005f	75 14		 jne	 SHORT $LN15@Serialize
  00061	68 da 06 00 00	 push	 1754			; 000006daH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0006b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00070	85 c0		 test	 eax, eax
  00072	74 01		 je	 SHORT $LN15@Serialize
  00074	cc		 int	 3
$LN15@Serialize:

; 1755 : 		if (m_pHashTable != NULL)

  00075	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007c	74 6e		 je	 SHORT $LN13@Serialize

; 1756 : 		{
; 1757 : 			for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  0007e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$7[ebp], 0
  00085	eb 09		 jmp	 SHORT $LN4@Serialize
$LN2@Serialize:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _nHash$7[ebp]
  0008a	83 c0 01	 add	 eax, 1
  0008d	89 45 f8	 mov	 DWORD PTR _nHash$7[ebp], eax
$LN4@Serialize:
  00090	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$7[ebp]
  00096	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00099	73 51		 jae	 SHORT $LN13@Serialize

; 1758 : 			{
; 1759 : 				CAssoc* pAssoc;
; 1760 : 				for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _nHash$7[ebp]
  000a4	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000a7	89 45 f4	 mov	 DWORD PTR _pAssoc$6[ebp], eax
  000aa	eb 09		 jmp	 SHORT $LN7@Serialize
$LN5@Serialize:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000af	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b2	89 4d f4	 mov	 DWORD PTR _pAssoc$6[ebp], ecx
$LN7@Serialize:
  000b5	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$6[ebp], 0
  000b9	74 2f		 je	 SHORT $LN6@Serialize

; 1761 : 				{
; 1762 : 					KEY* pKey;
; 1763 : 					VALUE* pValue;
; 1764 : 					/*
; 1765 : 					* in some cases the & operator might be overloaded, and we cannot use it to
; 1766 : 					* obtain the address of a given object.  We then use the following trick to
; 1767 : 					* get the address
; 1768 : 					*/
; 1769 : 					pKey = reinterpret_cast< KEY* >( &reinterpret_cast< int& >( const_cast< KEY& > ( static_cast< const KEY& >( pAssoc->key ) ) ) );

  000bb	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000be	89 45 f0	 mov	 DWORD PTR _pKey$5[ebp], eax

; 1770 : 					pValue = reinterpret_cast< VALUE* >( &reinterpret_cast< int& >( static_cast< VALUE& >( pAssoc->value ) ) );

  000c1	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$6[ebp]
  000c4	83 c0 04	 add	 eax, 4
  000c7	89 45 ec	 mov	 DWORD PTR _pValue$4[ebp], eax

; 1771 : 					SerializeElements<KEY>(ar, pKey, 1);

  000ca	6a 01		 push	 1
  000cc	8b 45 f0	 mov	 eax, DWORD PTR _pKey$5[ebp]
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000d3	51		 push	 ecx
  000d4	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1772 : 					SerializeElements<VALUE>(ar, pValue, 1);

  000d9	6a 01		 push	 1
  000db	8b 45 ec	 mov	 eax, DWORD PTR _pValue$4[ebp]
  000de	50		 push	 eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGlobalUserItem@@@@YGXAAVCArchive@@PAPAVCGlobalUserItem@@H@Z ; SerializeElements<CGlobalUserItem *>

; 1773 : 				}

  000e8	eb c2		 jmp	 SHORT $LN5@Serialize
$LN6@Serialize:

; 1774 : 			}

  000ea	eb 9b		 jmp	 SHORT $LN2@Serialize
$LN13@Serialize:

; 1775 : 		}
; 1776 : 	}
; 1777 : 	else

  000ec	eb 62		 jmp	 SHORT $LN1@Serialize
$LN10@Serialize:

; 1778 : 	{
; 1779 : 		DWORD_PTR nNewCount = ar.ReadCount();

  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  000f1	e8 00 00 00 00	 call	 ?ReadCount@CArchive@@QAEKXZ ; CArchive::ReadCount
  000f6	89 45 e8	 mov	 DWORD PTR _nNewCount$3[ebp], eax
$LN8@Serialize:

; 1780 : 		while (nNewCount--)

  000f9	8b 45 e8	 mov	 eax, DWORD PTR _nNewCount$3[ebp]
  000fc	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
  000ff	8b 4d e8	 mov	 ecx, DWORD PTR _nNewCount$3[ebp]
  00102	83 e9 01	 sub	 ecx, 1
  00105	89 4d e8	 mov	 DWORD PTR _nNewCount$3[ebp], ecx
  00108	83 7d 9c 00	 cmp	 DWORD PTR tv154[ebp], 0
  0010c	74 42		 je	 SHORT $LN1@Serialize

; 1781 : 		{
; 1782 : 			KEY newKey[1];
; 1783 : 			VALUE newValue[1];
; 1784 : 			SerializeElements<KEY>(ar, newKey, 1);

  0010e	6a 01		 push	 1
  00110	8d 45 e4	 lea	 eax, DWORD PTR _newKey$2[ebp]
  00113	50		 push	 eax
  00114	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00117	51		 push	 ecx
  00118	e8 00 00 00 00	 call	 ??$SerializeElements@K@@YGXAAVCArchive@@PAKH@Z ; SerializeElements<unsigned long>

; 1785 : 			SerializeElements<VALUE>(ar, newValue, 1);

  0011d	6a 01		 push	 1
  0011f	8d 45 e0	 lea	 eax, DWORD PTR _newValue$1[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _ar$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ??$SerializeElements@PAVCGlobalUserItem@@@@YGXAAVCArchive@@PAPAVCGlobalUserItem@@H@Z ; SerializeElements<CGlobalUserItem *>

; 1786 : 			SetAt(newKey[0], newValue[0]);

  0012c	b8 04 00 00 00	 mov	 eax, 4
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8b 54 0d e0	 mov	 edx, DWORD PTR _newValue$1[ebp+ecx]
  00138	52		 push	 edx
  00139	b8 04 00 00 00	 mov	 eax, 4
  0013e	6b c8 00	 imul	 ecx, eax, 0
  00141	8b 54 0d e4	 mov	 edx, DWORD PTR _newKey$2[ebp+ecx]
  00145	52		 push	 edx
  00146	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00149	e8 00 00 00 00	 call	 ?SetAt@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXKPAVCGlobalUserItem@@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::SetAt

; 1787 : 		}

  0014e	eb a9		 jmp	 SHORT $LN8@Serialize
$LN1@Serialize:

; 1788 : 	}
; 1789 : }

  00150	5f		 pop	 edi
  00151	5e		 pop	 esi
  00152	5b		 pop	 ebx
  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c2 04 00	 ret	 4
?Serialize@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAEXAAVCArchive@@@Z ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::Serialize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ PROC	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::~CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>, COMDAT
; _this$ = ecx

; 1472 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@KKPAVCGlobalUserItem@@PAV1@@@6B@

; 1473 : 	RemoveAll();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveAll

; 1474 : 	ASSERT(m_nCount == 0);

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00043	74 14		 je	 SHORT $LN1@CMap
  00045	68 c2 05 00 00	 push	 1474			; 000005c2H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00054	85 c0		 test	 eax, eax
  00056	74 01		 je	 SHORT $LN1@CMap
  00058	cc		 int	 3
$LN1@CMap:

; 1475 : }

  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1CObject@@UAE@XZ	; CObject::~CObject
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CMap@KKPAVCGlobalUserItem@@PAV1@@@UAE@XZ ENDP	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::~CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetAssocAt@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z
_TEXT	SEGMENT
_pAssoc$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_nHashBucket$ = 12					; size = 4
_nHashValue$ = 16					; size = 4
?GetAssocAt@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetAssocAt, COMDAT
; _this$ = ecx

; 1532 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1533 : 	nHashValue = HashKey<ARG_KEY>(key);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$HashKey@K@@YGIK@Z	; HashKey<unsigned long>
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00018	89 01		 mov	 DWORD PTR [ecx], eax

; 1534 : 	nHashBucket = nHashValue % m_nHashTableSize;

  0001a	8b 45 10	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
  00022	33 d2		 xor	 edx, edx
  00024	f7 71 08	 div	 DWORD PTR [ecx+8]
  00027	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0002a	89 10		 mov	 DWORD PTR [eax], edx

; 1535 : 
; 1536 : 	if (m_pHashTable == NULL)

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00033	75 04		 jne	 SHORT $LN5@GetAssocAt

; 1537 : 		return NULL;

  00035	33 c0		 xor	 eax, eax
  00037	eb 49		 jmp	 SHORT $LN1@GetAssocAt
$LN5@GetAssocAt:

; 1538 : 
; 1539 : 	// see if it exists
; 1540 : 	CAssoc* pAssoc;
; 1541 : 	for (pAssoc = m_pHashTable[nHashBucket]; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00039	8b 45 0c	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  0003c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00044	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  00047	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0004a	eb 09		 jmp	 SHORT $LN4@GetAssocAt
$LN2@GetAssocAt:
  0004c	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	89 4d f8	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@GetAssocAt:
  00055	83 7d f8 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  00059	74 25		 je	 SHORT $LN3@GetAssocAt

; 1542 : 	{
; 1543 : 		if (pAssoc->nHashValue == nHashValue && CompareElements(&pAssoc->key, &key))

  0005b	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005e	8b 4d 10	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  00061	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00064	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00066	75 16		 jne	 SHORT $LN6@GetAssocAt
  00068	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d f8	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0006f	51		 push	 ecx
  00070	e8 00 00 00 00	 call	 ??$CompareElements@KK@@YGHPBK0@Z ; CompareElements<unsigned long,unsigned long>
  00075	85 c0		 test	 eax, eax
  00077	74 05		 je	 SHORT $LN6@GetAssocAt

; 1544 : 			return pAssoc;

  00079	8b 45 f8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0007c	eb 04		 jmp	 SHORT $LN1@GetAssocAt
$LN6@GetAssocAt:

; 1545 : 	}

  0007e	eb cc		 jmp	 SHORT $LN2@GetAssocAt
$LN3@GetAssocAt:

; 1546 : 	return NULL;

  00080	33 c0		 xor	 eax, eax
$LN1@GetAssocAt:

; 1547 : }

  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 0c 00	 ret	 12			; 0000000cH
?GetAssocAt@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetAssocAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?FreeAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAssoc$ = 8						; size = 4
?FreeAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::FreeAssoc, COMDAT
; _this$ = ecx

; 1516 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1517 : 	pAssoc->CAssoc::~CAssoc();
; 1518 : 	pAssoc->pNext = m_pFreeList;

  0000c	8b 45 08	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00015	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1519 : 	m_pFreeList = pAssoc;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0001e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1520 : 	m_nCount--;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00027	83 e9 01	 sub	 ecx, 1
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1521 : 	ASSERT(m_nCount >= 0);  // make sure we don't underflow

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00037	7d 14		 jge	 SHORT $LN4@FreeAssoc
  00039	68 f1 05 00 00	 push	 1521			; 000005f1H
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00048	85 c0		 test	 eax, eax
  0004a	74 01		 je	 SHORT $LN4@FreeAssoc
  0004c	cc		 int	 3
$LN4@FreeAssoc:

; 1522 : 
; 1523 : 	// if no more elements, cleanup completely
; 1524 : 	if (m_nCount == 0)

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00054	75 08		 jne	 SHORT $LN1@FreeAssoc

; 1525 : 		RemoveAll();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?RemoveAll@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXXZ ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveAll
$LN1@FreeAssoc:

; 1526 : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?FreeAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::FreeAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?NewAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z
_TEXT	SEGMENT
tv88 = -100						; size = 4
$T1 = -96						; size = 4
_pTemp$ = -28						; size = 4
_pAssoc$ = -24						; size = 4
___afx_condVal$2 = -20					; size = 4
_i$3 = -16						; size = 4
_pAssoc$4 = -12						; size = 4
_newBlock$5 = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?NewAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::NewAssoc, COMDAT
; _this$ = ecx

; 1480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1481 : 	if (m_pFreeList == NULL)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	75 72		 jne	 SHORT $LN7@NewAssoc

; 1482 : 	{
; 1483 : 		// add another block
; 1484 : 		CPlex* newBlock = CPlex::Create(m_pBlocks, m_nBlockSize, sizeof(CMap::CAssoc));

  00015	6a 10		 push	 16			; 00000010H
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	51		 push	 ecx
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	83 c2 14	 add	 edx, 20			; 00000014H
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ?Create@CPlex@@SGPAU1@AAPAU1@II@Z ; CPlex::Create
  0002a	89 45 f8	 mov	 DWORD PTR _newBlock$5[ebp], eax

; 1485 : 		// chain them into free list
; 1486 : 		CMap::CAssoc* pAssoc = (CMap::CAssoc*) newBlock->data();

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _newBlock$5[ebp]
  00030	e8 00 00 00 00	 call	 ?data@CPlex@@QAEPAXXZ	; CPlex::data
  00035	89 45 f4	 mov	 DWORD PTR _pAssoc$4[ebp], eax

; 1487 : 		// free in reverse order to make it easier to debug
; 1488 : 		pAssoc += m_nBlockSize - 1;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	83 e9 01	 sub	 ecx, 1
  00041	c1 e1 04	 shl	 ecx, 4
  00044	03 4d f4	 add	 ecx, DWORD PTR _pAssoc$4[ebp]
  00047	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx

; 1489 : 		for (INT_PTR i = m_nBlockSize-1; i >= 0; i--, pAssoc--)

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	83 e9 01	 sub	 ecx, 1
  00053	89 4d f0	 mov	 DWORD PTR _i$3[ebp], ecx
  00056	eb 12		 jmp	 SHORT $LN4@NewAssoc
$LN2@NewAssoc:
  00058	8b 45 f0	 mov	 eax, DWORD PTR _i$3[ebp]
  0005b	83 e8 01	 sub	 eax, 1
  0005e	89 45 f0	 mov	 DWORD PTR _i$3[ebp], eax
  00061	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00064	83 e9 10	 sub	 ecx, 16			; 00000010H
  00067	89 4d f4	 mov	 DWORD PTR _pAssoc$4[ebp], ecx
$LN4@NewAssoc:
  0006a	83 7d f0 00	 cmp	 DWORD PTR _i$3[ebp], 0
  0006e	7c 17		 jl	 SHORT $LN7@NewAssoc

; 1490 : 		{
; 1491 : 			pAssoc->pNext = m_pFreeList;

  00070	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$4[ebp]
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00079	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1492 : 			m_pFreeList = pAssoc;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _pAssoc$4[ebp]
  00082	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 1493 : 		}

  00085	eb d1		 jmp	 SHORT $LN2@NewAssoc
$LN7@NewAssoc:

; 1494 : 	}
; 1495 : 	ENSURE(m_pFreeList != NULL);  // we must have something

  00087	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0008e	74 09		 je	 SHORT $LN11@NewAssoc
  00090	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  00097	eb 07		 jmp	 SHORT $LN12@NewAssoc
$LN11@NewAssoc:
  00099	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN12@NewAssoc:
  000a0	8b 4d 9c	 mov	 ecx, DWORD PTR tv88[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR ___afx_condVal$2[ebp], ecx
  000a6	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000aa	75 14		 jne	 SHORT $LN13@NewAssoc
  000ac	68 d7 05 00 00	 push	 1495			; 000005d7H
  000b1	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000bb	85 c0		 test	 eax, eax
  000bd	74 01		 je	 SHORT $LN13@NewAssoc
  000bf	cc		 int	 3
$LN13@NewAssoc:
  000c0	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  000c4	75 05		 jne	 SHORT $LN5@NewAssoc
  000c6	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@NewAssoc:
  000cb	33 c0		 xor	 eax, eax
  000cd	75 b8		 jne	 SHORT $LN7@NewAssoc

; 1496 : 
; 1497 : 	CMap::CAssoc* pAssoc = m_pFreeList;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000d5	89 4d e8	 mov	 DWORD PTR _pAssoc$[ebp], ecx

; 1498 : 
; 1499 : 	// zero the memory
; 1500 : 	CMap::CAssoc* pTemp = pAssoc->pNext;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000db	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000de	89 4d e4	 mov	 DWORD PTR _pTemp$[ebp], ecx

; 1501 : 	memset( pAssoc, 0, sizeof(CMap::CAssoc) );

  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 00		 push	 0
  000e5	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 _memset
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1502 : 	pAssoc->pNext = pTemp;

  000f1	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000f4	8b 4d e4	 mov	 ecx, DWORD PTR _pTemp$[ebp]
  000f7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1503 : 
; 1504 : 	m_pFreeList = m_pFreeList->pNext;

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fd	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00100	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00103	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00106	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 1505 : 	m_nCount++;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0010f	83 c1 01	 add	 ecx, 1
  00112	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00115	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1506 : 	ASSERT(m_nCount > 0);  // make sure we don't overflow

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0011f	7f 14		 jg	 SHORT $LN14@NewAssoc
  00121	68 e2 05 00 00	 push	 1506			; 000005e2H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0012b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00130	85 c0		 test	 eax, eax
  00132	74 01		 je	 SHORT $LN14@NewAssoc
  00134	cc		 int	 3
$LN14@NewAssoc:

; 1507 : #pragma push_macro("new")
; 1508 : #undef new
; 1509 : 	::new(pAssoc) CMap::CAssoc(key);

  00135	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00138	50		 push	 eax
  00139	6a 10		 push	 16			; 00000010H
  0013b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00140	83 c4 08	 add	 esp, 8
  00143	89 45 a0	 mov	 DWORD PTR $T1[ebp], eax
  00146	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  00149	51		 push	 ecx
  0014a	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp]
  0014d	e8 00 00 00 00	 call	 ??0CAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@K@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CAssoc::CAssoc

; 1510 : #pragma pop_macro("new")
; 1511 : 	return pAssoc;

  00152	8b 45 e8	 mov	 eax, DWORD PTR _pAssoc$[ebp]
$LN10@NewAssoc:

; 1512 : }

  00155	5f		 pop	 edi
  00156	5e		 pop	 esi
  00157	5b		 pop	 ebx
  00158	8b e5		 mov	 esp, ebp
  0015a	5d		 pop	 ebp
  0015b	c2 04 00	 ret	 4
?NewAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::NewAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?InitHashTable@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXIH@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
___afx_condVal$3 = -8					; size = 4
_this$ = -4						; size = 4
_nHashSize$ = 8						; size = 4
_bAllocNow$ = 12					; size = 4
?InitHashTable@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXIH@Z PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::InitHashTable, COMDAT
; _this$ = ecx

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1421 : 	ASSERT_VALID(this);

  0000c	68 8d 05 00 00	 push	 1421			; 0000058dH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1422 : 	ASSERT(m_nCount == 0);

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00026	74 14		 je	 SHORT $LN9@InitHashTa
  00028	68 8e 05 00 00	 push	 1422			; 0000058eH
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00032	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00037	85 c0		 test	 eax, eax
  00039	74 01		 je	 SHORT $LN9@InitHashTa
  0003b	cc		 int	 3
$LN9@InitHashTa:

; 1423 : 	ASSERT(nHashSize > 0);

  0003c	83 7d 08 00	 cmp	 DWORD PTR _nHashSize$[ebp], 0
  00040	77 14		 ja	 SHORT $LN10@InitHashTa
  00042	68 8f 05 00 00	 push	 1423			; 0000058fH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN10@InitHashTa
  00055	cc		 int	 3
$LN10@InitHashTa:

; 1424 : 
; 1425 : 	if (m_pHashTable != NULL)

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0005d	74 1f		 je	 SHORT $LN5@InitHashTa

; 1426 : 	{
; 1427 : 		// free hash table
; 1428 : 		delete[] m_pHashTable;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d b4	 mov	 DWORD PTR $T2[ebp], ecx
  00068	8b 55 b4	 mov	 edx, DWORD PTR $T2[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00071	83 c4 04	 add	 esp, 4

; 1429 : 		m_pHashTable = NULL;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN5@InitHashTa:

; 1430 : 	}
; 1431 : 
; 1432 : 	if (bAllocNow)

  0007e	83 7d 0c 00	 cmp	 DWORD PTR _bAllocNow$[ebp], 0
  00082	0f 84 92 00 00
	00		 je	 $LN6@InitHashTa

; 1433 : 	{
; 1434 : 		m_pHashTable = new CAssoc* [nHashSize];

  00088	68 9a 05 00 00	 push	 1434			; 0000059aH
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00092	33 c9		 xor	 ecx, ecx
  00094	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00097	ba 04 00 00 00	 mov	 edx, 4
  0009c	f7 e2		 mul	 edx
  0009e	0f 90 c1	 seto	 cl
  000a1	f7 d9		 neg	 ecx
  000a3	0b c8		 or	 ecx, eax
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??_U@YAPAXIPBDH@Z	; operator new[]
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  000b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@InitHashTa:

; 1435 : 		ENSURE(m_pHashTable != NULL);

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000c1	74 09		 je	 SHORT $LN11@InitHashTa
  000c3	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  000ca	eb 07		 jmp	 SHORT $LN12@InitHashTa
$LN11@InitHashTa:
  000cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN12@InitHashTa:
  000d3	8b 4d ac	 mov	 ecx, DWORD PTR tv137[ebp]
  000d6	89 4d f8	 mov	 DWORD PTR ___afx_condVal$3[ebp], ecx
  000d9	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000dd	75 14		 jne	 SHORT $LN13@InitHashTa
  000df	68 9b 05 00 00	 push	 1435			; 0000059bH
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000e9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ee	85 c0		 test	 eax, eax
  000f0	74 01		 je	 SHORT $LN13@InitHashTa
  000f2	cc		 int	 3
$LN13@InitHashTa:
  000f3	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$3[ebp], 0
  000f7	75 05		 jne	 SHORT $LN2@InitHashTa
  000f9	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@InitHashTa:
  000fe	33 c0		 xor	 eax, eax
  00100	75 b8		 jne	 SHORT $LN4@InitHashTa

; 1436 : 		memset(m_pHashTable, 0, sizeof(CAssoc*) * nHashSize);

  00102	8b 45 08	 mov	 eax, DWORD PTR _nHashSize$[ebp]
  00105	c1 e0 02	 shl	 eax, 2
  00108	50		 push	 eax
  00109	6a 00		 push	 0
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00111	52		 push	 edx
  00112	e8 00 00 00 00	 call	 _memset
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@InitHashTa:

; 1437 : 	}
; 1438 : 	m_nHashTableSize = nHashSize;

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 4d 08	 mov	 ecx, DWORD PTR _nHashSize$[ebp]
  00120	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN8@InitHashTa:

; 1439 : }

  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
?InitHashTable@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXIH@Z ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::InitHashTable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetNextAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCGlobalUserItem@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
tv83 = -100						; size = 4
tv73 = -100						; size = 4
_nBucket$1 = -32					; size = 4
_pAssocNext$ = -28					; size = 4
___afx_condVal$2 = -24					; size = 4
_nBucket$3 = -20					; size = 4
___afx_condVal$4 = -16					; size = 4
_pAssocRet$ = -12					; size = 4
___afx_condVal$5 = -8					; size = 4
_this$ = -4						; size = 4
_rNextPosition$ = 8					; size = 4
_rKey$ = 12						; size = 4
_rValue$ = 16						; size = 4
?GetNextAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCGlobalUserItem@@@Z PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetNextAssoc, COMDAT
; _this$ = ecx

; 1640 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 	ASSERT_VALID(this);

  0000c	68 69 06 00 00	 push	 1641			; 00000669H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject
$LN4@GetNextAss:

; 1642 : 	ENSURE(m_pHashTable != NULL);  // never call on empty map

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 09		 je	 SHORT $LN25@GetNextAss
  00028	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  0002f	eb 07		 jmp	 SHORT $LN26@GetNextAss
$LN25@GetNextAss:
  00031	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN26@GetNextAss:
  00038	8b 4d 9c	 mov	 ecx, DWORD PTR tv73[ebp]
  0003b	89 4d f8	 mov	 DWORD PTR ___afx_condVal$5[ebp], ecx
  0003e	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  00042	75 14		 jne	 SHORT $LN27@GetNextAss
  00044	68 6a 06 00 00	 push	 1642			; 0000066aH
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00053	85 c0		 test	 eax, eax
  00055	74 01		 je	 SHORT $LN27@GetNextAss
  00057	cc		 int	 3
$LN27@GetNextAss:
  00058	83 7d f8 00	 cmp	 DWORD PTR ___afx_condVal$5[ebp], 0
  0005c	75 05		 jne	 SHORT $LN2@GetNextAss
  0005e	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@GetNextAss:
  00063	33 c0		 xor	 eax, eax
  00065	75 b8		 jne	 SHORT $LN4@GetNextAss

; 1643 : 
; 1644 : 	CAssoc* pAssocRet = (CAssoc*)rNextPosition;

  00067	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	89 4d f4	 mov	 DWORD PTR _pAssocRet$[ebp], ecx
$LN7@GetNextAss:

; 1645 : 	ENSURE(pAssocRet != NULL);

  0006f	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  00073	74 09		 je	 SHORT $LN28@GetNextAss
  00075	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  0007c	eb 07		 jmp	 SHORT $LN29@GetNextAss
$LN28@GetNextAss:
  0007e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN29@GetNextAss:
  00085	8b 45 9c	 mov	 eax, DWORD PTR tv83[ebp]
  00088	89 45 f0	 mov	 DWORD PTR ___afx_condVal$4[ebp], eax
  0008b	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  0008f	75 14		 jne	 SHORT $LN30@GetNextAss
  00091	68 6d 06 00 00	 push	 1645			; 0000066dH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0009b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a0	85 c0		 test	 eax, eax
  000a2	74 01		 je	 SHORT $LN30@GetNextAss
  000a4	cc		 int	 3
$LN30@GetNextAss:
  000a5	83 7d f0 00	 cmp	 DWORD PTR ___afx_condVal$4[ebp], 0
  000a9	75 05		 jne	 SHORT $LN5@GetNextAss
  000ab	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@GetNextAss:
  000b0	33 c0		 xor	 eax, eax
  000b2	75 bb		 jne	 SHORT $LN7@GetNextAss

; 1646 : 
; 1647 : 	if (pAssocRet == (CAssoc*) BEFORE_START_POSITION)

  000b4	83 7d f4 ff	 cmp	 DWORD PTR _pAssocRet$[ebp], -1
  000b8	75 7b		 jne	 SHORT $LN19@GetNextAss

; 1648 : 	{
; 1649 : 		// find the first association
; 1650 : 		for (UINT nBucket = 0; nBucket < m_nHashTableSize; nBucket++)

  000ba	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _nBucket$3[ebp], 0
  000c1	eb 09		 jmp	 SHORT $LN10@GetNextAss
$LN8@GetNextAss:
  000c3	8b 45 ec	 mov	 eax, DWORD PTR _nBucket$3[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 ec	 mov	 DWORD PTR _nBucket$3[ebp], eax
$LN10@GetNextAss:
  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 4d ec	 mov	 ecx, DWORD PTR _nBucket$3[ebp]
  000d2	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  000d5	73 19		 jae	 SHORT $LN13@GetNextAss

; 1651 : 		{
; 1652 : 			if ((pAssocRet = m_pHashTable[nBucket]) != NULL)

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000dd	8b 55 ec	 mov	 edx, DWORD PTR _nBucket$3[ebp]
  000e0	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000e3	89 45 f4	 mov	 DWORD PTR _pAssocRet$[ebp], eax
  000e6	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000ea	74 02		 je	 SHORT $LN20@GetNextAss

; 1653 : 			{
; 1654 : 				break;

  000ec	eb 02		 jmp	 SHORT $LN13@GetNextAss
$LN20@GetNextAss:

; 1655 : 			}
; 1656 : 		}

  000ee	eb d3		 jmp	 SHORT $LN8@GetNextAss
$LN13@GetNextAss:

; 1657 : 		ENSURE(pAssocRet != NULL);  // must find something

  000f0	83 7d f4 00	 cmp	 DWORD PTR _pAssocRet$[ebp], 0
  000f4	74 09		 je	 SHORT $LN31@GetNextAss
  000f6	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv133[ebp], 1
  000fd	eb 07		 jmp	 SHORT $LN32@GetNextAss
$LN31@GetNextAss:
  000ff	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN32@GetNextAss:
  00106	8b 45 9c	 mov	 eax, DWORD PTR tv133[ebp]
  00109	89 45 e8	 mov	 DWORD PTR ___afx_condVal$2[ebp], eax
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  00110	75 14		 jne	 SHORT $LN33@GetNextAss
  00112	68 79 06 00 00	 push	 1657			; 00000679H
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0011c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00121	85 c0		 test	 eax, eax
  00123	74 01		 je	 SHORT $LN33@GetNextAss
  00125	cc		 int	 3
$LN33@GetNextAss:
  00126	83 7d e8 00	 cmp	 DWORD PTR ___afx_condVal$2[ebp], 0
  0012a	75 05		 jne	 SHORT $LN11@GetNextAss
  0012c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN11@GetNextAss:
  00131	33 c0		 xor	 eax, eax
  00133	75 bb		 jne	 SHORT $LN13@GetNextAss
$LN19@GetNextAss:

; 1658 : 	}
; 1659 : 
; 1660 : 	// find next association
; 1661 : 	ASSERT(AfxIsValidAddress(pAssocRet, sizeof(CAssoc)));

  00135	6a 01		 push	 1
  00137	6a 10		 push	 16			; 00000010H
  00139	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?AfxIsValidAddress@@YGHPBXIH@Z ; AfxIsValidAddress
  00142	85 c0		 test	 eax, eax
  00144	75 14		 jne	 SHORT $LN34@GetNextAss
  00146	68 7d 06 00 00	 push	 1661			; 0000067dH
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00150	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00155	85 c0		 test	 eax, eax
  00157	74 01		 je	 SHORT $LN34@GetNextAss
  00159	cc		 int	 3
$LN34@GetNextAss:

; 1662 : 	CAssoc* pAssocNext;
; 1663 : 	if ((pAssocNext = pAssocRet->pNext) == NULL)

  0015a	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0015d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00160	89 4d e4	 mov	 DWORD PTR _pAssocNext$[ebp], ecx
  00163	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  00167	75 43		 jne	 SHORT $LN22@GetNextAss

; 1664 : 	{
; 1665 : 		// go to next bucket
; 1666 : 		for (UINT nBucket = (pAssocRet->nHashValue % m_nHashTableSize) + 1;

  00169	8b 45 f4	 mov	 eax, DWORD PTR _pAssocRet$[ebp]
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00172	33 d2		 xor	 edx, edx
  00174	f7 71 08	 div	 DWORD PTR [ecx+8]
  00177	83 c2 01	 add	 edx, 1
  0017a	89 55 e0	 mov	 DWORD PTR _nBucket$1[ebp], edx
  0017d	eb 09		 jmp	 SHORT $LN16@GetNextAss
$LN14@GetNextAss:

; 1667 : 		  nBucket < m_nHashTableSize; nBucket++)

  0017f	8b 45 e0	 mov	 eax, DWORD PTR _nBucket$1[ebp]
  00182	83 c0 01	 add	 eax, 1
  00185	89 45 e0	 mov	 DWORD PTR _nBucket$1[ebp], eax
$LN16@GetNextAss:
  00188	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018b	8b 4d e0	 mov	 ecx, DWORD PTR _nBucket$1[ebp]
  0018e	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00191	73 19		 jae	 SHORT $LN22@GetNextAss

; 1668 : 			if ((pAssocNext = m_pHashTable[nBucket]) != NULL)

  00193	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00196	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00199	8b 55 e0	 mov	 edx, DWORD PTR _nBucket$1[ebp]
  0019c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0019f	89 45 e4	 mov	 DWORD PTR _pAssocNext$[ebp], eax
  001a2	83 7d e4 00	 cmp	 DWORD PTR _pAssocNext$[ebp], 0
  001a6	74 02		 je	 SHORT $LN23@GetNextAss

; 1669 : 				break;

  001a8	eb 02		 jmp	 SHORT $LN22@GetNextAss
$LN23@GetNextAss:

; 1670 : 	}

  001aa	eb d3		 jmp	 SHORT $LN14@GetNextAss
$LN22@GetNextAss:

; 1671 : 
; 1672 : 	rNextPosition = (POSITION) pAssocNext;

  001ac	8b 45 08	 mov	 eax, DWORD PTR _rNextPosition$[ebp]
  001af	8b 4d e4	 mov	 ecx, DWORD PTR _pAssocNext$[ebp]
  001b2	89 08		 mov	 DWORD PTR [eax], ecx

; 1673 : 
; 1674 : 	// fill in return data
; 1675 : 	rKey = pAssocRet->key;

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _rKey$[ebp]
  001b7	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001ba	8b 11		 mov	 edx, DWORD PTR [ecx]
  001bc	89 10		 mov	 DWORD PTR [eax], edx

; 1676 : 	rValue = pAssocRet->value;

  001be	8b 45 10	 mov	 eax, DWORD PTR _rValue$[ebp]
  001c1	8b 4d f4	 mov	 ecx, DWORD PTR _pAssocRet$[ebp]
  001c4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c7	89 10		 mov	 DWORD PTR [eax], edx
$LN24@GetNextAss:

; 1677 : }

  001c9	5f		 pop	 edi
  001ca	5e		 pop	 esi
  001cb	5b		 pop	 ebx
  001cc	8b e5		 mov	 esp, ebp
  001ce	5d		 pop	 ebp
  001cf	c2 0c 00	 ret	 12			; 0000000cH
?GetNextAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEXAAPAU__POSITION@@AAKAAPAVCGlobalUserItem@@@Z ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetNextAssoc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?GetStartPosition@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?GetStartPosition@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEPAU__POSITION@@XZ PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetStartPosition, COMDAT
; _this$ = ecx

; 1354 : 	{ return (m_nCount == 0) ? NULL : BEFORE_START_POSITION; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00013	75 09		 jne	 SHORT $LN3@GetStartPo
  00015	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  0001c	eb 07		 jmp	 SHORT $LN4@GetStartPo
$LN3@GetStartPo:
  0001e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv66[ebp], -1
$LN4@GetStartPo:
  00025	8b 45 b8	 mov	 eax, DWORD PTR tv66[ebp]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetStartPosition@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEPAU__POSITION@@XZ ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetStartPosition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveAll@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_pAssoc$2 = -12						; size = 4
_nHash$3 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXXZ PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveAll, COMDAT
; _this$ = ecx

; 1443 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1444 : 	ASSERT_VALID(this);

  0000c	68 a4 05 00 00	 push	 1444			; 000005a4H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1445 : 
; 1446 : 	if (m_pHashTable != NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	74 60		 je	 SHORT $LN8@RemoveAll

; 1447 : 	{
; 1448 : 		// destroy elements (values and keys)
; 1449 : 		for (UINT nHash = 0; nHash < m_nHashTableSize; nHash++)

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _nHash$3[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00031	8b 45 f8	 mov	 eax, DWORD PTR _nHash$3[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR _nHash$3[ebp], eax
$LN4@RemoveAll:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _nHash$3[ebp]
  00040	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00043	73 24		 jae	 SHORT $LN3@RemoveAll

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	8b 55 f8	 mov	 edx, DWORD PTR _nHash$3[ebp]
  0004e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00051	89 45 f4	 mov	 DWORD PTR _pAssoc$2[ebp], eax
  00054	eb 09		 jmp	 SHORT $LN7@RemoveAll
$LN5@RemoveAll:

; 1453 : 			  pAssoc = pAssoc->pNext)

  00056	8b 45 f4	 mov	 eax, DWORD PTR _pAssoc$2[ebp]
  00059	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005c	89 4d f4	 mov	 DWORD PTR _pAssoc$2[ebp], ecx
$LN7@RemoveAll:

; 1450 : 		{
; 1451 : 			CAssoc* pAssoc;
; 1452 : 			for (pAssoc = m_pHashTable[nHash]; pAssoc != NULL;

  0005f	83 7d f4 00	 cmp	 DWORD PTR _pAssoc$2[ebp], 0
  00063	74 02		 je	 SHORT $LN6@RemoveAll

; 1454 : 			{
; 1455 : 				pAssoc->CAssoc::~CAssoc();
; 1456 : 			}

  00065	eb ef		 jmp	 SHORT $LN5@RemoveAll
$LN6@RemoveAll:

; 1457 : 		}

  00067	eb c8		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 1458 : 
; 1459 : 		// free hash table
; 1460 : 		delete[] m_pHashTable;

  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006f	89 4d b0	 mov	 DWORD PTR $T1[ebp], ecx
  00072	8b 55 b0	 mov	 edx, DWORD PTR $T1[ebp]
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0007b	83 c4 04	 add	 esp, 4

; 1461 : 		m_pHashTable = NULL;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN8@RemoveAll:

; 1462 : 	}
; 1463 : 
; 1464 : 	m_nCount = 0;

  00088	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1465 : 	m_pFreeList = NULL;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1466 : 	m_pBlocks->FreeDataChain();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a2	e8 00 00 00 00	 call	 ?FreeDataChain@CPlex@@QAEXXZ ; CPlex::FreeDataChain

; 1467 : 	m_pBlocks = NULL;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1468 : }

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?RemoveAll@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXXZ ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?RemoveKey@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEHK@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_ppAssocPrev$ = -12					; size = 4
_nHashValue$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?RemoveKey@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEHK@Z PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveKey, COMDAT
; _this$ = ecx

; 1611 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1612 : 	ASSERT_VALID(this);

  0000c	68 4c 06 00 00	 push	 1612			; 0000064cH
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1613 : 
; 1614 : 	if (m_pHashTable == NULL)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00026	75 07		 jne	 SHORT $LN5@RemoveKey

; 1615 : 		return FALSE;  // nothing in the table

  00028	33 c0		 xor	 eax, eax
  0002a	e9 83 00 00 00	 jmp	 $LN1@RemoveKey
$LN5@RemoveKey:

; 1616 : 
; 1617 : 	UINT nHashValue;
; 1618 : 	CAssoc** ppAssocPrev;
; 1619 : 	nHashValue = HashKey<ARG_KEY>(key);

  0002f	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$HashKey@K@@YGIK@Z	; HashKey<unsigned long>
  00038	89 45 f8	 mov	 DWORD PTR _nHashValue$[ebp], eax

; 1620 : 	ppAssocPrev = &m_pHashTable[nHashValue%m_nHashTableSize];

  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _nHashValue$[ebp]
  00041	33 d2		 xor	 edx, edx
  00043	f7 71 08	 div	 DWORD PTR [ecx+8]
  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004c	8d 14 91	 lea	 edx, DWORD PTR [ecx+edx*4]
  0004f	89 55 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], edx

; 1621 : 
; 1622 : 	CAssoc* pAssoc;
; 1623 : 	for (pAssoc = *ppAssocPrev; pAssoc != NULL; pAssoc = pAssoc->pNext)

  00052	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  00055	8b 08		 mov	 ecx, DWORD PTR [eax]
  00057	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
  0005a	eb 09		 jmp	 SHORT $LN4@RemoveKey
$LN2@RemoveKey:
  0005c	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0005f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00062	89 4d f0	 mov	 DWORD PTR _pAssoc$[ebp], ecx
$LN4@RemoveKey:
  00065	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  00069	74 45		 je	 SHORT $LN3@RemoveKey

; 1624 : 	{
; 1625 : 		if ((pAssoc->nHashValue == nHashValue) && CompareElements(&pAssoc->key, &key))

  0006b	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  0006e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00071	3b 4d f8	 cmp	 ecx, DWORD PTR _nHashValue$[ebp]
  00074	75 2f		 jne	 SHORT $LN6@RemoveKey
  00076	8d 45 08	 lea	 eax, DWORD PTR _key$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ??$CompareElements@KK@@YGHPBK0@Z ; CompareElements<unsigned long,unsigned long>
  00083	85 c0		 test	 eax, eax
  00085	74 1e		 je	 SHORT $LN6@RemoveKey

; 1626 : 		{
; 1627 : 			// remove it
; 1628 : 			*ppAssocPrev = pAssoc->pNext;  // remove from list

  00087	8b 45 f4	 mov	 eax, DWORD PTR _ppAssocPrev$[ebp]
  0008a	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  0008d	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00090	89 10		 mov	 DWORD PTR [eax], edx

; 1629 : 			FreeAssoc(pAssoc);

  00092	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  00095	50		 push	 eax
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	e8 00 00 00 00	 call	 ?FreeAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAEXPAVCAssoc@1@@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::FreeAssoc

; 1630 : 			return TRUE;

  0009e	b8 01 00 00 00	 mov	 eax, 1
  000a3	eb 0d		 jmp	 SHORT $LN1@RemoveKey
$LN6@RemoveKey:

; 1631 : 		}
; 1632 : 		ppAssocPrev = &pAssoc->pNext;

  000a5	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000a8	83 c0 08	 add	 eax, 8
  000ab	89 45 f4	 mov	 DWORD PTR _ppAssocPrev$[ebp], eax

; 1633 : 	}

  000ae	eb ac		 jmp	 SHORT $LN2@RemoveKey
$LN3@RemoveKey:

; 1634 : 	return FALSE;  // not found

  000b0	33 c0		 xor	 eax, eax
$LN1@RemoveKey:

; 1635 : }

  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 04 00	 ret	 4
?RemoveKey@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEHK@Z ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::RemoveKey
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?SetAt@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXKPAVCGlobalUserItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_newValue$ = 12						; size = 4
?SetAt@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXKPAVCGlobalUserItem@@@Z PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::SetAt, COMDAT
; _this$ = ecx

; 1350 : 	{ (*this)[key] = newValue; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??A?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEAAPAVCGlobalUserItem@@K@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::operator[]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _newValue$[ebp]
  0001b	89 08		 mov	 DWORD PTR [eax], ecx
  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
?SetAt@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXKPAVCGlobalUserItem@@@Z ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::SetAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??A?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEAAPAVCGlobalUserItem@@K@Z
_TEXT	SEGMENT
tv85 = -88						; size = 4
___afx_condVal$1 = -20					; size = 4
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
??A?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEAAPAVCGlobalUserItem@@K@Z PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::operator[], COMDAT
; _this$ = ecx

; 1585 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1586 : 	ASSERT_VALID(this);

  0000c	68 32 06 00 00	 push	 1586			; 00000632H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1587 : 
; 1588 : 	UINT nHashBucket, nHashValue;
; 1589 : 	CAssoc* pAssoc;
; 1590 : 	if ((pAssoc = GetAssocAt(key, nHashBucket, nHashValue)) == NULL)

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0002a	52		 push	 edx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetAssocAt
  00033	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax
  00036	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003a	0f 85 9b 00 00
	00		 jne	 $LN5@operator

; 1591 : 	{
; 1592 : 		if (m_pHashTable == NULL)

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00047	75 11		 jne	 SHORT $LN4@operator

; 1593 : 			InitHashTable(m_nHashTableSize);

  00049	6a 01		 push	 1
  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00051	51		 push	 ecx
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?InitHashTable@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEXIH@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::InitHashTable
$LN4@operator:

; 1594 : 
; 1595 : 		ENSURE(m_pHashTable);

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00061	74 09		 je	 SHORT $LN9@operator
  00063	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  0006a	eb 07		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0006c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@operator:
  00073	8b 4d a8	 mov	 ecx, DWORD PTR tv85[ebp]
  00076	89 4d ec	 mov	 DWORD PTR ___afx_condVal$1[ebp], ecx
  00079	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  0007d	75 14		 jne	 SHORT $LN11@operator
  0007f	68 3b 06 00 00	 push	 1595			; 0000063bH
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00089	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0008e	85 c0		 test	 eax, eax
  00090	74 01		 je	 SHORT $LN11@operator
  00092	cc		 int	 3
$LN11@operator:
  00093	83 7d ec 00	 cmp	 DWORD PTR ___afx_condVal$1[ebp], 0
  00097	75 05		 jne	 SHORT $LN2@operator
  00099	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@operator:
  0009e	33 c0		 xor	 eax, eax
  000a0	75 b8		 jne	 SHORT $LN4@operator

; 1596 : 		// it doesn't exist, add a new Association
; 1597 : 		pAssoc = NewAssoc(key);

  000a2	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  000a5	50		 push	 eax
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?NewAssoc@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IAEPAVCAssoc@1@K@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::NewAssoc
  000ae	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1598 : 		pAssoc->nHashValue = nHashValue;

  000b1	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000b4	8b 4d f4	 mov	 ecx, DWORD PTR _nHashValue$[ebp]
  000b7	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1599 : 		//'pAssoc->value' is a constructed object, nothing more
; 1600 : 
; 1601 : 		// put into hash table
; 1602 : 		pAssoc->pNext = m_pHashTable[nHashBucket];

  000ba	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c0	8b 55 f0	 mov	 edx, DWORD PTR _pAssoc$[ebp]
  000c3	8b 45 f8	 mov	 eax, DWORD PTR _nHashBucket$[ebp]
  000c6	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  000c9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1603 : 		m_pHashTable[nHashBucket] = pAssoc;

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d2	8b 55 f8	 mov	 edx, DWORD PTR _nHashBucket$[ebp]
  000d5	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000d8	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN5@operator:

; 1604 : 	}
; 1605 : 	return pAssoc->value;  // return new reference

  000db	8b 45 f0	 mov	 eax, DWORD PTR _pAssoc$[ebp]
  000de	83 c0 04	 add	 eax, 4
$LN8@operator:

; 1606 : }

  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 04 00	 ret	 4
??A?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAEAAPAVCGlobalUserItem@@K@Z ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ?Lookup@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEHKAAPAVCGlobalUserItem@@@Z
_TEXT	SEGMENT
_pAssoc$ = -16						; size = 4
_nHashValue$ = -12					; size = 4
_nHashBucket$ = -8					; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_rValue$ = 12						; size = 4
?Lookup@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEHKAAPAVCGlobalUserItem@@@Z PROC ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::Lookup, COMDAT
; _this$ = ecx

; 1551 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1552 : 	ASSERT_VALID(this);

  0000c	68 10 06 00 00	 push	 1552			; 00000610H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 1553 : 
; 1554 : 	UINT nHashBucket, nHashValue;
; 1555 : 	CAssoc* pAssoc = GetAssocAt(key, nHashBucket, nHashValue);

  0001f	8d 45 f4	 lea	 eax, DWORD PTR _nHashValue$[ebp]
  00022	50		 push	 eax
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _nHashBucket$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0002a	52		 push	 edx
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetAssocAt@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@IBEPAVCAssoc@1@KAAI0@Z ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::GetAssocAt
  00033	89 45 f0	 mov	 DWORD PTR _pAssoc$[ebp], eax

; 1556 : 	if (pAssoc == NULL)

  00036	83 7d f0 00	 cmp	 DWORD PTR _pAssoc$[ebp], 0
  0003a	75 04		 jne	 SHORT $LN2@Lookup

; 1557 : 		return FALSE;  // not in map

  0003c	33 c0		 xor	 eax, eax
  0003e	eb 10		 jmp	 SHORT $LN1@Lookup
$LN2@Lookup:

; 1558 : 
; 1559 : 	rValue = pAssoc->value;

  00040	8b 45 0c	 mov	 eax, DWORD PTR _rValue$[ebp]
  00043	8b 4d f0	 mov	 ecx, DWORD PTR _pAssoc$[ebp]
  00046	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00049	89 10		 mov	 DWORD PTR [eax], edx

; 1560 : 	return TRUE;

  0004b	b8 01 00 00 00	 mov	 eax, 1
$LN1@Lookup:

; 1561 : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
?Lookup@?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QBEHKAAPAVCGlobalUserItem@@@Z ENDP ; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::Lookup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nBlockSize$ = 8					; size = 4
??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z PROC	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>, COMDAT
; _this$ = ecx

; 1403 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0CObject@@IAE@XZ	; CObject::CObject
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CMap@KKPAVCGlobalUserItem@@PAV1@@@6B@

; 1404 : 	ASSERT(nBlockSize > 0);

  00043	83 7d 08 00	 cmp	 DWORD PTR _nBlockSize$[ebp], 0
  00047	7f 14		 jg	 SHORT $LN3@CMap
  00049	68 7c 05 00 00	 push	 1404			; 0000057cH
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0HC@HBCNBCLF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00053	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00058	85 c0		 test	 eax, eax
  0005a	74 01		 je	 SHORT $LN3@CMap
  0005c	cc		 int	 3
$LN3@CMap:

; 1405 : 
; 1406 : 	m_pHashTable = NULL;

  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 1407 : 	m_nHashTableSize = 17;  // default size

  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	c7 40 08 11 00
	00 00		 mov	 DWORD PTR [eax+8], 17	; 00000011H

; 1408 : 	m_nCount = 0;

  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 1409 : 	m_pFreeList = NULL;

  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 1410 : 	m_pBlocks = NULL;

  00085	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00088	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1411 : 	m_nBlockSize = nBlockSize;

  0008f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _nBlockSize$[ebp]
  00095	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 1412 : }

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CObject@@UAE@XZ	; CObject::~CObject
__ehhandler$??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CMap@KKPAVCGlobalUserItem@@PAV1@@@QAE@H@Z ENDP	; CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>::CMap<unsigned long,unsigned long,CGlobalUserItem *,CGlobalUserItem *>
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCGlobalUserItem@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCGlobalUserItem@@MAEPAXI@Z PROC			; CGlobalUserItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CGlobalUserItem@@MAE@XZ ; CGlobalUserItem::~CGlobalUserItem
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 58 01 00 00	 push	 344			; 00000158H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCGlobalUserItem@@MAEPAXI@Z ENDP			; CGlobalUserItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?EnumServerItem@CGlobalUserItem@@QAEPAVCGlobalServerItem@@G@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wIndex$ = 8						; size = 2
?EnumServerItem@CGlobalUserItem@@QAEPAVCGlobalServerItem@@G@Z PROC ; CGlobalUserItem::EnumServerItem, COMDAT
; _this$ = ecx

; 38   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 39   : 	if (wIndex>=m_GlobalServerItemArray.GetCount()) return NULL;

  0000c	0f b7 75 08	 movzx	 esi, WORD PTR _wIndex$[ebp]
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  00019	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QBEHXZ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::GetCount
  0001e	3b f0		 cmp	 esi, eax
  00020	7c 04		 jl	 SHORT $LN2@EnumServer
  00022	33 c0		 xor	 eax, eax
  00024	eb 15		 jmp	 SHORT $LN1@EnumServer
$LN2@EnumServer:

; 40   : 	return m_GlobalServerItemArray[wIndex];

  00026	0f b7 45 08	 movzx	 eax, WORD PTR _wIndex$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  00034	e8 00 00 00 00	 call	 ??A?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEAAPAVCGlobalServerItem@@H@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::operator[]
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1@EnumServer:

; 41   : }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?EnumServerItem@CGlobalUserItem@@QAEPAVCGlobalServerItem@@G@Z ENDP ; CGlobalUserItem::EnumServerItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?UpdateStatus@CGlobalUserItem@@QAEXGGE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wTableID$ = 8						; size = 2
_wChairID$ = 12						; size = 2
_cbUserStatus$ = 16					; size = 1
?UpdateStatus@CGlobalUserItem@@QAEXGGE@Z PROC		; CGlobalUserItem::UpdateStatus, COMDAT
; _this$ = ecx

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 31   : 	m_UserInfo.wTableID = wTableID;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 4d 08	 mov	 cx, WORD PTR _wTableID$[ebp]
  00013	66 89 88 c0 00
	00 00		 mov	 WORD PTR [eax+192], cx

; 32   : 	m_UserInfo.wChairID = wChairID;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	66 8b 4d 0c	 mov	 cx, WORD PTR _wChairID$[ebp]
  00021	66 89 88 c4 00
	00 00		 mov	 WORD PTR [eax+196], cx

; 33   : 	m_UserInfo.cbUserStatus = cbUserStatus;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8a 4d 10	 mov	 cl, BYTE PTR _cbUserStatus$[ebp]
  0002e	88 88 c6 00 00
	00		 mov	 BYTE PTR [eax+198], cl

; 34   : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 0c 00	 ret	 12			; 0000000cH
?UpdateStatus@CGlobalUserItem@@QAEXGGE@Z ENDP		; CGlobalUserItem::UpdateStatus
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetNickName@CGlobalUserItem@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNickName@CGlobalUserItem@@QAEPBDXZ PROC		; CGlobalUserItem::GetNickName, COMDAT
; _this$ = ecx

; 110  : 	LPCTSTR GetNickName() { return m_szNickName; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetNickName@CGlobalUserItem@@QAEPBDXZ ENDP		; CGlobalUserItem::GetNickName
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetGameID@CGlobalUserItem@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameID@CGlobalUserItem@@QAEKXZ PROC			; CGlobalUserItem::GetGameID, COMDAT
; _this$ = ecx

; 108  : 	DWORD GetGameID() { return m_dwGameID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetGameID@CGlobalUserItem@@QAEKXZ ENDP			; CGlobalUserItem::GetGameID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ??1CGlobalUserItem@@MAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CGlobalUserItem@@MAE@XZ PROC				; CGlobalUserItem::~CGlobalUserItem, COMDAT
; _this$ = ecx

; 26   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGlobalUserItem@@6B@

; 27   : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  0001e	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@UAE@XZ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::~CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??1CGlobalUserItem@@MAE@XZ ENDP				; CGlobalUserItem::~CGlobalUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ??0CGlobalUserItem@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CGlobalUserItem@@IAE@XZ PROC				; CGlobalUserItem::CGlobalUserItem, COMDAT
; _this$ = ecx

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGlobalUserItem@@6B@
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  0001e	e8 00 00 00 00	 call	 ??0?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAE@XZ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>

; 9    : 	//用户属性
; 10   : 	m_dwUserID=0L;

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 11   : 	m_dwGameID=0L;

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 12   : 	m_szNickName[0]=0;

  00037	b8 01 00 00 00	 mov	 eax, 1
  0003c	6b c8 00	 imul	 ecx, eax, 0
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	c6 44 0a 0c 00	 mov	 BYTE PTR [edx+ecx+12], 0

; 13   : 
; 14   : 	//等级信息
; 15   : 	m_cbMemberOrder=0;

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c6 40 2d 00	 mov	 BYTE PTR [eax+45], 0

; 16   : 	m_cbMasterOrder=0;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	c6 40 2e 00	 mov	 BYTE PTR [eax+46], 0

; 17   : 
; 18   : 	//链表属性
; 19   : 	m_pNextUserItemPtr=NULL;

  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0

; 20   : 
; 21   : 	return;
; 22   : }

  00062	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??0CGlobalUserItem@@IAE@XZ ENDP				; CGlobalUserItem::CGlobalUserItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@UAEPAXI@Z PROC ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@UAE@XZ ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::~CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@UAEPAXI@Z ENDP ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXH@Z PROC ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e dd 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	c1 e0 02	 shl	 eax, 2
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009e	83 c4 04	 add	 esp, 4
  000a1	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a4	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a7	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b0	c1 e1 02	 shl	 ecx, 2
  000b3	51		 push	 ecx
  000b4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _memcpy
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cd	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000d0	c1 e1 02	 shl	 ecx, 2
  000d3	51		 push	 ecx
  000d4	6a 00		 push	 0
  000d6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d9	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000df	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _memset
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000eb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000f1	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f4	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fd	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  00100	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00106	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00109	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXH@Z ENDP ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEAAPAVCGlobalServerItem@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEAAPAVCGlobalServerItem@@H@Z PROC ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEAAPAVCGlobalServerItem@@H@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEAAPAVCGlobalServerItem@@H@Z ENDP ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXXZ PROC ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 44		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	c1 e1 02	 shl	 ecx, 2
  0003d	51		 push	 ecx
  0003e	6a 00		 push	 0
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXXZ ENDP ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXHH@Z PROC ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2f		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	50		 push	 eax
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c1	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c4	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000c7	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000ca	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000cd	50		 push	 eax
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d7	8d 0c 82	 lea	 ecx, DWORD PTR [edx+eax*4]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _memmove
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e9	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000ec	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXHH@Z ENDP ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXHABQAVCGlobalServerItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXHABQAVCGlobalServerItem@@@Z PROC ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXH@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	8b 00		 mov	 eax, DWORD PTR [eax]
  0005c	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXHABQAVCGlobalServerItem@@@Z ENDP ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXH@Z PROC ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXH@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  00070	50		 push	 eax
  00071	6a 04		 push	 4
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4d		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 42		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	51		 push	 ecx
  000b8	6a 00		 push	 0
  000ba	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bd	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c3	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d5	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
?SetSize@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXH@Z ENDP ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEAAPAVCGlobalServerItem@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEAAPAVCGlobalServerItem@@H@Z PROC ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEAAPAVCGlobalServerItem@@H@Z ENDP ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEHABQAVCGlobalServerItem@@@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEHABQAVCGlobalServerItem@@@Z PROC ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEXHABQAVCGlobalServerItem@@@Z ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAEHABQAVCGlobalServerItem@@@Z ENDP ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QBEHXZ PROC ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QBEHXZ ENDP ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@UAE@XZ PROC ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::~CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@UAE@XZ ENDP ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::~CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAE@XZ PROC ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@PAVCGlobalServerItem@@ABQAV1@@@QAE@XZ ENDP ; CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>::CWHArray<CGlobalServerItem *,CGlobalServerItem * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 1573 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1574 : 	return (static_cast<_Ty&&>(_Arg));

  00009	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1575 : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Ptr$ = -12						; size = 4
__Ptr_container$ = -8					; size = 4
__Block_size$ = -4					; size = 4
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 92   : 	{	// allocate _Bytes manually aligned to at least _Big_allocation_alignment

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 93   : 	size_t _Block_size = _Non_user_size + _Bytes;

  00009	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  0000c	83 c0 27	 add	 eax, 39			; 00000027H
  0000f	89 45 fc	 mov	 DWORD PTR __Block_size$[ebp], eax

; 94   : 	if (_Block_size <= _Bytes)

  00012	8b 45 fc	 mov	 eax, DWORD PTR __Block_size$[ebp]
  00015	3b 45 08	 cmp	 eax, DWORD PTR __Bytes$[ebp]
  00018	77 07		 ja	 SHORT $LN8@Allocate_m

; 95   : 		{	// add overflow, try allocating all of memory and assume the
; 96   : 			// allocation function will throw bad_alloc
; 97   : 		_Block_size = static_cast<size_t>(-1);

  0001a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __Block_size$[ebp], -1
$LN8@Allocate_m:

; 98   : 		}
; 99   : 
; 100  : 	const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00021	8b 45 fc	 mov	 eax, DWORD PTR __Block_size$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 45 f8	 mov	 DWORD PTR __Ptr_container$[ebp], eax
$LN4@Allocate_m:

; 101  : 	_STL_VERIFY(_Ptr_container != 0, "invalid argument");	// validate even in release since we're doing p[-1]

  00030	83 7d f8 00	 cmp	 DWORD PTR __Ptr_container$[ebp], 0
  00034	74 02		 je	 SHORT $LN7@Allocate_m
  00036	eb 44		 jmp	 SHORT $LN2@Allocate_m
$LN7@Allocate_m:
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00042	6a 00		 push	 0
  00044	6a 65		 push	 101			; 00000065H
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0GJ@FFDBCFBF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0004b	6a 02		 push	 2
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00053	83 c4 18	 add	 esp, 24			; 00000018H
  00056	83 f8 01	 cmp	 eax, 1
  00059	75 01		 jne	 SHORT $LN12@Allocate_m
  0005b	cc		 int	 3
$LN12@Allocate_m:
  0005c	6a 00		 push	 0
  0005e	6a 65		 push	 101			; 00000065H
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1NC@PIOGAKBO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00075	83 c4 14	 add	 esp, 20			; 00000014H
  00078	33 c0		 xor	 eax, eax
  0007a	75 bc		 jne	 SHORT $LN7@Allocate_m
$LN2@Allocate_m:
  0007c	33 c0		 xor	 eax, eax
  0007e	75 b0		 jne	 SHORT $LN4@Allocate_m

; 102  : 	void * const _Ptr = reinterpret_cast<void *>((_Ptr_container + _Non_user_size)
; 103  : 		& ~(_Big_allocation_alignment - 1));

  00080	8b 45 f8	 mov	 eax, DWORD PTR __Ptr_container$[ebp]
  00083	83 c0 27	 add	 eax, 39			; 00000027H
  00086	83 e0 e0	 and	 eax, -32		; ffffffe0H
  00089	89 45 f4	 mov	 DWORD PTR __Ptr$[ebp], eax

; 104  : 	static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  0008c	b8 04 00 00 00	 mov	 eax, 4
  00091	6b c8 ff	 imul	 ecx, eax, -1
  00094	8b 55 f4	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00097	8b 45 f8	 mov	 eax, DWORD PTR __Ptr_container$[ebp]
  0009a	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 105  : 
; 106  :   #ifdef _DEBUG
; 107  : 	static_cast<uintptr_t *>(_Ptr)[-2] = _Big_allocation_sentinel;

  0009d	b8 04 00 00 00	 mov	 eax, 4
  000a2	6b c8 fe	 imul	 ecx, eax, -2
  000a5	8b 55 f4	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000a8	c7 04 0a fa fa
	fa fa		 mov	 DWORD PTR [edx+ecx], -84215046 ; fafafafaH

; 108  :   #endif /* _DEBUG */
; 109  : 	return (_Ptr);

  000af	8b 45 f4	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 110  : 	}

  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Get_size_of_n@$07@std@@YAII@Z
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__Max_possible$ = -4					; size = 4
__Count$ = 8						; size = 4
??$_Get_size_of_n@$07@std@@YAII@Z PROC			; std::_Get_size_of_n<8>, COMDAT

; 23   : 	{	// gets the size of _Count copies of a type sized _Ty_size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 24   : 	constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00009	c7 45 fc ff ff
	ff 1f		 mov	 DWORD PTR __Max_possible$[ebp], 536870911 ; 1fffffffH

; 25   : 	size_t _Result = _Count * _Ty_size;

  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	c1 e0 03	 shl	 eax, 3
  00016	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 26   : 	if (_Max_possible < _Count)

  00019	81 7d 08 ff ff
	ff 1f		 cmp	 DWORD PTR __Count$[ebp], 536870911 ; 1fffffffH
  00020	76 07		 jbe	 SHORT $LN2@Get_size_o

; 27   : 		{	// multiply overflow, try allocating all of memory and assume the
; 28   : 			// allocation function will throw bad_alloc
; 29   : 		_Result = static_cast<size_t>(-1);

  00022	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR __Result$[ebp], -1
$LN2@Get_size_o:

; 30   : 		}
; 31   : 
; 32   : 	return (_Result);

  00029	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 33   : 	}

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Get_size_of_n@$07@std@@YAII@Z ENDP			; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
$T1 = -68						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@$$QAU31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	6a 08		 push	 8
  0000f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00014	83 c4 08	 add	 esp, 8
  00017	89 45 bc	 mov	 DWORD PTR $T1[ebp], eax
  0001a	8b 4d 10	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  00023	83 c4 04	 add	 esp, 4
  00026	8b 10		 mov	 edx, DWORD PTR [eax]
  00028	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002b	8b 4d bc	 mov	 ecx, DWORD PTR $T1[ebp]
  0002e	89 11		 mov	 DWORD PTR [ecx], edx
  00030	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 881  : 			_Objty(_STD forward<_Types>(_Args)...);
; 882  : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 345  : 	{	// do nothing for plain pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 346  : 	return (_Ptr);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 347  : 	}

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>, COMDAT

; 1212 : 	{	// deallocate a plain pointer using an allocator, non-fancy pointers special case

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1213 : 	allocator_traits<_Alloc>::deallocate(_Al, _Ptr, 1);

  00009	6a 01		 push	 1
  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1214 : 	}

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 886  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 887  : 		_Ptr->~_Uty();
; 888  : 		}

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 871  : 		{	// deallocate _Count elements at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 872  : 		// no overflow check on the following multiply; we assume _Allocate did that check
; 873  : 		_Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00009	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  0000c	c1 e0 03	 shl	 eax, 3
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00019	83 c4 08	 add	 esp, 8

; 874  : 		}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 996  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$07@std@@YAII@Z ; std::_Get_size_of_n<8>
  00015	83 c4 04	 add	 esp, 4
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  0001e	83 c4 04	 add	 esp, 4

; 998  : 		}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 199  : 	{	// deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 200  :  #if defined(_M_IX86) || defined(_M_X64)
; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00009	81 7d 0c 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  00010	72 10		 jb	 SHORT $LN2@Deallocate

; 202  : 		{	// boost the alignment of big allocations to help autovectorization
; 203  : 		_Adjust_manually_vector_aligned(_Ptr, _Bytes);

  00012	8d 45 0c	 lea	 eax, DWORD PTR __Bytes$[ebp]
  00015	50		 push	 eax
  00016	8d 4d 08	 lea	 ecx, DWORD PTR __Ptr$[ebp]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
  0001f	83 c4 08	 add	 esp, 8
$LN2@Deallocate:

; 204  : 		}
; 205  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 206  : 
; 207  : 	::operator delete(_Ptr, _Bytes);

  00022	8b 45 0c	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00029	51		 push	 ecx
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8

; 208  : 	}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 180  : 	{	// allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 181  :  #if defined(_M_IX86) || defined(_M_X64)
; 182  : 	if (_Bytes >= _Big_allocation_threshold)

  00009	81 7d 08 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  00010	72 0e		 jb	 SHORT $LN2@Allocate

; 183  : 		{	// boost the alignment of big allocations to help autovectorization
; 184  : 		return (_Allocate_manually_vector_aligned<_Traits>(_Bytes));

  00012	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0001b	83 c4 04	 add	 esp, 4
  0001e	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 185  : 		}
; 186  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 187  : 
; 188  : 	if (_Bytes != 0)

  00020	83 7d 08 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  00024	74 0e		 je	 SHORT $LN3@Allocate

; 189  : 		{
; 190  : 		return (_Traits::_Allocate(_Bytes));

  00026	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
  0002f	83 c4 04	 add	 esp, 4
  00032	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 191  : 		}
; 192  : 
; 193  : 	return (nullptr);

  00034	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 194  : 	}

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility
;	COMDAT ??$_Min_value@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
$T1 = -68						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Min_value@I@std@@YAABIABI0@Z PROC			; std::_Min_value<unsigned int>, COMDAT

; 23   : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 24   : 	return (_Right < _Left ? _Right : _Left);

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	73 08		 jae	 SHORT $LN3@Min_value
  00015	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00018	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  0001b	eb 06		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00020	89 4d b8	 mov	 DWORD PTR tv65[ebp], ecx
$LN4@Min_value:
  00023	8b 55 b8	 mov	 edx, DWORD PTR tv65[ebp]
  00026	89 55 bc	 mov	 DWORD PTR $T1[ebp], edx
  00029	8b 45 bc	 mov	 eax, DWORD PTR $T1[ebp]

; 25   : 	}

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Min_value@I@std@@YAABIABI0@Z ENDP			; std::_Min_value<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Back_shift$ = -16					; size = 4
__Min_back_shift$ = -12					; size = 4
__Ptr_container$ = -8					; size = 4
__Ptr_user$ = -4					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 114  : 	{	// adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 115  : 	_Bytes += _Non_user_size;

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Bytes$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	83 c1 27	 add	 ecx, 39			; 00000027H
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Bytes$[ebp]
  00014	89 0a		 mov	 DWORD PTR [edx], ecx

; 116  : 
; 117  : 	const uintptr_t * const _Ptr_user = reinterpret_cast<uintptr_t *>(_Ptr);

  00016	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00019	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001b	89 4d fc	 mov	 DWORD PTR __Ptr_user$[ebp], ecx

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0001e	b8 04 00 00 00	 mov	 eax, 4
  00023	6b c8 ff	 imul	 ecx, eax, -1
  00026	8b 55 fc	 mov	 edx, DWORD PTR __Ptr_user$[ebp]
  00029	8b 04 0a	 mov	 eax, DWORD PTR [edx+ecx]
  0002c	89 45 f8	 mov	 DWORD PTR __Ptr_container$[ebp], eax
$LN4@Adjust_man:

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  0002f	b8 04 00 00 00	 mov	 eax, 4
  00034	6b c8 fe	 imul	 ecx, eax, -2
  00037	8b 55 fc	 mov	 edx, DWORD PTR __Ptr_user$[ebp]
  0003a	81 3c 0a fa fa
	fa fa		 cmp	 DWORD PTR [edx+ecx], -84215046 ; fafafafaH
  00041	75 02		 jne	 SHORT $LN7@Adjust_man
  00043	eb 52		 jmp	 SHORT $LN2@Adjust_man
$LN7@Adjust_man:
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0004f	6a 00		 push	 0
  00051	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
  00056	83 c0 08	 add	 eax, 8
  00059	50		 push	 eax
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_0GJ@FFDBCFBF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0005f	6a 02		 push	 2
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00067	83 c4 18	 add	 esp, 24			; 00000018H
  0006a	83 f8 01	 cmp	 eax, 1
  0006d	75 01		 jne	 SHORT $LN19@Adjust_man
  0006f	cc		 int	 3
$LN19@Adjust_man:
  00070	6a 00		 push	 0
  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
  00077	83 c0 08	 add	 eax, 8
  0007a	50		 push	 eax
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_1NC@PIOGAKBO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00090	83 c4 14	 add	 esp, 20			; 00000014H
  00093	33 c0		 xor	 eax, eax
  00095	75 ae		 jne	 SHORT $LN7@Adjust_man
$LN2@Adjust_man:
  00097	33 c0		 xor	 eax, eax
  00099	75 94		 jne	 SHORT $LN4@Adjust_man

; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);

  0009b	c7 45 f4 08 00
	00 00		 mov	 DWORD PTR __Min_back_shift$[ebp], 8

; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);
; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000a2	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000a5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a7	2b 4d f8	 sub	 ecx, DWORD PTR __Ptr_container$[ebp]
  000aa	89 4d f0	 mov	 DWORD PTR __Back_shift$[ebp], ecx
$LN10@Adjust_man:

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ad	83 7d f0 08	 cmp	 DWORD PTR __Back_shift$[ebp], 8
  000b1	72 08		 jb	 SHORT $LN13@Adjust_man
  000b3	83 7d f0 27	 cmp	 DWORD PTR __Back_shift$[ebp], 39 ; 00000027H
  000b7	77 02		 ja	 SHORT $LN13@Adjust_man
  000b9	eb 52		 jmp	 SHORT $LN8@Adjust_man
$LN13@Adjust_man:
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000c5	6a 00		 push	 0
  000c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
  000cc	83 c0 12	 add	 eax, 18			; 00000012H
  000cf	50		 push	 eax
  000d0	68 00 00 00 00	 push	 OFFSET ??_C@_0GJ@FFDBCFBF@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000d5	6a 02		 push	 2
  000d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  000dd	83 c4 18	 add	 esp, 24			; 00000018H
  000e0	83 f8 01	 cmp	 eax, 1
  000e3	75 01		 jne	 SHORT $LN20@Adjust_man
  000e5	cc		 int	 3
$LN20@Adjust_man:
  000e6	6a 00		 push	 0
  000e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
  000ed	83 c0 12	 add	 eax, 18			; 00000012H
  000f0	50		 push	 eax
  000f1	68 00 00 00 00	 push	 OFFSET ??_C@_1NC@PIOGAKBO@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  000f6	68 00 00 00 00	 push	 OFFSET ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  00100	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00106	83 c4 14	 add	 esp, 20			; 00000014H
  00109	33 c0		 xor	 eax, eax
  0010b	75 ae		 jne	 SHORT $LN13@Adjust_man
$LN8@Adjust_man:
  0010d	33 c0		 xor	 eax, eax
  0010f	75 9c		 jne	 SHORT $LN10@Adjust_man

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00111	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00114	8b 4d f8	 mov	 ecx, DWORD PTR __Ptr_container$[ebp]
  00117	89 08		 mov	 DWORD PTR [eax], ecx

; 134  : 	}

  00119	5f		 pop	 edi
  0011a	5e		 pop	 esi
  0011b	5b		 pop	 ebx
  0011c	8b e5		 mov	 esp, ebp
  0011e	5d		 pop	 ebp
  0011f	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z PROC	; std::_Default_allocate_traits::_Allocate, COMDAT

; 51   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 52   : 		return (::operator new(_Bytes));

  00009	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00012	83 c4 04	 add	 esp, 4

; 53   : 		}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ENDP	; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -8						; size = 4
_this$ = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx

; 191  : 		{	// cut ties with parent

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 192  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 193  : 		if (_Myproxy != nullptr)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00012	0f 84 96 00 00
	00		 je	 $LN13@Orphan_me

; 194  : 			{	// adopted, remove self from list
; 195  : 			_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001d	83 c1 04	 add	 ecx, 4
  00020	89 4d f8	 mov	 DWORD PTR __Pnext$1[ebp], ecx
$LN2@Orphan_me:

; 196  : 			while (*_Pnext != nullptr && *_Pnext != this)

  00023	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  00026	83 38 00	 cmp	 DWORD PTR [eax], 0
  00029	74 17		 je	 SHORT $LN6@Orphan_me
  0002b	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	3b 4d fc	 cmp	 ecx, DWORD PTR _this$[ebp]
  00033	74 0d		 je	 SHORT $LN6@Orphan_me

; 197  : 				_Pnext = &(*_Pnext)->_Mynextiter;

  00035	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	83 c1 04	 add	 ecx, 4
  0003d	89 4d f8	 mov	 DWORD PTR __Pnext$1[ebp], ecx
  00040	eb e1		 jmp	 SHORT $LN2@Orphan_me
$LN6@Orphan_me:

; 198  : 
; 199  : 			_STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

  00042	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  00045	83 38 00	 cmp	 DWORD PTR [eax], 0
  00048	74 02		 je	 SHORT $LN9@Orphan_me
  0004a	eb 4a		 jmp	 SHORT $LN4@Orphan_me
$LN9@Orphan_me:
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00056	6a 00		 push	 0
  00058	68 c7 00 00 00	 push	 199			; 000000c7H
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0GJ@EJIMBHLG@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00062	6a 02		 push	 2
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  0006a	83 c4 18	 add	 esp, 24			; 00000018H
  0006d	83 f8 01	 cmp	 eax, 1
  00070	75 01		 jne	 SHORT $LN14@Orphan_me
  00072	cc		 int	 3
$LN14@Orphan_me:
  00073	6a 00		 push	 0
  00075	68 c7 00 00 00	 push	 199			; 000000c7H
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_1NC@FANNPLN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0008f	83 c4 14	 add	 esp, 20			; 00000014H
  00092	33 c0		 xor	 eax, eax
  00094	75 b6		 jne	 SHORT $LN9@Orphan_me
$LN4@Orphan_me:
  00096	33 c0		 xor	 eax, eax
  00098	75 a8		 jne	 SHORT $LN6@Orphan_me

; 200  : 			*_Pnext = _Mynextiter;

  0009a	8b 45 f8	 mov	 eax, DWORD PTR __Pnext$1[ebp]
  0009d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000a3	89 10		 mov	 DWORD PTR [eax], edx

; 201  : 			_Myproxy = nullptr;

  000a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a8	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN13@Orphan_me:

; 202  : 			}
; 203  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 204  : 		}

  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx

; 186  : 		{	// get address of remaining iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 187  : 		return (&_Mynextiter);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 04	 add	 eax, 4

; 188  : 		}

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -72						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 181  : 		{	// get owning container

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00012	75 09		 jne	 SHORT $LN3@Getcont
  00014	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
  0001b	eb 0a		 jmp	 SHORT $LN4@Getcont
$LN3@Getcont:
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	89 45 b8	 mov	 DWORD PTR tv68[ebp], eax
$LN4@Getcont:
  00027	8b 45 b8	 mov	 eax, DWORD PTR tv68[ebp]

; 183  : 		}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx

; 176  : 		{	// disown owning container

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 177  : 		_Myproxy = nullptr;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 178  : 		}

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -28						; size = 4
__Parent_proxy$3 = -24					; size = 4
__Lock$4 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 147  : 		{	// adopt this iterator by parent

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 148  : 		if (_Parent == nullptr)

  0002b	83 7d 08 00	 cmp	 DWORD PTR __Parent$[ebp], 0
  0002f	75 1e		 jne	 SHORT $LN2@Adopt

; 149  : 			{	// no future parent, just disown current parent
; 150  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 151  : 			_Lockit _Lock(_LOCK_DEBUG);

  00031	6a 03		 push	 3
  00033	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$4[ebp]
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z

; 152  : 			_Orphan_me();

  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 153  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 154  : 			}

  00044	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$4[ebp]
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ

; 155  : 		else

  0004d	eb 4b		 jmp	 SHORT $LN5@Adopt
$LN2@Adopt:

; 156  : 			{	// have a parent, do adoption
; 157  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;

  0004f	8b 45 08	 mov	 eax, DWORD PTR __Parent$[ebp]
  00052	8b 08		 mov	 ecx, DWORD PTR [eax]
  00054	89 4d e8	 mov	 DWORD PTR __Parent_proxy$3[ebp], ecx

; 158  : 
; 159  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 160  : 			if (_Myproxy != _Parent_proxy)

  00057	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	3b 4d e8	 cmp	 ecx, DWORD PTR __Parent_proxy$3[ebp]
  0005f	74 39		 je	 SHORT $LN5@Adopt

; 161  : 				{	// change parentage
; 162  : 				_Lockit _Lock(_LOCK_DEBUG);

  00061	6a 03		 push	 3
  00063	8d 4d e4	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z

; 163  : 				_Orphan_me();

  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 164  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;

  00074	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00077	8b 4d e8	 mov	 ecx, DWORD PTR __Parent_proxy$3[ebp]
  0007a	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0007d	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 165  : 				_Parent_proxy->_Myfirstiter = this;

  00080	8b 45 e8	 mov	 eax, DWORD PTR __Parent_proxy$3[ebp]
  00083	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 166  : 				_Myproxy = _Parent_proxy;

  00089	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	8b 4d e8	 mov	 ecx, DWORD PTR __Parent_proxy$3[ebp]
  0008f	89 08		 mov	 DWORD PTR [eax], ecx

; 167  : 				}

  00091	8d 4d e4	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
$LN5@Adopt:

; 168  : 
; 169  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 170  : 			_Myproxy = _Parent_proxy;
; 171  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 172  : 			}
; 173  : 		}

  0009a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a4	59		 pop	 ecx
  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	5b		 pop	 ebx
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 139  : 		{	// destroy the iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1_Iterator_base12@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 48	 sub	 esp, 72			; 00000048H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 140  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 141  : 		_Lockit _Lock(_LOCK_DEBUG);

  0002b	6a 03		 push	 3
  0002d	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z

; 142  : 		_Orphan_me();

  00036	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 143  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 144  : 		}

  0003e	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  00047	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00051	59		 pop	 ecx
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 119  : 		{	// assign an iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 48	 sub	 esp, 72			; 00000048H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 120  : 		if (_Myproxy != _Right._Myproxy)

  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00031	8b 10		 mov	 edx, DWORD PTR [eax]
  00033	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00035	74 36		 je	 SHORT $LN2@operator

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)

  00037	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0003a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003d	75 1e		 jne	 SHORT $LN3@operator

; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);

  0003f	6a 03		 push	 3
  00041	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z

; 126  : 				_Orphan_me();

  0004a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}

  00052	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$2[ebp]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ

; 129  : 			else

  0005b	eb 10		 jmp	 SHORT $LN2@operator
$LN3@operator:

; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

  0005d	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00060	8b 08		 mov	 ecx, DWORD PTR [eax]
  00062	8b 11		 mov	 edx, DWORD PTR [ecx]
  00064	52		 push	 edx
  00065	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
$LN2@operator:

; 132  : 				}
; 133  : 			}
; 134  : 
; 135  : 		return (*this);

  0006d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]

; 136  : 		}

  00070	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007a	59		 pop	 ecx
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 114  : 		{	// copy an iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 115  : 		*this = _Right;

  0001f	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00022	50		 push	 eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=

; 116  : 		}

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 04 00	 ret	 4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 109  : 		{	// construct orphaned iterator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 108  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 110  : 		}

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$2 = -24						; size = 4
__Lock$3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 214  : 	{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 215  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 216  : 	if (_Myproxy != nullptr)

  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00031	74 4f		 je	 SHORT $LN6@Orphan_all

; 217  : 		{	// proxy allocated, drain it
; 218  : 		_Lockit _Lock(_LOCK_DEBUG);

  00033	6a 03		 push	 3
  00035	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$3[ebp]
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z

; 219  : 
; 220  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

  0003e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 08		 mov	 ecx, DWORD PTR [eax]
  00043	83 c1 04	 add	 ecx, 4
  00046	89 4d e8	 mov	 DWORD PTR __Pnext$2[ebp], ecx
  00049	eb 0d		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:

; 221  : 			*_Pnext != nullptr; *_Pnext = (*_Pnext)->_Mynextiter)

  0004b	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$2[ebp]
  0004e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00050	8b 55 e8	 mov	 edx, DWORD PTR __Pnext$2[ebp]
  00053	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00056	89 02		 mov	 DWORD PTR [edx], eax
$LN4@Orphan_all:
  00058	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$2[ebp]
  0005b	83 38 00	 cmp	 DWORD PTR [eax], 0
  0005e	74 0d		 je	 SHORT $LN3@Orphan_all

; 222  : 			(*_Pnext)->_Myproxy = nullptr;

  00060	8b 45 e8	 mov	 eax, DWORD PTR __Pnext$2[ebp]
  00063	8b 08		 mov	 ecx, DWORD PTR [eax]
  00065	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0006b	eb de		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 223  : 		_Myproxy->_Myfirstiter = nullptr;

  0006d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00070	8b 08		 mov	 ecx, DWORD PTR [eax]
  00072	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 224  : 		}

  00079	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$3[ebp]
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
$LN6@Orphan_all:

; 225  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 226  : 	}

  00082	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00085	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008c	59		 pop	 ecx
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv68 = -72						; size = 4
_this$ = -4						; size = 4
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT
; _this$ = ecx

; 95   : 		{	// get address of iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 96   : 		return (_Myproxy == nullptr ? nullptr : &_Myproxy->_Myfirstiter);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00012	75 09		 jne	 SHORT $LN3@Getpfirst
  00014	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
  0001b	eb 0b		 jmp	 SHORT $LN4@Getpfirst
$LN3@Getpfirst:
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	83 c2 04	 add	 edx, 4
  00025	89 55 b8	 mov	 DWORD PTR tv68[ebp], edx
$LN4@Getpfirst:
  00028	8b 45 b8	 mov	 eax, DWORD PTR tv68[ebp]

; 97   : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 81   : 		{	// construct childless container

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : 		: _Myproxy(nullptr)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 82   : 		}

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 69   : 		{	// construct from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 68   : 		: _Mycont(nullptr), _Myfirstiter(nullptr)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 70   : 		}

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\limits
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT

; 616  : 		{	// return maximum value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 617  : 		return (INT_MAX);

  00009	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 618  : 		}

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxtempl.h
;	COMDAT ??$HashKey@K@@YGIK@Z
_TEXT	SEGMENT
$T1 = -80						; size = 8
_HashVal$ = -8						; size = 8
_key$ = 8						; size = 4
??$HashKey@K@@YGIK@Z PROC				; HashKey<unsigned long>, COMDAT

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 162  : 	// (algorithm copied from STL hash in xfunctional)
; 163  : #pragma warning(suppress: 4302) // 'type cast' : truncation
; 164  : #pragma warning(suppress: 4311) // pointer truncation
; 165  : 	ldiv_t HashVal = ldiv((long)(ARG_KEY)key, 127773);

  00009	68 1d f3 01 00	 push	 127773			; 0001f31dH
  0000e	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ldiv
  00018	83 c4 08	 add	 esp, 8
  0001b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0001e	89 55 b4	 mov	 DWORD PTR $T1[ebp+4], edx
  00021	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  00024	89 4d f8	 mov	 DWORD PTR _HashVal$[ebp], ecx
  00027	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp+4]
  0002a	89 55 fc	 mov	 DWORD PTR _HashVal$[ebp+4], edx

; 166  : 	HashVal.rem = 16807 * HashVal.rem - 2836 * HashVal.quot;

  0002d	69 45 fc a7 41
	00 00		 imul	 eax, DWORD PTR _HashVal$[ebp+4], 16807
  00034	69 4d f8 14 0b
	00 00		 imul	 ecx, DWORD PTR _HashVal$[ebp], 2836
  0003b	2b c1		 sub	 eax, ecx
  0003d	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax

; 167  : 	if (HashVal.rem < 0)

  00040	79 0b		 jns	 SHORT $LN2@HashKey

; 168  : 		HashVal.rem += 2147483647;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]
  00045	05 ff ff ff 7f	 add	 eax, 2147483647		; 7fffffffH
  0004a	89 45 fc	 mov	 DWORD PTR _HashVal$[ebp+4], eax
$LN2@HashKey:

; 169  : 	return ((UINT)HashVal.rem);

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _HashVal$[ebp+4]

; 170  : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
??$HashKey@K@@YGIK@Z ENDP				; HashKey<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afxplex_.h
;	COMDAT ?data@CPlex@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?data@CPlex@@QAEPAXXZ PROC				; CPlex::data, COMDAT
; _this$ = ecx

; 35   : 	void* data() { return this+1; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 08	 add	 eax, 8
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?data@CPlex@@QAEPAXXZ ENDP				; CPlex::data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 185  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  :         (void)_Size;
; 187  :         return _Where;

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 188  :     }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
