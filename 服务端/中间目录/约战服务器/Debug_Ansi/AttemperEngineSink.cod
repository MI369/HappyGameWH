; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\约战服务器\AttemperEngineSink.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?IID_IUnknownEx@@3U_GUID@@B DD 05feec21eH		; IID_IUnknownEx
	DW	0dbf3H
	DW	046f0H
	DB	09fH
	DB	057H
	DB	0d1H
	DB	0cdH
	DB	071H
	DB	01cH
	DB	046H
	DB	0deH
?IID_IAttemperEngineSink@@3U_GUID@@B DD 0831b9001H	; IID_IAttemperEngineSink
	DW	04450H
	DW	045ddH
	DB	091H
	DB	037H
	DB	0dH
	DB	026H
	DB	016H
	DB	0e3H
	DB	075H
	DB	032H
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	_IsEqualGUID
PUBLIC	_==
PUBLIC	__tcslwr
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	??0tagHostCreatRoomInfo@@QAE@XZ			; tagHostCreatRoomInfo::tagHostCreatRoomInfo
PUBLIC	??0tagPersonalUserScoreInfo@@QAE@XZ		; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo
PUBLIC	??0IUnknownEx@@QAE@XZ				; IUnknownEx::IUnknownEx
PUBLIC	?GetProductVer@@YAEK@Z				; GetProductVer
PUBLIC	?GetMainVer@@YAEK@Z				; GetMainVer
PUBLIC	?GetSubVer@@YAEK@Z				; GetSubVer
PUBLIC	?GetBuildVer@@YAEK@Z				; GetBuildVer
PUBLIC	?InterfaceVersionCompare@@YA_NKK@Z		; InterfaceVersionCompare
PUBLIC	??0CMD_CS_C_DismissTableResult@@QAE@XZ		; CMD_CS_C_DismissTableResult::CMD_CS_C_DismissTableResult
PUBLIC	??0CMD_CS_C_HostCreatRoomInfo@@QAE@XZ		; CMD_CS_C_HostCreatRoomInfo::CMD_CS_C_HostCreatRoomInfo
PUBLIC	??0IAttemperEngineSink@@QAE@XZ			; IAttemperEngineSink::IAttemperEngineSink
PUBLIC	?GetUserID@CGlobalUserItem@@QAEKXZ		; CGlobalUserItem::GetUserID
PUBLIC	?GetGameID@CGlobalUserItem@@QAEKXZ		; CGlobalUserItem::GetGameID
PUBLIC	?GetNickName@CGlobalUserItem@@QAEPBDXZ		; CGlobalUserItem::GetNickName
PUBLIC	?GetGender@CGlobalUserItem@@QAEEXZ		; CGlobalUserItem::GetGender
PUBLIC	?GetMemberOrder@CGlobalUserItem@@QAEEXZ		; CGlobalUserItem::GetMemberOrder
PUBLIC	?GetMasterOrder@CGlobalUserItem@@QAEEXZ		; CGlobalUserItem::GetMasterOrder
PUBLIC	?GetUserInfo@CGlobalUserItem@@QAEPAUtagUserInfo@@XZ ; CGlobalUserItem::GetUserInfo
PUBLIC	?GetIndex@CGlobalServerItem@@QAEGXZ		; CGlobalServerItem::GetIndex
PUBLIC	?GetKindID@CGlobalServerItem@@QAEGXZ		; CGlobalServerItem::GetKindID
PUBLIC	?GetServerID@CGlobalServerItem@@QAEGXZ		; CGlobalServerItem::GetServerID
PUBLIC	?IsMatchServer@CGlobalServerItem@@QAE_NXZ	; CGlobalServerItem::IsMatchServer
PUBLIC	??0?$CWHArray@GABG@@QAE@XZ			; CWHArray<unsigned short,unsigned short const &>::CWHArray<unsigned short,unsigned short const &>
PUBLIC	??1?$CWHArray@GABG@@UAE@XZ			; CWHArray<unsigned short,unsigned short const &>::~CWHArray<unsigned short,unsigned short const &>
PUBLIC	?GetCount@?$CWHArray@GABG@@QBEHXZ		; CWHArray<unsigned short,unsigned short const &>::GetCount
PUBLIC	?Add@?$CWHArray@GABG@@QAEHABG@Z			; CWHArray<unsigned short,unsigned short const &>::Add
PUBLIC	?ElementAt@?$CWHArray@GABG@@QAEAAGH@Z		; CWHArray<unsigned short,unsigned short const &>::ElementAt
PUBLIC	?SetSize@?$CWHArray@GABG@@QAEXH@Z		; CWHArray<unsigned short,unsigned short const &>::SetSize
PUBLIC	?SetAtGrow@?$CWHArray@GABG@@QAEXHABG@Z		; CWHArray<unsigned short,unsigned short const &>::SetAtGrow
PUBLIC	?RemoveAt@?$CWHArray@GABG@@QAEXHH@Z		; CWHArray<unsigned short,unsigned short const &>::RemoveAt
PUBLIC	?RemoveAll@?$CWHArray@GABG@@QAEXXZ		; CWHArray<unsigned short,unsigned short const &>::RemoveAll
PUBLIC	??A?$CWHArray@GABG@@QAEAAGH@Z			; CWHArray<unsigned short,unsigned short const &>::operator[]
PUBLIC	?AllocMemory@?$CWHArray@GABG@@QAEXH@Z		; CWHArray<unsigned short,unsigned short const &>::AllocMemory
PUBLIC	??_G?$CWHArray@GABG@@UAEPAXI@Z			; CWHArray<unsigned short,unsigned short const &>::`scalar deleting destructor'
PUBLIC	??0CAttemperEngineSink@@QAE@XZ			; CAttemperEngineSink::CAttemperEngineSink
PUBLIC	??1CAttemperEngineSink@@UAE@XZ			; CAttemperEngineSink::~CAttemperEngineSink
PUBLIC	?Release@CAttemperEngineSink@@UAEXXZ		; CAttemperEngineSink::Release
PUBLIC	?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z ; CAttemperEngineSink::QueryInterface
PUBLIC	?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z ; CAttemperEngineSink::OnAttemperEngineStart
PUBLIC	?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z ; CAttemperEngineSink::OnAttemperEngineConclude
PUBLIC	?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z ; CAttemperEngineSink::OnEventControl
PUBLIC	?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z ; CAttemperEngineSink::OnEventAttemperData
PUBLIC	?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z	; CAttemperEngineSink::OnEventTimer
PUBLIC	?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z ; CAttemperEngineSink::OnEventDataBase
PUBLIC	?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z ; CAttemperEngineSink::OnEventTCPSocketLink
PUBLIC	?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z ; CAttemperEngineSink::OnEventTCPSocketShut
PUBLIC	?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z ; CAttemperEngineSink::OnEventTCPSocketRead
PUBLIC	?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z ; CAttemperEngineSink::OnEventTCPNetworkBind
PUBLIC	?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z ; CAttemperEngineSink::OnEventTCPNetworkShut
PUBLIC	?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z ; CAttemperEngineSink::OnEventTCPNetworkRead
PUBLIC	?OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainRegister
PUBLIC	?OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainServiceInfo
PUBLIC	?OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainUserCollect
PUBLIC	?OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainRemoteService
PUBLIC	?OnTCPNetworkMainManagerService@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainManagerService
PUBLIC	?OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainAndroidService
PUBLIC	?SendServerListItem@CAttemperEngineSink@@IAE_NK@Z ; CAttemperEngineSink::SendServerListItem
PUBLIC	?SendMatchListItem@CAttemperEngineSink@@IAE_NK@Z ; CAttemperEngineSink::SendMatchListItem
PUBLIC	?SendDataToGame@CAttemperEngineSink@@IAE_NGGGPAXG@Z ; CAttemperEngineSink::SendDataToGame
PUBLIC	?SendDataToUser@CAttemperEngineSink@@IAE_NGKGGPAXG@Z ; CAttemperEngineSink::SendDataToUser
PUBLIC	??_GCAttemperEngineSink@@UAEPAXI@Z		; CAttemperEngineSink::`scalar deleting destructor'
PUBLIC	??_7IUnknownEx@@6B@				; IUnknownEx::`vftable'
PUBLIC	??_7IAttemperEngineSink@@6B@			; IAttemperEngineSink::`vftable'
PUBLIC	??_7?$CWHArray@GABG@@6B@			; CWHArray<unsigned short,unsigned short const &>::`vftable'
PUBLIC	??_7CAttemperEngineSink@@6B@			; CAttemperEngineSink::`vftable'
PUBLIC	?__LINE__Var@?0??OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA ; `CAttemperEngineSink::OnAttemperEngineConclude'::`1'::__LINE__Var
PUBLIC	??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	?__LINE__Var@?0??OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z@4JA ; `CAttemperEngineSink::OnEventTCPNetworkBind'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainRegister'::`1'::__LINE__Var
PUBLIC	??_C@_0DB@IAHCMGCL@?R?Q?$LO?$KN?$LE?f?T?Z?O?$OA?M?$KM?$LB?j?J?$LG?$LF?D?S?N?O?$LH?$LH?$LP?$LM?d?$LH?$PO?N?q?$KD@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainServiceInfo'::`1'::__LINE__Var
PUBLIC	??_C@_0EH@CILKLIBL@?$LH?$LP?V?w?$LB?X?P?k?$LC?N?S?k?S?N?O?$LH?D?$KD?J?$LN?O?B?V?$LL?D?$NM?$LE?$LE?$LN?$KI?R@ ; `string'
PUBLIC	??_C@_0CP@FBKMLKLC@?R?Q?$LO?$KN?$LE?o?$LF?$LN?$LE?$LE?$LN?$KI?T?$LM?U?$LN?$LH?$LP?$LM?d?$LF?D?W?n?$LE?s?J?$PN?$KD?$KM?$LC@ ; `string'
PUBLIC	??_C@_0CP@JMPGHJLK@?$LF?$LB?G?$LA?S?N?O?$LH?$LF?D?T?$LM?U?$LN?$LH?$LP?$LH?$PO?N?q?F?w?$LC?$LL?$LE?f?T?Z?$KD?$KM?G@ ; `string'
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainUserCollect'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainRemoteService'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA ; `CAttemperEngineSink::OnTCPNetworkMainAndroidService'::`1'::__LINE__Var
PUBLIC	??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_R4IUnknownEx@@6B@				; IUnknownEx::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIUnknownEx@@@8				; IUnknownEx `RTTI Type Descriptor'
PUBLIC	??_R3IUnknownEx@@8				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknownEx@@8				; IUnknownEx::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IAttemperEngineSink@@6B@			; IAttemperEngineSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIAttemperEngineSink@@@8			; IAttemperEngineSink `RTTI Type Descriptor'
PUBLIC	??_R3IAttemperEngineSink@@8			; IAttemperEngineSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAttemperEngineSink@@8			; IAttemperEngineSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IAttemperEngineSink@@8		; IAttemperEngineSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CWHArray@GABG@@6B@			; CWHArray<unsigned short,unsigned short const &>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CWHArray@GABG@@@8			; CWHArray<unsigned short,unsigned short const &> `RTTI Type Descriptor'
PUBLIC	??_R3?$CWHArray@GABG@@8				; CWHArray<unsigned short,unsigned short const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CWHArray@GABG@@8				; CWHArray<unsigned short,unsigned short const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CWHArray@GABG@@8		; CWHArray<unsigned short,unsigned short const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CAttemperEngineSink@@6B@			; CAttemperEngineSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAttemperEngineSink@@@8			; CAttemperEngineSink `RTTI Type Descriptor'
PUBLIC	??_R3CAttemperEngineSink@@8			; CAttemperEngineSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAttemperEngineSink@@8			; CAttemperEngineSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAttemperEngineSink@@8		; CAttemperEngineSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp___mbslwr:PROC
EXTRN	__imp___time64:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?UpdateStatus@CGlobalUserItem@@QAEXGGE@Z:PROC	; CGlobalUserItem::UpdateStatus
EXTRN	?EnumServerItem@CGlobalUserItem@@QAEPAVCGlobalServerItem@@G@Z:PROC ; CGlobalUserItem::EnumServerItem
EXTRN	??0CGlobalInfoManager@@QAE@XZ:PROC		; CGlobalInfoManager::CGlobalInfoManager
EXTRN	??1CGlobalInfoManager@@UAE@XZ:PROC		; CGlobalInfoManager::~CGlobalInfoManager
EXTRN	?ResetData@CGlobalInfoManager@@QAEXXZ:PROC	; CGlobalInfoManager::ResetData
EXTRN	?SearchTableByID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@K@Z:PROC ; CGlobalInfoManager::SearchTableByID
EXTRN	?SearchTableByTableIDAndServerID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@KK@Z:PROC ; CGlobalInfoManager::SearchTableByTableIDAndServerID
EXTRN	?AddFreeServerTable@CGlobalInfoManager@@QAE_NK@Z:PROC ; CGlobalInfoManager::AddFreeServerTable
EXTRN	?AddServerTable@CGlobalInfoManager@@QAE_NKUtagPersonalTableInfo@@@Z:PROC ; CGlobalInfoManager::AddServerTable
EXTRN	?RemoveFreeServerTable@CGlobalInfoManager@@QAE_NK@Z:PROC ; CGlobalInfoManager::RemoveFreeServerTable
EXTRN	?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z:PROC ; CGlobalInfoManager::RemoveServerTable
EXTRN	?GetFreeServer@CGlobalInfoManager@@QAEKKKE@Z:PROC ; CGlobalInfoManager::GetFreeServer
EXTRN	?GetFreeServerCount@CGlobalInfoManager@@QAEKK@Z:PROC ; CGlobalInfoManager::GetFreeServerCount
EXTRN	?RandPersonalRoomID@CGlobalInfoManager@@QAEKXZ:PROC ; CGlobalInfoManager::RandPersonalRoomID
EXTRN	?GetHostCreatePersonalRoom@CGlobalInfoManager@@QAEXAAUtagHostCreatRoomInfo@@@Z:PROC ; CGlobalInfoManager::GetHostCreatePersonalRoom
EXTRN	?AddPersonalMaxCreate@CGlobalInfoManager@@QAE_NUCMD_CS_S_RegisterPersonal@@@Z:PROC ; CGlobalInfoManager::AddPersonalMaxCreate
EXTRN	?CanCreatePersonalRoom@CGlobalInfoManager@@QAE_NKK@Z:PROC ; CGlobalInfoManager::CanCreatePersonalRoom
EXTRN	?DeleteUserItem@CGlobalInfoManager@@QAE_NKG@Z:PROC ; CGlobalInfoManager::DeleteUserItem
EXTRN	?ActiveUserItem@CGlobalInfoManager@@QAE_NAAUtagGlobalUserInfo@@G@Z:PROC ; CGlobalInfoManager::ActiveUserItem
EXTRN	?DeletePlazaItem@CGlobalInfoManager@@QAE_NG@Z:PROC ; CGlobalInfoManager::DeletePlazaItem
EXTRN	?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z:PROC ; CGlobalInfoManager::DeleteServerItem
EXTRN	?ActiveServerItem@CGlobalInfoManager@@QAE_NGAAUtagGameServer@@@Z:PROC ; CGlobalInfoManager::ActiveServerItem
EXTRN	?DeleteChatItem@CGlobalInfoManager@@QAE_NG@Z:PROC ; CGlobalInfoManager::DeleteChatItem
EXTRN	?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z:PROC ; CGlobalInfoManager::SearchServerItem
EXTRN	?SearchUserItemByUserID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z:PROC ; CGlobalInfoManager::SearchUserItemByUserID
EXTRN	?SearchUserItemByGameID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z:PROC ; CGlobalInfoManager::SearchUserItemByGameID
EXTRN	?SearchUserItemByNickName@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@PBD@Z:PROC ; CGlobalInfoManager::SearchUserItemByNickName
EXTRN	?EnumServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@AAPAU__POSITION@@@Z:PROC ; CGlobalInfoManager::EnumServerItem
EXTRN	?EnumChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@AAPAU__POSITION@@@Z:PROC ; CGlobalInfoManager::EnumChatItem
EXTRN	??_E?$CWHArray@GABG@@UAEPAXI@Z:PROC		; CWHArray<unsigned short,unsigned short const &>::`vector deleting destructor'
EXTRN	??_ECAttemperEngineSink@@UAEPAXI@Z:PROC		; CAttemperEngineSink::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@CAttemperEngineSink@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAttemperEngineSink@@8 DD FLAT:??_R0?AVCAttemperEngineSink@@@8 ; CAttemperEngineSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R2CAttemperEngineSink@@8
rdata$r	SEGMENT
??_R2CAttemperEngineSink@@8 DD FLAT:??_R1A@?0A@EA@CAttemperEngineSink@@8 ; CAttemperEngineSink::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAttemperEngineSink@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3CAttemperEngineSink@@8
rdata$r	SEGMENT
??_R3CAttemperEngineSink@@8 DD 00H			; CAttemperEngineSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAttemperEngineSink@@@8
data$r	SEGMENT
??_R0?AVCAttemperEngineSink@@@8 DD FLAT:??_7type_info@@6B@ ; CAttemperEngineSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAttemperEngineSink@@', 00H
data$r	ENDS
;	COMDAT ??_R4CAttemperEngineSink@@6B@
rdata$r	SEGMENT
??_R4CAttemperEngineSink@@6B@ DD 00H			; CAttemperEngineSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAttemperEngineSink@@@8
	DD	FLAT:??_R3CAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CWHArray@GABG@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CWHArray@GABG@@8 DD FLAT:??_R0?AV?$CWHArray@GABG@@@8 ; CWHArray<unsigned short,unsigned short const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CWHArray@GABG@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CWHArray@GABG@@8
rdata$r	SEGMENT
??_R2?$CWHArray@GABG@@8 DD FLAT:??_R1A@?0A@EA@?$CWHArray@GABG@@8 ; CWHArray<unsigned short,unsigned short const &>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CWHArray@GABG@@8
rdata$r	SEGMENT
??_R3?$CWHArray@GABG@@8 DD 00H				; CWHArray<unsigned short,unsigned short const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CWHArray@GABG@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CWHArray@GABG@@@8
data$r	SEGMENT
??_R0?AV?$CWHArray@GABG@@@8 DD FLAT:??_7type_info@@6B@	; CWHArray<unsigned short,unsigned short const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CWHArray@GABG@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CWHArray@GABG@@6B@
rdata$r	SEGMENT
??_R4?$CWHArray@GABG@@6B@ DD 00H			; CWHArray<unsigned short,unsigned short const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CWHArray@GABG@@@8
	DD	FLAT:??_R3?$CWHArray@GABG@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IAttemperEngineSink@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAttemperEngineSink@@8 DD FLAT:??_R0?AUIAttemperEngineSink@@@8 ; IAttemperEngineSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R2IAttemperEngineSink@@8
rdata$r	SEGMENT
??_R2IAttemperEngineSink@@8 DD FLAT:??_R1A@?0A@EA@IAttemperEngineSink@@8 ; IAttemperEngineSink::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3IAttemperEngineSink@@8
rdata$r	SEGMENT
??_R3IAttemperEngineSink@@8 DD 00H			; IAttemperEngineSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAttemperEngineSink@@@8
data$r	SEGMENT
??_R0?AUIAttemperEngineSink@@@8 DD FLAT:??_7type_info@@6B@ ; IAttemperEngineSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAttemperEngineSink@@', 00H
data$r	ENDS
;	COMDAT ??_R4IAttemperEngineSink@@6B@
rdata$r	SEGMENT
??_R4IAttemperEngineSink@@6B@ DD 00H			; IAttemperEngineSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIAttemperEngineSink@@@8
	DD	FLAT:??_R3IAttemperEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknownEx@@8
rdata$r	SEGMENT
??_R2IUnknownEx@@8 DD FLAT:??_R1A@?0A@EA@IUnknownEx@@8	; IUnknownEx::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknownEx@@8
rdata$r	SEGMENT
??_R3IUnknownEx@@8 DD 00H				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknownEx@@@8
data$r	SEGMENT
??_R0?AUIUnknownEx@@@8 DD FLAT:??_7type_info@@6B@	; IUnknownEx `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknownEx@@', 00H
data$r	ENDS
;	COMDAT ??_R4IUnknownEx@@6B@
rdata$r	SEGMENT
??_R4IUnknownEx@@6B@ DD 00H				; IUnknownEx::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIUnknownEx@@@8
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0c8H, 0abH, 0beH, 0d6H, 0b6H, 0a8H, 0d2H, 0e5H, '\a'
	DB	'rray.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 044fH ; `CAttemperEngineSink::OnTCPNetworkMainAndroidService'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 0397H ; `CAttemperEngineSink::OnTCPNetworkMainRemoteService'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 02c3H ; `CAttemperEngineSink::OnTCPNetworkMainUserCollect'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CP@JMPGHJLK@?$LF?$LB?G?$LA?S?N?O?$LH?$LF?D?T?$LM?U?$LN?$LH?$LP?$LH?$PO?N?q?F?w?$LC?$LL?$LE?f?T?Z?$KD?$KM?G@
CONST	SEGMENT
??_C@_0CP@JMPGHJLK@?$LF?$LB?G?$LA?S?N?O?$LH?$LF?D?T?$LM?U?$LN?$LH?$LP?$LH?$PO?N?q?F?w?$LC?$LL?$LE?f?T?Z?$KD?$KM?G@ DB 0b5H
	DB	0b1H, 0c7H, 0b0H, 0d3H, 0ceH, 0cfH, 0b7H, 0b5H, 0c4H, 0d4H, 0bcH
	DB	0d5H, 0bdH, 0b7H, 0bfH, 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0b2H
	DB	0bbH, 0b4H, 0e6H, 0d4H, 0daH, 0a3H, 0acH, 0c7H, 0ebH, 0d1H, 0a1H
	DB	0d4H, 0f1H, 0c6H, 0e4H, 0cbH, 0fbH, 0d3H, 0ceH, 0cfH, 0b7H, 0a3H
	DB	0a1H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@FBKMLKLC@?R?Q?$LO?$KN?$LE?o?$LF?$LN?$LE?$LE?$LN?$KI?T?$LM?U?$LN?$LH?$LP?$LM?d?$LF?D?W?n?$LE?s?J?$PN?$KD?$KM?$LC@
CONST	SEGMENT
??_C@_0CP@FBKMLKLC@?R?Q?$LO?$KN?$LE?o?$LF?$LN?$LE?$LE?$LN?$KI?T?$LM?U?$LN?$LH?$LP?$LM?d?$LF?D?W?n?$LE?s?J?$PN?$KD?$KM?$LC@ DB 0d2H
	DB	0d1H, 0beH, 0adH, 0b4H, 0efH, 0b5H, 0bdH, 0b4H, 0b4H, 0bdH, 0a8H
	DB	0d4H, 0bcH, 0d5H, 0bdH, 0b7H, 0bfH, 0bcH, 0e4H, 0b5H, 0c4H, 0d7H
	DB	0eeH, 0b4H, 0f3H, 0caH, 0fdH, 0a3H, 0acH, 0b2H, 0bbH, 0c4H, 0dcH
	DB	0d4H, 0d9H, 0b4H, 0b4H, 0bdH, 0a8H, 0b7H, 0bfH, 0bcH, 0e4H, 0a3H
	DB	0a1H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@CILKLIBL@?$LH?$LP?V?w?$LB?X?P?k?$LC?N?S?k?S?N?O?$LH?D?$KD?J?$LN?O?B?V?$LL?D?$NM?$LE?$LE?$LN?$KI?R@
CONST	SEGMENT
??_C@_0EH@CILKLIBL@?$LH?$LP?V?w?$LB?X?P?k?$LC?N?S?k?S?N?O?$LH?D?$KD?J?$LN?O?B?V?$LL?D?$NM?$LE?$LE?$LN?$KI?R@ DB 0b7H
	DB	0bfH, 0d6H, 0f7H, 0b1H, 0d8H, 0d0H, 0ebH, 0b2H, 0ceH, 0d3H, 0ebH
	DB	0d3H, 0ceH, 0cfH, 0b7H, 0c4H, 0a3H, 0caH, 0bdH, 0cfH, 0c2H, 0d6H
	DB	0bbH, 0c4H, 0dcH, 0b4H, 0b4H, 0bdH, 0a8H, 0d2H, 0bbH, 0b8H, 0f6H
	DB	0b7H, 0bfH, 0bcH, 0e4H, 0a3H, 0acH, 0bbH, 0f2H, 0d3H, 0ceH, 0cfH
	DB	0b7H, 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0b4H, 0b4H, 0bdH, 0a8H
	DB	0d4H, 0bcH, 0d5H, 0bdH, 0b7H, 0bfH, 0bcH, 0e4H, 0d2H, 0d1H, 0c2H
	DB	0faH, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 016aH ; `CAttemperEngineSink::OnTCPNetworkMainServiceInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DB@IAHCMGCL@?R?Q?$LO?$KN?$LE?f?T?Z?O?$OA?M?$KM?$LB?j?J?$LG?$LF?D?S?N?O?$LH?$LH?$LP?$LM?d?$LH?$PO?N?q?$KD@
CONST	SEGMENT
??_C@_0DB@IAHCMGCL@?R?Q?$LO?$KN?$LE?f?T?Z?O?$OA?M?$KM?$LB?j?J?$LG?$LF?D?S?N?O?$LH?$LH?$LP?$LM?d?$LH?$PO?N?q?$KD@ DB 0d2H
	DB	0d1H, 0beH, 0adH, 0b4H, 0e6H, 0d4H, 0daH, 0cfH, 0e0H, 0cdH, 0acH
	DB	0b1H, 0eaH, 0caH, 0b6H, 0b5H, 0c4H, 0d3H, 0ceH, 0cfH, 0b7H, 0b7H
	DB	0bfH, 0bcH, 0e4H, 0b7H, 0feH, 0ceH, 0f1H, 0a3H, 0acH, 0b7H, 0bfH
	DB	0bcH, 0e4H, 0b7H, 0feH, 0ceH, 0f1H, 0d7H, 0a2H, 0b2H, 0e1H, 0caH
	DB	0a7H, 0b0H, 0dcH, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA DD 0102H ; `CAttemperEngineSink::OnTCPNetworkMainRegister'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z@4JA DD 06eH ; `CAttemperEngineSink::OnEventTCPNetworkBind'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0d4H, 0bcH, 0d5H, 0bdH, 0b7H, 0feH, 0ceH, 0f1H, 0c6H
	DB	0f7H, '\attemperenginesink.cpp', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA DD 03fH ; `CAttemperEngineSink::OnAttemperEngineConclude'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7CAttemperEngineSink@@6B@
CONST	SEGMENT
??_7CAttemperEngineSink@@6B@ DD FLAT:??_R4CAttemperEngineSink@@6B@ ; CAttemperEngineSink::`vftable'
	DD	FLAT:?Release@CAttemperEngineSink@@UAEXXZ
	DD	FLAT:?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z
	DD	FLAT:?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
	DD	FLAT:?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
	DD	FLAT:?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z
	DD	FLAT:?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z
	DD	FLAT:?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z
	DD	FLAT:?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z
	DD	FLAT:?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z
	DD	FLAT:?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z
	DD	FLAT:?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z
	DD	FLAT:?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z
	DD	FLAT:?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z
	DD	FLAT:?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z
	DD	FLAT:??_ECAttemperEngineSink@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CWHArray@GABG@@6B@
CONST	SEGMENT
??_7?$CWHArray@GABG@@6B@ DD FLAT:??_R4?$CWHArray@GABG@@6B@ ; CWHArray<unsigned short,unsigned short const &>::`vftable'
	DD	FLAT:??_E?$CWHArray@GABG@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7IAttemperEngineSink@@6B@
CONST	SEGMENT
??_7IAttemperEngineSink@@6B@ DD FLAT:??_R4IAttemperEngineSink@@6B@ ; IAttemperEngineSink::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7IUnknownEx@@6B@
CONST	SEGMENT
??_7IUnknownEx@@6B@ DD FLAT:??_R4IUnknownEx@@6B@	; IUnknownEx::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$0
__unwindtable$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$2
__ehfuncinfo$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CAttemperEngineSink@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$0
__ehfuncinfo$??0CAttemperEngineSink@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CAttemperEngineSink@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCAttemperEngineSink@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCAttemperEngineSink@@UAEPAXI@Z PROC			; CAttemperEngineSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CAttemperEngineSink@@UAE@XZ ; CAttemperEngineSink::~CAttemperEngineSink
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 38 01 00 00	 push	 312			; 00000138H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCAttemperEngineSink@@UAEPAXI@Z ENDP			; CAttemperEngineSink::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?SendDataToUser@CAttemperEngineSink@@IAE_NGKGGPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wServerID$ = 8						; size = 2
_dwUserID$ = 12						; size = 4
_wMainCmdID$ = 16					; size = 2
_wSubCmdID$ = 20					; size = 2
_pData$ = 24						; size = 4
_wDataSize$ = 28					; size = 2
?SendDataToUser@CAttemperEngineSink@@IAE_NGKGGPAXG@Z PROC ; CAttemperEngineSink::SendDataToUser, COMDAT
; _this$ = ecx

; 1264 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1265 : 	return true;

  0000c	b0 01		 mov	 al, 1

; 1266 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 18 00	 ret	 24			; 00000018H
?SendDataToUser@CAttemperEngineSink@@IAE_NGKGGPAXG@Z ENDP ; CAttemperEngineSink::SendDataToUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?SendDataToGame@CAttemperEngineSink@@IAE_NGGGPAXG@Z
_TEXT	SEGMENT
_dwSocketID$ = -20					; size = 4
_pBindParameter$ = -16					; size = 4
_wBindIndex$ = -12					; size = 2
_pGlobalServerItem$ = -8				; size = 4
_this$ = -4						; size = 4
_wServerID$ = 8						; size = 2
_wMainCmdID$ = 12					; size = 2
_wSubCmdID$ = 16					; size = 2
_pData$ = 20						; size = 4
_wDataSize$ = 24					; size = 2
?SendDataToGame@CAttemperEngineSink@@IAE_NGGGPAXG@Z PROC ; CAttemperEngineSink::SendDataToGame, COMDAT
; _this$ = ecx

; 1246 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1247 : 	//查找房间
; 1248 : 	CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.SearchServerItem(wServerID);

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wServerID$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	83 c1 24	 add	 ecx, 36			; 00000024H
  00017	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  0001c	89 45 f8	 mov	 DWORD PTR _pGlobalServerItem$[ebp], eax

; 1249 : 	if (pGlobalServerItem==NULL) return false;

  0001f	83 7d f8 00	 cmp	 DWORD PTR _pGlobalServerItem$[ebp], 0
  00023	75 04		 jne	 SHORT $LN2@SendDataTo
  00025	32 c0		 xor	 al, al
  00027	eb 56		 jmp	 SHORT $LN1@SendDataTo
$LN2@SendDataTo:

; 1250 : 
; 1251 : 	//获取参数
; 1252 : 	WORD wBindIndex=pGlobalServerItem->GetIndex();

  00029	8b 4d f8	 mov	 ecx, DWORD PTR _pGlobalServerItem$[ebp]
  0002c	e8 00 00 00 00	 call	 ?GetIndex@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetIndex
  00031	66 89 45 f4	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 1253 : 	tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  00035	0f b7 45 f4	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  00039	6b c8 14	 imul	 ecx, eax, 20
  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  00042	89 4d f0	 mov	 DWORD PTR _pBindParameter$[ebp], ecx

; 1254 : 
; 1255 : 	//发送数据
; 1256 : 	DWORD dwSocketID=pBindParameter->dwSocketID;

  00045	8b 45 f0	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	89 4d ec	 mov	 DWORD PTR _dwSocketID$[ebp], ecx

; 1257 : 	m_pITCPNetworkEngine->SendData(dwSocketID,wMainCmdID,wSubCmdID,pData,wDataSize);

  0004d	0f b7 45 18	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00051	50		 push	 eax
  00052	8b 4d 14	 mov	 ecx, DWORD PTR _pData$[ebp]
  00055	51		 push	 ecx
  00056	0f b7 55 10	 movzx	 edx, WORD PTR _wSubCmdID$[ebp]
  0005a	52		 push	 edx
  0005b	0f b7 45 0c	 movzx	 eax, WORD PTR _wMainCmdID$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d ec	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00063	51		 push	 ecx
  00064	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00067	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	8b 10		 mov	 edx, DWORD PTR [eax]
  00072	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00078	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0007b	ff d0		 call	 eax

; 1258 : 
; 1259 : 	return true;

  0007d	b0 01		 mov	 al, 1
$LN1@SendDataTo:

; 1260 : }

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 14 00	 ret	 20			; 00000014H
?SendDataToGame@CAttemperEngineSink@@IAE_NGGGPAXG@Z ENDP ; CAttemperEngineSink::SendDataToGame
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?SendMatchListItem@CAttemperEngineSink@@IAE_NK@Z
_TEXT	SEGMENT
_pGlobalServerItem$1 = -16400				; size = 4
_pGameMatch$2 = -16396					; size = 4
_cbBuffer$ = -16392					; size = 16376
_Position$ = -16					; size = 4
_wPacketSize$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwSocketID$ = 8					; size = 4
?SendMatchListItem@CAttemperEngineSink@@IAE_NK@Z PROC	; CAttemperEngineSink::SendMatchListItem, COMDAT
; _this$ = ecx

; 1209 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 10 42 00 00	 mov	 eax, 16912		; 00004210H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1210 : 	//变量定义
; 1211 : 	WORD wPacketSize=0L;

  0001d	33 c0		 xor	 eax, eax
  0001f	66 89 45 f4	 mov	 WORD PTR _wPacketSize$[ebp], ax

; 1212 : 	POSITION Position=NULL;

  00023	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _Position$[ebp], 0
$LN4@SendMatchL:

; 1213 : 	BYTE cbBuffer[SOCKET_TCP_PACKET];
; 1214 : 
; 1215 : 	//收集数据
; 1216 : 	do
; 1217 : 	{
; 1218 : 		//发送数据
; 1219 : 		if ((wPacketSize+sizeof(tagGameServer))>sizeof(cbBuffer))

  0002a	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  0002e	05 9b 00 00 00	 add	 eax, 155		; 0000009bH
  00033	3d f8 3f 00 00	 cmp	 eax, 16376		; 00003ff8H
  00038	76 33		 jbe	 SHORT $LN5@SendMatchL

; 1220 : 		{
; 1221 : 			m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_SERVICE_INFO,SUB_CS_S_MATCH_INSERT,cbBuffer,wPacketSize);

  0003a	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  0003e	50		 push	 eax
  0003f	8d 8d f8 bf ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  00045	51		 push	 ecx
  00046	6a 78		 push	 120			; 00000078H
  00048	6a 02		 push	 2
  0004a	8b 55 08	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  0004d	52		 push	 edx
  0004e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00057	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0005a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0005c	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  00062	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00065	ff d2		 call	 edx

; 1222 : 			wPacketSize=0;

  00067	33 c0		 xor	 eax, eax
  00069	66 89 45 f4	 mov	 WORD PTR _wPacketSize$[ebp], ax
$LN5@SendMatchL:

; 1223 : 		}
; 1224 : 
; 1225 : 		//获取对象
; 1226 : 		tagGameMatch * pGameMatch=(tagGameMatch *)(cbBuffer+wPacketSize);

  0006d	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  00071	8d 8c 05 f8 bf
	ff ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp+eax]
  00078	89 8d f4 bf ff
	ff		 mov	 DWORD PTR _pGameMatch$2[ebp], ecx

; 1227 : 		CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.EnumServerItem(Position);

  0007e	8d 45 f0	 lea	 eax, DWORD PTR _Position$[ebp]
  00081	50		 push	 eax
  00082	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	83 c1 24	 add	 ecx, 36			; 00000024H
  00088	e8 00 00 00 00	 call	 ?EnumServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@AAPAU__POSITION@@@Z ; CGlobalInfoManager::EnumServerItem
  0008d	89 85 f0 bf ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$1[ebp], eax

; 1228 : 
; 1229 : 		//设置数据
; 1230 : 		if (pGlobalServerItem!=NULL && pGlobalServerItem->IsMatchServer())

  00093	83 bd f0 bf ff
	ff 00		 cmp	 DWORD PTR _pGlobalServerItem$1[ebp], 0
  0009a	74 3f		 je	 SHORT $LN2@SendMatchL
  0009c	8b 8d f0 bf ff
	ff		 mov	 ecx, DWORD PTR _pGlobalServerItem$1[ebp]
  000a2	e8 00 00 00 00	 call	 ?IsMatchServer@CGlobalServerItem@@QAE_NXZ ; CGlobalServerItem::IsMatchServer
  000a7	0f b6 c0	 movzx	 eax, al
  000aa	85 c0		 test	 eax, eax
  000ac	74 2d		 je	 SHORT $LN2@SendMatchL

; 1231 : 		{
; 1232 : 			wPacketSize+=sizeof(tagGameMatch);

  000ae	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  000b2	05 80 02 00 00	 add	 eax, 640		; 00000280H
  000b7	66 89 45 f4	 mov	 WORD PTR _wPacketSize$[ebp], ax

; 1233 : 			CopyMemory(pGameMatch,&pGlobalServerItem->m_GameMatch,sizeof(tagGameMatch));

  000bb	68 80 02 00 00	 push	 640			; 00000280H
  000c0	8b 85 f0 bf ff
	ff		 mov	 eax, DWORD PTR _pGlobalServerItem$1[ebp]
  000c6	05 a1 00 00 00	 add	 eax, 161		; 000000a1H
  000cb	50		 push	 eax
  000cc	8b 8d f4 bf ff
	ff		 mov	 ecx, DWORD PTR _pGameMatch$2[ebp]
  000d2	51		 push	 ecx
  000d3	e8 00 00 00 00	 call	 _memcpy
  000d8	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SendMatchL:

; 1234 : 		}
; 1235 : 
; 1236 : 	} while (Position!=NULL);

  000db	83 7d f0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  000df	0f 85 45 ff ff
	ff		 jne	 $LN4@SendMatchL

; 1237 : 
; 1238 : 	//发送数据
; 1239 : 	if (wPacketSize>0) m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_SERVICE_INFO,SUB_CS_S_MATCH_INSERT,cbBuffer,wPacketSize);

  000e5	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  000e9	85 c0		 test	 eax, eax
  000eb	7e 2d		 jle	 SHORT $LN7@SendMatchL
  000ed	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  000f1	50		 push	 eax
  000f2	8d 8d f8 bf ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  000f8	51		 push	 ecx
  000f9	6a 78		 push	 120			; 00000078H
  000fb	6a 02		 push	 2
  000fd	8b 55 08	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  00100	52		 push	 edx
  00101	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00104	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  0010a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0010d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0010f	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  00115	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00118	ff d2		 call	 edx
$LN7@SendMatchL:

; 1240 : 
; 1241 : 	return true;

  0011a	b0 01		 mov	 al, 1

; 1242 : }

  0011c	5f		 pop	 edi
  0011d	5e		 pop	 esi
  0011e	5b		 pop	 ebx
  0011f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00122	33 cd		 xor	 ecx, ebp
  00124	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00129	8b e5		 mov	 esp, ebp
  0012b	5d		 pop	 ebp
  0012c	c2 04 00	 ret	 4
?SendMatchListItem@CAttemperEngineSink@@IAE_NK@Z ENDP	; CAttemperEngineSink::SendMatchListItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?SendServerListItem@CAttemperEngineSink@@IAE_NK@Z
_TEXT	SEGMENT
_pGlobalServerItem$1 = -16400				; size = 4
_pGameServer$2 = -16396					; size = 4
_cbBuffer$ = -16392					; size = 16376
_Position$ = -16					; size = 4
_wPacketSize$ = -12					; size = 2
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwSocketID$ = 8					; size = 4
?SendServerListItem@CAttemperEngineSink@@IAE_NK@Z PROC	; CAttemperEngineSink::SendServerListItem, COMDAT
; _this$ = ecx

; 1167 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 10 42 00 00	 mov	 eax, 16912		; 00004210H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1168 : 	//变量定义
; 1169 : 	WORD wPacketSize=0L;

  0001d	33 c0		 xor	 eax, eax
  0001f	66 89 45 f4	 mov	 WORD PTR _wPacketSize$[ebp], ax

; 1170 : 	POSITION Position=NULL;

  00023	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _Position$[ebp], 0

; 1171 : 	BYTE cbBuffer[SOCKET_TCP_PACKET];
; 1172 : 
; 1173 : 	//发送信息
; 1174 : 	m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_INFO);

  0002a	6a 6e		 push	 110			; 0000006eH
  0002c	6a 02		 push	 2
  0002e	8b 45 08	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00031	50		 push	 eax
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 12		 mov	 edx, DWORD PTR [edx]
  00040	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00046	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00049	ff d0		 call	 eax
$LN4@SendServer:

; 1175 : 
; 1176 : 	//收集数据
; 1177 : 	do
; 1178 : 	{
; 1179 : 		//发送数据
; 1180 : 		if ((wPacketSize+sizeof(tagGameServer))>sizeof(cbBuffer))

  0004b	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  0004f	05 9b 00 00 00	 add	 eax, 155		; 0000009bH
  00054	3d f8 3f 00 00	 cmp	 eax, 16376		; 00003ff8H
  00059	76 33		 jbe	 SHORT $LN5@SendServer

; 1181 : 		{
; 1182 : 			m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_INSERT,cbBuffer,wPacketSize);

  0005b	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  0005f	50		 push	 eax
  00060	8d 8d f8 bf ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  00066	51		 push	 ecx
  00067	6a 70		 push	 112			; 00000070H
  00069	6a 02		 push	 2
  0006b	8b 55 08	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  0006e	52		 push	 edx
  0006f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00072	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00078	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0007b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007d	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  00083	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00086	ff d2		 call	 edx

; 1183 : 			wPacketSize=0;

  00088	33 c0		 xor	 eax, eax
  0008a	66 89 45 f4	 mov	 WORD PTR _wPacketSize$[ebp], ax
$LN5@SendServer:

; 1184 : 		}
; 1185 : 
; 1186 : 		//获取对象
; 1187 : 		tagGameServer * pGameServer=(tagGameServer *)(cbBuffer+wPacketSize);

  0008e	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  00092	8d 8c 05 f8 bf
	ff ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp+eax]
  00099	89 8d f4 bf ff
	ff		 mov	 DWORD PTR _pGameServer$2[ebp], ecx

; 1188 : 		CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.EnumServerItem(Position);

  0009f	8d 45 f0	 lea	 eax, DWORD PTR _Position$[ebp]
  000a2	50		 push	 eax
  000a3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	83 c1 24	 add	 ecx, 36			; 00000024H
  000a9	e8 00 00 00 00	 call	 ?EnumServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@AAPAU__POSITION@@@Z ; CGlobalInfoManager::EnumServerItem
  000ae	89 85 f0 bf ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$1[ebp], eax

; 1189 : 
; 1190 : 		//设置数据
; 1191 : 		if (pGlobalServerItem!=NULL)

  000b4	83 bd f0 bf ff
	ff 00		 cmp	 DWORD PTR _pGlobalServerItem$1[ebp], 0
  000bb	74 2b		 je	 SHORT $LN2@SendServer

; 1192 : 		{
; 1193 : 			wPacketSize+=sizeof(tagGameServer);

  000bd	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  000c1	05 9b 00 00 00	 add	 eax, 155		; 0000009bH
  000c6	66 89 45 f4	 mov	 WORD PTR _wPacketSize$[ebp], ax

; 1194 : 			CopyMemory(pGameServer,&pGlobalServerItem->m_GameServer,sizeof(tagGameServer));

  000ca	68 9b 00 00 00	 push	 155			; 0000009bH
  000cf	8b 85 f0 bf ff
	ff		 mov	 eax, DWORD PTR _pGlobalServerItem$1[ebp]
  000d5	83 c0 06	 add	 eax, 6
  000d8	50		 push	 eax
  000d9	8b 8d f4 bf ff
	ff		 mov	 ecx, DWORD PTR _pGameServer$2[ebp]
  000df	51		 push	 ecx
  000e0	e8 00 00 00 00	 call	 _memcpy
  000e5	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SendServer:

; 1195 : 		}
; 1196 : 
; 1197 : 	} while (Position!=NULL);

  000e8	83 7d f0 00	 cmp	 DWORD PTR _Position$[ebp], 0
  000ec	0f 85 59 ff ff
	ff		 jne	 $LN4@SendServer

; 1198 : 
; 1199 : 	//发送数据
; 1200 : 	if (wPacketSize>0) m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_INSERT,cbBuffer,wPacketSize);

  000f2	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  000f6	85 c0		 test	 eax, eax
  000f8	7e 2d		 jle	 SHORT $LN7@SendServer
  000fa	0f b7 45 f4	 movzx	 eax, WORD PTR _wPacketSize$[ebp]
  000fe	50		 push	 eax
  000ff	8d 8d f8 bf ff
	ff		 lea	 ecx, DWORD PTR _cbBuffer$[ebp]
  00105	51		 push	 ecx
  00106	6a 70		 push	 112			; 00000070H
  00108	6a 02		 push	 2
  0010a	8b 55 08	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  0010d	52		 push	 edx
  0010e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00111	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00117	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0011a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0011c	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  00122	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00125	ff d2		 call	 edx
$LN7@SendServer:

; 1201 : 
; 1202 : 	//发送完成
; 1203 : 	m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_FINISH);

  00127	6a 73		 push	 115			; 00000073H
  00129	6a 02		 push	 2
  0012b	8b 45 08	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0012e	50		 push	 eax
  0012f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00132	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  00138	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0013b	8b 12		 mov	 edx, DWORD PTR [edx]
  0013d	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00143	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00146	ff d0		 call	 eax

; 1204 : 
; 1205 : 	return true;

  00148	b0 01		 mov	 al, 1

; 1206 : }

  0014a	5f		 pop	 edi
  0014b	5e		 pop	 esi
  0014c	5b		 pop	 ebx
  0014d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00150	33 cd		 xor	 ecx, ebp
  00152	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00157	8b e5		 mov	 esp, ebp
  00159	5d		 pop	 ebp
  0015a	c2 04 00	 ret	 4
?SendServerListItem@CAttemperEngineSink@@IAE_NK@Z ENDP	; CAttemperEngineSink::SendServerListItem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -260						; size = 4
_DeleteParameter$1 = -192				; size = 4
_pDeleteParameter$2 = -188				; size = 4
_ModifyParameter$3 = -184				; size = 84
_pModifyParameter$4 = -100				; size = 4
_AddParameter$5 = -96					; size = 84
_pAddParameter$6 = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainAndroidService, COMDAT
; _this$ = ecx

; 1103 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1104 : 	switch (wSubCmdID)

  00019	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0001d	89 85 fc fe ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00023	83 bd fc fe ff
	ff 64		 cmp	 DWORD PTR tv65[ebp], 100 ; 00000064H
  0002a	74 1f		 je	 SHORT $LN4@OnTCPNetwo
  0002c	83 bd fc fe ff
	ff 65		 cmp	 DWORD PTR tv65[ebp], 101 ; 00000065H
  00033	0f 84 82 00 00
	00		 je	 $LN6@OnTCPNetwo
  00039	83 bd fc fe ff
	ff 66		 cmp	 DWORD PTR tv65[ebp], 102 ; 00000066H
  00040	0f 84 e8 00 00
	00		 je	 $LN8@OnTCPNetwo
  00046	e9 50 01 00 00	 jmp	 $LN2@OnTCPNetwo
$LN4@OnTCPNetwo:

; 1105 : 	{
; 1106 : 	case SUB_CS_C_ADDPARAMETER:		//添加参数
; 1107 : 		{
; 1108 : 			//参数校验
; 1109 : 			ASSERT(sizeof(CMD_CS_C_AddParameter)==wDataSize);

  0004b	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0004f	83 f8 56	 cmp	 eax, 86			; 00000056H
  00052	74 19		 je	 SHORT $LN11@OnTCPNetwo
  00054	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  0005a	83 c1 06	 add	 ecx, 6
  0005d	51		 push	 ecx
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00063	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00068	85 c0		 test	 eax, eax
  0006a	74 01		 je	 SHORT $LN11@OnTCPNetwo
  0006c	cc		 int	 3
$LN11@OnTCPNetwo:

; 1110 : 			if(sizeof(CMD_CS_C_AddParameter)!=wDataSize) return false;

  0006d	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00071	83 f8 56	 cmp	 eax, 86			; 00000056H
  00074	74 07		 je	 SHORT $LN5@OnTCPNetwo
  00076	32 c0		 xor	 al, al
  00078	e9 20 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 1111 : 
; 1112 : 			//提取数据
; 1113 : 			CMD_CS_C_AddParameter * pAddParameter = (CMD_CS_C_AddParameter *)pData;

  0007d	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00080	89 45 f4	 mov	 DWORD PTR _pAddParameter$6[ebp], eax

; 1114 : 
; 1115 : 			//构造结构
; 1116 : 			CMD_CS_S_AddParameter AddParameter;
; 1117 : 			CopyMemory(&AddParameter.AndroidParameter,&pAddParameter->AndroidParameter,sizeof(tagAndroidParameter));

  00083	6a 54		 push	 84			; 00000054H
  00085	8b 45 f4	 mov	 eax, DWORD PTR _pAddParameter$6[ebp]
  00088	83 c0 02	 add	 eax, 2
  0008b	50		 push	 eax
  0008c	8d 4d a0	 lea	 ecx, DWORD PTR _AddParameter$5[ebp]
  0008f	51		 push	 ecx
  00090	e8 00 00 00 00	 call	 _memcpy
  00095	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1118 : 
; 1119 : 			//发送消息
; 1120 : 			SendDataToGame(pAddParameter->wServerID,MDM_CS_ANDROID_SERVICE,SUB_CS_S_ADDPARAMETER,&AddParameter,sizeof(AddParameter));

  00098	6a 54		 push	 84			; 00000054H
  0009a	8d 45 a0	 lea	 eax, DWORD PTR _AddParameter$5[ebp]
  0009d	50		 push	 eax
  0009e	68 c8 00 00 00	 push	 200			; 000000c8H
  000a3	6a 06		 push	 6
  000a5	8b 4d f4	 mov	 ecx, DWORD PTR _pAddParameter$6[ebp]
  000a8	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  000ab	52		 push	 edx
  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	e8 00 00 00 00	 call	 ?SendDataToGame@CAttemperEngineSink@@IAE_NGGGPAXG@Z ; CAttemperEngineSink::SendDataToGame

; 1121 : 
; 1122 : 			return true;

  000b4	b0 01		 mov	 al, 1
  000b6	e9 e2 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 1123 : 		}
; 1124 : 	case SUB_CS_C_MODIFYPARAMETER:  //修改参数
; 1125 : 		{
; 1126 : 			//参数校验
; 1127 : 			ASSERT(sizeof(CMD_CS_C_ModifyParameter)==wDataSize);

  000bb	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000bf	83 f8 56	 cmp	 eax, 86			; 00000056H
  000c2	74 19		 je	 SHORT $LN12@OnTCPNetwo
  000c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  000ca	83 c1 18	 add	 ecx, 24			; 00000018H
  000cd	51		 push	 ecx
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000d3	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000d8	85 c0		 test	 eax, eax
  000da	74 01		 je	 SHORT $LN12@OnTCPNetwo
  000dc	cc		 int	 3
$LN12@OnTCPNetwo:

; 1128 : 			if(sizeof(CMD_CS_C_ModifyParameter)!=wDataSize) return false;

  000dd	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000e1	83 f8 56	 cmp	 eax, 86			; 00000056H
  000e4	74 07		 je	 SHORT $LN7@OnTCPNetwo
  000e6	32 c0		 xor	 al, al
  000e8	e9 b0 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN7@OnTCPNetwo:

; 1129 : 
; 1130 : 			//提取数据
; 1131 : 			CMD_CS_C_ModifyParameter * pModifyParameter = (CMD_CS_C_ModifyParameter *)pData;

  000ed	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  000f0	89 45 9c	 mov	 DWORD PTR _pModifyParameter$4[ebp], eax

; 1132 : 
; 1133 : 			//构造结构
; 1134 : 			CMD_CS_S_ModifyParameter ModifyParameter;
; 1135 : 			CopyMemory(&ModifyParameter.AndroidParameter,&pModifyParameter->AndroidParameter,sizeof(tagAndroidParameter));

  000f3	6a 54		 push	 84			; 00000054H
  000f5	8b 45 9c	 mov	 eax, DWORD PTR _pModifyParameter$4[ebp]
  000f8	83 c0 02	 add	 eax, 2
  000fb	50		 push	 eax
  000fc	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _ModifyParameter$3[ebp]
  00102	51		 push	 ecx
  00103	e8 00 00 00 00	 call	 _memcpy
  00108	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1136 : 
; 1137 : 			//发送通知
; 1138 : 			SendDataToGame(pModifyParameter->wServerID,MDM_CS_ANDROID_SERVICE,SUB_CS_S_MODIFYPARAMETER,&ModifyParameter,sizeof(ModifyParameter));

  0010b	6a 54		 push	 84			; 00000054H
  0010d	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _ModifyParameter$3[ebp]
  00113	50		 push	 eax
  00114	68 c9 00 00 00	 push	 201			; 000000c9H
  00119	6a 06		 push	 6
  0011b	8b 4d 9c	 mov	 ecx, DWORD PTR _pModifyParameter$4[ebp]
  0011e	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  00121	52		 push	 edx
  00122	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	e8 00 00 00 00	 call	 ?SendDataToGame@CAttemperEngineSink@@IAE_NGGGPAXG@Z ; CAttemperEngineSink::SendDataToGame

; 1139 : 
; 1140 : 			return true;

  0012a	b0 01		 mov	 al, 1
  0012c	eb 6f		 jmp	 SHORT $LN1@OnTCPNetwo
$LN8@OnTCPNetwo:

; 1141 : 		}
; 1142 : 	case SUB_CS_C_DELETEPARAMETER:  //删除参数
; 1143 : 		{
; 1144 : 			//参数校验
; 1145 : 			ASSERT(sizeof(CMD_CS_C_DeleteParameter)==wDataSize);

  0012e	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00132	83 f8 06	 cmp	 eax, 6
  00135	74 19		 je	 SHORT $LN13@OnTCPNetwo
  00137	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  0013d	83 c1 2a	 add	 ecx, 42			; 0000002aH
  00140	51		 push	 ecx
  00141	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00146	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0014b	85 c0		 test	 eax, eax
  0014d	74 01		 je	 SHORT $LN13@OnTCPNetwo
  0014f	cc		 int	 3
$LN13@OnTCPNetwo:

; 1146 : 			if(sizeof(CMD_CS_C_DeleteParameter)!=wDataSize) return false;

  00150	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00154	83 f8 06	 cmp	 eax, 6
  00157	74 04		 je	 SHORT $LN9@OnTCPNetwo
  00159	32 c0		 xor	 al, al
  0015b	eb 40		 jmp	 SHORT $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 1147 : 
; 1148 : 			//提取数据
; 1149 : 			CMD_CS_C_DeleteParameter * pDeleteParameter = (CMD_CS_C_DeleteParameter *)pData;

  0015d	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00160	89 85 44 ff ff
	ff		 mov	 DWORD PTR _pDeleteParameter$2[ebp], eax

; 1150 : 
; 1151 : 			//构造结构
; 1152 : 			CMD_CS_S_DeleteParameter DeleteParameter;
; 1153 : 			DeleteParameter.dwBatchID=pDeleteParameter->dwBatchID;

  00166	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _pDeleteParameter$2[ebp]
  0016c	8b 48 02	 mov	 ecx, DWORD PTR [eax+2]
  0016f	89 8d 40 ff ff
	ff		 mov	 DWORD PTR _DeleteParameter$1[ebp], ecx

; 1154 : 
; 1155 : 			//发送通知
; 1156 : 			SendDataToGame(pDeleteParameter->wServerID,MDM_CS_ANDROID_SERVICE,SUB_CS_S_DELETEPARAMETER,&DeleteParameter,sizeof(DeleteParameter));

  00175	6a 04		 push	 4
  00177	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _DeleteParameter$1[ebp]
  0017d	50		 push	 eax
  0017e	68 ca 00 00 00	 push	 202			; 000000caH
  00183	6a 06		 push	 6
  00185	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _pDeleteParameter$2[ebp]
  0018b	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0018e	52		 push	 edx
  0018f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00192	e8 00 00 00 00	 call	 ?SendDataToGame@CAttemperEngineSink@@IAE_NGGGPAXG@Z ; CAttemperEngineSink::SendDataToGame

; 1157 : 
; 1158 : 			return true;

  00197	b0 01		 mov	 al, 1
  00199	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 1159 : 		}
; 1160 : 	}
; 1161 : 
; 1162 : 	return false;

  0019b	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 1163 : }

  0019d	5f		 pop	 edi
  0019e	5e		 pop	 esi
  0019f	5b		 pop	 ebx
  001a0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a3	33 cd		 xor	 ecx, ebp
  001a5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001aa	8b e5		 mov	 esp, ebp
  001ac	5d		 pop	 ebp
  001ad	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainAndroidService@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainAndroidService
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainManagerService@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainManagerService@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainManagerService, COMDAT
; _this$ = ecx

; 1080 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1081 : 	switch (wSubCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	83 7d b8 01	 cmp	 DWORD PTR tv65[ebp], 1
  00017	74 08		 je	 SHORT $LN4@OnTCPNetwo
  00019	83 7d b8 02	 cmp	 DWORD PTR tv65[ebp], 2
  0001d	74 2e		 je	 SHORT $LN5@OnTCPNetwo
  0001f	eb 5b		 jmp	 SHORT $LN2@OnTCPNetwo
$LN4@OnTCPNetwo:

; 1082 : 	{
; 1083 : 	case SUB_CS_C_SYSTEM_MESSAGE:	//系统消息
; 1084 : 		{
; 1085 : 			//发送通知
; 1086 : 			m_pITCPNetworkEngine->SendDataBatch(MDM_CS_MANAGER_SERVICE,SUB_CS_S_SYSTEM_MESSAGE,pData,wDataSize,0L);

  00021	6a 00		 push	 0
  00023	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00027	50		 push	 eax
  00028	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  0002b	51		 push	 ecx
  0002c	6a 64		 push	 100			; 00000064H
  0002e	6a 05		 push	 5
  00030	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00033	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00044	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00047	ff d0		 call	 eax

; 1087 : 			return true;

  00049	b0 01		 mov	 al, 1
  0004b	eb 31		 jmp	 SHORT $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 1088 : 		}
; 1089 : 	case SUB_CS_C_PROPERTY_TRUMPET:  //喇叭消息
; 1090 : 		{
; 1091 : 			//发送通知
; 1092 : 			m_pITCPNetworkEngine->SendDataBatch(MDM_CS_MANAGER_SERVICE,SUB_CS_S_PROPERTY_TRUMPET,pData,wDataSize,0L);

  0004d	6a 00		 push	 0
  0004f	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00053	50		 push	 eax
  00054	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00057	51		 push	 ecx
  00058	68 c8 00 00 00	 push	 200			; 000000c8H
  0005d	6a 05		 push	 5
  0005f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00062	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	8b 10		 mov	 edx, DWORD PTR [eax]
  0006d	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00073	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00076	ff d0		 call	 eax

; 1093 : 
; 1094 : 			return true;

  00078	b0 01		 mov	 al, 1
  0007a	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 1095 : 		}
; 1096 : 	}
; 1097 : 
; 1098 : 	return false;

  0007c	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 1099 : }

  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	5b		 pop	 ebx
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainManagerService@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainManagerService
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -18404						; size = 4
tv314 = -18402						; size = 2
tv155 = -18402						; size = 2
_pGlobalServerItem$1 = -17888				; size = 4
_wServerIndex$2 = -17884				; size = 2
_pUserInfo$3 = -17880					; size = 4
_pGlobalUserItem$4 = -17876				; size = 4
_i$5 = -17872						; size = 4
_nSearchCount$6 = -17868				; size = 4
_cbPacketSize$7 = -17864				; size = 4
_cbPacketHeadSize$8 = -17860				; size = 4
_nCount$9 = -17856					; size = 4
_pAllSearchCorrespond$10 = -17852			; size = 4
_cbDataBuffer$11 = -17848				; size = 16376
_pSearchCorrespond$12 = -1472				; size = 4
_wItemSize$13 = -1468					; size = 2
_wHeadSize$14 = -1464					; size = 2
_pUserInfo$15 = -1460					; size = 4
_wIndex$16 = -1456					; size = 2
_pGlobalServerItem$17 = -1452				; size = 4
_wServerIndex$18 = -1448				; size = 2
_i$19 = -1441						; size = 1
_ResultUserItem$20 = -1440				; size = 8
_SearchCorrespond$21 = -1432				; size = 1418
_pSearchCorrespond$22 = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainRemoteService, COMDAT
; _this$ = ecx

; 919  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 e4 47 00 00	 mov	 eax, 18404		; 000047e4H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 920  : 	switch (wSubCmdID)

  0001d	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  00021	89 85 1c b8 ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00027	83 bd 1c b8 ff
	ff 02		 cmp	 DWORD PTR tv65[ebp], 2
  0002e	74 12		 je	 SHORT $LN13@OnTCPNetwo
  00030	83 bd 1c b8 ff
	ff 03		 cmp	 DWORD PTR tv65[ebp], 3
  00037	0f 84 21 04 00
	00		 je	 $LN20@OnTCPNetwo
  0003d	e9 e1 07 00 00	 jmp	 $LN2@OnTCPNetwo
$LN13@OnTCPNetwo:

; 921  : 	{
; 922  : 	case SUB_CS_C_SEARCH_CORRESPOND:	//协调查找
; 923  : 		{
; 924  : 			//效验参数
; 925  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_SearchCorrespond));

  00042	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00046	83 f8 2c	 cmp	 eax, 44			; 0000002cH
  00049	74 19		 je	 SHORT $LN27@OnTCPNetwo
  0004b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00051	83 c1 06	 add	 ecx, 6
  00054	51		 push	 ecx
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0005a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005f	85 c0		 test	 eax, eax
  00061	74 01		 je	 SHORT $LN27@OnTCPNetwo
  00063	cc		 int	 3
$LN27@OnTCPNetwo:

; 926  : 			if (wDataSize!=sizeof(CMD_CS_C_SearchCorrespond)) return false;

  00064	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00068	83 f8 2c	 cmp	 eax, 44			; 0000002cH
  0006b	74 07		 je	 SHORT $LN14@OnTCPNetwo
  0006d	32 c0		 xor	 al, al
  0006f	e9 b1 07 00 00	 jmp	 $LN1@OnTCPNetwo
$LN14@OnTCPNetwo:

; 927  : 
; 928  : 			//处理消息
; 929  : 			CMD_CS_C_SearchCorrespond * pSearchCorrespond=(CMD_CS_C_SearchCorrespond *)pData;

  00074	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00077	89 45 f4	 mov	 DWORD PTR _pSearchCorrespond$22[ebp], eax

; 930  : 			pSearchCorrespond->szNickName[CountArray(pSearchCorrespond->szNickName)-1]=0;

  0007a	b8 01 00 00 00	 mov	 eax, 1
  0007f	6b c8 1f	 imul	 ecx, eax, 31
  00082	8b 55 f4	 mov	 edx, DWORD PTR _pSearchCorrespond$22[ebp]
  00085	c6 44 0a 0c 00	 mov	 BYTE PTR [edx+ecx+12], 0

; 931  : 
; 932  : 			//变量定义
; 933  : 			CMD_CS_S_SearchCorrespond SearchCorrespond;
; 934  : 			ZeroMemory(&SearchCorrespond,sizeof(SearchCorrespond));

  0008a	68 8a 05 00 00	 push	 1418			; 0000058aH
  0008f	6a 00		 push	 0
  00091	8d 85 68 fa ff
	ff		 lea	 eax, DWORD PTR _SearchCorrespond$21[ebp]
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 _memset
  0009d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 935  : 
; 936  : 			//结果用户
; 937  : 			CGlobalUserItem * ResultUserItem[2];
; 938  : 			ZeroMemory(ResultUserItem,sizeof(ResultUserItem));

  000a0	6a 08		 push	 8
  000a2	6a 00		 push	 0
  000a4	8d 85 60 fa ff
	ff		 lea	 eax, DWORD PTR _ResultUserItem$20[ebp]
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 _memset
  000b0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 939  : 
; 940  : 			//设置变量
; 941  : 			SearchCorrespond.dwSocketID=pSearchCorrespond->dwSocketID;

  000b3	8b 45 f4	 mov	 eax, DWORD PTR _pSearchCorrespond$22[ebp]
  000b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b8	89 8d 68 fa ff
	ff		 mov	 DWORD PTR _SearchCorrespond$21[ebp], ecx

; 942  : 			SearchCorrespond.dwClientAddr=pSearchCorrespond->dwClientAddr;

  000be	8b 45 f4	 mov	 eax, DWORD PTR _pSearchCorrespond$22[ebp]
  000c1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c4	89 8d 6c fa ff
	ff		 mov	 DWORD PTR _SearchCorrespond$21[ebp+4], ecx

; 943  : 
; 944  : 			//查找用户
; 945  : 			if (pSearchCorrespond->dwGameID!=0L)

  000ca	8b 45 f4	 mov	 eax, DWORD PTR _pSearchCorrespond$22[ebp]
  000cd	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  000d1	74 21		 je	 SHORT $LN15@OnTCPNetwo

; 946  : 			{
; 947  : 				ResultUserItem[0]=m_GlobalInfoManager.SearchUserItemByGameID(pSearchCorrespond->dwGameID);

  000d3	8b 45 f4	 mov	 eax, DWORD PTR _pSearchCorrespond$22[ebp]
  000d6	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000d9	51		 push	 ecx
  000da	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000dd	83 c1 24	 add	 ecx, 36			; 00000024H
  000e0	e8 00 00 00 00	 call	 ?SearchUserItemByGameID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z ; CGlobalInfoManager::SearchUserItemByGameID
  000e5	ba 04 00 00 00	 mov	 edx, 4
  000ea	6b ca 00	 imul	 ecx, edx, 0
  000ed	89 84 0d 60 fa
	ff ff		 mov	 DWORD PTR _ResultUserItem$20[ebp+ecx], eax
$LN15@OnTCPNetwo:

; 948  : 			}
; 949  : 
; 950  : 			//查找用户
; 951  : 			if (pSearchCorrespond->szNickName[0]!=0)

  000f4	b8 01 00 00 00	 mov	 eax, 1
  000f9	6b c8 00	 imul	 ecx, eax, 0
  000fc	8b 55 f4	 mov	 edx, DWORD PTR _pSearchCorrespond$22[ebp]
  000ff	0f be 44 0a 0c	 movsx	 eax, BYTE PTR [edx+ecx+12]
  00104	85 c0		 test	 eax, eax
  00106	74 30		 je	 SHORT $LN16@OnTCPNetwo

; 952  : 			{
; 953  : 				_tcslwr(pSearchCorrespond->szNickName);

  00108	8b 45 f4	 mov	 eax, DWORD PTR _pSearchCorrespond$22[ebp]
  0010b	83 c0 0c	 add	 eax, 12			; 0000000cH
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 __tcslwr
  00114	83 c4 04	 add	 esp, 4

; 954  : 				ResultUserItem[1]=m_GlobalInfoManager.SearchUserItemByNickName(pSearchCorrespond->szNickName);

  00117	8b 45 f4	 mov	 eax, DWORD PTR _pSearchCorrespond$22[ebp]
  0011a	83 c0 0c	 add	 eax, 12			; 0000000cH
  0011d	50		 push	 eax
  0011e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00121	83 c1 24	 add	 ecx, 36			; 00000024H
  00124	e8 00 00 00 00	 call	 ?SearchUserItemByNickName@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@PBD@Z ; CGlobalInfoManager::SearchUserItemByNickName
  00129	b9 04 00 00 00	 mov	 ecx, 4
  0012e	c1 e1 00	 shl	 ecx, 0
  00131	89 84 0d 60 fa
	ff ff		 mov	 DWORD PTR _ResultUserItem$20[ebp+ecx], eax
$LN16@OnTCPNetwo:

; 955  : 			}
; 956  : 
; 957  : 			//设置结果
; 958  : 			for (BYTE i=0;i<CountArray(ResultUserItem);i++)

  00138	c6 85 5f fa ff
	ff 00		 mov	 BYTE PTR _i$19[ebp], 0
  0013f	eb 0e		 jmp	 SHORT $LN6@OnTCPNetwo
$LN4@OnTCPNetwo:
  00141	8a 85 5f fa ff
	ff		 mov	 al, BYTE PTR _i$19[ebp]
  00147	04 01		 add	 al, 1
  00149	88 85 5f fa ff
	ff		 mov	 BYTE PTR _i$19[ebp], al
$LN6@OnTCPNetwo:
  0014f	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  00156	83 f8 02	 cmp	 eax, 2
  00159	0f 83 a2 02 00
	00		 jae	 $LN5@OnTCPNetwo

; 959  : 			{
; 960  : 				if (ResultUserItem[i]!=NULL)

  0015f	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  00166	83 bc 85 60 fa
	ff ff 00	 cmp	 DWORD PTR _ResultUserItem$20[ebp+eax*4], 0
  0016e	0f 84 88 02 00
	00		 je	 $LN17@OnTCPNetwo

; 961  : 				{
; 962  : 					//变量定义
; 963  : 					WORD wServerIndex=0;

  00174	33 c0		 xor	 eax, eax
  00176	66 89 85 58 fa
	ff ff		 mov	 WORD PTR _wServerIndex$18[ebp], ax
$LN9@OnTCPNetwo:

; 964  : 
; 965  : 					//查找房间
; 966  : 					do
; 967  : 					{
; 968  : 						//查找房间
; 969  : 						CGlobalServerItem * pGlobalServerItem=ResultUserItem[i]->EnumServerItem(wServerIndex++);

  0017d	66 8b 85 58 fa
	ff ff		 mov	 ax, WORD PTR _wServerIndex$18[ebp]
  00184	66 89 85 1e b8
	ff ff		 mov	 WORD PTR tv155[ebp], ax
  0018b	0f b7 8d 1e b8
	ff ff		 movzx	 ecx, WORD PTR tv155[ebp]
  00192	51		 push	 ecx
  00193	0f b6 95 5f fa
	ff ff		 movzx	 edx, BYTE PTR _i$19[ebp]
  0019a	8b 8c 95 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+edx*4]
  001a1	e8 00 00 00 00	 call	 ?EnumServerItem@CGlobalUserItem@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalUserItem::EnumServerItem
  001a6	89 85 54 fa ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$17[ebp], eax
  001ac	66 8b 85 58 fa
	ff ff		 mov	 ax, WORD PTR _wServerIndex$18[ebp]
  001b3	66 83 c0 01	 add	 ax, 1
  001b7	66 89 85 58 fa
	ff ff		 mov	 WORD PTR _wServerIndex$18[ebp], ax

; 970  : 
; 971  : 						//终止判断
; 972  : 						if (pGlobalServerItem==NULL) break;

  001be	83 bd 54 fa ff
	ff 00		 cmp	 DWORD PTR _pGlobalServerItem$17[ebp], 0
  001c5	75 05		 jne	 SHORT $LN18@OnTCPNetwo
  001c7	e9 30 02 00 00	 jmp	 $LN17@OnTCPNetwo
$LN18@OnTCPNetwo:

; 973  : 						if (SearchCorrespond.wUserCount>=CountArray(SearchCorrespond.UserRemoteInfo)) break;

  001cc	0f b7 85 70 fa
	ff ff		 movzx	 eax, WORD PTR _SearchCorrespond$21[ebp+8]
  001d3	83 f8 10	 cmp	 eax, 16			; 00000010H
  001d6	72 05		 jb	 SHORT $LN19@OnTCPNetwo
  001d8	e9 1f 02 00 00	 jmp	 $LN17@OnTCPNetwo
$LN19@OnTCPNetwo:

; 974  : 
; 975  : 						//索引定义
; 976  : 						WORD wIndex=SearchCorrespond.wUserCount++;

  001dd	66 8b 85 70 fa
	ff ff		 mov	 ax, WORD PTR _SearchCorrespond$21[ebp+8]
  001e4	66 89 85 50 fa
	ff ff		 mov	 WORD PTR _wIndex$16[ebp], ax
  001eb	66 8b 8d 70 fa
	ff ff		 mov	 cx, WORD PTR _SearchCorrespond$21[ebp+8]
  001f2	66 83 c1 01	 add	 cx, 1
  001f6	66 89 8d 70 fa
	ff ff		 mov	 WORD PTR _SearchCorrespond$21[ebp+8], cx

; 977  : 
; 978  : 						//辅助信息
; 979  : 						SearchCorrespond.UserRemoteInfo[wIndex].cbGender=ResultUserItem[i]->GetGender();

  001fd	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  00204	8b 8c 85 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+eax*4]
  0020b	e8 00 00 00 00	 call	 ?GetGender@CGlobalUserItem@@QAEEXZ ; CGlobalUserItem::GetGender
  00210	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  00217	6b d1 58	 imul	 edx, ecx, 88
  0021a	88 84 15 9c fa
	ff ff		 mov	 BYTE PTR _SearchCorrespond$21[ebp+edx+52], al

; 980  : 						SearchCorrespond.UserRemoteInfo[wIndex].cbMemberOrder=ResultUserItem[i]->GetMemberOrder();

  00221	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  00228	8b 8c 85 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+eax*4]
  0022f	e8 00 00 00 00	 call	 ?GetMemberOrder@CGlobalUserItem@@QAEEXZ ; CGlobalUserItem::GetMemberOrder
  00234	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  0023b	6b d1 58	 imul	 edx, ecx, 88
  0023e	88 84 15 9d fa
	ff ff		 mov	 BYTE PTR _SearchCorrespond$21[ebp+edx+53], al

; 981  : 						SearchCorrespond.UserRemoteInfo[wIndex].cbMasterOrder=ResultUserItem[i]->GetMasterOrder();

  00245	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  0024c	8b 8c 85 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+eax*4]
  00253	e8 00 00 00 00	 call	 ?GetMasterOrder@CGlobalUserItem@@QAEEXZ ; CGlobalUserItem::GetMasterOrder
  00258	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  0025f	6b d1 58	 imul	 edx, ecx, 88
  00262	88 84 15 9e fa
	ff ff		 mov	 BYTE PTR _SearchCorrespond$21[ebp+edx+54], al

; 982  : 
; 983  : 						//用户信息
; 984  : 						SearchCorrespond.UserRemoteInfo[wIndex].dwUserID=ResultUserItem[i]->GetUserID();

  00269	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  00270	8b 8c 85 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+eax*4]
  00277	e8 00 00 00 00	 call	 ?GetUserID@CGlobalUserItem@@QAEKXZ ; CGlobalUserItem::GetUserID
  0027c	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  00283	6b d1 58	 imul	 edx, ecx, 88
  00286	89 84 15 72 fa
	ff ff		 mov	 DWORD PTR _SearchCorrespond$21[ebp+edx+10], eax

; 985  : 						SearchCorrespond.UserRemoteInfo[wIndex].dwGameID=ResultUserItem[i]->GetGameID();

  0028d	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  00294	8b 8c 85 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+eax*4]
  0029b	e8 00 00 00 00	 call	 ?GetGameID@CGlobalUserItem@@QAEKXZ ; CGlobalUserItem::GetGameID
  002a0	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  002a7	6b d1 58	 imul	 edx, ecx, 88
  002aa	89 84 15 76 fa
	ff ff		 mov	 DWORD PTR _SearchCorrespond$21[ebp+edx+14], eax

; 986  : 						lstrcpyn(SearchCorrespond.UserRemoteInfo[wIndex].szNickName,ResultUserItem[i]->GetNickName(),LEN_NICKNAME);

  002b1	6a 20		 push	 32			; 00000020H
  002b3	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  002ba	8b 8c 85 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+eax*4]
  002c1	e8 00 00 00 00	 call	 ?GetNickName@CGlobalUserItem@@QAEPBDXZ ; CGlobalUserItem::GetNickName
  002c6	50		 push	 eax
  002c7	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  002ce	6b d1 58	 imul	 edx, ecx, 88
  002d1	8d 84 15 7a fa
	ff ff		 lea	 eax, DWORD PTR _SearchCorrespond$21[ebp+edx+18]
  002d8	50		 push	 eax
  002d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 987  : 
; 988  : 						//房间信息
; 989  : 						SearchCorrespond.UserRemoteInfo[wIndex].wKindID=pGlobalServerItem->GetKindID();

  002df	8b 8d 54 fa ff
	ff		 mov	 ecx, DWORD PTR _pGlobalServerItem$17[ebp]
  002e5	e8 00 00 00 00	 call	 ?GetKindID@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetKindID
  002ea	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  002f1	6b d1 58	 imul	 edx, ecx, 88
  002f4	66 89 84 15 9f
	fa ff ff	 mov	 WORD PTR _SearchCorrespond$21[ebp+edx+55], ax

; 990  : 						SearchCorrespond.UserRemoteInfo[wIndex].wServerID=pGlobalServerItem->GetServerID();

  002fc	8b 8d 54 fa ff
	ff		 mov	 ecx, DWORD PTR _pGlobalServerItem$17[ebp]
  00302	e8 00 00 00 00	 call	 ?GetServerID@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetServerID
  00307	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  0030e	6b d1 58	 imul	 edx, ecx, 88
  00311	66 89 84 15 a1
	fa ff ff	 mov	 WORD PTR _SearchCorrespond$21[ebp+edx+57], ax

; 991  : 						lstrcpyn(SearchCorrespond.UserRemoteInfo[wIndex].szGameServer,pGlobalServerItem->m_GameServer.szServerName,LEN_SERVER);

  00319	6a 20		 push	 32			; 00000020H
  0031b	8b 85 54 fa ff
	ff		 mov	 eax, DWORD PTR _pGlobalServerItem$17[ebp]
  00321	83 c0 57	 add	 eax, 87			; 00000057H
  00324	50		 push	 eax
  00325	0f b7 8d 50 fa
	ff ff		 movzx	 ecx, WORD PTR _wIndex$16[ebp]
  0032c	6b d1 58	 imul	 edx, ecx, 88
  0032f	8d 84 15 a3 fa
	ff ff		 lea	 eax, DWORD PTR _SearchCorrespond$21[ebp+edx+59]
  00336	50		 push	 eax
  00337	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 992  : 
; 993  : 						tagUserInfo* pUserInfo = ResultUserItem[i]->GetUserInfo();

  0033d	0f b6 85 5f fa
	ff ff		 movzx	 eax, BYTE PTR _i$19[ebp]
  00344	8b 8c 85 60 fa
	ff ff		 mov	 ecx, DWORD PTR _ResultUserItem$20[ebp+eax*4]
  0034b	e8 00 00 00 00	 call	 ?GetUserInfo@CGlobalUserItem@@QAEPAUtagUserInfo@@XZ ; CGlobalUserItem::GetUserInfo
  00350	89 85 4c fa ff
	ff		 mov	 DWORD PTR _pUserInfo$15[ebp], eax

; 994  : 						SearchCorrespond.UserRemoteInfo[wIndex].wFaceID = pUserInfo->wFaceID;

  00356	0f b7 85 50 fa
	ff ff		 movzx	 eax, WORD PTR _wIndex$16[ebp]
  0035d	6b c8 58	 imul	 ecx, eax, 88
  00360	8b 95 4c fa ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$15[ebp]
  00366	66 8b 82 88 00
	00 00		 mov	 ax, WORD PTR [edx+136]
  0036d	66 89 84 0d 9a
	fa ff ff	 mov	 WORD PTR _SearchCorrespond$21[ebp+ecx+50], ax

; 995  : 						SearchCorrespond.UserRemoteInfo[wIndex].wChairID = pUserInfo->wChairID;

  00375	0f b7 85 50 fa
	ff ff		 movzx	 eax, WORD PTR _wIndex$16[ebp]
  0037c	6b c8 58	 imul	 ecx, eax, 88
  0037f	8b 95 4c fa ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$15[ebp]
  00385	66 8b 82 95 00
	00 00		 mov	 ax, WORD PTR [edx+149]
  0038c	66 89 84 0d c7
	fa ff ff	 mov	 WORD PTR _SearchCorrespond$21[ebp+ecx+95], ax

; 996  : 						SearchCorrespond.UserRemoteInfo[wIndex].cbUserStatus = pUserInfo->cbUserStatus;

  00394	0f b7 85 50 fa
	ff ff		 movzx	 eax, WORD PTR _wIndex$16[ebp]
  0039b	6b c8 58	 imul	 ecx, eax, 88
  0039e	8b 95 4c fa ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$15[ebp]
  003a4	8a 82 97 00 00
	00		 mov	 al, BYTE PTR [edx+151]
  003aa	88 84 0d c9 fa
	ff ff		 mov	 BYTE PTR _SearchCorrespond$21[ebp+ecx+97], al

; 997  : 						SearchCorrespond.UserRemoteInfo[wIndex].wTableID = pUserInfo->wTableID;

  003b1	0f b7 85 50 fa
	ff ff		 movzx	 eax, WORD PTR _wIndex$16[ebp]
  003b8	6b c8 58	 imul	 ecx, eax, 88
  003bb	8b 95 4c fa ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$15[ebp]
  003c1	66 8b 82 91 00
	00 00		 mov	 ax, WORD PTR [edx+145]
  003c8	66 89 84 0d c3
	fa ff ff	 mov	 WORD PTR _SearchCorrespond$21[ebp+ecx+91], ax

; 998  : 						SearchCorrespond.UserRemoteInfo[wIndex].wLastTableID = pUserInfo->wLastTableID;

  003d0	0f b7 85 50 fa
	ff ff		 movzx	 eax, WORD PTR _wIndex$16[ebp]
  003d7	6b c8 58	 imul	 ecx, eax, 88
  003da	8b 95 4c fa ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$15[ebp]
  003e0	66 8b 82 93 00
	00 00		 mov	 ax, WORD PTR [edx+147]
  003e7	66 89 84 0d c5
	fa ff ff	 mov	 WORD PTR _SearchCorrespond$21[ebp+ecx+93], ax

; 999  : 						
; 1000 : 
; 1001 : 					} while (true);

  003ef	b8 01 00 00 00	 mov	 eax, 1
  003f4	85 c0		 test	 eax, eax
  003f6	0f 85 81 fd ff
	ff		 jne	 $LN9@OnTCPNetwo
$LN17@OnTCPNetwo:

; 1002 : 				}
; 1003 : 			}

  003fc	e9 40 fd ff ff	 jmp	 $LN4@OnTCPNetwo
$LN5@OnTCPNetwo:

; 1004 : 
; 1005 : 			//发送数据
; 1006 : 			WORD wHeadSize=sizeof(SearchCorrespond)-sizeof(SearchCorrespond.UserRemoteInfo);

  00401	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  00406	66 89 85 48 fa
	ff ff		 mov	 WORD PTR _wHeadSize$14[ebp], ax

; 1007 : 			WORD wItemSize=sizeof(SearchCorrespond.UserRemoteInfo[0])*SearchCorrespond.wUserCount;

  0040d	0f b7 85 70 fa
	ff ff		 movzx	 eax, WORD PTR _SearchCorrespond$21[ebp+8]
  00414	6b c8 58	 imul	 ecx, eax, 88
  00417	66 89 8d 44 fa
	ff ff		 mov	 WORD PTR _wItemSize$13[ebp], cx

; 1008 : 			m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_REMOTE_SERVICE,SUB_CS_S_SEARCH_CORRESPOND,&SearchCorrespond,wHeadSize+wItemSize);

  0041e	0f b7 85 48 fa
	ff ff		 movzx	 eax, WORD PTR _wHeadSize$14[ebp]
  00425	0f b7 8d 44 fa
	ff ff		 movzx	 ecx, WORD PTR _wItemSize$13[ebp]
  0042c	03 c1		 add	 eax, ecx
  0042e	50		 push	 eax
  0042f	8d 95 68 fa ff
	ff		 lea	 edx, DWORD PTR _SearchCorrespond$21[ebp]
  00435	52		 push	 edx
  00436	6a 65		 push	 101			; 00000065H
  00438	6a 04		 push	 4
  0043a	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0043d	50		 push	 eax
  0043e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00441	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  00447	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0044a	8b 12		 mov	 edx, DWORD PTR [edx]
  0044c	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00452	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00455	ff d0		 call	 eax

; 1009 : 
; 1010 : 			return true;

  00457	b0 01		 mov	 al, 1
  00459	e9 c7 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN20@OnTCPNetwo:

; 1011 : 		}
; 1012 : 	case SUB_CS_C_SEARCH_ALLCORRESPOND:	//协调查找
; 1013 : 		{
; 1014 : 			CMD_CS_C_AllSearchCorrespond * pSearchCorrespond=(CMD_CS_C_AllSearchCorrespond *)pData;

  0045e	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00461	89 85 40 fa ff
	ff		 mov	 DWORD PTR _pSearchCorrespond$12[ebp], eax

; 1015 : 			if(pSearchCorrespond->dwCount > 512) return false;

  00467	8b 85 40 fa ff
	ff		 mov	 eax, DWORD PTR _pSearchCorrespond$12[ebp]
  0046d	81 78 08 00 02
	00 00		 cmp	 DWORD PTR [eax+8], 512	; 00000200H
  00474	76 07		 jbe	 SHORT $LN21@OnTCPNetwo
  00476	32 c0		 xor	 al, al
  00478	e9 a8 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN21@OnTCPNetwo:

; 1016 : 
; 1017 : 			BYTE cbDataBuffer[SOCKET_TCP_PACKET]={0};

  0047d	68 f8 3f 00 00	 push	 16376			; 00003ff8H
  00482	6a 00		 push	 0
  00484	8d 85 48 ba ff
	ff		 lea	 eax, DWORD PTR _cbDataBuffer$11[ebp]
  0048a	50		 push	 eax
  0048b	e8 00 00 00 00	 call	 _memset
  00490	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1018 : 			CMD_CS_S_SearchAllCorrespond* pAllSearchCorrespond = (CMD_CS_S_SearchAllCorrespond*)cbDataBuffer;

  00493	8d 85 48 ba ff
	ff		 lea	 eax, DWORD PTR _cbDataBuffer$11[ebp]
  00499	89 85 44 ba ff
	ff		 mov	 DWORD PTR _pAllSearchCorrespond$10[ebp], eax

; 1019 : 			//设置变量
; 1020 : 			pAllSearchCorrespond->dwSocketID=pSearchCorrespond->dwSocketID;

  0049f	8b 85 44 ba ff
	ff		 mov	 eax, DWORD PTR _pAllSearchCorrespond$10[ebp]
  004a5	8b 8d 40 fa ff
	ff		 mov	 ecx, DWORD PTR _pSearchCorrespond$12[ebp]
  004ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  004ad	89 10		 mov	 DWORD PTR [eax], edx

; 1021 : 			pAllSearchCorrespond->dwClientAddr=pSearchCorrespond->dwClientAddr;

  004af	8b 85 44 ba ff
	ff		 mov	 eax, DWORD PTR _pAllSearchCorrespond$10[ebp]
  004b5	8b 8d 40 fa ff
	ff		 mov	 ecx, DWORD PTR _pSearchCorrespond$12[ebp]
  004bb	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  004be	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1022 : 
; 1023 : 			int nCount = 0;

  004c1	c7 85 40 ba ff
	ff 00 00 00 00	 mov	 DWORD PTR _nCount$9[ebp], 0

; 1024 : 			const int cbPacketHeadSize = sizeof(CMD_CS_S_SearchAllCorrespond) - sizeof(tagUserRemoteInfo);

  004cb	c7 85 3c ba ff
	ff 0c 00 00 00	 mov	 DWORD PTR _cbPacketHeadSize$8[ebp], 12 ; 0000000cH

; 1025 : 			int cbPacketSize = cbPacketHeadSize;

  004d5	c7 85 38 ba ff
	ff 0c 00 00 00	 mov	 DWORD PTR _cbPacketSize$7[ebp], 12 ; 0000000cH

; 1026 : 			//查找用户
; 1027 : 			int nSearchCount = (int)pSearchCorrespond->dwCount;

  004df	8b 85 40 fa ff
	ff		 mov	 eax, DWORD PTR _pSearchCorrespond$12[ebp]
  004e5	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  004e8	89 8d 34 ba ff
	ff		 mov	 DWORD PTR _nSearchCount$6[ebp], ecx

; 1028 : 			for(int i = 0; i < nSearchCount; i++)

  004ee	c7 85 30 ba ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$5[ebp], 0
  004f8	eb 0f		 jmp	 SHORT $LN12@OnTCPNetwo
$LN10@OnTCPNetwo:
  004fa	8b 85 30 ba ff
	ff		 mov	 eax, DWORD PTR _i$5[ebp]
  00500	83 c0 01	 add	 eax, 1
  00503	89 85 30 ba ff
	ff		 mov	 DWORD PTR _i$5[ebp], eax
$LN12@OnTCPNetwo:
  00509	8b 85 30 ba ff
	ff		 mov	 eax, DWORD PTR _i$5[ebp]
  0050f	3b 85 34 ba ff
	ff		 cmp	 eax, DWORD PTR _nSearchCount$6[ebp]
  00515	0f 8d b2 02 00
	00		 jge	 $LN11@OnTCPNetwo

; 1029 : 			{
; 1030 : 				CGlobalUserItem* pGlobalUserItem =  m_GlobalInfoManager.SearchUserItemByGameID(pSearchCorrespond->dwGameID[i]);

  0051b	8b 85 30 ba ff
	ff		 mov	 eax, DWORD PTR _i$5[ebp]
  00521	8b 8d 40 fa ff
	ff		 mov	 ecx, DWORD PTR _pSearchCorrespond$12[ebp]
  00527	8b 54 81 0c	 mov	 edx, DWORD PTR [ecx+eax*4+12]
  0052b	52		 push	 edx
  0052c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0052f	83 c1 24	 add	 ecx, 36			; 00000024H
  00532	e8 00 00 00 00	 call	 ?SearchUserItemByGameID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z ; CGlobalInfoManager::SearchUserItemByGameID
  00537	89 85 2c ba ff
	ff		 mov	 DWORD PTR _pGlobalUserItem$4[ebp], eax

; 1031 : 				if(pGlobalUserItem != NULL)

  0053d	83 bd 2c ba ff
	ff 00		 cmp	 DWORD PTR _pGlobalUserItem$4[ebp], 0
  00544	0f 84 1f 02 00
	00		 je	 $LN22@OnTCPNetwo

; 1032 : 				{
; 1033 : 					tagUserInfo* pUserInfo = pGlobalUserItem->GetUserInfo();

  0054a	8b 8d 2c ba ff
	ff		 mov	 ecx, DWORD PTR _pGlobalUserItem$4[ebp]
  00550	e8 00 00 00 00	 call	 ?GetUserInfo@CGlobalUserItem@@QAEPAUtagUserInfo@@XZ ; CGlobalUserItem::GetUserInfo
  00555	89 85 28 ba ff
	ff		 mov	 DWORD PTR _pUserInfo$3[ebp], eax

; 1034 : 					//查找房间
; 1035 : 					WORD wServerIndex=0;

  0055b	33 c0		 xor	 eax, eax
  0055d	66 89 85 24 ba
	ff ff		 mov	 WORD PTR _wServerIndex$2[ebp], ax

; 1036 : 					CGlobalServerItem * pGlobalServerItem = pGlobalUserItem->EnumServerItem(wServerIndex++);

  00564	66 8b 85 24 ba
	ff ff		 mov	 ax, WORD PTR _wServerIndex$2[ebp]
  0056b	66 89 85 1e b8
	ff ff		 mov	 WORD PTR tv314[ebp], ax
  00572	0f b7 8d 1e b8
	ff ff		 movzx	 ecx, WORD PTR tv314[ebp]
  00579	51		 push	 ecx
  0057a	8b 8d 2c ba ff
	ff		 mov	 ecx, DWORD PTR _pGlobalUserItem$4[ebp]
  00580	e8 00 00 00 00	 call	 ?EnumServerItem@CGlobalUserItem@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalUserItem::EnumServerItem
  00585	89 85 20 ba ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$1[ebp], eax
  0058b	66 8b 95 24 ba
	ff ff		 mov	 dx, WORD PTR _wServerIndex$2[ebp]
  00592	66 83 c2 01	 add	 dx, 1
  00596	66 89 95 24 ba
	ff ff		 mov	 WORD PTR _wServerIndex$2[ebp], dx

; 1037 : 					
; 1038 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].dwUserID = pUserInfo->dwUserID;

  0059d	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  005a4	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  005aa	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  005b0	8b 12		 mov	 edx, DWORD PTR [edx]
  005b2	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 1039 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].dwGameID = pUserInfo->dwGameID;

  005b6	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  005bd	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  005c3	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  005c9	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  005cc	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1040 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].cbMasterOrder = pUserInfo->cbMasterOrder;

  005d0	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  005d7	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  005dd	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  005e3	8a 92 90 00 00
	00		 mov	 dl, BYTE PTR [edx+144]
  005e9	88 54 01 38	 mov	 BYTE PTR [ecx+eax+56], dl

; 1041 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].cbMemberOrder = pUserInfo->cbMemberOrder;

  005ed	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  005f4	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  005fa	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  00600	8a 92 8f 00 00
	00		 mov	 dl, BYTE PTR [edx+143]
  00606	88 54 01 37	 mov	 BYTE PTR [ecx+eax+55], dl

; 1042 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].cbGender = pUserInfo->cbGender;

  0060a	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  00611	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00617	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  0061d	8a 92 8e 00 00
	00		 mov	 dl, BYTE PTR [edx+142]
  00623	88 54 01 36	 mov	 BYTE PTR [ecx+eax+54], dl

; 1043 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].cbUserStatus = pUserInfo->cbUserStatus;

  00627	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  0062e	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00634	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  0063a	8a 92 97 00 00
	00		 mov	 dl, BYTE PTR [edx+151]
  00640	88 54 01 63	 mov	 BYTE PTR [ecx+eax+99], dl

; 1044 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].wFaceID = pUserInfo->wFaceID;

  00644	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  0064b	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00651	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  00657	66 8b 92 88 00
	00 00		 mov	 dx, WORD PTR [edx+136]
  0065e	66 89 54 01 34	 mov	 WORD PTR [ecx+eax+52], dx

; 1045 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].wChairID = pUserInfo->wChairID;

  00663	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  0066a	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00670	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  00676	66 8b 92 95 00
	00 00		 mov	 dx, WORD PTR [edx+149]
  0067d	66 89 54 01 61	 mov	 WORD PTR [ecx+eax+97], dx

; 1046 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].wTableID = pUserInfo->wTableID;

  00682	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  00689	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  0068f	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  00695	66 8b 92 91 00
	00 00		 mov	 dx, WORD PTR [edx+145]
  0069c	66 89 54 01 5d	 mov	 WORD PTR [ecx+eax+93], dx

; 1047 : 					pAllSearchCorrespond->UserRemoteInfo[nCount].wLastTableID = pUserInfo->wLastTableID;

  006a1	6b 85 40 ba ff
	ff 58		 imul	 eax, DWORD PTR _nCount$9[ebp], 88
  006a8	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  006ae	8b 95 28 ba ff
	ff		 mov	 edx, DWORD PTR _pUserInfo$3[ebp]
  006b4	66 8b 92 93 00
	00 00		 mov	 dx, WORD PTR [edx+147]
  006bb	66 89 54 01 5f	 mov	 WORD PTR [ecx+eax+95], dx

; 1048 : 					lstrcpyn(pAllSearchCorrespond->UserRemoteInfo[nCount].szNickName,pUserInfo->szNickName, LEN_NICKNAME);

  006c0	6a 20		 push	 32			; 00000020H
  006c2	8b 85 28 ba ff
	ff		 mov	 eax, DWORD PTR _pUserInfo$3[ebp]
  006c8	83 c0 0c	 add	 eax, 12			; 0000000cH
  006cb	50		 push	 eax
  006cc	6b 8d 40 ba ff
	ff 58		 imul	 ecx, DWORD PTR _nCount$9[ebp], 88
  006d3	8b 95 44 ba ff
	ff		 mov	 edx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  006d9	8d 44 0a 14	 lea	 eax, DWORD PTR [edx+ecx+20]
  006dd	50		 push	 eax
  006de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 1049 : 					if(pGlobalServerItem != NULL)

  006e4	83 bd 20 ba ff
	ff 00		 cmp	 DWORD PTR _pGlobalServerItem$1[ebp], 0
  006eb	74 5e		 je	 SHORT $LN23@OnTCPNetwo

; 1050 : 					{
; 1051 : 						pAllSearchCorrespond->UserRemoteInfo[nCount].wServerID = pGlobalServerItem->GetServerID();

  006ed	8b 8d 20 ba ff
	ff		 mov	 ecx, DWORD PTR _pGlobalServerItem$1[ebp]
  006f3	e8 00 00 00 00	 call	 ?GetServerID@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetServerID
  006f8	6b 8d 40 ba ff
	ff 58		 imul	 ecx, DWORD PTR _nCount$9[ebp], 88
  006ff	8b 95 44 ba ff
	ff		 mov	 edx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00705	66 89 44 0a 3b	 mov	 WORD PTR [edx+ecx+59], ax

; 1052 : 						pAllSearchCorrespond->UserRemoteInfo[nCount].wKindID = pGlobalServerItem->GetKindID();

  0070a	8b 8d 20 ba ff
	ff		 mov	 ecx, DWORD PTR _pGlobalServerItem$1[ebp]
  00710	e8 00 00 00 00	 call	 ?GetKindID@CGlobalServerItem@@QAEGXZ ; CGlobalServerItem::GetKindID
  00715	6b 8d 40 ba ff
	ff 58		 imul	 ecx, DWORD PTR _nCount$9[ebp], 88
  0071c	8b 95 44 ba ff
	ff		 mov	 edx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00722	66 89 44 0a 39	 mov	 WORD PTR [edx+ecx+57], ax

; 1053 : 						lstrcpyn(pAllSearchCorrespond->UserRemoteInfo[nCount].szGameServer, pGlobalServerItem->m_GameServer.szServerName,LEN_SERVER);

  00727	6a 20		 push	 32			; 00000020H
  00729	8b 85 20 ba ff
	ff		 mov	 eax, DWORD PTR _pGlobalServerItem$1[ebp]
  0072f	83 c0 57	 add	 eax, 87			; 00000057H
  00732	50		 push	 eax
  00733	6b 8d 40 ba ff
	ff 58		 imul	 ecx, DWORD PTR _nCount$9[ebp], 88
  0073a	8b 95 44 ba ff
	ff		 mov	 edx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00740	8d 44 0a 3d	 lea	 eax, DWORD PTR [edx+ecx+61]
  00744	50		 push	 eax
  00745	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
$LN23@OnTCPNetwo:

; 1054 : 					}
; 1055 : 					nCount+=1;

  0074b	8b 85 40 ba ff
	ff		 mov	 eax, DWORD PTR _nCount$9[ebp]
  00751	83 c0 01	 add	 eax, 1
  00754	89 85 40 ba ff
	ff		 mov	 DWORD PTR _nCount$9[ebp], eax

; 1056 : 					cbPacketSize += sizeof(tagUserRemoteInfo);

  0075a	8b 85 38 ba ff
	ff		 mov	 eax, DWORD PTR _cbPacketSize$7[ebp]
  00760	83 c0 58	 add	 eax, 88			; 00000058H
  00763	89 85 38 ba ff
	ff		 mov	 DWORD PTR _cbPacketSize$7[ebp], eax
$LN22@OnTCPNetwo:

; 1057 : 				}
; 1058 : 				if( cbPacketSize > (SOCKET_TCP_PACKET-sizeof(CMD_CS_S_SearchAllCorrespond)) )

  00769	81 bd 38 ba ff
	ff 94 3f 00 00	 cmp	 DWORD PTR _cbPacketSize$7[ebp], 16276 ; 00003f94H
  00773	76 53		 jbe	 SHORT $LN24@OnTCPNetwo

; 1059 : 				{
; 1060 : 					pAllSearchCorrespond->dwCount = nCount;

  00775	8b 85 44 ba ff
	ff		 mov	 eax, DWORD PTR _pAllSearchCorrespond$10[ebp]
  0077b	8b 8d 40 ba ff
	ff		 mov	 ecx, DWORD PTR _nCount$9[ebp]
  00781	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1061 : 					m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_REMOTE_SERVICE,SUB_CS_S_SEARCH_ALLCORRESPOND, pAllSearchCorrespond, cbPacketSize);

  00784	0f b7 85 38 ba
	ff ff		 movzx	 eax, WORD PTR _cbPacketSize$7[ebp]
  0078b	50		 push	 eax
  0078c	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  00792	51		 push	 ecx
  00793	6a 66		 push	 102			; 00000066H
  00795	6a 04		 push	 4
  00797	8b 55 14	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  0079a	52		 push	 edx
  0079b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0079e	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  007a4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  007a7	8b 01		 mov	 eax, DWORD PTR [ecx]
  007a9	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  007af	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  007b2	ff d2		 call	 edx

; 1062 : 					cbPacketSize = cbPacketHeadSize;

  007b4	c7 85 38 ba ff
	ff 0c 00 00 00	 mov	 DWORD PTR _cbPacketSize$7[ebp], 12 ; 0000000cH

; 1063 : 					nCount = 0;

  007be	c7 85 40 ba ff
	ff 00 00 00 00	 mov	 DWORD PTR _nCount$9[ebp], 0
$LN24@OnTCPNetwo:

; 1064 : 				}
; 1065 : 			}

  007c8	e9 2d fd ff ff	 jmp	 $LN10@OnTCPNetwo
$LN11@OnTCPNetwo:

; 1066 : 			
; 1067 : 			pAllSearchCorrespond->dwCount = nCount;

  007cd	8b 85 44 ba ff
	ff		 mov	 eax, DWORD PTR _pAllSearchCorrespond$10[ebp]
  007d3	8b 8d 40 ba ff
	ff		 mov	 ecx, DWORD PTR _nCount$9[ebp]
  007d9	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1068 : 			if(nCount == 0) cbPacketSize = sizeof(CMD_CS_S_SearchAllCorrespond);

  007dc	83 bd 40 ba ff
	ff 00		 cmp	 DWORD PTR _nCount$9[ebp], 0
  007e3	75 0a		 jne	 SHORT $LN25@OnTCPNetwo
  007e5	c7 85 38 ba ff
	ff 64 00 00 00	 mov	 DWORD PTR _cbPacketSize$7[ebp], 100 ; 00000064H
$LN25@OnTCPNetwo:

; 1069 : 			m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_REMOTE_SERVICE,SUB_CS_S_SEARCH_ALLCORRESPOND, pAllSearchCorrespond, cbPacketSize);

  007ef	0f b7 85 38 ba
	ff ff		 movzx	 eax, WORD PTR _cbPacketSize$7[ebp]
  007f6	50		 push	 eax
  007f7	8b 8d 44 ba ff
	ff		 mov	 ecx, DWORD PTR _pAllSearchCorrespond$10[ebp]
  007fd	51		 push	 ecx
  007fe	6a 66		 push	 102			; 00000066H
  00800	6a 04		 push	 4
  00802	8b 55 14	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  00805	52		 push	 edx
  00806	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00809	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  0080f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00812	8b 01		 mov	 eax, DWORD PTR [ecx]
  00814	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  0081a	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0081d	ff d2		 call	 edx

; 1070 : 			
; 1071 : 			return true;

  0081f	b0 01		 mov	 al, 1
  00821	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 1072 : 		}
; 1073 : 	}
; 1074 : 
; 1075 : 	return false;

  00823	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 1076 : }

  00825	5f		 pop	 edi
  00826	5e		 pop	 esi
  00827	5b		 pop	 ebx
  00828	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0082b	33 cd		 xor	 ecx, ebp
  0082d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00832	8b e5		 mov	 esp, ebp
  00834	5d		 pop	 ebp
  00835	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainRemoteService@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainRemoteService
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -692						; size = 4
_pGlobalChatItem$1 = -560				; size = 4
_posChat$2 = -556					; size = 4
_UserGameStatus$3 = -552				; size = 45
_pGlobalServerItem$4 = -504				; size = 4
_pBindParameter$5 = -500				; size = 4
_wBindIndex$6 = -496					; size = 2
_pGlobalUserItem$7 = -492				; size = 4
_pUserStatus$8 = -488					; size = 4
_dwSocketID$9 = -484					; size = 4
_nWaitCount$10 = -480					; size = 4
_pBindParameter$11 = -476				; size = 4
_wBindIndex$12 = -472					; size = 2
_pGlobalChatItem$13 = -468				; size = 4
_posChat$14 = -464					; size = 4
_UserGameStatus$15 = -460				; size = 45
_pGlobalServerItem$16 = -412				; size = 4
_pBindParameter$17 = -408				; size = 4
_wBindIndex$18 = -404					; size = 2
_pUserLeave$19 = -400					; size = 4
_pGlobalChatItem$20 = -396				; size = 4
_posChat$21 = -392					; size = 4
_UserGameStatus$22 = -388				; size = 45
_pGlobalServerItem$23 = -340				; size = 4
_GlobalUserInfo$24 = -336				; size = 316
_pBindParameter$25 = -20				; size = 4
_wBindIndex$26 = -16					; size = 2
_pUserEnter$27 = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainUserCollect, COMDAT
; _this$ = ecx

; 707  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b4 02 00
	00		 sub	 esp, 692		; 000002b4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 708  : 	switch (wSubCmdID)

  00019	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0001d	89 85 4c fd ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00023	8b 8d 4c fd ff
	ff		 mov	 ecx, DWORD PTR tv65[ebp]
  00029	83 e9 01	 sub	 ecx, 1
  0002c	89 8d 4c fd ff
	ff		 mov	 DWORD PTR tv65[ebp], ecx
  00032	83 bd 4c fd ff
	ff 03		 cmp	 DWORD PTR tv65[ebp], 3
  00039	0f 87 a7 06 00
	00		 ja	 $LN2@OnTCPNetwo
  0003f	8b 95 4c fd ff
	ff		 mov	 edx, DWORD PTR tv65[ebp]
  00045	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN37@OnTCPNetwo[edx*4]
$LN13@OnTCPNetwo:

; 709  : 	{
; 710  : 	case SUB_CS_C_USER_ENTER:		//用户进入
; 711  : 		{
; 712  : 			//效验数据
; 713  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_UserEnter));

  0004c	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00050	3d 3b 01 00 00	 cmp	 eax, 315		; 0000013bH
  00055	74 19		 je	 SHORT $LN30@OnTCPNetwo
  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  0005d	83 c1 06	 add	 ecx, 6
  00060	51		 push	 ecx
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00066	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006b	85 c0		 test	 eax, eax
  0006d	74 01		 je	 SHORT $LN30@OnTCPNetwo
  0006f	cc		 int	 3
$LN30@OnTCPNetwo:

; 714  : 			if (wDataSize!=sizeof(CMD_CS_C_UserEnter)) return false;

  00070	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00074	3d 3b 01 00 00	 cmp	 eax, 315		; 0000013bH
  00079	74 07		 je	 SHORT $LN14@OnTCPNetwo
  0007b	32 c0		 xor	 al, al
  0007d	e9 66 06 00 00	 jmp	 $LN1@OnTCPNetwo
$LN14@OnTCPNetwo:

; 715  : 
; 716  : 			//消息处理
; 717  : 			CMD_CS_C_UserEnter * pUserEnter=(CMD_CS_C_UserEnter *)pData;

  00082	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00085	89 45 f4	 mov	 DWORD PTR _pUserEnter$27[ebp], eax

; 718  : 			pUserEnter->szNickName[CountArray(pUserEnter->szNickName)-1]=0;

  00088	b8 01 00 00 00	 mov	 eax, 1
  0008d	6b c8 1f	 imul	 ecx, eax, 31
  00090	8b 55 f4	 mov	 edx, DWORD PTR _pUserEnter$27[ebp]
  00093	c6 44 0a 08 00	 mov	 BYTE PTR [edx+ecx+8], 0

; 719  : 
; 720  : 			//获取参数
; 721  : 			WORD wBindIndex=LOWORD(dwSocketID);

  00098	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0009b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000a0	66 89 45 f0	 mov	 WORD PTR _wBindIndex$26[ebp], ax

; 722  : 			tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  000a4	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$26[ebp]
  000a8	6b c8 14	 imul	 ecx, eax, 20
  000ab	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ae	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  000b1	89 4d ec	 mov	 DWORD PTR _pBindParameter$25[ebp], ecx

; 723  : 
; 724  : 			//连接效验
; 725  : 			ASSERT(pBindParameter->ServiceKind==ServiceKind_Game);

  000b4	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$25[ebp]
  000b7	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  000bb	74 19		 je	 SHORT $LN31@OnTCPNetwo
  000bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  000c3	83 c1 12	 add	 ecx, 18			; 00000012H
  000c6	51		 push	 ecx
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000cc	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000d1	85 c0		 test	 eax, eax
  000d3	74 01		 je	 SHORT $LN31@OnTCPNetwo
  000d5	cc		 int	 3
$LN31@OnTCPNetwo:

; 726  : 			if (pBindParameter->ServiceKind!=ServiceKind_Game) return false;

  000d6	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$25[ebp]
  000d9	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  000dd	74 07		 je	 SHORT $LN15@OnTCPNetwo
  000df	32 c0		 xor	 al, al
  000e1	e9 02 06 00 00	 jmp	 $LN1@OnTCPNetwo
$LN15@OnTCPNetwo:

; 727  : 
; 728  : 			//变量定义
; 729  : 			tagGlobalUserInfo GlobalUserInfo;
; 730  : 			ZeroMemory(&GlobalUserInfo,sizeof(GlobalUserInfo));

  000e6	68 3c 01 00 00	 push	 316			; 0000013cH
  000eb	6a 00		 push	 0
  000ed	8d 85 b0 fe ff
	ff		 lea	 eax, DWORD PTR _GlobalUserInfo$24[ebp]
  000f3	50		 push	 eax
  000f4	e8 00 00 00 00	 call	 _memset
  000f9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 731  : 
; 732  : 			//设置变量
; 733  : 			GlobalUserInfo.dwUserID=pUserEnter->dwUserID;

  000fc	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  000ff	8b 08		 mov	 ecx, DWORD PTR [eax]
  00101	89 8d b0 fe ff
	ff		 mov	 DWORD PTR _GlobalUserInfo$24[ebp], ecx

; 734  : 			GlobalUserInfo.dwGameID=pUserEnter->dwGameID;

  00107	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  0010a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0010d	89 8d b4 fe ff
	ff		 mov	 DWORD PTR _GlobalUserInfo$24[ebp+4], ecx

; 735  : 			lstrcpyn(GlobalUserInfo.szNickName,pUserEnter->szNickName,CountArray(GlobalUserInfo.szNickName));

  00113	6a 20		 push	 32			; 00000020H
  00115	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  00118	83 c0 08	 add	 eax, 8
  0011b	50		 push	 eax
  0011c	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _GlobalUserInfo$24[ebp+8]
  00122	51		 push	 ecx
  00123	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 736  : 
; 737  : 			//辅助信息
; 738  : 			GlobalUserInfo.cbGender=pUserEnter->cbGender;

  00129	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  0012c	8a 48 28	 mov	 cl, BYTE PTR [eax+40]
  0012f	88 8d d8 fe ff
	ff		 mov	 BYTE PTR _GlobalUserInfo$24[ebp+40], cl

; 739  : 			GlobalUserInfo.cbMemberOrder=pUserEnter->cbMemberOrder;

  00135	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  00138	8a 48 29	 mov	 cl, BYTE PTR [eax+41]
  0013b	88 8d d9 fe ff
	ff		 mov	 BYTE PTR _GlobalUserInfo$24[ebp+41], cl

; 740  : 			GlobalUserInfo.cbMasterOrder=pUserEnter->cbMasterOrder;

  00141	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  00144	8a 48 2a	 mov	 cl, BYTE PTR [eax+42]
  00147	88 8d da fe ff
	ff		 mov	 BYTE PTR _GlobalUserInfo$24[ebp+42], cl

; 741  : 			
; 742  : 			//拷贝详细信息
; 743  : 			memcpy(&GlobalUserInfo.userInfo, &pUserEnter->userInfo, sizeof(tagUserInfo));

  0014d	68 10 01 00 00	 push	 272			; 00000110H
  00152	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  00155	83 c0 2b	 add	 eax, 43			; 0000002bH
  00158	50		 push	 eax
  00159	8d 8d db fe ff
	ff		 lea	 ecx, DWORD PTR _GlobalUserInfo$24[ebp+43]
  0015f	51		 push	 ecx
  00160	e8 00 00 00 00	 call	 _memcpy
  00165	83 c4 0c	 add	 esp, 12			; 0000000cH

; 744  : 
; 745  : 			//激活用户
; 746  : 			m_GlobalInfoManager.ActiveUserItem(GlobalUserInfo,pBindParameter->wServiceID);

  00168	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$25[ebp]
  0016b	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  0016f	51		 push	 ecx
  00170	8d 95 b0 fe ff
	ff		 lea	 edx, DWORD PTR _GlobalUserInfo$24[ebp]
  00176	52		 push	 edx
  00177	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017a	83 c1 24	 add	 ecx, 36			; 00000024H
  0017d	e8 00 00 00 00	 call	 ?ActiveUserItem@CGlobalInfoManager@@QAE_NAAUtagGlobalUserInfo@@G@Z ; CGlobalInfoManager::ActiveUserItem

; 747  : 
; 748  : 
; 749  : 			CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.SearchServerItem(pBindParameter->wServiceID);

  00182	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$25[ebp]
  00185	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  00189	51		 push	 ecx
  0018a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018d	83 c1 24	 add	 ecx, 36			; 00000024H
  00190	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  00195	89 85 ac fe ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$23[ebp], eax

; 750  : 
; 751  : 			//同步状态
; 752  : 			CMD_CS_S_UserGameStatus UserGameStatus;
; 753  : 			UserGameStatus.dwUserID=pUserEnter->dwUserID;

  0019b	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  0019e	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a0	89 8d 7c fe ff
	ff		 mov	 DWORD PTR _UserGameStatus$22[ebp], ecx

; 754  : 			UserGameStatus.cbGameStatus=pUserEnter->userInfo.cbUserStatus;

  001a6	8b 45 f4	 mov	 eax, DWORD PTR _pUserEnter$27[ebp]
  001a9	8a 88 c2 00 00
	00		 mov	 cl, BYTE PTR [eax+194]
  001af	88 8d 80 fe ff
	ff		 mov	 BYTE PTR _UserGameStatus$22[ebp+4], cl

; 755  : 			UserGameStatus.wKindID   = pBindParameter->ServiceKind;

  001b5	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$25[ebp]
  001b8	66 8b 48 10	 mov	 cx, WORD PTR [eax+16]
  001bc	66 89 8d 81 fe
	ff ff		 mov	 WORD PTR _UserGameStatus$22[ebp+5], cx

; 756  : 			UserGameStatus.wServerID = pBindParameter->wServiceID;

  001c3	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$25[ebp]
  001c6	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  001ca	66 89 8d 83 fe
	ff ff		 mov	 WORD PTR _UserGameStatus$22[ebp+7], cx

; 757  : 			UserGameStatus.wTableID  = INVALID_TABLE;

  001d1	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  001d6	66 89 85 85 fe
	ff ff		 mov	 WORD PTR _UserGameStatus$22[ebp+9], ax

; 758  : 			UserGameStatus.wChairID  = INVALID_CHAIR;

  001dd	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  001e2	66 89 85 87 fe
	ff ff		 mov	 WORD PTR _UserGameStatus$22[ebp+11], ax

; 759  : 			lstrcpyn(UserGameStatus.szServerName,pGlobalServerItem->m_GameServer.szServerName,CountArray(UserGameStatus.szServerName));

  001e9	6a 20		 push	 32			; 00000020H
  001eb	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _pGlobalServerItem$23[ebp]
  001f1	83 c0 57	 add	 eax, 87			; 00000057H
  001f4	50		 push	 eax
  001f5	8d 8d 89 fe ff
	ff		 lea	 ecx, DWORD PTR _UserGameStatus$22[ebp+13]
  001fb	51		 push	 ecx
  001fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 760  : 			
; 761  : 
; 762  : 			//变量定义
; 763  : 			POSITION posChat=NULL;

  00202	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _posChat$21[ebp], 0
$LN6@OnTCPNetwo:

; 764  : 
; 765  : 			//查找房间
; 766  : 			do
; 767  : 			{
; 768  : 				//查找房间
; 769  : 				CGlobalChatItem * pGlobalChatItem=m_GlobalInfoManager.EnumChatItem(posChat);

  0020c	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _posChat$21[ebp]
  00212	50		 push	 eax
  00213	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00216	83 c1 24	 add	 ecx, 36			; 00000024H
  00219	e8 00 00 00 00	 call	 ?EnumChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@AAPAU__POSITION@@@Z ; CGlobalInfoManager::EnumChatItem
  0021e	89 85 74 fe ff
	ff		 mov	 DWORD PTR _pGlobalChatItem$20[ebp], eax

; 770  : 
; 771  : 				//终止判断
; 772  : 				if (pGlobalChatItem==NULL) break;

  00224	83 bd 74 fe ff
	ff 00		 cmp	 DWORD PTR _pGlobalChatItem$20[ebp], 0
  0022b	75 02		 jne	 SHORT $LN16@OnTCPNetwo
  0022d	eb 39		 jmp	 SHORT $LN5@OnTCPNetwo
$LN16@OnTCPNetwo:

; 773  : 
; 774  : 				//发送状态
; 775  : 				m_pITCPNetworkEngine->SendData(pGlobalChatItem->m_ChatServer.dwSocketID,MDM_CS_USER_COLLECT,SUB_CS_S_USER_GAMESTATE,&UserGameStatus,sizeof(UserGameStatus));

  0022f	6a 2d		 push	 45			; 0000002dH
  00231	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR _UserGameStatus$22[ebp]
  00237	50		 push	 eax
  00238	6a 65		 push	 101			; 00000065H
  0023a	6a 03		 push	 3
  0023c	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR _pGlobalChatItem$20[ebp]
  00242	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00245	52		 push	 edx
  00246	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00249	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  0024f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00252	8b 01		 mov	 eax, DWORD PTR [ecx]
  00254	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  0025a	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0025d	ff d2		 call	 edx

; 776  : 
; 777  : 			}while(posChat != NULL);

  0025f	83 bd 78 fe ff
	ff 00		 cmp	 DWORD PTR _posChat$21[ebp], 0
  00266	75 a4		 jne	 SHORT $LN6@OnTCPNetwo
$LN5@OnTCPNetwo:

; 778  : 
; 779  : 			return true;

  00268	b0 01		 mov	 al, 1
  0026a	e9 79 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN17@OnTCPNetwo:

; 780  : 		}
; 781  : 	case SUB_CS_C_USER_LEAVE:		//用户离开
; 782  : 		{
; 783  : 			//效验数据
; 784  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_UserLeave));

  0026f	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00273	83 f8 04	 cmp	 eax, 4
  00276	74 19		 je	 SHORT $LN32@OnTCPNetwo
  00278	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  0027e	83 c1 4d	 add	 ecx, 77			; 0000004dH
  00281	51		 push	 ecx
  00282	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00287	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0028c	85 c0		 test	 eax, eax
  0028e	74 01		 je	 SHORT $LN32@OnTCPNetwo
  00290	cc		 int	 3
$LN32@OnTCPNetwo:

; 785  : 			if (wDataSize!=sizeof(CMD_CS_C_UserLeave)) return false;

  00291	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00295	83 f8 04	 cmp	 eax, 4
  00298	74 07		 je	 SHORT $LN18@OnTCPNetwo
  0029a	32 c0		 xor	 al, al
  0029c	e9 47 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN18@OnTCPNetwo:

; 786  : 
; 787  : 			//消息处理
; 788  : 			CMD_CS_C_UserLeave * pUserLeave=(CMD_CS_C_UserLeave *)pData;

  002a1	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  002a4	89 85 70 fe ff
	ff		 mov	 DWORD PTR _pUserLeave$19[ebp], eax

; 789  : 
; 790  : 			//获取参数
; 791  : 			WORD wBindIndex=LOWORD(dwSocketID);

  002aa	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  002ad	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  002b2	66 89 85 6c fe
	ff ff		 mov	 WORD PTR _wBindIndex$18[ebp], ax

; 792  : 			tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  002b9	0f b7 85 6c fe
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$18[ebp]
  002c0	6b c8 14	 imul	 ecx, eax, 20
  002c3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002c6	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  002c9	89 8d 68 fe ff
	ff		 mov	 DWORD PTR _pBindParameter$17[ebp], ecx

; 793  : 
; 794  : 			//连接效验
; 795  : 			ASSERT(pBindParameter->ServiceKind==ServiceKind_Game);

  002cf	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$17[ebp]
  002d5	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  002d9	74 19		 je	 SHORT $LN33@OnTCPNetwo
  002db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  002e1	83 c1 58	 add	 ecx, 88			; 00000058H
  002e4	51		 push	 ecx
  002e5	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  002ea	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  002ef	85 c0		 test	 eax, eax
  002f1	74 01		 je	 SHORT $LN33@OnTCPNetwo
  002f3	cc		 int	 3
$LN33@OnTCPNetwo:

; 796  : 			if (pBindParameter->ServiceKind!=ServiceKind_Game) return false;

  002f4	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$17[ebp]
  002fa	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  002fe	74 07		 je	 SHORT $LN19@OnTCPNetwo
  00300	32 c0		 xor	 al, al
  00302	e9 e1 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN19@OnTCPNetwo:

; 797  : 
; 798  : 			//删除用户
; 799  : 			m_GlobalInfoManager.DeleteUserItem(pUserLeave->dwUserID,pBindParameter->wServiceID);

  00307	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$17[ebp]
  0030d	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  00311	51		 push	 ecx
  00312	8b 95 70 fe ff
	ff		 mov	 edx, DWORD PTR _pUserLeave$19[ebp]
  00318	8b 02		 mov	 eax, DWORD PTR [edx]
  0031a	50		 push	 eax
  0031b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0031e	83 c1 24	 add	 ecx, 36			; 00000024H
  00321	e8 00 00 00 00	 call	 ?DeleteUserItem@CGlobalInfoManager@@QAE_NKG@Z ; CGlobalInfoManager::DeleteUserItem

; 800  : 
; 801  : 			CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.SearchServerItem(pBindParameter->wServiceID);

  00326	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$17[ebp]
  0032c	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  00330	51		 push	 ecx
  00331	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00334	83 c1 24	 add	 ecx, 36			; 00000024H
  00337	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  0033c	89 85 64 fe ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$16[ebp], eax

; 802  : 
; 803  : 			//同步状态
; 804  : 			CMD_CS_S_UserGameStatus UserGameStatus;
; 805  : 			UserGameStatus.dwUserID=pUserLeave->dwUserID;

  00342	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _pUserLeave$19[ebp]
  00348	8b 08		 mov	 ecx, DWORD PTR [eax]
  0034a	89 8d 34 fe ff
	ff		 mov	 DWORD PTR _UserGameStatus$15[ebp], ecx

; 806  : 			UserGameStatus.cbGameStatus=US_NULL;

  00350	c6 85 38 fe ff
	ff 00		 mov	 BYTE PTR _UserGameStatus$15[ebp+4], 0

; 807  : 			UserGameStatus.wKindID   = pBindParameter->ServiceKind;

  00357	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$17[ebp]
  0035d	66 8b 48 10	 mov	 cx, WORD PTR [eax+16]
  00361	66 89 8d 39 fe
	ff ff		 mov	 WORD PTR _UserGameStatus$15[ebp+5], cx

; 808  : 			UserGameStatus.wServerID = pBindParameter->wServiceID;

  00368	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$17[ebp]
  0036e	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  00372	66 89 8d 3b fe
	ff ff		 mov	 WORD PTR _UserGameStatus$15[ebp+7], cx

; 809  : 			UserGameStatus.wTableID  = INVALID_TABLE;

  00379	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0037e	66 89 85 3d fe
	ff ff		 mov	 WORD PTR _UserGameStatus$15[ebp+9], ax

; 810  : 			UserGameStatus.wChairID  = INVALID_CHAIR;

  00385	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0038a	66 89 85 3f fe
	ff ff		 mov	 WORD PTR _UserGameStatus$15[ebp+11], ax

; 811  : 
; 812  : 			lstrcpyn(UserGameStatus.szServerName,pGlobalServerItem->m_GameServer.szServerName,CountArray(UserGameStatus.szServerName));

  00391	6a 20		 push	 32			; 00000020H
  00393	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _pGlobalServerItem$16[ebp]
  00399	83 c0 57	 add	 eax, 87			; 00000057H
  0039c	50		 push	 eax
  0039d	8d 8d 41 fe ff
	ff		 lea	 ecx, DWORD PTR _UserGameStatus$15[ebp+13]
  003a3	51		 push	 ecx
  003a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 813  : 
; 814  : 			POSITION posChat=NULL;

  003aa	c7 85 30 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _posChat$14[ebp], 0
$LN9@OnTCPNetwo:

; 815  : 
; 816  : 			//查找房间
; 817  : 			do
; 818  : 			{
; 819  : 				//查找房间
; 820  : 				CGlobalChatItem * pGlobalChatItem=m_GlobalInfoManager.EnumChatItem(posChat);

  003b4	8d 85 30 fe ff
	ff		 lea	 eax, DWORD PTR _posChat$14[ebp]
  003ba	50		 push	 eax
  003bb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003be	83 c1 24	 add	 ecx, 36			; 00000024H
  003c1	e8 00 00 00 00	 call	 ?EnumChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@AAPAU__POSITION@@@Z ; CGlobalInfoManager::EnumChatItem
  003c6	89 85 2c fe ff
	ff		 mov	 DWORD PTR _pGlobalChatItem$13[ebp], eax

; 821  : 
; 822  : 				//终止判断
; 823  : 				if (pGlobalChatItem==NULL) break;

  003cc	83 bd 2c fe ff
	ff 00		 cmp	 DWORD PTR _pGlobalChatItem$13[ebp], 0
  003d3	75 02		 jne	 SHORT $LN20@OnTCPNetwo
  003d5	eb 39		 jmp	 SHORT $LN8@OnTCPNetwo
$LN20@OnTCPNetwo:

; 824  : 
; 825  : 				//发送状态
; 826  : 				m_pITCPNetworkEngine->SendData(pGlobalChatItem->m_ChatServer.dwSocketID,MDM_CS_USER_COLLECT,SUB_CS_S_USER_GAMESTATE,&UserGameStatus,sizeof(UserGameStatus));

  003d7	6a 2d		 push	 45			; 0000002dH
  003d9	8d 85 34 fe ff
	ff		 lea	 eax, DWORD PTR _UserGameStatus$15[ebp]
  003df	50		 push	 eax
  003e0	6a 65		 push	 101			; 00000065H
  003e2	6a 03		 push	 3
  003e4	8b 8d 2c fe ff
	ff		 mov	 ecx, DWORD PTR _pGlobalChatItem$13[ebp]
  003ea	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  003ed	52		 push	 edx
  003ee	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003f1	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  003f7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003fa	8b 01		 mov	 eax, DWORD PTR [ecx]
  003fc	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  00402	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00405	ff d2		 call	 edx

; 827  : 
; 828  : 			}while(posChat != NULL);

  00407	83 bd 30 fe ff
	ff 00		 cmp	 DWORD PTR _posChat$14[ebp], 0
  0040e	75 a4		 jne	 SHORT $LN9@OnTCPNetwo
$LN8@OnTCPNetwo:

; 829  : 
; 830  : 			return true;

  00410	b0 01		 mov	 al, 1
  00412	e9 d1 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN21@OnTCPNetwo:

; 831  : 		}
; 832  : 	case SUB_CS_C_USER_FINISH:		//用户完成
; 833  : 		{
; 834  : 			//获取参数
; 835  : 			WORD wBindIndex=LOWORD(dwSocketID);

  00417	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0041a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0041f	66 89 85 28 fe
	ff ff		 mov	 WORD PTR _wBindIndex$12[ebp], ax

; 836  : 			tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  00426	0f b7 85 28 fe
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$12[ebp]
  0042d	6b c8 14	 imul	 ecx, eax, 20
  00430	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00433	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  00436	89 8d 24 fe ff
	ff		 mov	 DWORD PTR _pBindParameter$11[ebp], ecx

; 837  : 
; 838  : 			//连接效验
; 839  : 			ASSERT((m_wCollectItem==wBindIndex)&&(pBindParameter->ServiceKind==ServiceKind_Game));

  0043c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0043f	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00443	0f b7 95 28 fe
	ff ff		 movzx	 edx, WORD PTR _wBindIndex$12[ebp]
  0044a	3b ca		 cmp	 ecx, edx
  0044c	75 0c		 jne	 SHORT $LN34@OnTCPNetwo
  0044e	8b 85 24 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$11[ebp]
  00454	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  00458	74 1c		 je	 SHORT $LN35@OnTCPNetwo
$LN34@OnTCPNetwo:
  0045a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00460	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00466	51		 push	 ecx
  00467	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0046c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00471	85 c0		 test	 eax, eax
  00473	74 01		 je	 SHORT $LN35@OnTCPNetwo
  00475	cc		 int	 3
$LN35@OnTCPNetwo:

; 840  : 			if ((m_wCollectItem!=wBindIndex)||(pBindParameter->ServiceKind!=ServiceKind_Game)) return false;

  00476	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00479	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  0047d	0f b7 95 28 fe
	ff ff		 movzx	 edx, WORD PTR _wBindIndex$12[ebp]
  00484	3b ca		 cmp	 ecx, edx
  00486	75 0c		 jne	 SHORT $LN23@OnTCPNetwo
  00488	8b 85 24 fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$11[ebp]
  0048e	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  00492	74 07		 je	 SHORT $LN22@OnTCPNetwo
$LN23@OnTCPNetwo:
  00494	32 c0		 xor	 al, al
  00496	e9 4d 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN22@OnTCPNetwo:

; 841  : 
; 842  : 			//设置变量
; 843  : 			m_wCollectItem=INVALID_WORD;

  0049b	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  004a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004a3	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 844  : 
; 845  : 			//汇总切换
; 846  : 			if (m_WaitCollectItemArray.GetCount()>0)

  004a7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004aa	83 c1 08	 add	 ecx, 8
  004ad	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@GABG@@QBEHXZ ; CWHArray<unsigned short,unsigned short const &>::GetCount
  004b2	85 c0		 test	 eax, eax
  004b4	0f 8e 84 00 00
	00		 jle	 $LN24@OnTCPNetwo

; 847  : 			{
; 848  : 				//切换汇总
; 849  : 				INT_PTR nWaitCount=m_WaitCollectItemArray.GetCount();

  004ba	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004bd	83 c1 08	 add	 ecx, 8
  004c0	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@GABG@@QBEHXZ ; CWHArray<unsigned short,unsigned short const &>::GetCount
  004c5	89 85 20 fe ff
	ff		 mov	 DWORD PTR _nWaitCount$10[ebp], eax

; 850  : 				m_wCollectItem=m_WaitCollectItemArray[nWaitCount-1];

  004cb	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR _nWaitCount$10[ebp]
  004d1	83 e8 01	 sub	 eax, 1
  004d4	50		 push	 eax
  004d5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004d8	83 c1 08	 add	 ecx, 8
  004db	e8 00 00 00 00	 call	 ??A?$CWHArray@GABG@@QAEAAGH@Z ; CWHArray<unsigned short,unsigned short const &>::operator[]
  004e0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004e3	66 8b 10	 mov	 dx, WORD PTR [eax]
  004e6	66 89 51 04	 mov	 WORD PTR [ecx+4], dx

; 851  : 
; 852  : 				//删除数组
; 853  : 				m_WaitCollectItemArray.RemoveAt(nWaitCount-1);

  004ea	6a 01		 push	 1
  004ec	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR _nWaitCount$10[ebp]
  004f2	83 e8 01	 sub	 eax, 1
  004f5	50		 push	 eax
  004f6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004f9	83 c1 08	 add	 ecx, 8
  004fc	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@GABG@@QAEXHH@Z ; CWHArray<unsigned short,unsigned short const &>::RemoveAt

; 854  : 
; 855  : 				//发送消息
; 856  : 				DWORD dwSocketID=(m_pBindParameter+m_wCollectItem)->dwSocketID;

  00501	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00504	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00508	6b d1 14	 imul	 edx, ecx, 20
  0050b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0050e	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00511	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  00514	89 95 1c fe ff
	ff		 mov	 DWORD PTR _dwSocketID$9[ebp], edx

; 857  : 				m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_USER_COLLECT,SUB_CS_S_COLLECT_REQUEST);

  0051a	6a 64		 push	 100			; 00000064H
  0051c	6a 03		 push	 3
  0051e	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR _dwSocketID$9[ebp]
  00524	50		 push	 eax
  00525	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00528	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  0052e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00531	8b 12		 mov	 edx, DWORD PTR [edx]
  00533	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00539	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0053c	ff d0		 call	 eax
$LN24@OnTCPNetwo:

; 858  : 			}
; 859  : 
; 860  : 			return true;

  0053e	b0 01		 mov	 al, 1
  00540	e9 a3 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN25@OnTCPNetwo:

; 861  : 		}
; 862  : 	case SUB_CS_C_USER_STATUS:		//用户状态
; 863  : 		{
; 864  : 			//效验数据
; 865  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_UserStatus));

  00545	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00549	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  0054c	74 1c		 je	 SHORT $LN36@OnTCPNetwo
  0054e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00554	81 c1 9e 00 00
	00		 add	 ecx, 158		; 0000009eH
  0055a	51		 push	 ecx
  0055b	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00560	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00565	85 c0		 test	 eax, eax
  00567	74 01		 je	 SHORT $LN36@OnTCPNetwo
  00569	cc		 int	 3
$LN36@OnTCPNetwo:

; 866  : 			if (wDataSize!=sizeof(CMD_CS_C_UserStatus)) return false;

  0056a	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0056e	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  00571	74 07		 je	 SHORT $LN26@OnTCPNetwo
  00573	32 c0		 xor	 al, al
  00575	e9 6e 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN26@OnTCPNetwo:

; 867  : 
; 868  : 			//消息处理
; 869  : 			CMD_CS_C_UserStatus * pUserStatus=(CMD_CS_C_UserStatus *)pData;

  0057a	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0057d	89 85 18 fe ff
	ff		 mov	 DWORD PTR _pUserStatus$8[ebp], eax

; 870  : 
; 871  : 			CGlobalUserItem* pGlobalUserItem = m_GlobalInfoManager.SearchUserItemByUserID(pUserStatus->dwUserID);

  00583	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _pUserStatus$8[ebp]
  00589	8b 08		 mov	 ecx, DWORD PTR [eax]
  0058b	51		 push	 ecx
  0058c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0058f	83 c1 24	 add	 ecx, 36			; 00000024H
  00592	e8 00 00 00 00	 call	 ?SearchUserItemByUserID@CGlobalInfoManager@@QAEPAVCGlobalUserItem@@K@Z ; CGlobalInfoManager::SearchUserItemByUserID
  00597	89 85 14 fe ff
	ff		 mov	 DWORD PTR _pGlobalUserItem$7[ebp], eax

; 872  : 			if(pGlobalUserItem != NULL)

  0059d	83 bd 14 fe ff
	ff 00		 cmp	 DWORD PTR _pGlobalUserItem$7[ebp], 0
  005a4	74 2c		 je	 SHORT $LN27@OnTCPNetwo

; 873  : 			{
; 874  : 				pGlobalUserItem->UpdateStatus(pUserStatus->wTableID, pUserStatus->wChairID, pUserStatus->cbUserStatus);

  005a6	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _pUserStatus$8[ebp]
  005ac	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  005b0	51		 push	 ecx
  005b1	8b 95 18 fe ff
	ff		 mov	 edx, DWORD PTR _pUserStatus$8[ebp]
  005b7	0f b7 42 0b	 movzx	 eax, WORD PTR [edx+11]
  005bb	50		 push	 eax
  005bc	8b 8d 18 fe ff
	ff		 mov	 ecx, DWORD PTR _pUserStatus$8[ebp]
  005c2	0f b7 51 09	 movzx	 edx, WORD PTR [ecx+9]
  005c6	52		 push	 edx
  005c7	8b 8d 14 fe ff
	ff		 mov	 ecx, DWORD PTR _pGlobalUserItem$7[ebp]
  005cd	e8 00 00 00 00	 call	 ?UpdateStatus@CGlobalUserItem@@QAEXGGE@Z ; CGlobalUserItem::UpdateStatus
$LN27@OnTCPNetwo:

; 875  : 
; 876  : 			}
; 877  : 
; 878  : 			//获取参数
; 879  : 			WORD wBindIndex=LOWORD(dwSocketID);

  005d2	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  005d5	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  005da	66 89 85 10 fe
	ff ff		 mov	 WORD PTR _wBindIndex$6[ebp], ax

; 880  : 			tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  005e1	0f b7 85 10 fe
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$6[ebp]
  005e8	6b c8 14	 imul	 ecx, eax, 20
  005eb	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  005ee	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  005f1	89 8d 0c fe ff
	ff		 mov	 DWORD PTR _pBindParameter$5[ebp], ecx

; 881  : 
; 882  : 			CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.SearchServerItem(pBindParameter->wServiceID);

  005f7	8b 85 0c fe ff
	ff		 mov	 eax, DWORD PTR _pBindParameter$5[ebp]
  005fd	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  00601	51		 push	 ecx
  00602	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00605	83 c1 24	 add	 ecx, 36			; 00000024H
  00608	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  0060d	89 85 08 fe ff
	ff		 mov	 DWORD PTR _pGlobalServerItem$4[ebp], eax

; 883  : 
; 884  : 			//同步状态
; 885  : 			CMD_CS_S_UserGameStatus UserGameStatus;
; 886  : 			UserGameStatus.dwUserID=pUserStatus->dwUserID;

  00613	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _pUserStatus$8[ebp]
  00619	8b 08		 mov	 ecx, DWORD PTR [eax]
  0061b	89 8d d8 fd ff
	ff		 mov	 DWORD PTR _UserGameStatus$3[ebp], ecx

; 887  : 			UserGameStatus.cbGameStatus=pUserStatus->cbUserStatus;

  00621	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _pUserStatus$8[ebp]
  00627	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  0062a	88 8d dc fd ff
	ff		 mov	 BYTE PTR _UserGameStatus$3[ebp+4], cl

; 888  : 			UserGameStatus.wKindID =pUserStatus->wKindID;

  00630	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _pUserStatus$8[ebp]
  00636	66 8b 48 05	 mov	 cx, WORD PTR [eax+5]
  0063a	66 89 8d dd fd
	ff ff		 mov	 WORD PTR _UserGameStatus$3[ebp+5], cx

; 889  : 			UserGameStatus.wServerID=pUserStatus->wServerID;

  00641	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _pUserStatus$8[ebp]
  00647	66 8b 48 07	 mov	 cx, WORD PTR [eax+7]
  0064b	66 89 8d df fd
	ff ff		 mov	 WORD PTR _UserGameStatus$3[ebp+7], cx

; 890  : 			UserGameStatus.wTableID=pUserStatus->wTableID;

  00652	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR _pUserStatus$8[ebp]
  00658	66 8b 48 09	 mov	 cx, WORD PTR [eax+9]
  0065c	66 89 8d e1 fd
	ff ff		 mov	 WORD PTR _UserGameStatus$3[ebp+9], cx

; 891  : 			lstrcpyn(UserGameStatus.szServerName,pGlobalServerItem->m_GameServer.szServerName,CountArray(UserGameStatus.szServerName));

  00663	6a 20		 push	 32			; 00000020H
  00665	8b 85 08 fe ff
	ff		 mov	 eax, DWORD PTR _pGlobalServerItem$4[ebp]
  0066b	83 c0 57	 add	 eax, 87			; 00000057H
  0066e	50		 push	 eax
  0066f	8d 8d e5 fd ff
	ff		 lea	 ecx, DWORD PTR _UserGameStatus$3[ebp+13]
  00675	51		 push	 ecx
  00676	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 892  : 
; 893  : 			//变量定义
; 894  : 			POSITION posChat=NULL;

  0067c	c7 85 d4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _posChat$2[ebp], 0
$LN12@OnTCPNetwo:

; 895  : 
; 896  : 			//查找房间
; 897  : 			do
; 898  : 			{
; 899  : 				//查找房间
; 900  : 				CGlobalChatItem * pGlobalChatItem=m_GlobalInfoManager.EnumChatItem(posChat);

  00686	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _posChat$2[ebp]
  0068c	50		 push	 eax
  0068d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00690	83 c1 24	 add	 ecx, 36			; 00000024H
  00693	e8 00 00 00 00	 call	 ?EnumChatItem@CGlobalInfoManager@@QAEPAVCGlobalChatItem@@AAPAU__POSITION@@@Z ; CGlobalInfoManager::EnumChatItem
  00698	89 85 d0 fd ff
	ff		 mov	 DWORD PTR _pGlobalChatItem$1[ebp], eax

; 901  : 
; 902  : 				//终止判断
; 903  : 				if (pGlobalChatItem==NULL) break;

  0069e	83 bd d0 fd ff
	ff 00		 cmp	 DWORD PTR _pGlobalChatItem$1[ebp], 0
  006a5	75 02		 jne	 SHORT $LN28@OnTCPNetwo
  006a7	eb 39		 jmp	 SHORT $LN11@OnTCPNetwo
$LN28@OnTCPNetwo:

; 904  : 
; 905  : 				//发送状态
; 906  : 				m_pITCPNetworkEngine->SendData(pGlobalChatItem->m_ChatServer.dwSocketID,MDM_CS_USER_COLLECT,SUB_CS_S_USER_GAMESTATE,&UserGameStatus,sizeof(UserGameStatus));

  006a9	6a 2d		 push	 45			; 0000002dH
  006ab	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _UserGameStatus$3[ebp]
  006b1	50		 push	 eax
  006b2	6a 65		 push	 101			; 00000065H
  006b4	6a 03		 push	 3
  006b6	8b 8d d0 fd ff
	ff		 mov	 ecx, DWORD PTR _pGlobalChatItem$1[ebp]
  006bc	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  006bf	52		 push	 edx
  006c0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  006c3	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  006c9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  006cc	8b 01		 mov	 eax, DWORD PTR [ecx]
  006ce	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  006d4	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  006d7	ff d2		 call	 edx

; 907  : 
; 908  : 			}while(posChat != NULL);

  006d9	83 bd d4 fd ff
	ff 00		 cmp	 DWORD PTR _posChat$2[ebp], 0
  006e0	75 a4		 jne	 SHORT $LN12@OnTCPNetwo
$LN11@OnTCPNetwo:

; 909  : 
; 910  : 			return true;

  006e2	b0 01		 mov	 al, 1
  006e4	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 911  : 		}
; 912  : 	}
; 913  : 
; 914  : 	return false;

  006e6	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 915  : }

  006e8	5f		 pop	 edi
  006e9	5e		 pop	 esi
  006ea	5b		 pop	 ebx
  006eb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006ee	33 cd		 xor	 ecx, ebp
  006f0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006f5	8b e5		 mov	 esp, ebp
  006f7	5d		 pop	 ebp
  006f8	c2 10 00	 ret	 16			; 00000010H
  006fb	90		 npad	 1
$LN37@OnTCPNetwo:
  006fc	00 00 00 00	 DD	 $LN13@OnTCPNetwo
  00700	00 00 00 00	 DD	 $LN17@OnTCPNetwo
  00704	00 00 00 00	 DD	 $LN21@OnTCPNetwo
  00708	00 00 00 00	 DD	 $LN25@OnTCPNetwo
?OnTCPNetworkMainUserCollect@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainUserCollect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -2104						; size = 4
_cmdHostCreatRoomInfo$1 = -1844				; size = 352
_QeuryPersonalRoomList$2 = -1492			; size = 4
_pPersonalTableInfo$3 = -1488				; size = 4
_pUpdateTable$4 = -1484					; size = 4
_DismissTableResult$5 = -1480				; size = 693
_pPersonalTableInfo$6 = -784				; size = 4
_pDismissTable$7 = -780					; size = 4
_CreateTableResult$8 = -776				; size = 239
_dwRoomID$9 = -536					; size = 4
_pCreateTable$10 = -532					; size = 4
_QueryGameServerResult$11 = -528			; size = 273
_bCanCreateRoom$12 = -249				; size = 1
_dwServerID$13 = -248					; size = 4
_pQueryGameServer$14 = -244				; size = 4
_i$15 = -240						; size = 4
_i$16 = -236						; size = 4
_i$17 = -232						; size = 4
_bRefresh$18 = -225					; size = 1
_SearchResult$19 = -224					; size = 12
_pPersonalTable$20 = -212				; size = 4
_pSearchTable$21 = -208					; size = 4
_SearchTableResult$22 = -204				; size = 20
_pPersonalTable$23 = -184				; size = 4
_pSearchTable$24 = -180					; size = 4
_SearchTableResult$25 = -176				; size = 20
_pPersonalTable$26 = -156				; size = 4
_pSearchTable$27 = -152					; size = 4
_ServerModify$28 = -148					; size = 122
_pGlobalServerItem$29 = -24				; size = 4
_pBindParameter$30 = -20				; size = 4
_wBindIndex$31 = -16					; size = 2
_pServerModify$32 = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainServiceInfo, COMDAT
; _this$ = ecx

; 362  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 38 08 00
	00		 sub	 esp, 2104		; 00000838H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 363  : 	switch (wSubCmdID)

  00019	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0001d	89 85 c8 f7 ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00023	8b 8d c8 f7 ff
	ff		 mov	 ecx, DWORD PTR tv65[ebp]
  00029	83 e9 02	 sub	 ecx, 2
  0002c	89 8d c8 f7 ff
	ff		 mov	 DWORD PTR tv65[ebp], ecx
  00032	81 bd c8 f7 ff
	ff 90 00 00 00	 cmp	 DWORD PTR tv65[ebp], 144 ; 00000090H
  0003c	0f 87 28 0c 00
	00		 ja	 $LN2@OnTCPNetwo
  00042	8b 95 c8 f7 ff
	ff		 mov	 edx, DWORD PTR tv65[ebp]
  00048	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN61@OnTCPNetwo[edx]
  0004f	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN62@OnTCPNetwo[eax*4]
$LN13@OnTCPNetwo:

; 364  : 	{
; 365  : 	case SUB_CS_C_SERVER_MODIFY:	//房间修改
; 366  : 		{
; 367  : 			//效验数据
; 368  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_ServerModify));

  00056	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0005a	83 f8 78	 cmp	 eax, 120		; 00000078H
  0005d	74 19		 je	 SHORT $LN50@OnTCPNetwo
  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00065	83 c1 06	 add	 ecx, 6
  00068	51		 push	 ecx
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0006e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00073	85 c0		 test	 eax, eax
  00075	74 01		 je	 SHORT $LN50@OnTCPNetwo
  00077	cc		 int	 3
$LN50@OnTCPNetwo:

; 369  : 			if (wDataSize!=sizeof(CMD_CS_C_ServerModify)) return false;

  00078	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0007c	83 f8 78	 cmp	 eax, 120		; 00000078H
  0007f	74 07		 je	 SHORT $LN14@OnTCPNetwo
  00081	32 c0		 xor	 al, al
  00083	e9 e4 0b 00 00	 jmp	 $LN1@OnTCPNetwo
$LN14@OnTCPNetwo:

; 370  : 
; 371  : 			//消息定义
; 372  : 			CMD_CS_C_ServerModify * pServerModify=(CMD_CS_C_ServerModify *)pData;

  00088	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0008b	89 45 f4	 mov	 DWORD PTR _pServerModify$32[ebp], eax

; 373  : 
; 374  : 			//获取参数
; 375  : 			WORD wBindIndex=LOWORD(dwSocketID);

  0008e	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00091	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00096	66 89 45 f0	 mov	 WORD PTR _wBindIndex$31[ebp], ax

; 376  : 			tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  0009a	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$31[ebp]
  0009e	6b c8 14	 imul	 ecx, eax, 20
  000a1	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a4	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  000a7	89 4d ec	 mov	 DWORD PTR _pBindParameter$30[ebp], ecx

; 377  : 
; 378  : 			//连接效验
; 379  : 			ASSERT(pBindParameter->ServiceKind==ServiceKind_Game);

  000aa	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$30[ebp]
  000ad	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  000b1	74 19		 je	 SHORT $LN51@OnTCPNetwo
  000b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  000b9	83 c1 11	 add	 ecx, 17			; 00000011H
  000bc	51		 push	 ecx
  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000c2	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c7	85 c0		 test	 eax, eax
  000c9	74 01		 je	 SHORT $LN51@OnTCPNetwo
  000cb	cc		 int	 3
$LN51@OnTCPNetwo:

; 380  : 			if (pBindParameter->ServiceKind!=ServiceKind_Game) return false;

  000cc	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$30[ebp]
  000cf	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  000d3	74 07		 je	 SHORT $LN15@OnTCPNetwo
  000d5	32 c0		 xor	 al, al
  000d7	e9 90 0b 00 00	 jmp	 $LN1@OnTCPNetwo
$LN15@OnTCPNetwo:

; 381  : 
; 382  : 			//查找房间
; 383  : 			ASSERT(m_GlobalInfoManager.SearchServerItem(pBindParameter->wServiceID)!=NULL);

  000dc	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$30[ebp]
  000df	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  000e3	51		 push	 ecx
  000e4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	83 c1 24	 add	 ecx, 36			; 00000024H
  000ea	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  000ef	85 c0		 test	 eax, eax
  000f1	75 19		 jne	 SHORT $LN52@OnTCPNetwo
  000f3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  000f9	83 c2 15	 add	 edx, 21			; 00000015H
  000fc	52		 push	 edx
  000fd	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00102	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00107	85 c0		 test	 eax, eax
  00109	74 01		 je	 SHORT $LN52@OnTCPNetwo
  0010b	cc		 int	 3
$LN52@OnTCPNetwo:

; 384  : 			CGlobalServerItem * pGlobalServerItem=m_GlobalInfoManager.SearchServerItem(pBindParameter->wServiceID);

  0010c	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$30[ebp]
  0010f	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  00113	51		 push	 ecx
  00114	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	83 c1 24	 add	 ecx, 36			; 00000024H
  0011a	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  0011f	89 45 e8	 mov	 DWORD PTR _pGlobalServerItem$29[ebp], eax

; 385  : 
; 386  : 			//房间修改
; 387  : 			if (pGlobalServerItem!=NULL)

  00122	83 7d e8 00	 cmp	 DWORD PTR _pGlobalServerItem$29[ebp], 0
  00126	0f 84 76 01 00
	00		 je	 $LN16@OnTCPNetwo

; 388  : 			{
; 389  : 				//设置变量
; 390  : 				pGlobalServerItem->m_GameServer.wSortID=pServerModify->wSortID;

  0012c	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalServerItem$29[ebp]
  0012f	8b 4d f4	 mov	 ecx, DWORD PTR _pServerModify$32[ebp]
  00132	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00135	66 89 50 0a	 mov	 WORD PTR [eax+10], dx

; 391  : 				pGlobalServerItem->m_GameServer.wKindID=pServerModify->wKindID;

  00139	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalServerItem$29[ebp]
  0013c	8b 4d f4	 mov	 ecx, DWORD PTR _pServerModify$32[ebp]
  0013f	66 8b 51 02	 mov	 dx, WORD PTR [ecx+2]
  00143	66 89 50 06	 mov	 WORD PTR [eax+6], dx

; 392  : 				pGlobalServerItem->m_GameServer.wNodeID=pServerModify->wNodeID;

  00147	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalServerItem$29[ebp]
  0014a	8b 4d f4	 mov	 ecx, DWORD PTR _pServerModify$32[ebp]
  0014d	66 8b 51 04	 mov	 dx, WORD PTR [ecx+4]
  00151	66 89 50 08	 mov	 WORD PTR [eax+8], dx

; 393  : 				pGlobalServerItem->m_GameServer.wServerPort=pServerModify->wServerPort;

  00155	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalServerItem$29[ebp]
  00158	8b 4d f4	 mov	 ecx, DWORD PTR _pServerModify$32[ebp]
  0015b	66 8b 51 06	 mov	 dx, WORD PTR [ecx+6]
  0015f	66 89 50 14	 mov	 WORD PTR [eax+20], dx

; 394  : 				pGlobalServerItem->m_GameServer.dwOnLineCount=pServerModify->dwOnLineCount;

  00163	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalServerItem$29[ebp]
  00166	8b 4d f4	 mov	 ecx, DWORD PTR _pServerModify$32[ebp]
  00169	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0016c	89 50 2b	 mov	 DWORD PTR [eax+43], edx

; 395  : 				pGlobalServerItem->m_GameServer.dwAndroidCount = pServerModify->dwAndroidCount;

  0016f	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalServerItem$29[ebp]
  00172	8b 4d f4	 mov	 ecx, DWORD PTR _pServerModify$32[ebp]
  00175	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00178	89 50 2f	 mov	 DWORD PTR [eax+47], edx

; 396  : 				pGlobalServerItem->m_GameServer.dwFullCount=pServerModify->dwFullCount;		

  0017b	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalServerItem$29[ebp]
  0017e	8b 4d f4	 mov	 ecx, DWORD PTR _pServerModify$32[ebp]
  00181	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00184	89 50 33	 mov	 DWORD PTR [eax+51], edx

; 397  : 				pGlobalServerItem->m_GameServer.dwSetPlayerCount = pServerModify->dwSetCount;

  00187	8b 45 e8	 mov	 eax, DWORD PTR _pGlobalServerItem$29[ebp]
  0018a	8b 4d f4	 mov	 ecx, DWORD PTR _pServerModify$32[ebp]
  0018d	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00190	89 50 7d	 mov	 DWORD PTR [eax+125], edx

; 398  : 				lstrcpyn(pGlobalServerItem->m_GameServer.szServerName,pServerModify->szServerName,CountArray(pGlobalServerItem->m_GameServer.szServerName));

  00193	6a 20		 push	 32			; 00000020H
  00195	8b 45 f4	 mov	 eax, DWORD PTR _pServerModify$32[ebp]
  00198	83 c0 38	 add	 eax, 56			; 00000038H
  0019b	50		 push	 eax
  0019c	8b 4d e8	 mov	 ecx, DWORD PTR _pGlobalServerItem$29[ebp]
  0019f	83 c1 57	 add	 ecx, 87			; 00000057H
  001a2	51		 push	 ecx
  001a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 399  : 				lstrcpyn(pGlobalServerItem->m_GameServer.szServerAddr,pServerModify->szServerAddr,CountArray(pGlobalServerItem->m_GameServer.szServerAddr));

  001a9	6a 20		 push	 32			; 00000020H
  001ab	8b 45 f4	 mov	 eax, DWORD PTR _pServerModify$32[ebp]
  001ae	83 c0 18	 add	 eax, 24			; 00000018H
  001b1	50		 push	 eax
  001b2	8b 4d e8	 mov	 ecx, DWORD PTR _pGlobalServerItem$29[ebp]
  001b5	83 c1 37	 add	 ecx, 55			; 00000037H
  001b8	51		 push	 ecx
  001b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 400  : 				lstrcpyn(pGlobalServerItem->m_GameServer.szGameInfomation, pServerModify->szGameInfomation, CountArray(pGlobalServerItem->m_GameServer.szGameInfomation));

  001bf	6a 20		 push	 32			; 00000020H
  001c1	8b 45 f4	 mov	 eax, DWORD PTR _pServerModify$32[ebp]
  001c4	83 c0 58	 add	 eax, 88			; 00000058H
  001c7	50		 push	 eax
  001c8	8b 4d e8	 mov	 ecx, DWORD PTR _pGlobalServerItem$29[ebp]
  001cb	81 c1 81 00 00
	00		 add	 ecx, 129		; 00000081H
  001d1	51		 push	 ecx
  001d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 401  : 
; 402  : 				//变量定义
; 403  : 				CMD_CS_S_ServerModify ServerModify;
; 404  : 				ZeroMemory(&ServerModify,sizeof(ServerModify));

  001d8	6a 7a		 push	 122			; 0000007aH
  001da	6a 00		 push	 0
  001dc	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _ServerModify$28[ebp]
  001e2	50		 push	 eax
  001e3	e8 00 00 00 00	 call	 _memset
  001e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 405  : 
; 406  : 				//设置变量
; 407  : 				ServerModify.wKindID=pServerModify->wKindID;

  001eb	8b 45 f4	 mov	 eax, DWORD PTR _pServerModify$32[ebp]
  001ee	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  001f2	66 89 8d 6e ff
	ff ff		 mov	 WORD PTR _ServerModify$28[ebp+2], cx

; 408  : 				ServerModify.wSortID=pServerModify->wSortID;

  001f9	8b 45 f4	 mov	 eax, DWORD PTR _pServerModify$32[ebp]
  001fc	66 8b 08	 mov	 cx, WORD PTR [eax]
  001ff	66 89 8d 6c ff
	ff ff		 mov	 WORD PTR _ServerModify$28[ebp], cx

; 409  : 				ServerModify.wNodeID=pServerModify->wNodeID;

  00206	8b 45 f4	 mov	 eax, DWORD PTR _pServerModify$32[ebp]
  00209	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  0020d	66 89 8d 70 ff
	ff ff		 mov	 WORD PTR _ServerModify$28[ebp+4], cx

; 410  : 				ServerModify.wServerID=pBindParameter->wServiceID;

  00214	8b 45 ec	 mov	 eax, DWORD PTR _pBindParameter$30[ebp]
  00217	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  0021b	66 89 8d 72 ff
	ff ff		 mov	 WORD PTR _ServerModify$28[ebp+6], cx

; 411  : 				ServerModify.wServerPort=pServerModify->wServerPort;

  00222	8b 45 f4	 mov	 eax, DWORD PTR _pServerModify$32[ebp]
  00225	66 8b 48 06	 mov	 cx, WORD PTR [eax+6]
  00229	66 89 8d 74 ff
	ff ff		 mov	 WORD PTR _ServerModify$28[ebp+8], cx

; 412  : 				ServerModify.dwOnLineCount=pServerModify->dwOnLineCount;

  00230	8b 45 f4	 mov	 eax, DWORD PTR _pServerModify$32[ebp]
  00233	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00236	89 8d 76 ff ff
	ff		 mov	 DWORD PTR _ServerModify$28[ebp+10], ecx

; 413  : 				ServerModify.dwFullCount=pServerModify->dwFullCount;

  0023c	8b 45 f4	 mov	 eax, DWORD PTR _pServerModify$32[ebp]
  0023f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00242	89 8d 7e ff ff
	ff		 mov	 DWORD PTR _ServerModify$28[ebp+18], ecx

; 414  : 				ServerModify.dwAndroidCount= pServerModify->dwAndroidCount;

  00248	8b 45 f4	 mov	 eax, DWORD PTR _pServerModify$32[ebp]
  0024b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0024e	89 8d 7a ff ff
	ff		 mov	 DWORD PTR _ServerModify$28[ebp+14], ecx

; 415  : 				lstrcpyn(ServerModify.szServerAddr,pServerModify->szServerAddr,CountArray(ServerModify.szServerAddr));

  00254	6a 20		 push	 32			; 00000020H
  00256	8b 45 f4	 mov	 eax, DWORD PTR _pServerModify$32[ebp]
  00259	83 c0 18	 add	 eax, 24			; 00000018H
  0025c	50		 push	 eax
  0025d	8d 4d 82	 lea	 ecx, DWORD PTR _ServerModify$28[ebp+22]
  00260	51		 push	 ecx
  00261	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 416  : 				lstrcpyn(ServerModify.szServerName,pServerModify->szServerName,CountArray(ServerModify.szServerName));

  00267	6a 20		 push	 32			; 00000020H
  00269	8b 45 f4	 mov	 eax, DWORD PTR _pServerModify$32[ebp]
  0026c	83 c0 38	 add	 eax, 56			; 00000038H
  0026f	50		 push	 eax
  00270	8d 4d a2	 lea	 ecx, DWORD PTR _ServerModify$28[ebp+54]
  00273	51		 push	 ecx
  00274	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 417  : 
; 418  : 				//发送通知
; 419  : 				m_pITCPNetworkEngine->SendDataBatch(MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_MODIFY,&ServerModify,sizeof(ServerModify),0L);

  0027a	6a 00		 push	 0
  0027c	6a 7a		 push	 122			; 0000007aH
  0027e	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _ServerModify$28[ebp]
  00284	50		 push	 eax
  00285	6a 71		 push	 113			; 00000071H
  00287	6a 02		 push	 2
  00289	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0028c	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  00292	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00295	8b 12		 mov	 edx, DWORD PTR [edx]
  00297	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  0029d	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  002a0	ff d0		 call	 eax
$LN16@OnTCPNetwo:

; 420  : 			}
; 421  : 
; 422  : 			return true;

  002a2	b0 01		 mov	 al, 1
  002a4	e9 c3 09 00 00	 jmp	 $LN1@OnTCPNetwo
$LN17@OnTCPNetwo:

; 423  : 		}
; 424  : 	case SUB_CS_C_SEARCH_TABLE:			//查找桌子
; 425  : 		{
; 426  : 			//效验数据
; 427  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_SearchTable));

  002a9	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  002ad	83 f8 17	 cmp	 eax, 23			; 00000017H
  002b0	74 19		 je	 SHORT $LN53@OnTCPNetwo
  002b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  002b8	83 c1 41	 add	 ecx, 65			; 00000041H
  002bb	51		 push	 ecx
  002bc	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  002c1	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  002c6	85 c0		 test	 eax, eax
  002c8	74 01		 je	 SHORT $LN53@OnTCPNetwo
  002ca	cc		 int	 3
$LN53@OnTCPNetwo:

; 428  : 			if (wDataSize!=sizeof(CMD_CS_C_SearchTable)) return false;

  002cb	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  002cf	83 f8 17	 cmp	 eax, 23			; 00000017H
  002d2	74 07		 je	 SHORT $LN18@OnTCPNetwo
  002d4	32 c0		 xor	 al, al
  002d6	e9 91 09 00 00	 jmp	 $LN1@OnTCPNetwo
$LN18@OnTCPNetwo:

; 429  : 
; 430  : 			CMD_CS_C_SearchTable *pSearchTable = (CMD_CS_C_SearchTable*)pData;

  002db	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  002de	89 85 68 ff ff
	ff		 mov	 DWORD PTR _pSearchTable$27[ebp], eax

; 431  : 
; 432  : 			//查找桌子
; 433  : 			tagPersonalTableInfo* pPersonalTable = m_GlobalInfoManager.SearchTableByID(pSearchTable->dwPersonalRoomID);

  002e4	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$27[ebp]
  002ea	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  002ed	51		 push	 ecx
  002ee	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002f1	83 c1 24	 add	 ecx, 36			; 00000024H
  002f4	e8 00 00 00 00	 call	 ?SearchTableByID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@K@Z ; CGlobalInfoManager::SearchTableByID
  002f9	89 85 64 ff ff
	ff		 mov	 DWORD PTR _pPersonalTable$26[ebp], eax

; 434  : 
; 435  : 			//构造数据
; 436  : 			CMD_CS_S_SearchTableResult SearchTableResult;
; 437  : 			ZeroMemory(&SearchTableResult, sizeof(CMD_CS_S_SearchTableResult));

  002ff	6a 14		 push	 20			; 00000014H
  00301	6a 00		 push	 0
  00303	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR _SearchTableResult$25[ebp]
  00309	50		 push	 eax
  0030a	e8 00 00 00 00	 call	 _memset
  0030f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 438  : 
; 439  : 			SearchTableResult.dwSocketID = pSearchTable->dwSocketID;

  00312	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$27[ebp]
  00318	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031a	89 8d 50 ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$25[ebp], ecx

; 440  : 			SearchTableResult.dwClientAddr = pSearchTable->dwClientAddr;

  00320	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$27[ebp]
  00326	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00329	89 8d 54 ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$25[ebp+4], ecx

; 441  : 
; 442  : 			if(pPersonalTable == NULL)

  0032f	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR _pPersonalTable$26[ebp], 0
  00336	75 16		 jne	 SHORT $LN19@OnTCPNetwo

; 443  : 			{
; 444  : 				SearchTableResult.dwServerID = 0;

  00338	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _SearchTableResult$25[ebp+8], 0

; 445  : 				SearchTableResult.dwTableID = 0;

  00342	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _SearchTableResult$25[ebp+12], 0

; 446  : 			}
; 447  : 			else

  0034c	eb 2c		 jmp	 SHORT $LN20@OnTCPNetwo
$LN19@OnTCPNetwo:

; 448  : 			{
; 449  : 				SearchTableResult.dwServerID = pPersonalTable->dwServerID;

  0034e	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _pPersonalTable$26[ebp]
  00354	8b 08		 mov	 ecx, DWORD PTR [eax]
  00356	89 8d 58 ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$25[ebp+8], ecx

; 450  : 				SearchTableResult.dwTableID = pPersonalTable->dwTableID;

  0035c	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _pPersonalTable$26[ebp]
  00362	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00365	89 8d 5c ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$25[ebp+12], ecx

; 451  : 				SearchTableResult.dwKindID = pPersonalTable->dwKindID;

  0036b	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _pPersonalTable$26[ebp]
  00371	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00374	89 8d 60 ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$25[ebp+16], ecx
$LN20@OnTCPNetwo:

; 452  : 			}
; 453  : 			
; 454  : 			m_pITCPNetworkEngine->SendData(dwSocketID, MDM_CS_SERVICE_INFO, SUB_CS_S_SEARCH_TABLE_RESULT, &SearchTableResult, sizeof(SearchTableResult));

  0037a	6a 14		 push	 20			; 00000014H
  0037c	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR _SearchTableResult$25[ebp]
  00382	50		 push	 eax
  00383	68 84 00 00 00	 push	 132			; 00000084H
  00388	6a 02		 push	 2
  0038a	8b 4d 14	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0038d	51		 push	 ecx
  0038e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00391	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  00397	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0039a	8b 10		 mov	 edx, DWORD PTR [eax]
  0039c	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  003a2	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  003a5	ff d0		 call	 eax

; 455  : 
; 456  : 			return true;

  003a7	b0 01		 mov	 al, 1
  003a9	e9 be 08 00 00	 jmp	 $LN1@OnTCPNetwo
$LN21@OnTCPNetwo:

; 457  : 		}
; 458  : 	case SUB_CS_C_DISSUME_SEARCH_TABLE:			//查找桌子
; 459  : 		{
; 460  : 			//效验数据
; 461  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_SearchTable));

  003ae	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  003b2	83 f8 17	 cmp	 eax, 23			; 00000017H
  003b5	74 19		 je	 SHORT $LN54@OnTCPNetwo
  003b7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  003bd	83 c1 63	 add	 ecx, 99			; 00000063H
  003c0	51		 push	 ecx
  003c1	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  003c6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  003cb	85 c0		 test	 eax, eax
  003cd	74 01		 je	 SHORT $LN54@OnTCPNetwo
  003cf	cc		 int	 3
$LN54@OnTCPNetwo:

; 462  : 			if (wDataSize!=sizeof(CMD_CS_C_SearchTable)) return false;

  003d0	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  003d4	83 f8 17	 cmp	 eax, 23			; 00000017H
  003d7	74 07		 je	 SHORT $LN22@OnTCPNetwo
  003d9	32 c0		 xor	 al, al
  003db	e9 8c 08 00 00	 jmp	 $LN1@OnTCPNetwo
$LN22@OnTCPNetwo:

; 463  : 
; 464  : 			CMD_CS_C_SearchTable *pSearchTable = (CMD_CS_C_SearchTable*)pData;

  003e0	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  003e3	89 85 4c ff ff
	ff		 mov	 DWORD PTR _pSearchTable$24[ebp], eax

; 465  : 
; 466  : 			//查找桌子
; 467  : 			tagPersonalTableInfo* pPersonalTable = m_GlobalInfoManager.SearchTableByID(pSearchTable->dwPersonalRoomID);

  003e9	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$24[ebp]
  003ef	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  003f2	51		 push	 ecx
  003f3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003f6	83 c1 24	 add	 ecx, 36			; 00000024H
  003f9	e8 00 00 00 00	 call	 ?SearchTableByID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@K@Z ; CGlobalInfoManager::SearchTableByID
  003fe	89 85 48 ff ff
	ff		 mov	 DWORD PTR _pPersonalTable$23[ebp], eax

; 468  : 
; 469  : 			//构造数据
; 470  : 			CMD_CS_S_SearchTableResult SearchTableResult;
; 471  : 			ZeroMemory(&SearchTableResult, sizeof(CMD_CS_S_SearchTableResult));

  00404	6a 14		 push	 20			; 00000014H
  00406	6a 00		 push	 0
  00408	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _SearchTableResult$22[ebp]
  0040e	50		 push	 eax
  0040f	e8 00 00 00 00	 call	 _memset
  00414	83 c4 0c	 add	 esp, 12			; 0000000cH

; 472  : 
; 473  : 			SearchTableResult.dwSocketID = pSearchTable->dwSocketID;

  00417	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$24[ebp]
  0041d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041f	89 8d 34 ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$22[ebp], ecx

; 474  : 			SearchTableResult.dwClientAddr = pSearchTable->dwClientAddr;

  00425	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$24[ebp]
  0042b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0042e	89 8d 38 ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$22[ebp+4], ecx

; 475  : 
; 476  : 			if(pPersonalTable == NULL)

  00434	83 bd 48 ff ff
	ff 00		 cmp	 DWORD PTR _pPersonalTable$23[ebp], 0
  0043b	75 16		 jne	 SHORT $LN23@OnTCPNetwo

; 477  : 			{
; 478  : 				SearchTableResult.dwServerID = 0;

  0043d	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _SearchTableResult$22[ebp+8], 0

; 479  : 				SearchTableResult.dwTableID = 0;

  00447	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _SearchTableResult$22[ebp+12], 0

; 480  : 			}
; 481  : 			else

  00451	eb 1d		 jmp	 SHORT $LN24@OnTCPNetwo
$LN23@OnTCPNetwo:

; 482  : 			{
; 483  : 				SearchTableResult.dwServerID = pPersonalTable->dwServerID;

  00453	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _pPersonalTable$23[ebp]
  00459	8b 08		 mov	 ecx, DWORD PTR [eax]
  0045b	89 8d 3c ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$22[ebp+8], ecx

; 484  : 				SearchTableResult.dwTableID = pPersonalTable->dwTableID;

  00461	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _pPersonalTable$23[ebp]
  00467	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0046a	89 8d 40 ff ff
	ff		 mov	 DWORD PTR _SearchTableResult$22[ebp+12], ecx
$LN24@OnTCPNetwo:

; 485  : 			}
; 486  : 			
; 487  : 			m_pITCPNetworkEngine->SendData(dwSocketID, MDM_CS_SERVICE_INFO, SUB_CS_S_DISSUME_SEARCH_TABLE_RESULT, &SearchTableResult, sizeof(SearchTableResult));

  00470	6a 14		 push	 20			; 00000014H
  00472	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _SearchTableResult$22[ebp]
  00478	50		 push	 eax
  00479	68 8f 00 00 00	 push	 143			; 0000008fH
  0047e	6a 02		 push	 2
  00480	8b 4d 14	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00483	51		 push	 ecx
  00484	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00487	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  0048d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00490	8b 10		 mov	 edx, DWORD PTR [eax]
  00492	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00498	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0049b	ff d0		 call	 eax

; 488  : 
; 489  : 			return true;

  0049d	b0 01		 mov	 al, 1
  0049f	e9 c8 07 00 00	 jmp	 $LN1@OnTCPNetwo
$LN25@OnTCPNetwo:

; 490  : 		}
; 491  : 	case SUB_CS_S_QUERY_ROOM_PASSWORD:
; 492  : 		{
; 493  : 			//效验数据
; 494  : 			ASSERT(wDataSize == sizeof(CMD_CS_C_SearchTable));

  004a4	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  004a8	83 f8 17	 cmp	 eax, 23			; 00000017H
  004ab	74 1c		 je	 SHORT $LN55@OnTCPNetwo
  004ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  004b3	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  004b9	51		 push	 ecx
  004ba	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  004bf	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  004c4	85 c0		 test	 eax, eax
  004c6	74 01		 je	 SHORT $LN55@OnTCPNetwo
  004c8	cc		 int	 3
$LN55@OnTCPNetwo:

; 495  : 			if (wDataSize != sizeof(CMD_CS_C_SearchTable)) return false;

  004c9	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  004cd	83 f8 17	 cmp	 eax, 23			; 00000017H
  004d0	74 07		 je	 SHORT $LN26@OnTCPNetwo
  004d2	32 c0		 xor	 al, al
  004d4	e9 93 07 00 00	 jmp	 $LN1@OnTCPNetwo
$LN26@OnTCPNetwo:

; 496  : 
; 497  : 			CMD_CS_C_SearchTable *pSearchTable = (CMD_CS_C_SearchTable*)pData;

  004d9	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  004dc	89 85 30 ff ff
	ff		 mov	 DWORD PTR _pSearchTable$21[ebp], eax

; 498  : 
; 499  : 			//查找桌子
; 500  : 			tagPersonalTableInfo* pPersonalTable = m_GlobalInfoManager.SearchTableByID(pSearchTable->dwPersonalRoomID);

  004e2	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$21[ebp]
  004e8	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  004eb	51		 push	 ecx
  004ec	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004ef	83 c1 24	 add	 ecx, 36			; 00000024H
  004f2	e8 00 00 00 00	 call	 ?SearchTableByID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@K@Z ; CGlobalInfoManager::SearchTableByID
  004f7	89 85 2c ff ff
	ff		 mov	 DWORD PTR _pPersonalTable$20[ebp], eax

; 501  : 
; 502  : 			//构造数据
; 503  : 			CMD_CS_S_QueryRoomPasswordResult SearchResult;
; 504  : 			ZeroMemory(&SearchResult, sizeof(CMD_CS_S_QueryRoomPasswordResult));

  004fd	6a 0c		 push	 12			; 0000000cH
  004ff	6a 00		 push	 0
  00501	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _SearchResult$19[ebp]
  00507	50		 push	 eax
  00508	e8 00 00 00 00	 call	 _memset
  0050d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 505  : 
; 506  : 			SearchResult.dwSocketID = pSearchTable->dwSocketID;

  00510	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$21[ebp]
  00516	8b 08		 mov	 ecx, DWORD PTR [eax]
  00518	89 8d 20 ff ff
	ff		 mov	 DWORD PTR _SearchResult$19[ebp], ecx

; 507  : 			SearchResult.dwClientAddr = pSearchTable->dwClientAddr;

  0051e	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _pSearchTable$21[ebp]
  00524	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00527	89 8d 24 ff ff
	ff		 mov	 DWORD PTR _SearchResult$19[ebp+4], ecx

; 508  : 
; 509  : 			if (pPersonalTable == NULL)

  0052d	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR _pPersonalTable$20[ebp], 0
  00534	75 0f		 jne	 SHORT $LN27@OnTCPNetwo

; 510  : 			{
; 511  : 				SearchResult.dwRoomPassword = 0;

  00536	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _SearchResult$19[ebp+8], 0

; 512  : 			}
; 513  : 			else

  00540	e9 f9 00 00 00	 jmp	 $LN28@OnTCPNetwo
$LN27@OnTCPNetwo:

; 514  : 			{
; 515  : 				bool bRefresh = true;

  00545	c6 85 1f ff ff
	ff 01		 mov	 BYTE PTR _bRefresh$18[ebp], 1

; 516  : 				for (int i = 0; i < MAX_PASSWORD_COUNT; i++)

  0054c	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$17[ebp], 0
  00556	eb 0f		 jmp	 SHORT $LN6@OnTCPNetwo
$LN4@OnTCPNetwo:
  00558	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _i$17[ebp]
  0055e	83 c0 01	 add	 eax, 1
  00561	89 85 18 ff ff
	ff		 mov	 DWORD PTR _i$17[ebp], eax
$LN6@OnTCPNetwo:
  00567	83 bd 18 ff ff
	ff 0a		 cmp	 DWORD PTR _i$17[ebp], 10 ; 0000000aH
  0056e	7d 1f		 jge	 SHORT $LN5@OnTCPNetwo

; 517  : 				{
; 518  : 					if (pPersonalTable->hRoomPassword[i].enPS == enPasswordState::enUnShare)

  00570	6b 85 18 ff ff
	ff 0c		 imul	 eax, DWORD PTR _i$17[ebp], 12
  00577	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _pPersonalTable$20[ebp]
  0057d	83 7c 01 53 00	 cmp	 DWORD PTR [ecx+eax+83], 0
  00582	75 09		 jne	 SHORT $LN29@OnTCPNetwo

; 519  : 					{
; 520  : 						bRefresh = false;

  00584	c6 85 1f ff ff
	ff 00		 mov	 BYTE PTR _bRefresh$18[ebp], 0

; 521  : 						break;

  0058b	eb 02		 jmp	 SHORT $LN5@OnTCPNetwo
$LN29@OnTCPNetwo:

; 522  : 					}
; 523  : 				}

  0058d	eb c9		 jmp	 SHORT $LN4@OnTCPNetwo
$LN5@OnTCPNetwo:

; 524  : 				if (bRefresh == true)

  0058f	0f b6 85 1f ff
	ff ff		 movzx	 eax, BYTE PTR _bRefresh$18[ebp]
  00596	83 f8 01	 cmp	 eax, 1
  00599	75 3b		 jne	 SHORT $LN30@OnTCPNetwo

; 525  : 				{
; 526  : 					for (int i = 4; i < MAX_PASSWORD_COUNT; i++)

  0059b	c7 85 14 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR _i$16[ebp], 4
  005a5	eb 0f		 jmp	 SHORT $LN9@OnTCPNetwo
$LN7@OnTCPNetwo:
  005a7	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR _i$16[ebp]
  005ad	83 c0 01	 add	 eax, 1
  005b0	89 85 14 ff ff
	ff		 mov	 DWORD PTR _i$16[ebp], eax
$LN9@OnTCPNetwo:
  005b6	83 bd 14 ff ff
	ff 0a		 cmp	 DWORD PTR _i$16[ebp], 10 ; 0000000aH
  005bd	7d 17		 jge	 SHORT $LN30@OnTCPNetwo

; 527  : 					{
; 528  : 						pPersonalTable->hRoomPassword[i].enPS = enPasswordState::enUnShare;

  005bf	6b 85 14 ff ff
	ff 0c		 imul	 eax, DWORD PTR _i$16[ebp], 12
  005c6	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _pPersonalTable$20[ebp]
  005cc	c7 44 01 53 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+83], 0

; 529  : 					}

  005d4	eb d1		 jmp	 SHORT $LN7@OnTCPNetwo
$LN30@OnTCPNetwo:

; 530  : 				}
; 531  : 				for (int i = 0; i < MAX_PASSWORD_COUNT; i++)

  005d6	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$15[ebp], 0
  005e0	eb 0f		 jmp	 SHORT $LN12@OnTCPNetwo
$LN10@OnTCPNetwo:
  005e2	8b 85 10 ff ff
	ff		 mov	 eax, DWORD PTR _i$15[ebp]
  005e8	83 c0 01	 add	 eax, 1
  005eb	89 85 10 ff ff
	ff		 mov	 DWORD PTR _i$15[ebp], eax
$LN12@OnTCPNetwo:
  005f1	83 bd 10 ff ff
	ff 0a		 cmp	 DWORD PTR _i$15[ebp], 10 ; 0000000aH
  005f8	7d 44		 jge	 SHORT $LN28@OnTCPNetwo

; 532  : 				{
; 533  : 					if (pPersonalTable->hRoomPassword[i].enPS == enPasswordState::enUnShare)

  005fa	6b 85 10 ff ff
	ff 0c		 imul	 eax, DWORD PTR _i$15[ebp], 12
  00601	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _pPersonalTable$20[ebp]
  00607	83 7c 01 53 00	 cmp	 DWORD PTR [ecx+eax+83], 0
  0060c	75 2e		 jne	 SHORT $LN31@OnTCPNetwo

; 534  : 					{
; 535  : 						pPersonalTable->hRoomPassword[i].enPS = enPasswordState::enShare;

  0060e	6b 85 10 ff ff
	ff 0c		 imul	 eax, DWORD PTR _i$15[ebp], 12
  00615	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _pPersonalTable$20[ebp]
  0061b	c7 44 01 53 01
	00 00 00	 mov	 DWORD PTR [ecx+eax+83], 1

; 536  : 						SearchResult.dwRoomPassword = pPersonalTable->hRoomPassword[i].dwRoomPass;

  00623	6b 85 10 ff ff
	ff 0c		 imul	 eax, DWORD PTR _i$15[ebp], 12
  0062a	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _pPersonalTable$20[ebp]
  00630	8b 54 01 57	 mov	 edx, DWORD PTR [ecx+eax+87]
  00634	89 95 28 ff ff
	ff		 mov	 DWORD PTR _SearchResult$19[ebp+8], edx

; 537  : 						break;

  0063a	eb 02		 jmp	 SHORT $LN28@OnTCPNetwo
$LN31@OnTCPNetwo:

; 538  : 					}
; 539  : 				}				

  0063c	eb a4		 jmp	 SHORT $LN10@OnTCPNetwo
$LN28@OnTCPNetwo:

; 540  : 			}
; 541  : 			m_pITCPNetworkEngine->SendData(dwSocketID, MDM_CS_SERVICE_INFO, SUB_CS_S_QUERY_ROOM_PASSWORD_RESULT, &SearchResult, sizeof(SearchResult));

  0063e	6a 0c		 push	 12			; 0000000cH
  00640	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _SearchResult$19[ebp]
  00646	50		 push	 eax
  00647	68 91 00 00 00	 push	 145			; 00000091H
  0064c	6a 02		 push	 2
  0064e	8b 4d 14	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00651	51		 push	 ecx
  00652	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00655	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  0065b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0065e	8b 10		 mov	 edx, DWORD PTR [eax]
  00660	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00666	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00669	ff d0		 call	 eax

; 542  : 			return true;

  0066b	b0 01		 mov	 al, 1
  0066d	e9 fa 05 00 00	 jmp	 $LN1@OnTCPNetwo
$LN32@OnTCPNetwo:

; 543  : 		}
; 544  : 	case SUB_CS_C_QUERY_GAME_SERVER:		//查询可用房间
; 545  : 		{
; 546  : 			//效验数据
; 547  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_QueryGameServer));

  00672	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00676	83 f8 11	 cmp	 eax, 17			; 00000011H
  00679	74 1c		 je	 SHORT $LN56@OnTCPNetwo
  0067b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00681	81 c1 b9 00 00
	00		 add	 ecx, 185		; 000000b9H
  00687	51		 push	 ecx
  00688	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0068d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00692	85 c0		 test	 eax, eax
  00694	74 01		 je	 SHORT $LN56@OnTCPNetwo
  00696	cc		 int	 3
$LN56@OnTCPNetwo:

; 548  : 			if (wDataSize!=sizeof(CMD_CS_C_QueryGameServer)) return false;

  00697	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0069b	83 f8 11	 cmp	 eax, 17			; 00000011H
  0069e	74 07		 je	 SHORT $LN33@OnTCPNetwo
  006a0	32 c0		 xor	 al, al
  006a2	e9 c5 05 00 00	 jmp	 $LN1@OnTCPNetwo
$LN33@OnTCPNetwo:

; 549  : 
; 550  : 			CMD_CS_C_QueryGameServer *pQueryGameServer = (CMD_CS_C_QueryGameServer *)pData;

  006a7	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  006aa	89 85 0c ff ff
	ff		 mov	 DWORD PTR _pQueryGameServer$14[ebp], eax

; 551  : 
; 552  : 			//判断是否可以创建约战房间
; 553  : 			DWORD dwServerID = 0;

  006b0	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwServerID$13[ebp], 0

; 554  : 			bool bCanCreateRoom = false;

  006ba	c6 85 07 ff ff
	ff 00		 mov	 BYTE PTR _bCanCreateRoom$12[ebp], 0

; 555  : 
; 556  : 			CMD_CS_S_QueryGameServerResult QueryGameServerResult;
; 557  : 			ZeroMemory(&QueryGameServerResult, sizeof(CMD_CS_S_QueryGameServerResult));

  006c1	68 11 01 00 00	 push	 273			; 00000111H
  006c6	6a 00		 push	 0
  006c8	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _QueryGameServerResult$11[ebp]
  006ce	50		 push	 eax
  006cf	e8 00 00 00 00	 call	 _memset
  006d4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 558  : 			
; 559  : 			if (m_GlobalInfoManager.GetFreeServerCount(pQueryGameServer->dwKindID) > 0)

  006d7	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _pQueryGameServer$14[ebp]
  006dd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  006e0	51		 push	 ecx
  006e1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  006e4	83 c1 24	 add	 ecx, 36			; 00000024H
  006e7	e8 00 00 00 00	 call	 ?GetFreeServerCount@CGlobalInfoManager@@QAEKK@Z ; CGlobalInfoManager::GetFreeServerCount
  006ec	85 c0		 test	 eax, eax
  006ee	0f 86 96 00 00
	00		 jbe	 $LN34@OnTCPNetwo

; 560  : 			{
; 561  : 				if (m_GlobalInfoManager.CanCreatePersonalRoom(pQueryGameServer->dwKindID, pQueryGameServer->dwUserID))

  006f4	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _pQueryGameServer$14[ebp]
  006fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  006fc	51		 push	 ecx
  006fd	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _pQueryGameServer$14[ebp]
  00703	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00706	50		 push	 eax
  00707	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0070a	83 c1 24	 add	 ecx, 36			; 00000024H
  0070d	e8 00 00 00 00	 call	 ?CanCreatePersonalRoom@CGlobalInfoManager@@QAE_NKK@Z ; CGlobalInfoManager::CanCreatePersonalRoom
  00712	0f b6 c8	 movzx	 ecx, al
  00715	85 c9		 test	 ecx, ecx
  00717	74 58		 je	 SHORT $LN36@OnTCPNetwo

; 562  : 				{
; 563  : 					//空闲桌子
; 564  : 					dwServerID = m_GlobalInfoManager.GetFreeServer(pQueryGameServer->dwUserID, pQueryGameServer->dwKindID, pQueryGameServer->cbIsJoinGame);

  00719	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _pQueryGameServer$14[ebp]
  0071f	0f b6 48 08	 movzx	 ecx, BYTE PTR [eax+8]
  00723	51		 push	 ecx
  00724	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR _pQueryGameServer$14[ebp]
  0072a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0072d	50		 push	 eax
  0072e	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR _pQueryGameServer$14[ebp]
  00734	8b 11		 mov	 edx, DWORD PTR [ecx]
  00736	52		 push	 edx
  00737	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0073a	83 c1 24	 add	 ecx, 36			; 00000024H
  0073d	e8 00 00 00 00	 call	 ?GetFreeServer@CGlobalInfoManager@@QAEKKKE@Z ; CGlobalInfoManager::GetFreeServer
  00742	89 85 08 ff ff
	ff		 mov	 DWORD PTR _dwServerID$13[ebp], eax

; 565  : 					bCanCreateRoom = true;

  00748	c6 85 07 ff ff
	ff 01		 mov	 BYTE PTR _bCanCreateRoom$12[ebp], 1

; 566  : 
; 567  : 					if (dwServerID == 0)

  0074f	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR _dwServerID$13[ebp], 0
  00756	75 17		 jne	 SHORT $LN38@OnTCPNetwo

; 568  : 					{
; 569  : 						lstrcpyn(QueryGameServerResult.szErrDescrybe, TEXT("房主必须参与游戏模式下只能创建一个房间，或游戏服务器创建约战房间已满！"),  sizeof(QueryGameServerResult.szErrDescrybe));

  00758	68 04 01 00 00	 push	 260			; 00000104H
  0075d	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@CILKLIBL@?$LH?$LP?V?w?$LB?X?P?k?$LC?N?S?k?S?N?O?$LH?D?$KD?J?$LN?O?B?V?$LL?D?$NM?$LE?$LE?$LN?$KI?R@
  00762	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _QueryGameServerResult$11[ebp+13]
  00768	50		 push	 eax
  00769	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
$LN38@OnTCPNetwo:

; 570  : 					}
; 571  : 				}
; 572  : 				else

  0076f	eb 17		 jmp	 SHORT $LN37@OnTCPNetwo
$LN36@OnTCPNetwo:

; 573  : 				{
; 574  : 					lstrcpyn(QueryGameServerResult.szErrDescrybe, TEXT("已经达到创建约战房间的最大数，不能再创建房间！"),  sizeof(QueryGameServerResult.szErrDescrybe));

  00771	68 04 01 00 00	 push	 260			; 00000104H
  00776	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@FBKMLKLC@?R?Q?$LO?$KN?$LE?o?$LF?$LN?$LE?$LE?$LN?$KI?T?$LM?U?$LN?$LH?$LP?$LM?d?$LF?D?W?n?$LE?s?J?$PN?$KD?$KM?$LC@
  0077b	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _QueryGameServerResult$11[ebp+13]
  00781	50		 push	 eax
  00782	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
$LN37@OnTCPNetwo:

; 575  : 				}
; 576  : 			}
; 577  : 			else

  00788	eb 17		 jmp	 SHORT $LN35@OnTCPNetwo
$LN34@OnTCPNetwo:

; 578  : 			{
; 579  : 				lstrcpyn(QueryGameServerResult.szErrDescrybe, TEXT("当前游戏的约战房服务器不存在，请选择其他游戏！"),  sizeof(QueryGameServerResult.szErrDescrybe));

  0078a	68 04 01 00 00	 push	 260			; 00000104H
  0078f	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@JMPGHJLK@?$LF?$LB?G?$LA?S?N?O?$LH?$LF?D?T?$LM?U?$LN?$LH?$LP?$LH?$PO?N?q?F?w?$LC?$LL?$LE?f?T?Z?$KD?$KM?G@
  00794	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _QueryGameServerResult$11[ebp+13]
  0079a	50		 push	 eax
  0079b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
$LN35@OnTCPNetwo:

; 580  : 			}
; 581  : 
; 582  : 
; 583  : 			//构造数据
; 584  : 			QueryGameServerResult.dwSocketID = pQueryGameServer->dwSocketID;

  007a1	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _pQueryGameServer$14[ebp]
  007a7	8b 48 09	 mov	 ecx, DWORD PTR [eax+9]
  007aa	89 8d f0 fd ff
	ff		 mov	 DWORD PTR _QueryGameServerResult$11[ebp], ecx

; 585  : 			QueryGameServerResult.dwClientAddr = pQueryGameServer->dwClientAddr;

  007b0	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _pQueryGameServer$14[ebp]
  007b6	8b 48 0d	 mov	 ecx, DWORD PTR [eax+13]
  007b9	89 8d f4 fd ff
	ff		 mov	 DWORD PTR _QueryGameServerResult$11[ebp+4], ecx

; 586  : 			QueryGameServerResult.dwServerID = dwServerID;

  007bf	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR _dwServerID$13[ebp]
  007c5	89 85 f8 fd ff
	ff		 mov	 DWORD PTR _QueryGameServerResult$11[ebp+8], eax

; 587  : 			QueryGameServerResult.bCanCreateRoom= bCanCreateRoom;

  007cb	8a 85 07 ff ff
	ff		 mov	 al, BYTE PTR _bCanCreateRoom$12[ebp]
  007d1	88 85 fc fd ff
	ff		 mov	 BYTE PTR _QueryGameServerResult$11[ebp+12], al

; 588  : 
; 589  : 
; 590  : 			m_pITCPNetworkEngine->SendData(dwSocketID, MDM_CS_SERVICE_INFO, SUB_CS_S_QUERY_GAME_SERVER_RESULT, &QueryGameServerResult, sizeof(CMD_CS_S_QueryGameServerResult));

  007d7	68 11 01 00 00	 push	 273			; 00000111H
  007dc	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _QueryGameServerResult$11[ebp]
  007e2	50		 push	 eax
  007e3	68 86 00 00 00	 push	 134			; 00000086H
  007e8	6a 02		 push	 2
  007ea	8b 4d 14	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  007ed	51		 push	 ecx
  007ee	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  007f1	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  007f7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  007fa	8b 10		 mov	 edx, DWORD PTR [eax]
  007fc	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00802	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00805	ff d0		 call	 eax

; 591  : 
; 592  : 			return true;

  00807	b0 01		 mov	 al, 1
  00809	e9 5e 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN39@OnTCPNetwo:

; 593  : 		}
; 594  : 	case SUB_CS_C_CREATE_TABLE:		//创建桌子
; 595  : 		{
; 596  : 			//校验数据
; 597  : 			ASSERT(wDataSize == sizeof(CMD_CS_C_CreateTable));

  0080e	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00812	3d ef 00 00 00	 cmp	 eax, 239		; 000000efH
  00817	74 1c		 je	 SHORT $LN57@OnTCPNetwo
  00819	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  0081f	81 c1 eb 00 00
	00		 add	 ecx, 235		; 000000ebH
  00825	51		 push	 ecx
  00826	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0082b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00830	85 c0		 test	 eax, eax
  00832	74 01		 je	 SHORT $LN57@OnTCPNetwo
  00834	cc		 int	 3
$LN57@OnTCPNetwo:

; 598  : 			if(wDataSize != sizeof(CMD_CS_C_CreateTable)) return false;

  00835	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00839	3d ef 00 00 00	 cmp	 eax, 239		; 000000efH
  0083e	74 07		 je	 SHORT $LN40@OnTCPNetwo
  00840	32 c0		 xor	 al, al
  00842	e9 25 04 00 00	 jmp	 $LN1@OnTCPNetwo
$LN40@OnTCPNetwo:

; 599  : 
; 600  : 			CMD_CS_C_CreateTable* pCreateTable = (CMD_CS_C_CreateTable*)pData;

  00847	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  0084a	89 85 ec fd ff
	ff		 mov	 DWORD PTR _pCreateTable$10[ebp], eax

; 601  : 
; 602  : 			//生成ID
; 603  : 			DWORD dwRoomID;
; 604  : 			dwRoomID = m_GlobalInfoManager.RandPersonalRoomID();

  00850	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00853	83 c1 24	 add	 ecx, 36			; 00000024H
  00856	e8 00 00 00 00	 call	 ?RandPersonalRoomID@CGlobalInfoManager@@QAEKXZ ; CGlobalInfoManager::RandPersonalRoomID
  0085b	89 85 e8 fd ff
	ff		 mov	 DWORD PTR _dwRoomID$9[ebp], eax

; 605  : 
; 606  : 			pCreateTable->PersonalTable.dwPersonalRoomID  = dwRoomID;

  00861	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  00867	8b 8d e8 fd ff
	ff		 mov	 ecx, DWORD PTR _dwRoomID$9[ebp]
  0086d	89 48 3e	 mov	 DWORD PTR [eax+62], ecx

; 607  : 			//汇总桌子
; 608  : 			m_GlobalInfoManager.AddServerTable(dwRoomID, pCreateTable->PersonalTable);

  00870	8b b5 ec fd ff
	ff		 mov	 esi, DWORD PTR _pCreateTable$10[ebp]
  00876	83 c6 1e	 add	 esi, 30			; 0000001eH
  00879	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  0087f	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00884	8b fc		 mov	 edi, esp
  00886	f3 a5		 rep movsd
  00888	a4		 movsb
  00889	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR _dwRoomID$9[ebp]
  0088f	50		 push	 eax
  00890	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00893	83 c1 24	 add	 ecx, 36			; 00000024H
  00896	e8 00 00 00 00	 call	 ?AddServerTable@CGlobalInfoManager@@QAE_NKUtagPersonalTableInfo@@@Z ; CGlobalInfoManager::AddServerTable

; 609  : 			m_GlobalInfoManager.RemoveFreeServerTable(pCreateTable->PersonalTable.dwServerID);

  0089b	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  008a1	8b 48 1e	 mov	 ecx, DWORD PTR [eax+30]
  008a4	51		 push	 ecx
  008a5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  008a8	83 c1 24	 add	 ecx, 36			; 00000024H
  008ab	e8 00 00 00 00	 call	 ?RemoveFreeServerTable@CGlobalInfoManager@@QAE_NK@Z ; CGlobalInfoManager::RemoveFreeServerTable

; 610  : 
; 611  : 			//构造数据
; 612  : 			CMD_CS_S_CreateTableResult CreateTableResult;
; 613  : 			ZeroMemory(&CreateTableResult, sizeof(CMD_CS_S_CreateTableResult));

  008b0	68 ef 00 00 00	 push	 239			; 000000efH
  008b5	6a 00		 push	 0
  008b7	8d 85 f8 fc ff
	ff		 lea	 eax, DWORD PTR _CreateTableResult$8[ebp]
  008bd	50		 push	 eax
  008be	e8 00 00 00 00	 call	 _memset
  008c3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 614  : 
; 615  : 			CreateTableResult.dwSocketID = pCreateTable->dwSocketID;

  008c6	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  008cc	8b 08		 mov	 ecx, DWORD PTR [eax]
  008ce	89 8d f8 fc ff
	ff		 mov	 DWORD PTR _CreateTableResult$8[ebp], ecx

; 616  : 			CreateTableResult.PersonalTable.dwTableID = pCreateTable->PersonalTable.dwTableID;

  008d4	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  008da	8b 48 26	 mov	 ecx, DWORD PTR [eax+38]
  008dd	89 8d 1e fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$8[ebp+38], ecx

; 617  : 			CreateTableResult.PersonalTable.dwServerID = pCreateTable->PersonalTable.dwServerID;

  008e3	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  008e9	8b 48 1e	 mov	 ecx, DWORD PTR [eax+30]
  008ec	89 8d 16 fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$8[ebp+30], ecx

; 618  : 			CreateTableResult.PersonalTable.dwKindID = pCreateTable->PersonalTable.dwKindID;

  008f2	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  008f8	8b 48 22	 mov	 ecx, DWORD PTR [eax+34]
  008fb	89 8d 1a fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$8[ebp+34], ecx

; 619  : 			CreateTableResult.PersonalTable.dwUserID = pCreateTable->PersonalTable.dwUserID;

  00901	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  00907	8b 48 2a	 mov	 ecx, DWORD PTR [eax+42]
  0090a	89 8d 22 fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$8[ebp+42], ecx

; 620  : 			CreateTableResult.PersonalTable.lCellScore = pCreateTable->PersonalTable.lCellScore;

  00910	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  00916	8b 48 36	 mov	 ecx, DWORD PTR [eax+54]
  00919	89 8d 2e fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$8[ebp+54], ecx
  0091f	8b 50 3a	 mov	 edx, DWORD PTR [eax+58]
  00922	89 95 32 fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$8[ebp+58], edx

; 621  : 			CreateTableResult.PersonalTable.dwDrawTimeLimit = pCreateTable->PersonalTable.dwDrawTimeLimit;

  00928	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  0092e	8b 48 32	 mov	 ecx, DWORD PTR [eax+50]
  00931	89 8d 2a fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$8[ebp+50], ecx

; 622  : 			CreateTableResult.PersonalTable.dwDrawCountLimit = pCreateTable->PersonalTable.dwDrawCountLimit;

  00937	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  0093d	8b 48 2e	 mov	 ecx, DWORD PTR [eax+46]
  00940	89 8d 26 fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$8[ebp+46], ecx

; 623  : 			CreateTableResult.PersonalTable.dwPersonalRoomID = dwRoomID;

  00946	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR _dwRoomID$9[ebp]
  0094c	89 85 36 fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$8[ebp+62], eax

; 624  : 			//lstrcpyn(CreateTableResult.PersonalTable.szPassword, pCreateTable->PersonalTable.szPassword, CountArray(CreateTableResult.PersonalTable.szPassword));
; 625  : 			lstrcpyn(CreateTableResult.szClientAddr, pCreateTable->szClientAddr, CountArray(CreateTableResult.szClientAddr));

  00952	6a 10		 push	 16			; 00000010H
  00954	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  0095a	83 c0 08	 add	 eax, 8
  0095d	50		 push	 eax
  0095e	8d 8d 00 fd ff
	ff		 lea	 ecx, DWORD PTR _CreateTableResult$8[ebp+8]
  00964	51		 push	 ecx
  00965	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 626  : 			CreateTableResult.PersonalTable.wJoinGamePeopleCount = pCreateTable->PersonalTable.wJoinGamePeopleCount;

  0096b	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  00971	66 8b 48 4d	 mov	 cx, WORD PTR [eax+77]
  00975	66 89 8d 45 fd
	ff ff		 mov	 WORD PTR _CreateTableResult$8[ebp+77], cx

; 627  : 			CreateTableResult.PersonalTable.dwRoomTax = pCreateTable->PersonalTable.dwRoomTax;

  0097c	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  00982	8b 48 49	 mov	 ecx, DWORD PTR [eax+73]
  00985	89 8d 41 fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$8[ebp+73], ecx

; 628  : 			CreateTableResult.cbPayMode = pCreateTable->cbPayMode;

  0098b	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  00991	8a 48 18	 mov	 cl, BYTE PTR [eax+24]
  00994	88 8d 10 fd ff
	ff		 mov	 BYTE PTR _CreateTableResult$8[ebp+24], cl

; 629  : 			CreateTableResult.lNeedRoomCard = pCreateTable->lNeedRoomCard;

  0099a	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  009a0	8b 48 1a	 mov	 ecx, DWORD PTR [eax+26]
  009a3	89 8d 12 fd ff
	ff		 mov	 DWORD PTR _CreateTableResult$8[ebp+26], ecx

; 630  : 			CreateTableResult.PersonalTable.wCurSitPlayer = pCreateTable->PersonalTable.wCurSitPlayer;

  009a9	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  009af	66 8b 88 ed 00
	00 00		 mov	 cx, WORD PTR [eax+237]
  009b6	66 89 8d e5 fd
	ff ff		 mov	 WORD PTR _CreateTableResult$8[ebp+237], cx

; 631  : 			CreateTableResult.cbGameMode = pCreateTable->cbGameMode;

  009bd	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR _pCreateTable$10[ebp]
  009c3	8a 48 19	 mov	 cl, BYTE PTR [eax+25]
  009c6	88 8d 11 fd ff
	ff		 mov	 BYTE PTR _CreateTableResult$8[ebp+25], cl

; 632  : 
; 633  : 			m_pITCPNetworkEngine->SendData(dwSocketID, MDM_CS_SERVICE_INFO, SUB_CS_S_CREATE_TABLE_RESULT, &CreateTableResult, sizeof(CMD_CS_S_CreateTableResult));

  009cc	68 ef 00 00 00	 push	 239			; 000000efH
  009d1	8d 85 f8 fc ff
	ff		 lea	 eax, DWORD PTR _CreateTableResult$8[ebp]
  009d7	50		 push	 eax
  009d8	68 88 00 00 00	 push	 136			; 00000088H
  009dd	6a 02		 push	 2
  009df	8b 4d 14	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  009e2	51		 push	 ecx
  009e3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  009e6	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  009ec	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  009ef	8b 10		 mov	 edx, DWORD PTR [eax]
  009f1	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  009f7	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  009fa	ff d0		 call	 eax

; 634  : 
; 635  : 
; 636  : 			return true;

  009fc	b0 01		 mov	 al, 1
  009fe	e9 69 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN41@OnTCPNetwo:

; 637  : 		}
; 638  : 	case SUB_CS_C_DISMISS_TABLE:		//解散桌子
; 639  : 		{
; 640  : 			//校验数据
; 641  : 			ASSERT(wDataSize == sizeof(CMD_CS_C_DismissTable));

  00a03	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00a07	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00a0a	74 1c		 je	 SHORT $LN58@OnTCPNetwo
  00a0c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00a12	81 c1 17 01 00
	00		 add	 ecx, 279		; 00000117H
  00a18	51		 push	 ecx
  00a19	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00a1e	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00a23	85 c0		 test	 eax, eax
  00a25	74 01		 je	 SHORT $LN58@OnTCPNetwo
  00a27	cc		 int	 3
$LN58@OnTCPNetwo:

; 642  : 			if(wDataSize != sizeof(CMD_CS_C_DismissTable)) return false;

  00a28	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00a2c	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00a2f	74 07		 je	 SHORT $LN42@OnTCPNetwo
  00a31	32 c0		 xor	 al, al
  00a33	e9 34 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN42@OnTCPNetwo:

; 643  : 
; 644  : 			CMD_CS_C_DismissTable* pDismissTable = (CMD_CS_C_DismissTable*)pData;

  00a38	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00a3b	89 85 f4 fc ff
	ff		 mov	 DWORD PTR _pDismissTable$7[ebp], eax

; 645  : 
; 646  : 			tagPersonalTableInfo * pPersonalTableInfo = m_GlobalInfoManager.SearchTableByTableIDAndServerID(pDismissTable->dwServerID, pDismissTable->dwTableID);

  00a41	8b 85 f4 fc ff
	ff		 mov	 eax, DWORD PTR _pDismissTable$7[ebp]
  00a47	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00a4a	51		 push	 ecx
  00a4b	8b 95 f4 fc ff
	ff		 mov	 edx, DWORD PTR _pDismissTable$7[ebp]
  00a51	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00a54	50		 push	 eax
  00a55	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00a58	83 c1 24	 add	 ecx, 36			; 00000024H
  00a5b	e8 00 00 00 00	 call	 ?SearchTableByTableIDAndServerID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@KK@Z ; CGlobalInfoManager::SearchTableByTableIDAndServerID
  00a60	89 85 f0 fc ff
	ff		 mov	 DWORD PTR _pPersonalTableInfo$6[ebp], eax

; 647  : 			if (pPersonalTableInfo == NULL)

  00a66	83 bd f0 fc ff
	ff 00		 cmp	 DWORD PTR _pPersonalTableInfo$6[ebp], 0
  00a6d	75 07		 jne	 SHORT $LN43@OnTCPNetwo

; 648  : 			{
; 649  : 				return true;

  00a6f	b0 01		 mov	 al, 1
  00a71	e9 f6 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN43@OnTCPNetwo:

; 650  : 			}
; 651  : 
; 652  : 			CMD_CS_C_DismissTableResult  DismissTableResult;

  00a76	8d 8d 38 fa ff
	ff		 lea	 ecx, DWORD PTR _DismissTableResult$5[ebp]
  00a7c	e8 00 00 00 00	 call	 ??0CMD_CS_C_DismissTableResult@@QAE@XZ

; 653  : 			DismissTableResult.dwSocketID = pDismissTable->dwSocketID;

  00a81	8b 85 f4 fc ff
	ff		 mov	 eax, DWORD PTR _pDismissTable$7[ebp]
  00a87	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a89	89 8d 38 fa ff
	ff		 mov	 DWORD PTR _DismissTableResult$5[ebp], ecx

; 654  : 			memcpy(&DismissTableResult.PersonalTableInfo, pPersonalTableInfo, sizeof(tagPersonalTableInfo));

  00a8f	68 d1 00 00 00	 push	 209			; 000000d1H
  00a94	8b 85 f0 fc ff
	ff		 mov	 eax, DWORD PTR _pPersonalTableInfo$6[ebp]
  00a9a	50		 push	 eax
  00a9b	8d 8d 3c fa ff
	ff		 lea	 ecx, DWORD PTR _DismissTableResult$5[ebp+4]
  00aa1	51		 push	 ecx
  00aa2	e8 00 00 00 00	 call	 _memcpy
  00aa7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 655  : 
; 656  : 			//汇总桌子
; 657  : 			m_GlobalInfoManager.RemoveServerTable(pDismissTable->dwServerID, pDismissTable->dwTableID);

  00aaa	8b 85 f4 fc ff
	ff		 mov	 eax, DWORD PTR _pDismissTable$7[ebp]
  00ab0	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00ab3	51		 push	 ecx
  00ab4	8b 95 f4 fc ff
	ff		 mov	 edx, DWORD PTR _pDismissTable$7[ebp]
  00aba	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00abd	50		 push	 eax
  00abe	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ac1	83 c1 24	 add	 ecx, 36			; 00000024H
  00ac4	e8 00 00 00 00	 call	 ?RemoveServerTable@CGlobalInfoManager@@QAE_NKK@Z ; CGlobalInfoManager::RemoveServerTable

; 658  : 			m_GlobalInfoManager.AddFreeServerTable(pDismissTable->dwServerID);

  00ac9	8b 85 f4 fc ff
	ff		 mov	 eax, DWORD PTR _pDismissTable$7[ebp]
  00acf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ad2	51		 push	 ecx
  00ad3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00ad6	83 c1 24	 add	 ecx, 36			; 00000024H
  00ad9	e8 00 00 00 00	 call	 ?AddFreeServerTable@CGlobalInfoManager@@QAE_NK@Z ; CGlobalInfoManager::AddFreeServerTable

; 659  : 
; 660  : 			m_pITCPNetworkEngine->SendData(dwSocketID, MDM_CS_SERVICE_INFO, SUB_CS_C_DISMISS_TABLE_RESULT, &DismissTableResult, sizeof(CMD_CS_C_DismissTableResult));

  00ade	68 b5 02 00 00	 push	 693			; 000002b5H
  00ae3	8d 85 38 fa ff
	ff		 lea	 eax, DWORD PTR _DismissTableResult$5[ebp]
  00ae9	50		 push	 eax
  00aea	68 8a 00 00 00	 push	 138			; 0000008aH
  00aef	6a 02		 push	 2
  00af1	8b 4d 14	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00af4	51		 push	 ecx
  00af5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00af8	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  00afe	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b01	8b 10		 mov	 edx, DWORD PTR [eax]
  00b03	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00b09	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00b0c	ff d0		 call	 eax

; 661  : 
; 662  : 			return true;

  00b0e	b0 01		 mov	 al, 1
  00b10	e9 57 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN44@OnTCPNetwo:

; 663  : 		}
; 664  : 	case SUB_CS_C_UPDATE_TABLE_COUNT:
; 665  : 		{
; 666  : 			//校验数据
; 667  : 			ASSERT(wDataSize == sizeof(CMD_CS_C_UpdateTablePlayerCount));

  00b15	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00b19	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00b1c	74 1c		 je	 SHORT $LN59@OnTCPNetwo
  00b1e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00b24	81 c1 31 01 00
	00		 add	 ecx, 305		; 00000131H
  00b2a	51		 push	 ecx
  00b2b	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00b30	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00b35	85 c0		 test	 eax, eax
  00b37	74 01		 je	 SHORT $LN59@OnTCPNetwo
  00b39	cc		 int	 3
$LN59@OnTCPNetwo:

; 668  : 			if (wDataSize != sizeof(CMD_CS_C_UpdateTablePlayerCount)) return false;

  00b3a	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00b3e	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00b41	74 07		 je	 SHORT $LN45@OnTCPNetwo
  00b43	32 c0		 xor	 al, al
  00b45	e9 22 01 00 00	 jmp	 $LN1@OnTCPNetwo
$LN45@OnTCPNetwo:

; 669  : 
; 670  : 			CMD_CS_C_UpdateTablePlayerCount* pUpdateTable = (CMD_CS_C_UpdateTablePlayerCount*)pData;

  00b4a	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00b4d	89 85 34 fa ff
	ff		 mov	 DWORD PTR _pUpdateTable$4[ebp], eax

; 671  : 
; 672  : 			tagPersonalTableInfo * pPersonalTableInfo = m_GlobalInfoManager.SearchTableByTableIDAndServerID(pUpdateTable->wServerID, pUpdateTable->wTableID);

  00b53	8b 85 34 fa ff
	ff		 mov	 eax, DWORD PTR _pUpdateTable$4[ebp]
  00b59	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  00b5d	51		 push	 ecx
  00b5e	8b 95 34 fa ff
	ff		 mov	 edx, DWORD PTR _pUpdateTable$4[ebp]
  00b64	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  00b68	50		 push	 eax
  00b69	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00b6c	83 c1 24	 add	 ecx, 36			; 00000024H
  00b6f	e8 00 00 00 00	 call	 ?SearchTableByTableIDAndServerID@CGlobalInfoManager@@QAEPAUtagPersonalTableInfo@@KK@Z ; CGlobalInfoManager::SearchTableByTableIDAndServerID
  00b74	89 85 30 fa ff
	ff		 mov	 DWORD PTR _pPersonalTableInfo$3[ebp], eax

; 673  : 			if (pPersonalTableInfo == NULL)

  00b7a	83 bd 30 fa ff
	ff 00		 cmp	 DWORD PTR _pPersonalTableInfo$3[ebp], 0
  00b81	75 07		 jne	 SHORT $LN46@OnTCPNetwo

; 674  : 			{
; 675  : 				return true;

  00b83	b0 01		 mov	 al, 1
  00b85	e9 e2 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN46@OnTCPNetwo:

; 676  : 			}
; 677  : 			pPersonalTableInfo->wCurSitPlayer = pUpdateTable->wSitCount;			

  00b8a	8b 85 30 fa ff
	ff		 mov	 eax, DWORD PTR _pPersonalTableInfo$3[ebp]
  00b90	8b 8d 34 fa ff
	ff		 mov	 ecx, DWORD PTR _pUpdateTable$4[ebp]
  00b96	66 8b 51 08	 mov	 dx, WORD PTR [ecx+8]
  00b9a	66 89 90 cf 00
	00 00		 mov	 WORD PTR [eax+207], dx

; 678  : 
; 679  : 			return true;

  00ba1	b0 01		 mov	 al, 1
  00ba3	e9 c4 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN47@OnTCPNetwo:

; 680  : 		}
; 681  : 	case SUB_CS_S_QUERY_PERSONAL_ROOM_LIST:		//请求房间列表
; 682  : 		{
; 683  : 			//校验数据
; 684  : 			ASSERT(wDataSize == sizeof(CMD_MB_SC_QeuryPersonalRoomList));

  00ba8	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00bac	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00baf	74 1c		 je	 SHORT $LN60@OnTCPNetwo
  00bb1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  00bb7	81 c1 42 01 00
	00		 add	 ecx, 322		; 00000142H
  00bbd	51		 push	 ecx
  00bbe	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00bc3	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00bc8	85 c0		 test	 eax, eax
  00bca	74 01		 je	 SHORT $LN60@OnTCPNetwo
  00bcc	cc		 int	 3
$LN60@OnTCPNetwo:

; 685  : 			if(wDataSize != sizeof(CMD_MB_SC_QeuryPersonalRoomList)) return false;

  00bcd	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00bd1	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00bd4	74 07		 je	 SHORT $LN48@OnTCPNetwo
  00bd6	32 c0		 xor	 al, al
  00bd8	e9 8f 00 00 00	 jmp	 $LN1@OnTCPNetwo
$LN48@OnTCPNetwo:

; 686  : 
; 687  : 			CMD_MB_SC_QeuryPersonalRoomList * QeuryPersonalRoomList = (CMD_MB_SC_QeuryPersonalRoomList * ) pData;

  00bdd	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00be0	89 85 2c fa ff
	ff		 mov	 DWORD PTR _QeuryPersonalRoomList$2[ebp], eax

; 688  : 
; 689  : 			CMD_CS_C_HostCreatRoomInfo  cmdHostCreatRoomInfo;

  00be6	8d 8d cc f8 ff
	ff		 lea	 ecx, DWORD PTR _cmdHostCreatRoomInfo$1[ebp]
  00bec	e8 00 00 00 00	 call	 ??0CMD_CS_C_HostCreatRoomInfo@@QAE@XZ

; 690  : 			ZeroMemory(&cmdHostCreatRoomInfo,  sizeof(CMD_CS_C_HostCreatRoomInfo));

  00bf1	68 60 01 00 00	 push	 352			; 00000160H
  00bf6	6a 00		 push	 0
  00bf8	8d 85 cc f8 ff
	ff		 lea	 eax, DWORD PTR _cmdHostCreatRoomInfo$1[ebp]
  00bfe	50		 push	 eax
  00bff	e8 00 00 00 00	 call	 _memset
  00c04	83 c4 0c	 add	 esp, 12			; 0000000cH

; 691  : 
; 692  : 			cmdHostCreatRoomInfo.wSocketID = QeuryPersonalRoomList->dwSocketID;

  00c07	8b 85 2c fa ff
	ff		 mov	 eax, DWORD PTR _QeuryPersonalRoomList$2[ebp]
  00c0d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00c10	89 8d cc f8 ff
	ff		 mov	 DWORD PTR _cmdHostCreatRoomInfo$1[ebp], ecx

; 693  : 			cmdHostCreatRoomInfo.HostCreatRoomInfo.dwUserID = QeuryPersonalRoomList->dwUserID;			

  00c16	8b 85 2c fa ff
	ff		 mov	 eax, DWORD PTR _QeuryPersonalRoomList$2[ebp]
  00c1c	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c1e	89 8d d0 f8 ff
	ff		 mov	 DWORD PTR _cmdHostCreatRoomInfo$1[ebp+4], ecx

; 694  : 			m_GlobalInfoManager.GetHostCreatePersonalRoom(cmdHostCreatRoomInfo.HostCreatRoomInfo);

  00c24	8d 85 d0 f8 ff
	ff		 lea	 eax, DWORD PTR _cmdHostCreatRoomInfo$1[ebp+4]
  00c2a	50		 push	 eax
  00c2b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c2e	83 c1 24	 add	 ecx, 36			; 00000024H
  00c31	e8 00 00 00 00	 call	 ?GetHostCreatePersonalRoom@CGlobalInfoManager@@QAEXAAUtagHostCreatRoomInfo@@@Z ; CGlobalInfoManager::GetHostCreatePersonalRoom

; 695  : 
; 696  : 			m_pITCPNetworkEngine->SendData(dwSocketID, MDM_CS_SERVICE_INFO, SUB_CS_C_QUERY_PERSONAL_ROOM_LIST_RESULT, &cmdHostCreatRoomInfo, sizeof(CMD_CS_C_HostCreatRoomInfo));

  00c36	68 60 01 00 00	 push	 352			; 00000160H
  00c3b	8d 85 cc f8 ff
	ff		 lea	 eax, DWORD PTR _cmdHostCreatRoomInfo$1[ebp]
  00c41	50		 push	 eax
  00c42	68 8d 00 00 00	 push	 141			; 0000008dH
  00c47	6a 02		 push	 2
  00c49	8b 4d 14	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  00c4c	51		 push	 ecx
  00c4d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00c50	8b 82 34 01 00
	00		 mov	 eax, DWORD PTR [edx+308]
  00c56	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00c59	8b 10		 mov	 edx, DWORD PTR [eax]
  00c5b	8b 89 34 01 00
	00		 mov	 ecx, DWORD PTR [ecx+308]
  00c61	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00c64	ff d0		 call	 eax

; 697  : 
; 698  : 			return true;

  00c66	b0 01		 mov	 al, 1
  00c68	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 699  : 		}
; 700  : 	}
; 701  : 
; 702  : 	return false;

  00c6a	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 703  : }

  00c6c	5f		 pop	 edi
  00c6d	5e		 pop	 esi
  00c6e	5b		 pop	 ebx
  00c6f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c72	33 cd		 xor	 ecx, ebp
  00c74	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c79	8b e5		 mov	 esp, ebp
  00c7b	5d		 pop	 ebp
  00c7c	c2 10 00	 ret	 16			; 00000010H
  00c7f	90		 npad	 1
$LN62@OnTCPNetwo:
  00c80	00 00 00 00	 DD	 $LN13@OnTCPNetwo
  00c84	00 00 00 00	 DD	 $LN17@OnTCPNetwo
  00c88	00 00 00 00	 DD	 $LN32@OnTCPNetwo
  00c8c	00 00 00 00	 DD	 $LN39@OnTCPNetwo
  00c90	00 00 00 00	 DD	 $LN41@OnTCPNetwo
  00c94	00 00 00 00	 DD	 $LN47@OnTCPNetwo
  00c98	00 00 00 00	 DD	 $LN21@OnTCPNetwo
  00c9c	00 00 00 00	 DD	 $LN25@OnTCPNetwo
  00ca0	00 00 00 00	 DD	 $LN44@OnTCPNetwo
  00ca4	00 00 00 00	 DD	 $LN2@OnTCPNetwo
$LN61@OnTCPNetwo:
  00ca8	00		 DB	 0
  00ca9	09		 DB	 9
  00caa	09		 DB	 9
  00cab	09		 DB	 9
  00cac	09		 DB	 9
  00cad	09		 DB	 9
  00cae	09		 DB	 9
  00caf	09		 DB	 9
  00cb0	09		 DB	 9
  00cb1	09		 DB	 9
  00cb2	09		 DB	 9
  00cb3	09		 DB	 9
  00cb4	09		 DB	 9
  00cb5	09		 DB	 9
  00cb6	09		 DB	 9
  00cb7	09		 DB	 9
  00cb8	09		 DB	 9
  00cb9	09		 DB	 9
  00cba	09		 DB	 9
  00cbb	09		 DB	 9
  00cbc	09		 DB	 9
  00cbd	09		 DB	 9
  00cbe	09		 DB	 9
  00cbf	09		 DB	 9
  00cc0	09		 DB	 9
  00cc1	09		 DB	 9
  00cc2	09		 DB	 9
  00cc3	09		 DB	 9
  00cc4	09		 DB	 9
  00cc5	09		 DB	 9
  00cc6	09		 DB	 9
  00cc7	09		 DB	 9
  00cc8	09		 DB	 9
  00cc9	09		 DB	 9
  00cca	09		 DB	 9
  00ccb	09		 DB	 9
  00ccc	09		 DB	 9
  00ccd	09		 DB	 9
  00cce	09		 DB	 9
  00ccf	09		 DB	 9
  00cd0	09		 DB	 9
  00cd1	09		 DB	 9
  00cd2	09		 DB	 9
  00cd3	09		 DB	 9
  00cd4	09		 DB	 9
  00cd5	09		 DB	 9
  00cd6	09		 DB	 9
  00cd7	09		 DB	 9
  00cd8	09		 DB	 9
  00cd9	09		 DB	 9
  00cda	09		 DB	 9
  00cdb	09		 DB	 9
  00cdc	09		 DB	 9
  00cdd	09		 DB	 9
  00cde	09		 DB	 9
  00cdf	09		 DB	 9
  00ce0	09		 DB	 9
  00ce1	09		 DB	 9
  00ce2	09		 DB	 9
  00ce3	09		 DB	 9
  00ce4	09		 DB	 9
  00ce5	09		 DB	 9
  00ce6	09		 DB	 9
  00ce7	09		 DB	 9
  00ce8	09		 DB	 9
  00ce9	09		 DB	 9
  00cea	09		 DB	 9
  00ceb	09		 DB	 9
  00cec	09		 DB	 9
  00ced	09		 DB	 9
  00cee	09		 DB	 9
  00cef	09		 DB	 9
  00cf0	09		 DB	 9
  00cf1	09		 DB	 9
  00cf2	09		 DB	 9
  00cf3	09		 DB	 9
  00cf4	09		 DB	 9
  00cf5	09		 DB	 9
  00cf6	09		 DB	 9
  00cf7	09		 DB	 9
  00cf8	09		 DB	 9
  00cf9	09		 DB	 9
  00cfa	09		 DB	 9
  00cfb	09		 DB	 9
  00cfc	09		 DB	 9
  00cfd	09		 DB	 9
  00cfe	09		 DB	 9
  00cff	09		 DB	 9
  00d00	09		 DB	 9
  00d01	09		 DB	 9
  00d02	09		 DB	 9
  00d03	09		 DB	 9
  00d04	09		 DB	 9
  00d05	09		 DB	 9
  00d06	09		 DB	 9
  00d07	09		 DB	 9
  00d08	09		 DB	 9
  00d09	09		 DB	 9
  00d0a	09		 DB	 9
  00d0b	09		 DB	 9
  00d0c	09		 DB	 9
  00d0d	09		 DB	 9
  00d0e	09		 DB	 9
  00d0f	09		 DB	 9
  00d10	09		 DB	 9
  00d11	09		 DB	 9
  00d12	09		 DB	 9
  00d13	09		 DB	 9
  00d14	09		 DB	 9
  00d15	09		 DB	 9
  00d16	09		 DB	 9
  00d17	09		 DB	 9
  00d18	09		 DB	 9
  00d19	09		 DB	 9
  00d1a	09		 DB	 9
  00d1b	09		 DB	 9
  00d1c	09		 DB	 9
  00d1d	09		 DB	 9
  00d1e	09		 DB	 9
  00d1f	09		 DB	 9
  00d20	09		 DB	 9
  00d21	09		 DB	 9
  00d22	09		 DB	 9
  00d23	09		 DB	 9
  00d24	09		 DB	 9
  00d25	09		 DB	 9
  00d26	09		 DB	 9
  00d27	09		 DB	 9
  00d28	09		 DB	 9
  00d29	01		 DB	 1
  00d2a	09		 DB	 9
  00d2b	02		 DB	 2
  00d2c	09		 DB	 9
  00d2d	03		 DB	 3
  00d2e	09		 DB	 9
  00d2f	04		 DB	 4
  00d30	09		 DB	 9
  00d31	09		 DB	 9
  00d32	05		 DB	 5
  00d33	09		 DB	 9
  00d34	06		 DB	 6
  00d35	09		 DB	 9
  00d36	07		 DB	 7
  00d37	09		 DB	 9
  00d38	08		 DB	 8
?OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainServiceInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z
_TEXT	SEGMENT
tv65 = -384						; size = 4
_RegisterPersonal$1 = -316				; size = 4
_GameServer$2 = -312					; size = 155
_wBindIndex$3 = -156					; size = 2
_wSendSize$4 = -152					; size = 2
_wStringSize$5 = -148					; size = 2
_RegisterFailure$6 = -144				; size = 132
_pRegisterServer$7 = -12				; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_wSubCmdID$ = 8						; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z PROC ; CAttemperEngineSink::OnTCPNetworkMainRegister, COMDAT
; _this$ = ecx

; 258  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 01 00
	00		 sub	 esp, 384		; 00000180H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 259  : 	switch (wSubCmdID)

  00019	0f b7 45 08	 movzx	 eax, WORD PTR _wSubCmdID$[ebp]
  0001d	89 85 80 fe ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00023	83 bd 80 fe ff
	ff 65		 cmp	 DWORD PTR tv65[ebp], 101 ; 00000065H
  0002a	74 12		 je	 SHORT $LN4@OnTCPNetwo
  0002c	83 bd 80 fe ff
	ff 68		 cmp	 DWORD PTR tv65[ebp], 104 ; 00000068H
  00033	0f 84 64 03 00
	00		 je	 $LN9@OnTCPNetwo
  00039	e9 b3 03 00 00	 jmp	 $LN2@OnTCPNetwo
$LN4@OnTCPNetwo:

; 260  : 	{
; 261  : 	case SUB_CS_C_REGISTER_SERVER:	//注册房间
; 262  : 		{
; 263  : 			//效验数据
; 264  : 			ASSERT(wDataSize==sizeof(CMD_CS_C_RegisterServer));

  0003e	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00042	3d 93 00 00 00	 cmp	 eax, 147		; 00000093H
  00047	74 19		 je	 SHORT $LN12@OnTCPNetwo
  00049	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  0004f	83 c1 06	 add	 ecx, 6
  00052	51		 push	 ecx
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN12@OnTCPNetwo
  00061	cc		 int	 3
$LN12@OnTCPNetwo:

; 265  : 			if (wDataSize!=sizeof(CMD_CS_C_RegisterServer)) return false;

  00062	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00066	3d 93 00 00 00	 cmp	 eax, 147		; 00000093H
  0006b	74 07		 je	 SHORT $LN5@OnTCPNetwo
  0006d	32 c0		 xor	 al, al
  0006f	e9 7f 03 00 00	 jmp	 $LN1@OnTCPNetwo
$LN5@OnTCPNetwo:

; 266  : 
; 267  : 			//消息定义
; 268  : 			CMD_CS_C_RegisterServer * pRegisterServer=(CMD_CS_C_RegisterServer *)pData;

  00074	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00077	89 45 f4	 mov	 DWORD PTR _pRegisterServer$7[ebp], eax

; 269  : 
; 270  : 			//查找房间
; 271  : 			if (m_GlobalInfoManager.SearchServerItem(pRegisterServer->wServerID)!=NULL)

  0007a	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  0007d	0f b7 48 06	 movzx	 ecx, WORD PTR [eax+6]
  00081	51		 push	 ecx
  00082	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	83 c1 24	 add	 ecx, 36			; 00000024H
  00088	e8 00 00 00 00	 call	 ?SearchServerItem@CGlobalInfoManager@@QAEPAVCGlobalServerItem@@G@Z ; CGlobalInfoManager::SearchServerItem
  0008d	85 c0		 test	 eax, eax
  0008f	0f 84 b6 00 00
	00		 je	 $LN6@OnTCPNetwo

; 272  : 			{
; 273  : 				//变量定义
; 274  : 				CMD_CS_S_RegisterFailure RegisterFailure;
; 275  : 				ZeroMemory(&RegisterFailure,sizeof(RegisterFailure));

  00095	68 84 00 00 00	 push	 132			; 00000084H
  0009a	6a 00		 push	 0
  0009c	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _RegisterFailure$6[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 _memset
  000a8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 276  : 
; 277  : 				//设置变量
; 278  : 				RegisterFailure.lErrorCode=0L;

  000ab	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _RegisterFailure$6[ebp], 0

; 279  : 				lstrcpyn(RegisterFailure.szDescribeString,TEXT("已经存在相同标识的游戏房间服务，房间服务注册失败"),CountArray(RegisterFailure.szDescribeString));

  000b5	68 80 00 00 00	 push	 128			; 00000080H
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@IAHCMGCL@?R?Q?$LO?$KN?$LE?f?T?Z?O?$OA?M?$KM?$LB?j?J?$LG?$LF?D?S?N?O?$LH?$LH?$LP?$LM?d?$LH?$PO?N?q?$KD@
  000bf	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _RegisterFailure$6[ebp+4]
  000c5	50		 push	 eax
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 280  : 
; 281  : 				//发送消息
; 282  : 				WORD wStringSize=CountStringBuffer(RegisterFailure.szDescribeString);

  000cc	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _RegisterFailure$6[ebp+4]
  000d2	50		 push	 eax
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  000d9	83 c0 01	 add	 eax, 1
  000dc	66 89 85 6c ff
	ff ff		 mov	 WORD PTR _wStringSize$5[ebp], ax

; 283  : 				WORD wSendSize=sizeof(RegisterFailure)-sizeof(RegisterFailure.szDescribeString)+wStringSize;

  000e3	0f b7 85 6c ff
	ff ff		 movzx	 eax, WORD PTR _wStringSize$5[ebp]
  000ea	83 c0 04	 add	 eax, 4
  000ed	66 89 85 68 ff
	ff ff		 mov	 WORD PTR _wSendSize$4[ebp], ax

; 284  : 				m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_REGISTER,SUB_CS_S_REGISTER_FAILURE,&RegisterFailure,wSendSize);

  000f4	0f b7 85 68 ff
	ff ff		 movzx	 eax, WORD PTR _wSendSize$4[ebp]
  000fb	50		 push	 eax
  000fc	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _RegisterFailure$6[ebp]
  00102	51		 push	 ecx
  00103	68 c8 00 00 00	 push	 200			; 000000c8H
  00108	6a 01		 push	 1
  0010a	8b 55 14	 mov	 edx, DWORD PTR _dwSocketID$[ebp]
  0010d	52		 push	 edx
  0010e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00111	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00117	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0011a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0011c	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  00122	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00125	ff d2		 call	 edx

; 285  : 
; 286  : 				//中断网络
; 287  : 				m_pITCPNetworkEngine->ShutDownSocket(dwSocketID);

  00127	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0012a	50		 push	 eax
  0012b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012e	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  00134	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00137	8b 12		 mov	 edx, DWORD PTR [edx]
  00139	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  0013f	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00142	ff d0		 call	 eax

; 288  : 
; 289  : 				return true;

  00144	b0 01		 mov	 al, 1
  00146	e9 a8 02 00 00	 jmp	 $LN1@OnTCPNetwo
$LN6@OnTCPNetwo:

; 290  : 			}
; 291  : 
; 292  : 			//设置绑定
; 293  : 			WORD wBindIndex=LOWORD(dwSocketID);

  0014b	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0014e	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00153	66 89 85 64 ff
	ff ff		 mov	 WORD PTR _wBindIndex$3[ebp], ax

; 294  : 			(m_pBindParameter+wBindIndex)->ServiceKind=ServiceKind_Game;

  0015a	0f b7 85 64 ff
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$3[ebp]
  00161	6b c8 14	 imul	 ecx, eax, 20
  00164	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00167	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0016a	c7 44 08 10 01
	00 00 00	 mov	 DWORD PTR [eax+ecx+16], 1

; 295  : 			(m_pBindParameter+wBindIndex)->wServiceID=pRegisterServer->wServerID;

  00172	0f b7 85 64 ff
	ff ff		 movzx	 eax, WORD PTR _wBindIndex$3[ebp]
  00179	6b c8 14	 imul	 ecx, eax, 20
  0017c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0017f	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00182	8b 55 f4	 mov	 edx, DWORD PTR _pRegisterServer$7[ebp]
  00185	66 8b 52 06	 mov	 dx, WORD PTR [edx+6]
  00189	66 89 54 08 0c	 mov	 WORD PTR [eax+ecx+12], dx

; 296  : 
; 297  : 			//变量定义
; 298  : 			tagGameServer GameServer;
; 299  : 			ZeroMemory(&GameServer,sizeof(GameServer));

  0018e	68 9b 00 00 00	 push	 155			; 0000009bH
  00193	6a 00		 push	 0
  00195	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _GameServer$2[ebp]
  0019b	50		 push	 eax
  0019c	e8 00 00 00 00	 call	 _memset
  001a1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 300  : 
; 301  : 			//构造数据
; 302  : 			GameServer.wKindID=pRegisterServer->wKindID;

  001a4	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  001a7	66 8b 08	 mov	 cx, WORD PTR [eax]
  001aa	66 89 8d c8 fe
	ff ff		 mov	 WORD PTR _GameServer$2[ebp], cx

; 303  : 			GameServer.wNodeID=pRegisterServer->wNodeID;

  001b1	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  001b4	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  001b8	66 89 8d ca fe
	ff ff		 mov	 WORD PTR _GameServer$2[ebp+2], cx

; 304  : 			GameServer.wSortID=pRegisterServer->wSortID;

  001bf	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  001c2	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  001c6	66 89 8d cc fe
	ff ff		 mov	 WORD PTR _GameServer$2[ebp+4], cx

; 305  : 			GameServer.wServerID=pRegisterServer->wServerID;

  001cd	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  001d0	66 8b 48 06	 mov	 cx, WORD PTR [eax+6]
  001d4	66 89 8d ce fe
	ff ff		 mov	 WORD PTR _GameServer$2[ebp+6], cx

; 306  : 			GameServer.wServerKind=pRegisterServer->wServerKind;

  001db	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  001de	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  001e2	66 89 8d d0 fe
	ff ff		 mov	 WORD PTR _GameServer$2[ebp+8], cx

; 307  : 			GameServer.wServerType=pRegisterServer->wServerType;

  001e9	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  001ec	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  001f0	66 89 8d d2 fe
	ff ff		 mov	 WORD PTR _GameServer$2[ebp+10], cx

; 308  : 			GameServer.wServerLevel=pRegisterServer->wServerLevel;

  001f7	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  001fa	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  001fe	66 89 8d d4 fe
	ff ff		 mov	 WORD PTR _GameServer$2[ebp+12], cx

; 309  : 			GameServer.wServerPort=pRegisterServer->wServerPort;

  00205	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  00208	66 8b 48 0e	 mov	 cx, WORD PTR [eax+14]
  0020c	66 89 8d d6 fe
	ff ff		 mov	 WORD PTR _GameServer$2[ebp+14], cx

; 310  : 			GameServer.lCellScore=pRegisterServer->lCellScore;

  00213	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  00216	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00219	89 8d d8 fe ff
	ff		 mov	 DWORD PTR _GameServer$2[ebp+16], ecx
  0021f	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00222	89 95 dc fe ff
	ff		 mov	 DWORD PTR _GameServer$2[ebp+20], edx

; 311  : 			GameServer.cbEnterMember=pRegisterServer->cbEnterMember;

  00228	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  0022b	8a 48 20	 mov	 cl, BYTE PTR [eax+32]
  0022e	88 8d e0 fe ff
	ff		 mov	 BYTE PTR _GameServer$2[ebp+24], cl

; 312  : 			GameServer.lEnterScore=pRegisterServer->lEnterScore;

  00234	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  00237	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0023a	89 8d e1 fe ff
	ff		 mov	 DWORD PTR _GameServer$2[ebp+25], ecx
  00240	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00243	89 95 e5 fe ff
	ff		 mov	 DWORD PTR _GameServer$2[ebp+29], edx

; 313  : 			GameServer.dwServerRule=pRegisterServer->dwServerRule;

  00249	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  0024c	8b 48 2b	 mov	 ecx, DWORD PTR [eax+43]
  0024f	89 8d e9 fe ff
	ff		 mov	 DWORD PTR _GameServer$2[ebp+33], ecx

; 314  : 			GameServer.dwOnLineCount=pRegisterServer->dwOnLineCount;

  00255	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  00258	8b 48 21	 mov	 ecx, DWORD PTR [eax+33]
  0025b	89 8d ed fe ff
	ff		 mov	 DWORD PTR _GameServer$2[ebp+37], ecx

; 315  : 			GameServer.dwFullCount=pRegisterServer->dwFullCount;

  00261	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  00264	8b 48 25	 mov	 ecx, DWORD PTR [eax+37]
  00267	89 8d f5 fe ff
	ff		 mov	 DWORD PTR _GameServer$2[ebp+45], ecx

; 316  : 			GameServer.wTableCount = pRegisterServer->wTableCount;

  0026d	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  00270	66 8b 48 29	 mov	 cx, WORD PTR [eax+41]
  00274	66 89 8d 3d ff
	ff ff		 mov	 WORD PTR _GameServer$2[ebp+117], cx

; 317  : 			GameServer.dwSetPlayerCount = pRegisterServer->dwSetPlayerCount;

  0027b	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  0027e	8b 48 6f	 mov	 ecx, DWORD PTR [eax+111]
  00281	89 8d 3f ff ff
	ff		 mov	 DWORD PTR _GameServer$2[ebp+119], ecx

; 318  : 			lstrcpyn(GameServer.szServerName,pRegisterServer->szServerName,CountArray(GameServer.szServerName));

  00287	6a 20		 push	 32			; 00000020H
  00289	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  0028c	83 c0 4f	 add	 eax, 79			; 0000004fH
  0028f	50		 push	 eax
  00290	8d 8d 19 ff ff
	ff		 lea	 ecx, DWORD PTR _GameServer$2[ebp+81]
  00296	51		 push	 ecx
  00297	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 319  : 			lstrcpyn(GameServer.szServerAddr,pRegisterServer->szServerAddr,CountArray(GameServer.szServerAddr));

  0029d	6a 20		 push	 32			; 00000020H
  0029f	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  002a2	83 c0 2f	 add	 eax, 47			; 0000002fH
  002a5	50		 push	 eax
  002a6	8d 8d f9 fe ff
	ff		 lea	 ecx, DWORD PTR _GameServer$2[ebp+49]
  002ac	51		 push	 ecx
  002ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 320  : 			lstrcpyn(GameServer.szGameInfomation, pRegisterServer->szGameInfomation, CountArray(GameServer.szGameInfomation));

  002b3	6a 20		 push	 32			; 00000020H
  002b5	8b 45 f4	 mov	 eax, DWORD PTR _pRegisterServer$7[ebp]
  002b8	83 c0 73	 add	 eax, 115		; 00000073H
  002bb	50		 push	 eax
  002bc	8d 8d 43 ff ff
	ff		 lea	 ecx, DWORD PTR _GameServer$2[ebp+123]
  002c2	51		 push	 ecx
  002c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 321  : 
; 322  : 			//注册房间
; 323  : 			m_GlobalInfoManager.ActiveServerItem(wBindIndex,GameServer);

  002c9	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _GameServer$2[ebp]
  002cf	50		 push	 eax
  002d0	0f b7 8d 64 ff
	ff ff		 movzx	 ecx, WORD PTR _wBindIndex$3[ebp]
  002d7	51		 push	 ecx
  002d8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002db	83 c1 24	 add	 ecx, 36			; 00000024H
  002de	e8 00 00 00 00	 call	 ?ActiveServerItem@CGlobalInfoManager@@QAE_NGAAUtagGameServer@@@Z ; CGlobalInfoManager::ActiveServerItem

; 324  : 
; 325  : 			//群发房间
; 326  : 			m_pITCPNetworkEngine->SendDataBatch(MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_INSERT,&GameServer,sizeof(GameServer),0L);

  002e3	6a 00		 push	 0
  002e5	68 9b 00 00 00	 push	 155			; 0000009bH
  002ea	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _GameServer$2[ebp]
  002f0	50		 push	 eax
  002f1	6a 70		 push	 112			; 00000070H
  002f3	6a 02		 push	 2
  002f5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002f8	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  002fe	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00301	8b 12		 mov	 edx, DWORD PTR [edx]
  00303	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00309	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0030c	ff d0		 call	 eax

; 327  : 
; 328  : 			//发送列表
; 329  : 			SendServerListItem(dwSocketID);

  0030e	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00311	50		 push	 eax
  00312	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00315	e8 00 00 00 00	 call	 ?SendServerListItem@CAttemperEngineSink@@IAE_NK@Z ; CAttemperEngineSink::SendServerListItem

; 330  : 
; 331  : 			SendMatchListItem(dwSocketID);

  0031a	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0031d	50		 push	 eax
  0031e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00321	e8 00 00 00 00	 call	 ?SendMatchListItem@CAttemperEngineSink@@IAE_NK@Z ; CAttemperEngineSink::SendMatchListItem

; 332  : 
; 333  : 			//群发设置
; 334  : 			m_pITCPNetworkEngine->AllowBatchSend(dwSocketID,true,0L);

  00326	6a 00		 push	 0
  00328	6a 01		 push	 1
  0032a	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0032d	50		 push	 eax
  0032e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00331	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  00337	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0033a	8b 12		 mov	 edx, DWORD PTR [edx]
  0033c	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00342	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  00345	ff d0		 call	 eax

; 335  : 
; 336  : 			//汇总通知
; 337  : 			if (m_wCollectItem==INVALID_WORD)

  00347	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0034a	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  0034e	81 f9 ff ff 00
	00		 cmp	 ecx, 65535		; 0000ffffH
  00354	75 31		 jne	 SHORT $LN7@OnTCPNetwo

; 338  : 			{
; 339  : 				m_wCollectItem=wBindIndex;

  00356	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00359	66 8b 8d 64 ff
	ff ff		 mov	 cx, WORD PTR _wBindIndex$3[ebp]
  00360	66 89 48 04	 mov	 WORD PTR [eax+4], cx

; 340  : 				m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_USER_COLLECT,SUB_CS_S_COLLECT_REQUEST);

  00364	6a 64		 push	 100			; 00000064H
  00366	6a 03		 push	 3
  00368	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0036b	50		 push	 eax
  0036c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0036f	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  00375	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00378	8b 12		 mov	 edx, DWORD PTR [edx]
  0037a	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00380	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00383	ff d0		 call	 eax
  00385	eb 12		 jmp	 SHORT $LN8@OnTCPNetwo
$LN7@OnTCPNetwo:

; 341  : 			}
; 342  : 			else m_WaitCollectItemArray.Add(wBindIndex);

  00387	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _wBindIndex$3[ebp]
  0038d	50		 push	 eax
  0038e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00391	83 c1 08	 add	 ecx, 8
  00394	e8 00 00 00 00	 call	 ?Add@?$CWHArray@GABG@@QAEHABG@Z ; CWHArray<unsigned short,unsigned short const &>::Add
$LN8@OnTCPNetwo:

; 343  : 
; 344  : 			return true;

  00399	b0 01		 mov	 al, 1
  0039b	eb 56		 jmp	 SHORT $LN1@OnTCPNetwo
$LN9@OnTCPNetwo:

; 345  : 		}	
; 346  : 	case SUB_CS_C_REGISTER_PERSONAL:
; 347  : 		{
; 348  : 			//效验数据
; 349  : 			ASSERT(wDataSize==sizeof(CMD_CS_S_RegisterPersonal));

  0039d	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  003a1	83 f8 08	 cmp	 eax, 8
  003a4	74 19		 je	 SHORT $LN13@OnTCPNetwo
  003a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z@4JA
  003ac	83 c1 5b	 add	 ecx, 91			; 0000005bH
  003af	51		 push	 ecx
  003b0	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  003b5	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  003ba	85 c0		 test	 eax, eax
  003bc	74 01		 je	 SHORT $LN13@OnTCPNetwo
  003be	cc		 int	 3
$LN13@OnTCPNetwo:

; 350  : 			if (wDataSize!=sizeof(CMD_CS_S_RegisterPersonal)) return false;

  003bf	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  003c3	83 f8 08	 cmp	 eax, 8
  003c6	74 04		 je	 SHORT $LN10@OnTCPNetwo
  003c8	32 c0		 xor	 al, al
  003ca	eb 27		 jmp	 SHORT $LN1@OnTCPNetwo
$LN10@OnTCPNetwo:

; 351  : 			CMD_CS_S_RegisterPersonal * RegisterPersonal = (CMD_CS_S_RegisterPersonal *)pData;

  003cc	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  003cf	89 85 c4 fe ff
	ff		 mov	 DWORD PTR _RegisterPersonal$1[ebp], eax

; 352  : 			m_GlobalInfoManager.AddPersonalMaxCreate(* RegisterPersonal);

  003d5	8b 85 c4 fe ff
	ff		 mov	 eax, DWORD PTR _RegisterPersonal$1[ebp]
  003db	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  003de	51		 push	 ecx
  003df	8b 10		 mov	 edx, DWORD PTR [eax]
  003e1	52		 push	 edx
  003e2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003e5	83 c1 24	 add	 ecx, 36			; 00000024H
  003e8	e8 00 00 00 00	 call	 ?AddPersonalMaxCreate@CGlobalInfoManager@@QAE_NUCMD_CS_S_RegisterPersonal@@@Z ; CGlobalInfoManager::AddPersonalMaxCreate

; 353  : 			return true;

  003ed	b0 01		 mov	 al, 1
  003ef	eb 02		 jmp	 SHORT $LN1@OnTCPNetwo
$LN2@OnTCPNetwo:

; 354  : 		}
; 355  : 	}
; 356  : 
; 357  : 	return false;

  003f1	32 c0		 xor	 al, al
$LN1@OnTCPNetwo:

; 358  : }

  003f3	5f		 pop	 edi
  003f4	5e		 pop	 esi
  003f5	5b		 pop	 ebx
  003f6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003f9	33 cd		 xor	 ecx, ebp
  003fb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00400	8b e5		 mov	 esp, ebp
  00402	5d		 pop	 ebp
  00403	c2 10 00	 ret	 16			; 00000010H
?OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z ENDP ; CAttemperEngineSink::OnTCPNetworkMainRegister
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_Command$ = 8						; size = 4
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
_dwSocketID$ = 20					; size = 4
?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z PROC ; CAttemperEngineSink::OnEventTCPNetworkRead, COMDAT
; _this$ = ecx

; 129  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 130  : 	switch (Command.wMainCmdID)

  0000c	0f b7 45 08	 movzx	 eax, WORD PTR _Command$[ebp]
  00010	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  00013	83 7d b8 01	 cmp	 DWORD PTR tv65[ebp], 1
  00017	74 08		 je	 SHORT $LN4@OnEventTCP
  00019	83 7d b8 02	 cmp	 DWORD PTR tv65[ebp], 2
  0001d	74 1e		 je	 SHORT $LN5@OnEventTCP
  0001f	eb 38		 jmp	 SHORT $LN2@OnEventTCP
$LN4@OnEventTCP:

; 131  : 	{
; 132  : 	case MDM_CS_REGISTER:		//服务注册
; 133  : 		{
; 134  : 			return OnTCPNetworkMainRegister(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  00021	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00024	50		 push	 eax
  00025	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  0002d	52		 push	 edx
  0002e	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  00032	50		 push	 eax
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?OnTCPNetworkMainRegister@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainRegister
  0003b	eb 1e		 jmp	 SHORT $LN1@OnEventTCP
$LN5@OnEventTCP:

; 135  : 		}
; 136  : 	case MDM_CS_SERVICE_INFO:	//服务信息
; 137  : 		{
; 138  : 			return OnTCPNetworkMainServiceInfo(Command.wSubCmdID,pData,wDataSize,dwSocketID);

  0003d	8b 45 14	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00040	50		 push	 eax
  00041	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00045	51		 push	 ecx
  00046	8b 55 0c	 mov	 edx, DWORD PTR _pData$[ebp]
  00049	52		 push	 edx
  0004a	0f b7 45 0a	 movzx	 eax, WORD PTR _Command$[ebp+2]
  0004e	50		 push	 eax
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?OnTCPNetworkMainServiceInfo@CAttemperEngineSink@@IAE_NGPAXGK@Z ; CAttemperEngineSink::OnTCPNetworkMainServiceInfo
  00057	eb 02		 jmp	 SHORT $LN1@OnEventTCP
$LN2@OnEventTCP:

; 139  : 		}
; 140  : 	}
; 141  : 
; 142  : 	return false;

  00059	32 c0		 xor	 al, al
$LN1@OnEventTCP:

; 143  : }

  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 10 00	 ret	 16			; 00000010H
?OnEventTCPNetworkRead@CAttemperEngineSink@@UAE_NUTCP_Command@@PAXGK@Z ENDP ; CAttemperEngineSink::OnEventTCPNetworkRead
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z
_TEXT	SEGMENT
_pBindParameter$1 = -48					; size = 4
_wBindIndex$2 = -44					; size = 2
_pBindParameter$3 = -40					; size = 4
_wBindIndex$4 = -36					; size = 2
_ServerRemove$5 = -32					; size = 2
_i$6 = -28						; size = 4
_dwSocketID$7 = -24					; size = 4
_nWaitCount$8 = -20					; size = 4
_wBindIndex$9 = -16					; size = 2
_pBindParameter$ = -12					; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_dwClientAddr$ = 8					; size = 4
_dwActiveTime$ = 12					; size = 4
_dwSocketID$ = 16					; size = 4
?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z PROC ; CAttemperEngineSink::OnEventTCPNetworkShut, COMDAT
; _this$ = ecx

; 147  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 148  : 	//获取信息
; 149  : 	WORD wBindIndex=LOWORD(dwSocketID);

  0000c	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 150  : 	tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  00018	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0001c	6b c8 14	 imul	 ecx, eax, 20
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  00025	89 4d f4	 mov	 DWORD PTR _pBindParameter$[ebp], ecx

; 151  : 
; 152  : 	//游戏服务
; 153  : 	if (pBindParameter->ServiceKind==ServiceKind_Game)

  00028	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0002b	83 78 10 01	 cmp	 DWORD PTR [eax+16], 1
  0002f	0f 85 55 01 00
	00		 jne	 $LN5@OnEventTCP

; 154  : 	{
; 155  : 		//变量定义
; 156  : 		WORD wBindIndex=LOWORD(dwSocketID);

  00035	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00038	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0003d	66 89 45 f0	 mov	 WORD PTR _wBindIndex$9[ebp], ax

; 157  : 
; 158  : 		//汇总处理
; 159  : 		if (wBindIndex==m_wCollectItem)

  00041	0f b7 45 f0	 movzx	 eax, WORD PTR _wBindIndex$9[ebp]
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  0004c	3b c2		 cmp	 eax, edx
  0004e	0f 85 92 00 00
	00		 jne	 $LN6@OnEventTCP

; 160  : 		{
; 161  : 			//设置变量
; 162  : 			m_wCollectItem=INVALID_WORD;

  00054	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 163  : 
; 164  : 			//汇总切换
; 165  : 			if (m_WaitCollectItemArray.GetCount()>0)

  00060	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 08	 add	 ecx, 8
  00066	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@GABG@@QBEHXZ ; CWHArray<unsigned short,unsigned short const &>::GetCount
  0006b	85 c0		 test	 eax, eax
  0006d	7e 75		 jle	 SHORT $LN8@OnEventTCP

; 166  : 			{
; 167  : 				//提取变量
; 168  : 				INT_PTR nWaitCount=m_WaitCollectItemArray.GetCount();

  0006f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	83 c1 08	 add	 ecx, 8
  00075	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@GABG@@QBEHXZ ; CWHArray<unsigned short,unsigned short const &>::GetCount
  0007a	89 45 ec	 mov	 DWORD PTR _nWaitCount$8[ebp], eax

; 169  : 				m_wCollectItem=m_WaitCollectItemArray[nWaitCount-1];

  0007d	8b 45 ec	 mov	 eax, DWORD PTR _nWaitCount$8[ebp]
  00080	83 e8 01	 sub	 eax, 1
  00083	50		 push	 eax
  00084	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	83 c1 08	 add	 ecx, 8
  0008a	e8 00 00 00 00	 call	 ??A?$CWHArray@GABG@@QAEAAGH@Z ; CWHArray<unsigned short,unsigned short const &>::operator[]
  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	66 8b 10	 mov	 dx, WORD PTR [eax]
  00095	66 89 51 04	 mov	 WORD PTR [ecx+4], dx

; 170  : 
; 171  : 				//删除数组
; 172  : 				m_WaitCollectItemArray.RemoveAt(nWaitCount-1);

  00099	6a 01		 push	 1
  0009b	8b 45 ec	 mov	 eax, DWORD PTR _nWaitCount$8[ebp]
  0009e	83 e8 01	 sub	 eax, 1
  000a1	50		 push	 eax
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	83 c1 08	 add	 ecx, 8
  000a8	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@GABG@@QAEXHH@Z ; CWHArray<unsigned short,unsigned short const &>::RemoveAt

; 173  : 
; 174  : 				//发送消息
; 175  : 				DWORD dwSocketID=(m_pBindParameter+m_wCollectItem)->dwSocketID;

  000ad	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b0	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  000b4	6b d1 14	 imul	 edx, ecx, 20
  000b7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ba	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000bd	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  000c0	89 55 e8	 mov	 DWORD PTR _dwSocketID$7[ebp], edx

; 176  : 				m_pITCPNetworkEngine->SendData(dwSocketID,MDM_CS_USER_COLLECT,SUB_CS_S_COLLECT_REQUEST);

  000c3	6a 64		 push	 100			; 00000064H
  000c5	6a 03		 push	 3
  000c7	8b 45 e8	 mov	 eax, DWORD PTR _dwSocketID$7[ebp]
  000ca	50		 push	 eax
  000cb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ce	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  000d4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d7	8b 12		 mov	 edx, DWORD PTR [edx]
  000d9	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  000df	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  000e2	ff d0		 call	 eax
$LN8@OnEventTCP:

; 177  : 			}
; 178  : 		}
; 179  : 		else

  000e4	eb 51		 jmp	 SHORT $LN7@OnEventTCP
$LN6@OnEventTCP:

; 180  : 		{
; 181  : 			//删除等待
; 182  : 			for (INT_PTR i=0;i<m_WaitCollectItemArray.GetCount();i++)

  000e6	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$6[ebp], 0
  000ed	eb 09		 jmp	 SHORT $LN4@OnEventTCP
$LN2@OnEventTCP:
  000ef	8b 45 e4	 mov	 eax, DWORD PTR _i$6[ebp]
  000f2	83 c0 01	 add	 eax, 1
  000f5	89 45 e4	 mov	 DWORD PTR _i$6[ebp], eax
$LN4@OnEventTCP:
  000f8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	83 c1 08	 add	 ecx, 8
  000fe	e8 00 00 00 00	 call	 ?GetCount@?$CWHArray@GABG@@QBEHXZ ; CWHArray<unsigned short,unsigned short const &>::GetCount
  00103	39 45 e4	 cmp	 DWORD PTR _i$6[ebp], eax
  00106	7d 2f		 jge	 SHORT $LN7@OnEventTCP

; 183  : 			{
; 184  : 				if (wBindIndex==m_WaitCollectItemArray[i])

  00108	0f b7 75 f0	 movzx	 esi, WORD PTR _wBindIndex$9[ebp]
  0010c	8b 45 e4	 mov	 eax, DWORD PTR _i$6[ebp]
  0010f	50		 push	 eax
  00110	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	83 c1 08	 add	 ecx, 8
  00116	e8 00 00 00 00	 call	 ??A?$CWHArray@GABG@@QAEAAGH@Z ; CWHArray<unsigned short,unsigned short const &>::operator[]
  0011b	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0011e	3b f1		 cmp	 esi, ecx
  00120	75 13		 jne	 SHORT $LN9@OnEventTCP

; 185  : 				{
; 186  : 					m_WaitCollectItemArray.RemoveAt(i);

  00122	6a 01		 push	 1
  00124	8b 45 e4	 mov	 eax, DWORD PTR _i$6[ebp]
  00127	50		 push	 eax
  00128	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012b	83 c1 08	 add	 ecx, 8
  0012e	e8 00 00 00 00	 call	 ?RemoveAt@?$CWHArray@GABG@@QAEXHH@Z ; CWHArray<unsigned short,unsigned short const &>::RemoveAt

; 187  : 					break;

  00133	eb 02		 jmp	 SHORT $LN7@OnEventTCP
$LN9@OnEventTCP:

; 188  : 				}
; 189  : 			}

  00135	eb b8		 jmp	 SHORT $LN2@OnEventTCP
$LN7@OnEventTCP:

; 190  : 		}
; 191  : 
; 192  : 		//变量定义
; 193  : 		CMD_CS_S_ServerRemove ServerRemove;
; 194  : 		ZeroMemory(&ServerRemove,sizeof(ServerRemove));

  00137	6a 02		 push	 2
  00139	6a 00		 push	 0
  0013b	8d 45 e0	 lea	 eax, DWORD PTR _ServerRemove$5[ebp]
  0013e	50		 push	 eax
  0013f	e8 00 00 00 00	 call	 _memset
  00144	83 c4 0c	 add	 esp, 12			; 0000000cH

; 195  : 
; 196  : 		//删除通知
; 197  : 		ServerRemove.wServerID=pBindParameter->wServiceID;

  00147	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0014a	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  0014e	66 89 4d e0	 mov	 WORD PTR _ServerRemove$5[ebp], cx

; 198  : 		m_pITCPNetworkEngine->SendDataBatch(MDM_CS_SERVICE_INFO,SUB_CS_S_SERVER_REMOVE,&ServerRemove,sizeof(ServerRemove),0L);

  00152	6a 00		 push	 0
  00154	6a 02		 push	 2
  00156	8d 45 e0	 lea	 eax, DWORD PTR _ServerRemove$5[ebp]
  00159	50		 push	 eax
  0015a	6a 72		 push	 114			; 00000072H
  0015c	6a 02		 push	 2
  0015e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00161	8b 91 34 01 00
	00		 mov	 edx, DWORD PTR [ecx+308]
  00167	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0016a	8b 12		 mov	 edx, DWORD PTR [edx]
  0016c	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00172	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00175	ff d0		 call	 eax

; 199  : 
; 200  : 		//注销房间
; 201  : 		m_GlobalInfoManager.DeleteServerItem(pBindParameter->wServiceID);

  00177	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0017a	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  0017e	51		 push	 ecx
  0017f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00182	83 c1 24	 add	 ecx, 36			; 00000024H
  00185	e8 00 00 00 00	 call	 ?DeleteServerItem@CGlobalInfoManager@@QAE_NG@Z ; CGlobalInfoManager::DeleteServerItem
$LN5@OnEventTCP:

; 202  : 	}
; 203  : 
; 204  : 	//广场服务
; 205  : 	if (pBindParameter->ServiceKind==ServiceKind_Plaza)

  0018a	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  0018d	83 78 10 02	 cmp	 DWORD PTR [eax+16], 2
  00191	75 2f		 jne	 SHORT $LN10@OnEventTCP

; 206  : 	{
; 207  : 		//变量定义
; 208  : 		WORD wBindIndex=LOWORD(dwSocketID);

  00193	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00196	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0019b	66 89 45 dc	 mov	 WORD PTR _wBindIndex$4[ebp], ax

; 209  : 		tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  0019f	0f b7 45 dc	 movzx	 eax, WORD PTR _wBindIndex$4[ebp]
  001a3	6b c8 14	 imul	 ecx, eax, 20
  001a6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001a9	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  001ac	89 4d d8	 mov	 DWORD PTR _pBindParameter$3[ebp], ecx

; 210  : 
; 211  : 		//注销房间
; 212  : 		m_GlobalInfoManager.DeletePlazaItem(pBindParameter->wServiceID);

  001af	8b 45 d8	 mov	 eax, DWORD PTR _pBindParameter$3[ebp]
  001b2	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  001b6	51		 push	 ecx
  001b7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ba	83 c1 24	 add	 ecx, 36			; 00000024H
  001bd	e8 00 00 00 00	 call	 ?DeletePlazaItem@CGlobalInfoManager@@QAE_NG@Z ; CGlobalInfoManager::DeletePlazaItem
$LN10@OnEventTCP:

; 213  : 	}
; 214  : 
; 215  : 	//聊天服务
; 216  : 	if (pBindParameter->ServiceKind==ServiceKind_Chat)

  001c2	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  001c5	83 78 10 03	 cmp	 DWORD PTR [eax+16], 3
  001c9	75 2f		 jne	 SHORT $LN11@OnEventTCP

; 217  : 	{
; 218  : 		//变量定义
; 219  : 		WORD wBindIndex=LOWORD(dwSocketID);

  001cb	8b 45 10	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  001ce	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  001d3	66 89 45 d4	 mov	 WORD PTR _wBindIndex$2[ebp], ax

; 220  : 		tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  001d7	0f b7 45 d4	 movzx	 eax, WORD PTR _wBindIndex$2[ebp]
  001db	6b c8 14	 imul	 ecx, eax, 20
  001de	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  001e1	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  001e4	89 4d d0	 mov	 DWORD PTR _pBindParameter$1[ebp], ecx

; 221  : 
; 222  : 		//注销房间
; 223  : 		m_GlobalInfoManager.DeleteChatItem(pBindParameter->wServiceID);

  001e7	8b 45 d0	 mov	 eax, DWORD PTR _pBindParameter$1[ebp]
  001ea	0f b7 48 0c	 movzx	 ecx, WORD PTR [eax+12]
  001ee	51		 push	 ecx
  001ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f2	83 c1 24	 add	 ecx, 36			; 00000024H
  001f5	e8 00 00 00 00	 call	 ?DeleteChatItem@CGlobalInfoManager@@QAE_NG@Z ; CGlobalInfoManager::DeleteChatItem
$LN11@OnEventTCP:

; 224  : 	}
; 225  : 
; 226  : 	//清除信息
; 227  : 	ZeroMemory(pBindParameter,sizeof(tagBindParameter));

  001fa	6a 14		 push	 20			; 00000014H
  001fc	6a 00		 push	 0
  001fe	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00201	50		 push	 eax
  00202	e8 00 00 00 00	 call	 _memset
  00207	83 c4 0c	 add	 esp, 12			; 0000000cH

; 228  : 
; 229  : 	return false;

  0020a	32 c0		 xor	 al, al

; 230  : }

  0020c	5f		 pop	 edi
  0020d	5e		 pop	 esi
  0020e	5b		 pop	 ebx
  0020f	8b e5		 mov	 esp, ebp
  00211	5d		 pop	 ebp
  00212	c2 0c 00	 ret	 12			; 0000000cH
?OnEventTCPNetworkShut@CAttemperEngineSink@@UAE_NKKK@Z ENDP ; CAttemperEngineSink::OnEventTCPNetworkShut
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z
_TEXT	SEGMENT
_pBindParameter$ = -12					; size = 4
_wBindIndex$ = -8					; size = 2
_this$ = -4						; size = 4
_dwClientAddr$ = 8					; size = 4
_dwSocketID$ = 12					; size = 4
?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z PROC ; CAttemperEngineSink::OnEventTCPNetworkBind, COMDAT
; _this$ = ecx

; 110  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 111  : 	//获取索引
; 112  : 	ASSERT(LOWORD(dwSocketID)<m_pInitParameter->m_wMaxConnect);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0000f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00014	0f b7 c8	 movzx	 ecx, ax
  00017	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0001d	0f b7 50 04	 movzx	 edx, WORD PTR [eax+4]
  00021	3b ca		 cmp	 ecx, edx
  00023	7c 18		 jl	 SHORT $LN4@OnEventTCP
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z@4JA
  0002a	83 c0 02	 add	 eax, 2
  0002d	50		 push	 eax
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00033	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00038	85 c0		 test	 eax, eax
  0003a	74 01		 je	 SHORT $LN4@OnEventTCP
  0003c	cc		 int	 3
$LN4@OnEventTCP:

; 113  : 	if (LOWORD(dwSocketID)>=m_pInitParameter->m_wMaxConnect) return false;

  0003d	8b 45 0c	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00040	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00045	0f b7 c8	 movzx	 ecx, ax
  00048	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0004e	0f b7 50 04	 movzx	 edx, WORD PTR [eax+4]
  00052	3b ca		 cmp	 ecx, edx
  00054	7c 04		 jl	 SHORT $LN2@OnEventTCP
  00056	32 c0		 xor	 al, al
  00058	eb 3f		 jmp	 SHORT $LN1@OnEventTCP
$LN2@OnEventTCP:

; 114  : 
; 115  : 	//变量定义
; 116  : 	WORD wBindIndex=LOWORD(dwSocketID);

  0005a	8b 45 0c	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  0005d	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00062	66 89 45 f8	 mov	 WORD PTR _wBindIndex$[ebp], ax

; 117  : 	tagBindParameter * pBindParameter=(m_pBindParameter+wBindIndex);

  00066	0f b7 45 f8	 movzx	 eax, WORD PTR _wBindIndex$[ebp]
  0006a	6b c8 14	 imul	 ecx, eax, 20
  0006d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00070	03 4a 20	 add	 ecx, DWORD PTR [edx+32]
  00073	89 4d f4	 mov	 DWORD PTR _pBindParameter$[ebp], ecx

; 118  : 
; 119  : 	//设置变量
; 120  : 	pBindParameter->dwSocketID=dwSocketID;

  00076	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00079	8b 4d 0c	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0007c	89 08		 mov	 DWORD PTR [eax], ecx

; 121  : 	pBindParameter->dwClientAddr=dwClientAddr;

  0007e	8b 45 f4	 mov	 eax, DWORD PTR _pBindParameter$[ebp]
  00081	8b 4d 08	 mov	 ecx, DWORD PTR _dwClientAddr$[ebp]
  00084	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 122  : 	pBindParameter->dwActiveTime=(DWORD)time(NULL);

  00087	6a 00		 push	 0
  00089	e8 00 00 00 00	 call	 _time
  0008e	83 c4 04	 add	 esp, 4
  00091	8b 4d f4	 mov	 ecx, DWORD PTR _pBindParameter$[ebp]
  00094	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 123  : 
; 124  : 	return true;

  00097	b0 01		 mov	 al, 1
$LN1@OnEventTCP:

; 125  : }

  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c2 08 00	 ret	 8
?OnEventTCPNetworkBind@CAttemperEngineSink@@UAE_NKK@Z ENDP ; CAttemperEngineSink::OnEventTCPNetworkBind
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wServiceID$ = 8					; size = 2
_Command$ = 12						; size = 4
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z PROC ; CAttemperEngineSink::OnEventTCPSocketRead, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	return true;

  0000c	b0 01		 mov	 al, 1

; 254  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 10 00	 ret	 16			; 00000010H
?OnEventTCPSocketRead@CAttemperEngineSink@@UAE_NGUTCP_Command@@PAXG@Z ENDP ; CAttemperEngineSink::OnEventTCPSocketRead
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wServiceID$ = 8					; size = 2
_cbShutReason$ = 12					; size = 1
?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z PROC ; CAttemperEngineSink::OnEventTCPSocketShut, COMDAT
; _this$ = ecx

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 241  : 	return false;

  0000c	32 c0		 xor	 al, al

; 242  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?OnEventTCPSocketShut@CAttemperEngineSink@@UAE_NGE@Z ENDP ; CAttemperEngineSink::OnEventTCPSocketShut
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wServiceID$ = 8					; size = 2
_nErrorCode$ = 12					; size = 4
?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z PROC ; CAttemperEngineSink::OnEventTCPSocketLink, COMDAT
; _this$ = ecx

; 246  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 247  : 	return false;

  0000c	32 c0		 xor	 al, al

; 248  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?OnEventTCPSocketLink@CAttemperEngineSink@@UAE_NGH@Z ENDP ; CAttemperEngineSink::OnEventTCPSocketLink
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wRequestID$ = 8					; size = 2
_dwContextID$ = 12					; size = 4
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z PROC ; CAttemperEngineSink::OnEventDataBase, COMDAT
; _this$ = ecx

; 234  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 235  : 	return false;

  0000c	32 c0		 xor	 al, al

; 236  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 10 00	 ret	 16			; 00000010H
?OnEventDataBase@CAttemperEngineSink@@UAE_NGKPAXG@Z ENDP ; CAttemperEngineSink::OnEventDataBase
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwTimerID$ = 8						; size = 4
_wBindParam$ = 12					; size = 4
?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z PROC	; CAttemperEngineSink::OnEventTimer, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 96   : 	//加载参数
; 97   : 	if(IDI_LOAD_PLATFORM_PARAMETER==dwTimerID)

  0000c	83 7d 08 01	 cmp	 DWORD PTR _dwTimerID$[ebp], 1
  00010	75 2a		 jne	 SHORT $LN2@OnEventTim

; 98   : 	{
; 99   : 		//发送通知
; 100  : 		m_pITCPNetworkEngine->SendDataBatch(MDM_CS_MANAGER_SERVICE,SUB_CS_S_PLATFORM_PARAMETER,0,0,0L);

  00012	6a 00		 push	 0
  00014	6a 00		 push	 0
  00016	6a 00		 push	 0
  00018	68 2c 01 00 00	 push	 300			; 0000012cH
  0001d	6a 05		 push	 5
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 88 34 01 00
	00		 mov	 ecx, DWORD PTR [eax+308]
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002d	8b 8a 34 01 00
	00		 mov	 ecx, DWORD PTR [edx+308]
  00033	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00036	ff d2		 call	 edx

; 101  : 
; 102  : 		return true;

  00038	b0 01		 mov	 al, 1
  0003a	eb 02		 jmp	 SHORT $LN1@OnEventTim
$LN2@OnEventTim:

; 103  : 	}
; 104  : 
; 105  : 	return false;

  0003c	32 c0		 xor	 al, al
$LN1@OnEventTim:

; 106  : }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 08 00	 ret	 8
?OnEventTimer@CAttemperEngineSink@@UAE_NKI@Z ENDP	; CAttemperEngineSink::OnEventTimer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wRequestID$ = 8					; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z PROC ; CAttemperEngineSink::OnEventAttemperData, COMDAT
; _this$ = ecx

; 89   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 90   : 	return false;

  0000c	32 c0		 xor	 al, al

; 91   : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 0c 00	 ret	 12			; 0000000cH
?OnEventAttemperData@CAttemperEngineSink@@UAE_NGPAXG@Z ENDP ; CAttemperEngineSink::OnEventAttemperData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wIdentifier$ = 8					; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z PROC	; CAttemperEngineSink::OnEventControl, COMDAT
; _this$ = ecx

; 83   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 84   : 	return false;

  0000c	32 c0		 xor	 al, al

; 85   : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 0c 00	 ret	 12			; 0000000cH
?OnEventControl@CAttemperEngineSink@@UAE_NGPAXG@Z ENDP	; CAttemperEngineSink::OnEventControl
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
_TEXT	SEGMENT
$T2 = -88						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_pIUnknownEx$ = 8					; size = 4
?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z PROC ; CAttemperEngineSink::OnAttemperEngineConclude, COMDAT
; _this$ = ecx

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 48	 sub	 esp, 72			; 00000048H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 64   : 	//状态变量
; 65   : 	m_wCollectItem=INVALID_WORD;

  0002f	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00034	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 66   : 	m_WaitCollectItemArray.RemoveAll();

  0003b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	83 c1 08	 add	 ecx, 8
  00041	e8 00 00 00 00	 call	 ?RemoveAll@?$CWHArray@GABG@@QAEXXZ ; CWHArray<unsigned short,unsigned short const &>::RemoveAll

; 67   : 
; 68   : 	//设置变量
; 69   : 	m_pITimerEngine=NULL;

  00046	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00049	c7 80 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+304], 0

; 70   : 	m_pITCPNetworkEngine=NULL;

  00053	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00056	c7 80 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+308], 0

; 71   : 
; 72   : 	//删除数据
; 73   : 	SafeDeleteArray(m_pBindParameter);

  00060	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00067	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0006d	89 4d a8	 mov	 DWORD PTR $T2[ebp], ecx
  00070	8b 55 a8	 mov	 edx, DWORD PTR $T2[ebp]
  00073	52		 push	 edx
  00074	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00079	83 c4 04	 add	 esp, 4
  0007c	eb 23		 jmp	 SHORT $LN5@OnAttemper
__catch$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$0:
  0007e	33 c0		 xor	 eax, eax
  00080	75 19		 jne	 SHORT $LN4@OnAttemper
  00082	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z@4JA
  00088	83 c1 0a	 add	 ecx, 10			; 0000000aH
  0008b	51		 push	 ecx
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@OGEPACGF@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00091	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00096	85 c0		 test	 eax, eax
  00098	74 01		 je	 SHORT $LN4@OnAttemper
  0009a	cc		 int	 3
$LN4@OnAttemper:
  0009b	b8 00 00 00 00	 mov	 eax, $LN8@OnAttemper
  000a0	c3		 ret	 0
$LN5@OnAttemper:
  000a1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000a8	eb 07		 jmp	 SHORT __tryend$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$1
$LN8@OnAttemper:
  000aa	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z$1:
  000b1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 74   : 
; 75   : 	//设置组件
; 76   : 	m_GlobalInfoManager.ResetData();

  000bb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	83 c1 24	 add	 ecx, 36			; 00000024H
  000c1	e8 00 00 00 00	 call	 ?ResetData@CGlobalInfoManager@@QAEXXZ ; CGlobalInfoManager::ResetData

; 77   : 
; 78   : 	return true;

  000c6	b0 01		 mov	 al, 1

; 79   : }

  000c8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000cb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d2	59		 pop	 ecx
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnAttemperEngineConclude@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z ENDP ; CAttemperEngineSink::OnAttemperEngineConclude
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z
_TEXT	SEGMENT
$T1 = -72						; size = 4
_this$ = -4						; size = 4
_pIUnknownEx$ = 8					; size = 4
?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z PROC ; CAttemperEngineSink::OnAttemperEngineStart, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 47   : 	//绑定参数
; 48   : 	m_pBindParameter=new tagBindParameter[m_pInitParameter->m_wMaxConnect];

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00012	0f b7 41 04	 movzx	 eax, WORD PTR [ecx+4]
  00016	33 c9		 xor	 ecx, ecx
  00018	ba 14 00 00 00	 mov	 edx, 20			; 00000014H
  0001d	f7 e2		 mul	 edx
  0001f	0f 90 c1	 seto	 cl
  00022	f7 d9		 neg	 ecx
  00024	0b c8		 or	 ecx, eax
  00026	51		 push	 ecx
  00027	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 45 b8	 mov	 DWORD PTR $T1[ebp], eax
  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 4d b8	 mov	 ecx, DWORD PTR $T1[ebp]
  00038	89 48 20	 mov	 DWORD PTR [eax+32], ecx

; 49   : 	ZeroMemory(m_pBindParameter,sizeof(tagBindParameter)*m_pInitParameter->m_wMaxConnect);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00041	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  00045	6b c2 14	 imul	 eax, edx, 20
  00048	50		 push	 eax
  00049	6a 00		 push	 0
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00051	52		 push	 edx
  00052	e8 00 00 00 00	 call	 _memset
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH

; 50   : 
; 51   : 	//设置定时器
; 52   : #ifndef _DEBUG
; 53   : 	m_pITimerEngine->SetTimer(IDI_LOAD_PLATFORM_PARAMETER,TIME_LOAD_PLATFORM_PARAMETER,TIMES_INFINITY,0);
; 54   : #else
; 55   : 	m_pITimerEngine->SetTimer(IDI_LOAD_PLATFORM_PARAMETER,60000,TIMES_INFINITY,0);

  0005a	6a 00		 push	 0
  0005c	6a ff		 push	 -1
  0005e	68 60 ea 00 00	 push	 60000			; 0000ea60H
  00063	6a 01		 push	 1
  00065	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 88 30 01 00
	00		 mov	 ecx, DWORD PTR [eax+304]
  0006e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00071	8b 01		 mov	 eax, DWORD PTR [ecx]
  00073	8b 8a 30 01 00
	00		 mov	 ecx, DWORD PTR [edx+304]
  00079	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0007c	ff d2		 call	 edx

; 56   : #endif
; 57   : 
; 58   : 	return true;

  0007e	b0 01		 mov	 al, 1

; 59   : }

  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 04 00	 ret	 4
?OnAttemperEngineStart@CAttemperEngineSink@@UAE_NPAUIUnknownEx@@@Z ENDP ; CAttemperEngineSink::OnAttemperEngineStart
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Guid$ = 8						; size = 4
_dwQueryVer$ = 12					; size = 4
?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z PROC ; CAttemperEngineSink::QueryInterface, COMDAT
; _this$ = ecx

; 38   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 39   : 	QUERYINTERFACE(IAttemperEngineSink,Guid,dwQueryVer);

  0000c	68 00 00 00 00	 push	 OFFSET ?IID_IAttemperEngineSink@@3U_GUID@@B
  00011	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _==
  0001a	83 c4 08	 add	 esp, 8
  0001d	0f b6 c8	 movzx	 ecx, al
  00020	85 c9		 test	 ecx, ecx
  00022	74 1d		 je	 SHORT $LN2@QueryInter
  00024	68 00 01 01 06	 push	 100729088		; 06010100H
  00029	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00032	83 c4 08	 add	 esp, 8
  00035	0f b6 c8	 movzx	 ecx, al
  00038	85 c9		 test	 ecx, ecx
  0003a	74 05		 je	 SHORT $LN2@QueryInter
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	eb 37		 jmp	 SHORT $LN1@QueryInter
$LN2@QueryInter:

; 40   : 	QUERYINTERFACE_IUNKNOWNEX(IAttemperEngineSink,Guid,dwQueryVer);

  00041	68 00 00 00 00	 push	 OFFSET ?IID_IUnknownEx@@3U_GUID@@B
  00046	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 _==
  0004f	83 c4 08	 add	 esp, 8
  00052	0f b6 c8	 movzx	 ecx, al
  00055	85 c9		 test	 ecx, ecx
  00057	74 1d		 je	 SHORT $LN3@QueryInter
  00059	68 00 01 01 06	 push	 100729088		; 06010100H
  0005e	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00067	83 c4 08	 add	 esp, 8
  0006a	0f b6 c8	 movzx	 ecx, al
  0006d	85 c9		 test	 ecx, ecx
  0006f	74 05		 je	 SHORT $LN3@QueryInter
  00071	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00074	eb 02		 jmp	 SHORT $LN1@QueryInter
$LN3@QueryInter:

; 41   : 	return NULL;

  00076	33 c0		 xor	 eax, eax
$LN1@QueryInter:

; 42   : }

  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
?QueryInterface@CAttemperEngineSink@@UAEPAXABU_GUID@@K@Z ENDP ; CAttemperEngineSink::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.h
;	COMDAT ?Release@CAttemperEngineSink@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@CAttemperEngineSink@@UAEXXZ PROC		; CAttemperEngineSink::Release, COMDAT
; _this$ = ecx

; 75   : 	virtual VOID Release() { return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?Release@CAttemperEngineSink@@UAEXXZ ENDP		; CAttemperEngineSink::Release
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ??1CAttemperEngineSink@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAttemperEngineSink@@UAE@XZ PROC			; CAttemperEngineSink::~CAttemperEngineSink, COMDAT
; _this$ = ecx

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAttemperEngineSink@@6B@

; 34   : }

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 c1 24	 add	 ecx, 36			; 00000024H
  0001b	e8 00 00 00 00	 call	 ??1CGlobalInfoManager@@UAE@XZ ; CGlobalInfoManager::~CGlobalInfoManager
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	83 c1 08	 add	 ecx, 8
  00026	e8 00 00 00 00	 call	 ??1?$CWHArray@GABG@@UAE@XZ ; CWHArray<unsigned short,unsigned short const &>::~CWHArray<unsigned short,unsigned short const &>
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??1CAttemperEngineSink@@UAE@XZ ENDP			; CAttemperEngineSink::~CAttemperEngineSink
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ??0CAttemperEngineSink@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CAttemperEngineSink@@QAE@XZ PROC			; CAttemperEngineSink::CAttemperEngineSink, COMDAT
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CAttemperEngineSink@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0IAttemperEngineSink@@QAE@XZ
  00033	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAttemperEngineSink@@6B@
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	83 c1 08	 add	 ecx, 8
  00042	e8 00 00 00 00	 call	 ??0?$CWHArray@GABG@@QAE@XZ ; CWHArray<unsigned short,unsigned short const &>::CWHArray<unsigned short,unsigned short const &>
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	83 c1 24	 add	 ecx, 36			; 00000024H
  00054	e8 00 00 00 00	 call	 ??0CGlobalInfoManager@@QAE@XZ ; CGlobalInfoManager::CGlobalInfoManager

; 17   : 	//状态变量
; 18   : 	m_wCollectItem=INVALID_WORD;

  00059	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	66 89 41 04	 mov	 WORD PTR [ecx+4], ax

; 19   : 
; 20   : 	//设置变量
; 21   : 	m_pInitParameter=NULL;

  00065	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 22   : 	m_pBindParameter=NULL;

  0006f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00072	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0

; 23   : 
; 24   : 	//组件变量
; 25   : 	m_pITimerEngine=NULL;

  00079	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	c7 80 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+304], 0

; 26   : 	m_pITCPNetworkEngine=NULL;

  00086	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00089	c7 80 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+308], 0

; 27   : 
; 28   : 	return;
; 29   : }

  00093	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a7	59		 pop	 ecx
  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	5b		 pop	 ebx
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CAttemperEngineSink@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 08	 add	 ecx, 8
  00006	e9 00 00 00 00	 jmp	 ??1?$CWHArray@GABG@@UAE@XZ ; CWHArray<unsigned short,unsigned short const &>::~CWHArray<unsigned short,unsigned short const &>
__ehhandler$??0CAttemperEngineSink@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CAttemperEngineSink@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CAttemperEngineSink@@QAE@XZ ENDP			; CAttemperEngineSink::CAttemperEngineSink
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$CWHArray@GABG@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CWHArray@GABG@@UAEPAXI@Z PROC			; CWHArray<unsigned short,unsigned short const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1?$CWHArray@GABG@@UAE@XZ ; CWHArray<unsigned short,unsigned short const &>::~CWHArray<unsigned short,unsigned short const &>
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 14		 push	 20			; 00000014H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_G?$CWHArray@GABG@@UAEPAXI@Z ENDP			; CWHArray<unsigned short,unsigned short const &>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?AllocMemory@?$CWHArray@GABG@@QAEXH@Z
_TEXT	SEGMENT
tv78 = -92						; size = 4
tv79 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
_pNewData$3 = -12					; size = 4
_nGrowCount$4 = -8					; size = 4
_this$ = -4						; size = 4
_nNewCount$ = 8						; size = 4
?AllocMemory@?$CWHArray@GABG@@QAEXH@Z PROC		; CWHArray<unsigned short,unsigned short const &>::AllocMemory, COMDAT
; _this$ = ecx

; 413  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 	//效验参数
; 415  : 	ASSERT(nNewCount>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewCount$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@AllocMemor
  00012	68 9f 01 00 00	 push	 415			; 0000019fH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@AllocMemor
  00025	cc		 int	 3
$LN5@AllocMemor:

; 416  : 
; 417  : 	if (nNewCount>m_nMaxCount)

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0002c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002f	0f 8e da 00 00
	00		 jle	 $LN1@AllocMemor

; 418  : 	{
; 419  : 		//计算数目
; 420  : 		INT_PTR nGrowCount=m_nGrowCount;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003b	89 4d f8	 mov	 DWORD PTR _nGrowCount$4[ebp], ecx

; 421  : 		if (nGrowCount==0)

  0003e	83 7d f8 00	 cmp	 DWORD PTR _nGrowCount$4[ebp], 0
  00042	75 45		 jne	 SHORT $LN3@AllocMemor

; 422  : 		{
; 423  : 			nGrowCount=m_nElementCount/8;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0004a	99		 cdq
  0004b	83 e2 07	 and	 edx, 7
  0004e	03 c2		 add	 eax, edx
  00050	c1 f8 03	 sar	 eax, 3
  00053	89 45 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], eax

; 424  : 			nGrowCount=(nGrowCount<4)?4:((nGrowCount>1024)?1024:nGrowCount);

  00056	83 7d f8 04	 cmp	 DWORD PTR _nGrowCount$4[ebp], 4
  0005a	7d 09		 jge	 SHORT $LN8@AllocMemor
  0005c	c7 45 a8 04 00
	00 00		 mov	 DWORD PTR tv79[ebp], 4
  00063	eb 1e		 jmp	 SHORT $LN9@AllocMemor
$LN8@AllocMemor:
  00065	81 7d f8 00 04
	00 00		 cmp	 DWORD PTR _nGrowCount$4[ebp], 1024 ; 00000400H
  0006c	7e 09		 jle	 SHORT $LN6@AllocMemor
  0006e	c7 45 a4 00 04
	00 00		 mov	 DWORD PTR tv78[ebp], 1024 ; 00000400H
  00075	eb 06		 jmp	 SHORT $LN7@AllocMemor
$LN6@AllocMemor:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _nGrowCount$4[ebp]
  0007a	89 45 a4	 mov	 DWORD PTR tv78[ebp], eax
$LN7@AllocMemor:
  0007d	8b 4d a4	 mov	 ecx, DWORD PTR tv78[ebp]
  00080	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
$LN9@AllocMemor:
  00083	8b 55 a8	 mov	 edx, DWORD PTR tv79[ebp]
  00086	89 55 f8	 mov	 DWORD PTR _nGrowCount$4[ebp], edx
$LN3@AllocMemor:

; 425  : 		}
; 426  : 		nNewCount+=nGrowCount;

  00089	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  0008c	03 45 f8	 add	 eax, DWORD PTR _nGrowCount$4[ebp]
  0008f	89 45 08	 mov	 DWORD PTR _nNewCount$[ebp], eax

; 427  : 
; 428  : 		//申请内存
; 429  : 		TYPE * pNewData=(TYPE *) new BYTE[nNewCount*sizeof(TYPE)];

  00092	8b 45 08	 mov	 eax, DWORD PTR _nNewCount$[ebp]
  00095	d1 e0		 shl	 eax, 1
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0009d	83 c4 04	 add	 esp, 4
  000a0	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  000a3	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000a6	89 4d f4	 mov	 DWORD PTR _pNewData$3[ebp], ecx

; 430  : 		memcpy(pNewData,m_pData,m_nElementCount*sizeof(TYPE));

  000a9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ac	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000af	d1 e1		 shl	 ecx, 1
  000b1	51		 push	 ecx
  000b2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b8	50		 push	 eax
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000bc	51		 push	 ecx
  000bd	e8 00 00 00 00	 call	 _memcpy
  000c2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : 		memset(pNewData+m_nElementCount,0,(nNewCount-m_nElementCount)*sizeof(TYPE));

  000c5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c8	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  000cb	2b 48 10	 sub	 ecx, DWORD PTR [eax+16]
  000ce	d1 e1		 shl	 ecx, 1
  000d0	51		 push	 ecx
  000d1	6a 00		 push	 0
  000d3	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000d6	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000d9	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  000dc	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  000df	52		 push	 edx
  000e0	e8 00 00 00 00	 call	 _memset
  000e5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		delete [] (BYTE *)m_pData;

  000e8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000eb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ee	89 4d ac	 mov	 DWORD PTR $T1[ebp], ecx
  000f1	8b 55 ac	 mov	 edx, DWORD PTR $T1[ebp]
  000f4	52		 push	 edx
  000f5	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000fa	83 c4 04	 add	 esp, 4

; 433  : 
; 434  : 		//设置变量
; 435  : 		m_pData=pNewData;

  000fd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 4d f4	 mov	 ecx, DWORD PTR _pNewData$3[ebp]
  00103	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 436  : 		m_nMaxCount=nNewCount;

  00106	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00109	8b 4d 08	 mov	 ecx, DWORD PTR _nNewCount$[ebp]
  0010c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN1@AllocMemor:

; 437  : 	}
; 438  : 
; 439  : 	return;
; 440  : }

  0010f	5f		 pop	 edi
  00110	5e		 pop	 esi
  00111	5b		 pop	 ebx
  00112	8b e5		 mov	 esp, ebp
  00114	5d		 pop	 ebp
  00115	c2 04 00	 ret	 4
?AllocMemory@?$CWHArray@GABG@@QAEXH@Z ENDP		; CWHArray<unsigned short,unsigned short const &>::AllocMemory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??A?$CWHArray@GABG@@QAEAAGH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CWHArray@GABG@@QAEAAGH@Z PROC			; CWHArray<unsigned short,unsigned short const &>::operator[], COMDAT
; _this$ = ecx

; 114  : { 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	return ElementAt(nIndex);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ElementAt@?$CWHArray@GABG@@QAEAAGH@Z ; CWHArray<unsigned short,unsigned short const &>::ElementAt

; 116  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??A?$CWHArray@GABG@@QAEAAGH@Z ENDP			; CWHArray<unsigned short,unsigned short const &>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAll@?$CWHArray@GABG@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CWHArray@GABG@@QAEXXZ PROC			; CWHArray<unsigned short,unsigned short const &>::RemoveAll, COMDAT
; _this$ = ecx

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 380  : 	if (m_nElementCount>0)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00013	7e 43		 jle	 SHORT $LN1@RemoveAll

; 381  : 	{
; 382  : 		for (INT_PTR i=0;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  00015	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001c	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001e	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00021	83 c0 01	 add	 eax, 1
  00024	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAll:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0002d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00030	7d 02		 jge	 SHORT $LN3@RemoveAll
  00032	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 383  : 		memset(m_pData,0,m_nElementCount*sizeof(TYPE));

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0003a	d1 e1		 shl	 ecx, 1
  0003c	51		 push	 ecx
  0003d	6a 00		 push	 0
  0003f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00042	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 _memset
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 		m_nElementCount=0;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
$LN1@RemoveAll:

; 385  : 	}
; 386  : 
; 387  : 	return;
; 388  : }

  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
?RemoveAll@?$CWHArray@GABG@@QAEXXZ ENDP			; CWHArray<unsigned short,unsigned short const &>::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?RemoveAt@?$CWHArray@GABG@@QAEXHH@Z
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_nMoveCount$ = -8					; size = 4
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_nCount$ = 12						; size = 4
?RemoveAt@?$CWHArray@GABG@@QAEXHH@Z PROC		; CWHArray<unsigned short,unsigned short const &>::RemoveAt, COMDAT
; _this$ = ecx

; 360  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 361  : 	//效验参数
; 362  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN9@RemoveAt
  00012	68 6a 01 00 00	 push	 362			; 0000016aH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN9@RemoveAt
  00025	cc		 int	 3
$LN9@RemoveAt:

; 363  : 	ASSERT(nCount>=0);

  00026	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0002a	7d 14		 jge	 SHORT $LN10@RemoveAt
  0002c	68 6b 01 00 00	 push	 363			; 0000016bH
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00036	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003b	85 c0		 test	 eax, eax
  0003d	74 01		 je	 SHORT $LN10@RemoveAt
  0003f	cc		 int	 3
$LN10@RemoveAt:

; 364  : 	ASSERT(nIndex+nCount<=m_nElementCount);

  00040	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00043	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004c	7e 14		 jle	 SHORT $LN11@RemoveAt
  0004e	68 6c 01 00 00	 push	 364			; 0000016cH
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00058	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005d	85 c0		 test	 eax, eax
  0005f	74 01		 je	 SHORT $LN11@RemoveAt
  00061	cc		 int	 3
$LN11@RemoveAt:

; 365  : 	if ((nIndex<0)||(nCount<0)||((nIndex+nCount>m_nElementCount))) AfxThrowInvalidArgException();

  00062	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00066	7c 14		 jl	 SHORT $LN6@RemoveAt
  00068	83 7d 0c 00	 cmp	 DWORD PTR _nCount$[ebp], 0
  0006c	7c 0e		 jl	 SHORT $LN6@RemoveAt
  0006e	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00071	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0007a	7e 05		 jle	 SHORT $LN5@RemoveAt
$LN6@RemoveAt:
  0007c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@RemoveAt:

; 366  : 
; 367  : 	//删除数据
; 368  : 	INT_PTR nMoveCount=m_nElementCount-(nIndex+nCount);

  00081	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  00084	03 45 0c	 add	 eax, DWORD PTR _nCount$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0008d	2b d0		 sub	 edx, eax
  0008f	89 55 f8	 mov	 DWORD PTR _nMoveCount$[ebp], edx

; 369  : 	for (INT_PTR i=0;i<nCount;i++) (m_pData+nIndex+i)->~TYPE();

  00092	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@RemoveAt
$LN2@RemoveAt:
  0009b	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 f4	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@RemoveAt:
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _i$1[ebp]
  000a7	3b 45 0c	 cmp	 eax, DWORD PTR _nCount$[ebp]
  000aa	7d 02		 jge	 SHORT $LN3@RemoveAt
  000ac	eb ed		 jmp	 SHORT $LN2@RemoveAt
$LN3@RemoveAt:

; 370  : 	if (nMoveCount>0) memmove(m_pData+nIndex,m_pData+nIndex+nCount,nMoveCount*sizeof(TYPE));

  000ae	83 7d f8 00	 cmp	 DWORD PTR _nMoveCount$[ebp], 0
  000b2	7e 2e		 jle	 SHORT $LN7@RemoveAt
  000b4	8b 45 f8	 mov	 eax, DWORD PTR _nMoveCount$[ebp]
  000b7	d1 e0		 shl	 eax, 1
  000b9	50		 push	 eax
  000ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c0	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000c3	8d 0c 42	 lea	 ecx, DWORD PTR [edx+eax*2]
  000c6	8b 55 0c	 mov	 edx, DWORD PTR _nCount$[ebp]
  000c9	8d 04 51	 lea	 eax, DWORD PTR [ecx+edx*2]
  000cc	50		 push	 eax
  000cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d3	8b 45 08	 mov	 eax, DWORD PTR _nIndex$[ebp]
  000d6	8d 0c 42	 lea	 ecx, DWORD PTR [edx+eax*2]
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 _memmove
  000df	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RemoveAt:

; 371  : 	m_nElementCount-=nCount;

  000e2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e5	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e8	2b 4d 0c	 sub	 ecx, DWORD PTR _nCount$[ebp]
  000eb	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ee	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN8@RemoveAt:

; 372  : 
; 373  : 	return;
; 374  : }

  000f1	5f		 pop	 edi
  000f2	5e		 pop	 esi
  000f3	5b		 pop	 ebx
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c2 08 00	 ret	 8
?RemoveAt@?$CWHArray@GABG@@QAEXHH@Z ENDP		; CWHArray<unsigned short,unsigned short const &>::RemoveAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetAtGrow@?$CWHArray@GABG@@QAEXHABG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
_newElement$ = 12					; size = 4
?SetAtGrow@?$CWHArray@GABG@@QAEXHABG@Z PROC		; CWHArray<unsigned short,unsigned short const &>::SetAtGrow, COMDAT
; _this$ = ecx

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 288  : 	//效验参数
; 289  : 	ASSERT(nIndex>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN5@SetAtGrow
  00012	68 21 01 00 00	 push	 289			; 00000121H
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN5@SetAtGrow
  00025	cc		 int	 3
$LN5@SetAtGrow:

; 290  : 	if (nIndex<0) AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN2@SetAtGrow
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@SetAtGrow:

; 291  : 
; 292  : 	//设置元素
; 293  : 	if (nIndex>=m_nElementCount) SetSize(m_nElementCount+1);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00037	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0003a	7c 12		 jl	 SHORT $LN3@SetAtGrow
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00042	83 c1 01	 add	 ecx, 1
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?SetSize@?$CWHArray@GABG@@QAEXH@Z ; CWHArray<unsigned short,unsigned short const &>::SetSize
$LN3@SetAtGrow:

; 294  : 	m_pData[nIndex]=newElement;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00054	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00057	8b 45 0c	 mov	 eax, DWORD PTR _newElement$[ebp]
  0005a	66 8b 00	 mov	 ax, WORD PTR [eax]
  0005d	66 89 04 51	 mov	 WORD PTR [ecx+edx*2], ax
$LN4@SetAtGrow:

; 295  : 
; 296  : 	return;
; 297  : }

  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 08 00	 ret	 8
?SetAtGrow@?$CWHArray@GABG@@QAEXHABG@Z ENDP		; CWHArray<unsigned short,unsigned short const &>::SetAtGrow
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?SetSize@?$CWHArray@GABG@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -80						; size = 4
_i$2 = -12						; size = 4
_i$3 = -8						; size = 4
_this$ = -4						; size = 4
_nNewSize$ = 8						; size = 4
?SetSize@?$CWHArray@GABG@@QAEXH@Z PROC			; CWHArray<unsigned short,unsigned short const &>::SetSize, COMDAT
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 253  : 	//效验参数
; 254  : 	ASSERT(nNewSize>=0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  00010	7d 14		 jge	 SHORT $LN13@SetSize
  00012	68 fe 00 00 00	 push	 254			; 000000feH
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00021	85 c0		 test	 eax, eax
  00023	74 01		 je	 SHORT $LN13@SetSize
  00025	cc		 int	 3
$LN13@SetSize:

; 255  : 	if (nNewSize<0)	AfxThrowInvalidArgException();

  00026	83 7d 08 00	 cmp	 DWORD PTR _nNewSize$[ebp], 0
  0002a	7d 05		 jge	 SHORT $LN8@SetSize
  0002c	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN8@SetSize:

; 256  : 	
; 257  : 	//设置大小
; 258  : 	AllocMemory(nNewSize);

  00031	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?AllocMemory@?$CWHArray@GABG@@QAEXH@Z ; CWHArray<unsigned short,unsigned short const &>::AllocMemory

; 259  : 	if (nNewSize>m_nElementCount)

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00043	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00046	7e 3a		 jle	 SHORT $LN9@SetSize

; 260  : 	{
; 261  : 		for (INT_PTR i=m_nElementCount;i<nNewSize;i++) new ((VOID *)(m_pData+i)) TYPE;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	89 4d f8	 mov	 DWORD PTR _i$3[ebp], ecx
  00051	eb 09		 jmp	 SHORT $LN4@SetSize
$LN2@SetSize:
  00053	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 f8	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@SetSize:
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _i$3[ebp]
  0005f	3b 45 08	 cmp	 eax, DWORD PTR _nNewSize$[ebp]
  00062	7d 1c		 jge	 SHORT $LN3@SetSize
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	8b 55 f8	 mov	 edx, DWORD PTR _i$3[ebp]
  0006d	8d 04 51	 lea	 eax, DWORD PTR [ecx+edx*2]
  00070	50		 push	 eax
  00071	6a 02		 push	 2
  00073	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00078	83 c4 08	 add	 esp, 8
  0007b	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  0007e	eb d3		 jmp	 SHORT $LN2@SetSize
$LN3@SetSize:

; 262  : 	}
; 263  : 	else if (nNewSize<m_nElementCount)

  00080	eb 4c		 jmp	 SHORT $LN10@SetSize
$LN9@SetSize:
  00082	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  00088	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0008b	7d 41		 jge	 SHORT $LN10@SetSize

; 264  : 	{
; 265  : 		for (INT_PTR i=nNewSize;i<m_nElementCount;i++) (m_pData+i)->~TYPE();

  0008d	8b 45 08	 mov	 eax, DWORD PTR _nNewSize$[ebp]
  00090	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
  00093	eb 09		 jmp	 SHORT $LN7@SetSize
$LN5@SetSize:
  00095	8b 45 f4	 mov	 eax, DWORD PTR _i$2[ebp]
  00098	83 c0 01	 add	 eax, 1
  0009b	89 45 f4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@SetSize:
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _i$2[ebp]
  000a4	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  000a7	7d 02		 jge	 SHORT $LN6@SetSize
  000a9	eb ea		 jmp	 SHORT $LN5@SetSize
$LN6@SetSize:

; 266  : 		memset(m_pData+nNewSize,0,(m_nElementCount-nNewSize)*sizeof(TYPE));

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000b1	2b 4d 08	 sub	 ecx, DWORD PTR _nNewSize$[ebp]
  000b4	d1 e1		 shl	 ecx, 1
  000b6	51		 push	 ecx
  000b7	6a 00		 push	 0
  000b9	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000bc	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000bf	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000c2	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  000c5	52		 push	 edx
  000c6	e8 00 00 00 00	 call	 _memset
  000cb	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@SetSize:

; 267  : 	}
; 268  : 	m_nElementCount=nNewSize;

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	8b 4d 08	 mov	 ecx, DWORD PTR _nNewSize$[ebp]
  000d4	89 48 10	 mov	 DWORD PTR [eax+16], ecx
$LN12@SetSize:

; 269  : 
; 270  : 	return;
; 271  : }

  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 04 00	 ret	 4
?SetSize@?$CWHArray@GABG@@QAEXH@Z ENDP			; CWHArray<unsigned short,unsigned short const &>::SetSize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?ElementAt@?$CWHArray@GABG@@QAEAAGH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
?ElementAt@?$CWHArray@GABG@@QAEAAGH@Z PROC		; CWHArray<unsigned short,unsigned short const &>::ElementAt, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	ASSERT((nIndex>=0)&&(nIndex<m_nElementCount));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00010	7c 0b		 jl	 SHORT $LN4@ElementAt
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00018	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001b	7c 14		 jl	 SHORT $LN5@ElementAt
$LN4@ElementAt:
  0001d	68 e9 00 00 00	 push	 233			; 000000e9H
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@LDFGAABH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00027	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002c	85 c0		 test	 eax, eax
  0002e	74 01		 je	 SHORT $LN5@ElementAt
  00030	cc		 int	 3
$LN5@ElementAt:

; 234  : 	if ((nIndex<0)&&(nIndex>=m_nElementCount)) AfxThrowInvalidArgException();

  00031	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00035	7d 10		 jge	 SHORT $LN2@ElementAt
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0003d	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00040	7c 05		 jl	 SHORT $LN2@ElementAt
  00042	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN2@ElementAt:

; 235  : 	
; 236  : 	return m_pData[nIndex];

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _nIndex$[ebp]
  00050	8d 04 51	 lea	 eax, DWORD PTR [ecx+edx*2]
$LN3@ElementAt:

; 237  : }

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?ElementAt@?$CWHArray@GABG@@QAEAAGH@Z ENDP		; CWHArray<unsigned short,unsigned short const &>::ElementAt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?Add@?$CWHArray@GABG@@QAEHABG@Z
_TEXT	SEGMENT
_nIndex$ = -8						; size = 4
_this$ = -4						; size = 4
_newElement$ = 8					; size = 4
?Add@?$CWHArray@GABG@@QAEHABG@Z PROC			; CWHArray<unsigned short,unsigned short const &>::Add, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 106  : 	INT_PTR nIndex=m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00012	89 4d f8	 mov	 DWORD PTR _nIndex$[ebp], ecx

; 107  : 	SetAtGrow(nIndex,newElement);

  00015	8b 45 08	 mov	 eax, DWORD PTR _newElement$[ebp]
  00018	50		 push	 eax
  00019	8b 4d f8	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?SetAtGrow@?$CWHArray@GABG@@QAEXHABG@Z ; CWHArray<unsigned short,unsigned short const &>::SetAtGrow

; 108  : 	return nIndex;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _nIndex$[ebp]

; 109  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?Add@?$CWHArray@GABG@@QAEHABG@Z ENDP			; CWHArray<unsigned short,unsigned short const &>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ?GetCount@?$CWHArray@GABG@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CWHArray@GABG@@QBEHXZ PROC			; CWHArray<unsigned short,unsigned short const &>::GetCount, COMDAT
; _this$ = ecx

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 	return m_nElementCount;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 100  : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetCount@?$CWHArray@GABG@@QBEHXZ ENDP			; CWHArray<unsigned short,unsigned short const &>::GetCount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??1?$CWHArray@GABG@@UAE@XZ
_TEXT	SEGMENT
$T1 = -76						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CWHArray@GABG@@UAE@XZ PROC				; CWHArray<unsigned short,unsigned short const &>::~CWHArray<unsigned short,unsigned short const &>, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@GABG@@6B@

; 144  : 	if (m_pData!=NULL)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 3e		 je	 SHORT $LN6@CWHArray

; 145  : 	{
; 146  : 		for (INT_PTR i=0;i<m_nElementCount;i++)	(m_pData+i)->~TYPE();

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@CWHArray
$LN2@CWHArray:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@CWHArray:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _i$2[ebp]
  00036	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  00039	7d 02		 jge	 SHORT $LN3@CWHArray
  0003b	eb ea		 jmp	 SHORT $LN2@CWHArray
$LN3@CWHArray:

; 147  : 		delete [] (BYTE *)m_pData;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00043	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00046	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  00049	52		 push	 edx
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0004f	83 c4 04	 add	 esp, 4

; 148  : 		m_pData=NULL;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN6@CWHArray:

; 149  : 	}
; 150  : 
; 151  : 	return;
; 152  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??1?$CWHArray@GABG@@UAE@XZ ENDP				; CWHArray<unsigned short,unsigned short const &>::~CWHArray<unsigned short,unsigned short const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\array.h
;	COMDAT ??0?$CWHArray@GABG@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CWHArray@GABG@@QAE@XZ PROC				; CWHArray<unsigned short,unsigned short const &>::CWHArray<unsigned short,unsigned short const &>, COMDAT
; _this$ = ecx

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CWHArray@GABG@@6B@

; 132  : 	m_pData=NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 133  : 	m_nMaxCount=0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 134  : 	m_nGrowCount=0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 135  : 	m_nElementCount=0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 136  : 
; 137  : 	return;
; 138  : }

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$CWHArray@GABG@@QAE@XZ ENDP				; CWHArray<unsigned short,unsigned short const &>::CWHArray<unsigned short,unsigned short const &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?IsMatchServer@CGlobalServerItem@@QAE_NXZ
_TEXT	SEGMENT
tv74 = -72						; size = 4
_this$ = -4						; size = 4
?IsMatchServer@CGlobalServerItem@@QAE_NXZ PROC		; CGlobalServerItem::IsMatchServer, COMDAT
; _this$ = ecx

; 202  : 	bool IsMatchServer() { return (m_GameMatch.wServerID==m_GameServer.wServerID) && m_GameMatch.dwMatchID!=0; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	0f b7 88 a1 00
	00 00		 movzx	 ecx, WORD PTR [eax+161]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	0f b7 42 0c	 movzx	 eax, WORD PTR [edx+12]
  0001d	3b c8		 cmp	 ecx, eax
  0001f	75 15		 jne	 SHORT $LN3@IsMatchSer
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 b9 a3 00 00
	00 00		 cmp	 DWORD PTR [ecx+163], 0
  0002b	74 09		 je	 SHORT $LN3@IsMatchSer
  0002d	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv74[ebp], 1
  00034	eb 07		 jmp	 SHORT $LN4@IsMatchSer
$LN3@IsMatchSer:
  00036	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN4@IsMatchSer:
  0003d	8a 45 b8	 mov	 al, BYTE PTR tv74[ebp]
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
?IsMatchServer@CGlobalServerItem@@QAE_NXZ ENDP		; CGlobalServerItem::IsMatchServer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetServerID@CGlobalServerItem@@QAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetServerID@CGlobalServerItem@@QAEGXZ PROC		; CGlobalServerItem::GetServerID, COMDAT
; _this$ = ecx

; 196  : 	WORD GetServerID() { return m_GameServer.wServerID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 40 0c	 mov	 ax, WORD PTR [eax+12]
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetServerID@CGlobalServerItem@@QAEGXZ ENDP		; CGlobalServerItem::GetServerID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetKindID@CGlobalServerItem@@QAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetKindID@CGlobalServerItem@@QAEGXZ PROC		; CGlobalServerItem::GetKindID, COMDAT
; _this$ = ecx

; 194  : 	WORD GetKindID() { return m_GameServer.wKindID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 40 06	 mov	 ax, WORD PTR [eax+6]
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetKindID@CGlobalServerItem@@QAEGXZ ENDP		; CGlobalServerItem::GetKindID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetIndex@CGlobalServerItem@@QAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIndex@CGlobalServerItem@@QAEGXZ PROC		; CGlobalServerItem::GetIndex, COMDAT
; _this$ = ecx

; 192  : 	WORD GetIndex() { return m_wIndex; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	66 8b 40 04	 mov	 ax, WORD PTR [eax+4]
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?GetIndex@CGlobalServerItem@@QAEGXZ ENDP		; CGlobalServerItem::GetIndex
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetUserInfo@CGlobalUserItem@@QAEPAUtagUserInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUserInfo@CGlobalUserItem@@QAEPAUtagUserInfo@@XZ PROC ; CGlobalUserItem::GetUserInfo, COMDAT
; _this$ = ecx

; 121  : 	tagUserInfo* GetUserInfo() {return &m_UserInfo; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 2f	 add	 eax, 47			; 0000002fH
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetUserInfo@CGlobalUserItem@@QAEPAUtagUserInfo@@XZ ENDP ; CGlobalUserItem::GetUserInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetMasterOrder@CGlobalUserItem@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMasterOrder@CGlobalUserItem@@QAEEXZ PROC		; CGlobalUserItem::GetMasterOrder, COMDAT
; _this$ = ecx

; 119  : 	BYTE GetMasterOrder() { return m_cbMasterOrder; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 2e	 mov	 al, BYTE PTR [eax+46]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetMasterOrder@CGlobalUserItem@@QAEEXZ ENDP		; CGlobalUserItem::GetMasterOrder
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetMemberOrder@CGlobalUserItem@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMemberOrder@CGlobalUserItem@@QAEEXZ PROC		; CGlobalUserItem::GetMemberOrder, COMDAT
; _this$ = ecx

; 117  : 	BYTE GetMemberOrder() { return m_cbMemberOrder; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 2d	 mov	 al, BYTE PTR [eax+45]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetMemberOrder@CGlobalUserItem@@QAEEXZ ENDP		; CGlobalUserItem::GetMemberOrder
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetGender@CGlobalUserItem@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGender@CGlobalUserItem@@QAEEXZ PROC			; CGlobalUserItem::GetGender, COMDAT
; _this$ = ecx

; 115  : 	BYTE GetGender() { return m_cbGender; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8a 40 2c	 mov	 al, BYTE PTR [eax+44]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetGender@CGlobalUserItem@@QAEEXZ ENDP			; CGlobalUserItem::GetGender
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetNickName@CGlobalUserItem@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNickName@CGlobalUserItem@@QAEPBDXZ PROC		; CGlobalUserItem::GetNickName, COMDAT
; _this$ = ecx

; 110  : 	LPCTSTR GetNickName() { return m_szNickName; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetNickName@CGlobalUserItem@@QAEPBDXZ ENDP		; CGlobalUserItem::GetNickName
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetGameID@CGlobalUserItem@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGameID@CGlobalUserItem@@QAEKXZ PROC			; CGlobalUserItem::GetGameID, COMDAT
; _this$ = ecx

; 108  : 	DWORD GetGameID() { return m_dwGameID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetGameID@CGlobalUserItem@@QAEKXZ ENDP			; CGlobalUserItem::GetGameID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\globalinfomanager.h
;	COMDAT ?GetUserID@CGlobalUserItem@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUserID@CGlobalUserItem@@QAEKXZ PROC			; CGlobalUserItem::GetUserID, COMDAT
; _this$ = ecx

; 106  : 	DWORD GetUserID() { return m_dwUserID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetUserID@CGlobalUserItem@@QAEKXZ ENDP			; CGlobalUserItem::GetUserID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IAttemperEngineSink@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IAttemperEngineSink@@QAE@XZ PROC			; IAttemperEngineSink::IAttemperEngineSink, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??0IUnknownEx@@QAE@XZ
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IAttemperEngineSink@@6B@
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0IAttemperEngineSink@@QAE@XZ ENDP			; IAttemperEngineSink::IAttemperEngineSink
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CMD_CS_C_HostCreatRoomInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMD_CS_C_HostCreatRoomInfo@@QAE@XZ PROC		; CMD_CS_C_HostCreatRoomInfo::CMD_CS_C_HostCreatRoomInfo, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	83 c1 04	 add	 ecx, 4
  00012	e8 00 00 00 00	 call	 ??0tagHostCreatRoomInfo@@QAE@XZ ; tagHostCreatRoomInfo::tagHostCreatRoomInfo
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??0CMD_CS_C_HostCreatRoomInfo@@QAE@XZ ENDP		; CMD_CS_C_HostCreatRoomInfo::CMD_CS_C_HostCreatRoomInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0CMD_CS_C_DismissTableResult@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMD_CS_C_DismissTableResult@@QAE@XZ PROC		; CMD_CS_C_DismissTableResult::CMD_CS_C_DismissTableResult, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	68 00 00 00 00	 push	 OFFSET ??0tagPersonalUserScoreInfo@@QAE@XZ ; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo
  00011	6a 08		 push	 8
  00013	6a 3c		 push	 60			; 0000003cH
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	05 d5 00 00 00	 add	 eax, 213		; 000000d5H
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ??_H@YGXPAXIIP6EPAX0@Z@Z
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0CMD_CS_C_DismissTableResult@@QAE@XZ ENDP		; CMD_CS_C_DismissTableResult::CMD_CS_C_DismissTableResult
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?InterfaceVersionCompare@@YA_NKK@Z
_TEXT	SEGMENT
_dwQueryVer$ = 8					; size = 4
_dwInterfaceVer$ = 12					; size = 4
?InterfaceVersionCompare@@YA_NKK@Z PROC			; InterfaceVersionCompare, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 69   : 	if (GetSubVer(dwQueryVer)>GetSubVer(dwInterfaceVer)) return false;

  00009	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  00012	83 c4 04	 add	 esp, 4
  00015	0f b6 f0	 movzx	 esi, al
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 ?GetSubVer@@YAEK@Z	; GetSubVer
  00021	83 c4 04	 add	 esp, 4
  00024	0f b6 d0	 movzx	 edx, al
  00027	3b f2		 cmp	 esi, edx
  00029	7e 04		 jle	 SHORT $LN2@InterfaceV
  0002b	32 c0		 xor	 al, al
  0002d	eb 74		 jmp	 SHORT $LN1@InterfaceV
$LN2@InterfaceV:

; 70   : 	if (GetMainVer(dwQueryVer)!=GetMainVer(dwInterfaceVer)) return false;

  0002f	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  00038	83 c4 04	 add	 esp, 4
  0003b	0f b6 f0	 movzx	 esi, al
  0003e	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  00041	51		 push	 ecx
  00042	e8 00 00 00 00	 call	 ?GetMainVer@@YAEK@Z	; GetMainVer
  00047	83 c4 04	 add	 esp, 4
  0004a	0f b6 d0	 movzx	 edx, al
  0004d	3b f2		 cmp	 esi, edx
  0004f	74 04		 je	 SHORT $LN3@InterfaceV
  00051	32 c0		 xor	 al, al
  00053	eb 4e		 jmp	 SHORT $LN1@InterfaceV
$LN3@InterfaceV:

; 71   : 	if (GetBuildVer(dwQueryVer)!=GetBuildVer(dwInterfaceVer)) return false;

  00055	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?GetBuildVer@@YAEK@Z	; GetBuildVer
  0005e	83 c4 04	 add	 esp, 4
  00061	0f b6 f0	 movzx	 esi, al
  00064	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 ?GetBuildVer@@YAEK@Z	; GetBuildVer
  0006d	83 c4 04	 add	 esp, 4
  00070	0f b6 d0	 movzx	 edx, al
  00073	3b f2		 cmp	 esi, edx
  00075	74 04		 je	 SHORT $LN4@InterfaceV
  00077	32 c0		 xor	 al, al
  00079	eb 28		 jmp	 SHORT $LN1@InterfaceV
$LN4@InterfaceV:

; 72   : 	if (GetProductVer(dwQueryVer)!=GetProductVer(dwInterfaceVer)) return false;

  0007b	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00084	83 c4 04	 add	 esp, 4
  00087	0f b6 f0	 movzx	 esi, al
  0008a	8b 4d 0c	 mov	 ecx, DWORD PTR _dwInterfaceVer$[ebp]
  0008d	51		 push	 ecx
  0008e	e8 00 00 00 00	 call	 ?GetProductVer@@YAEK@Z	; GetProductVer
  00093	83 c4 04	 add	 esp, 4
  00096	0f b6 d0	 movzx	 edx, al
  00099	3b f2		 cmp	 esi, edx
  0009b	74 04		 je	 SHORT $LN5@InterfaceV
  0009d	32 c0		 xor	 al, al
  0009f	eb 02		 jmp	 SHORT $LN1@InterfaceV
$LN5@InterfaceV:

; 73   : 	return true;

  000a1	b0 01		 mov	 al, 1
$LN1@InterfaceV:

; 74   : };

  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
?InterfaceVersionCompare@@YA_NKK@Z ENDP			; InterfaceVersionCompare
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetBuildVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetBuildVer@@YAEK@Z PROC				; GetBuildVer, COMDAT

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 63   : 	return ((BYTE *)&dwVersion)[0];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 64   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetBuildVer@@YAEK@Z ENDP				; GetBuildVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetSubVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetSubVer@@YAEK@Z PROC					; GetSubVer, COMDAT

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return ((BYTE *)&dwVersion)[1];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	c1 e0 00	 shl	 eax, 0
  00011	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 58   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetSubVer@@YAEK@Z ENDP					; GetSubVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetMainVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetMainVer@@YAEK@Z PROC				; GetMainVer, COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 51   : 	return ((BYTE *)&dwVersion)[2];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	d1 e0		 shl	 eax, 1
  00010	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 52   : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetMainVer@@YAEK@Z ENDP				; GetMainVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetProductVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetProductVer@@YAEK@Z PROC				; GetProductVer, COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 45   : 	return ((BYTE *)&dwVersion)[3];

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	6b c8 03	 imul	 ecx, eax, 3
  00011	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 46   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetProductVer@@YAEK@Z ENDP				; GetProductVer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0IUnknownEx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknownEx@@QAE@XZ PROC				; IUnknownEx::IUnknownEx, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0IUnknownEx@@QAE@XZ ENDP				; IUnknownEx::IUnknownEx
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\struct.h
;	COMDAT ??0tagPersonalUserScoreInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0tagPersonalUserScoreInfo@@QAE@XZ PROC		; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo, COMDAT
; _this$ = ecx

; 1112 : 	tagPersonalUserScoreInfo()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1113 : 	{
; 1114 : 		memset(this, 0, sizeof(tagPersonalUserScoreInfo));

  0000c	6a 3c		 push	 60			; 0000003cH
  0000e	6a 00		 push	 0
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memset
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1115 : 	}

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??0tagPersonalUserScoreInfo@@QAE@XZ ENDP		; tagPersonalUserScoreInfo::tagPersonalUserScoreInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\struct.h
;	COMDAT ??0tagHostCreatRoomInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0tagHostCreatRoomInfo@@QAE@XZ PROC			; tagHostCreatRoomInfo::tagHostCreatRoomInfo, COMDAT
; _this$ = ecx

; 1093 : 	tagHostCreatRoomInfo()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1094 : 	{
; 1095 : 		memset(szRoomID, 0, sizeof(TCHAR) * MAX_CREATE_PERSONAL_ROOM *ROOM_ID_LEN);

  0000c	68 8c 00 00 00	 push	 140			; 0000008cH
  00011	6a 00		 push	 0
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	83 c0 08	 add	 eax, 8
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 _memset
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1096 : 		memset(&hRoomCreateInfo, 0, sizeof(tagRoomCreateInfo) * MAX_CREATE_PERSONAL_ROOM);

  00022	68 c8 00 00 00	 push	 200			; 000000c8H
  00027	6a 00		 push	 0
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	05 94 00 00 00	 add	 eax, 148		; 00000094H
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 _memset
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1097 : 	}

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
??0tagHostCreatRoomInfo@@QAE@XZ ENDP			; tagHostCreatRoomInfo::tagHostCreatRoomInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -36						; size = 4
_bQuit$ = -32						; size = 4
_msg$ = -28						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00009	6a 01		 push	 1
  0000b	6a 12		 push	 18			; 00000012H
  0000d	6a 12		 push	 18			; 00000012H
  0000f	6a 00		 push	 0
  00011	8d 45 e4	 lea	 eax, DWORD PTR _msg$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0001b	89 45 e0	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 45 0c	 mov	 eax, DWORD PTR _nLine$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _lpszFileName$[ebp]
  00029	51		 push	 ecx
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	89 45 dc	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00038	83 7d e0 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0003c	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00048	8b 45 dc	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\time.h
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT

; 535  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 536  :             return _time64(_Time);

  00009	8b 45 08	 mov	 eax, DWORD PTR __Time$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___time64
  00013	83 c4 04	 add	 esp, 4

; 537  :         }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\tchar.h
;	COMDAT __tcslwr
_TEXT	SEGMENT
__String$ = 8						; size = 4
__tcslwr PROC						; COMDAT

; 1918 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1919 : #pragma warning(push)
; 1920 : #pragma warning(disable:4996)
; 1921 :     return (char *)_mbslwr((unsigned char *)_String);

  00009	8b 45 08	 mov	 eax, DWORD PTR __String$[ebp]
  0000c	50		 push	 eax
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___mbslwr
  00013	83 c4 04	 add	 esp, 4

; 1922 : #pragma warning(pop)
; 1923 : }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
__tcslwr ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _==
_TEXT	SEGMENT
tv68 = -68						; size = 4
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==	PROC						; COMDAT

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _guidOther$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _guidOne$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 _IsEqualGUID
  00016	83 c4 08	 add	 esp, 8
  00019	85 c0		 test	 eax, eax
  0001b	74 09		 je	 SHORT $LN3@
  0001d	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00024	eb 07		 jmp	 SHORT $LN4@
$LN3@:
  00026	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@:
  0002d	8a 45 bc	 mov	 al, BYTE PTR tv68[ebp]

; 195  : }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
_==	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
tv69 = -68						; size = 4
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00009	6a 10		 push	 16			; 00000010H
  0000b	8b 45 0c	 mov	 eax, DWORD PTR _rguid2$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _rguid1$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 _memcmp
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	85 c0		 test	 eax, eax
  0001d	75 09		 jne	 SHORT $LN3@IsEqualGUI
  0001f	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00026	eb 07		 jmp	 SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
  00028	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@IsEqualGUI:
  0002f	8b 45 bc	 mov	 eax, DWORD PTR tv69[ebp]

; 162  : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_IsEqualGUID ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 185  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  :         (void)_Size;
; 187  :         return _Where;

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 188  :     }

  0000c	5f		 pop	 edi
  0000d	5e		 pop	 esi
  0000e	5b		 pop	 ebx
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\约战服务器\attemperenginesink.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@vector:
  00009	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv66[ebp], eax
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  00012	83 e9 01	 sub	 ecx, 1
  00015	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00018	83 7d bc 00	 cmp	 DWORD PTR tv66[ebp], 0
  0001c	76 11		 jbe	 SHORT $LN1@vector
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00021	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00024	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00027	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  0002a	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  0002d	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
