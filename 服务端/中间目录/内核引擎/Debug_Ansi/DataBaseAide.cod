; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\内核引擎\DataBaseAide.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	??_C@_0BC@PGMFNIFA@atlTraceException@		; `string'
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT ??_C@_0BC@PGMFNIFA@atlTraceException@
CONST	SEGMENT
??_C@_0BC@PGMFNIFA@atlTraceException@ DB 'atlTraceException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
CONST	SEGMENT
?IID_ITraceServiceManager@@3U_GUID@@B DD 08bfc36dbH	; IID_ITraceServiceManager
	DW	05ba2H
	DW	042baH
	DB	081H
	DB	0b0H
	DB	087H
	DB	0b0H
	DB	01cH
	DB	09eH
	DB	0afH
	DB	0feH
?IID_IAsynchronismEngine@@3U_GUID@@B DD 0c7a13074H	; IID_IAsynchronismEngine
	DW	075c5H
	DW	04b8eH
	DB	0b5H
	DB	04bH
	DB	0eeH
	DB	0eH
	DB	0ecH
	DB	0feH
	DB	0b9H
	DB	0ebH
?IID_IDataBase@@3U_GUID@@B DD 0a2e38a78H		; IID_IDataBase
	DW	01e4fH
	DW	04de4H
	DB	0a5H
	DB	0d1H
	DB	0b9H
	DB	019H
	DB	09bH
	DB	0ceH
	DB	041H
	DB	0aeH
?IID_IDataBaseEngine@@3U_GUID@@B DD 047b5a119H		; IID_IDataBaseEngine
	DW	01676H
	DW	049a3H
	DB	0beH
	DB	0aeH
	DB	0caH
	DB	027H
	DB	0ebH
	DB	059H
	DB	097H
	DB	022H
?IID_IUDPNetworkEngine@@3U_GUID@@B DD 08d138a9bH	; IID_IUDPNetworkEngine
	DW	0a97dH
	DW	04d51H
	DB	09dH
	DB	06cH
	DB	0d8H
	DB	06eH
	DB	0a1H
	DB	084H
	DB	045H
	DB	02eH
?IID_ITCPNetworkEngine@@3U_GUID@@B DD 07747f683H	; IID_ITCPNetworkEngine
	DW	0c0daH
	DW	04588H
	DB	089H
	DB	0ccH
	DB	015H
	DB	093H
	DB	0acH
	DB	0c0H
	DB	044H
	DB	0c8H
?IID_ITCPSocketService@@3U_GUID@@B DD 0709a4449H	; IID_ITCPSocketService
	DW	0ad77H
	DW	04b3dH
	DB	0b4H
	DB	0d6H
	DB	08dH
	DB	0bH
	DB	028H
	DB	065H
	DB	0ecH
	DB	0aeH
?IID_IWEBSocketService@@3U_GUID@@B DD 091052ff2H	; IID_IWEBSocketService
	DW	0eb29H
	DW	040b9H
	DB	0b2H
	DB	0a2H
	DB	08aH
	DB	0a2H
	DB	098H
	DB	036H
	DB	02cH
	DB	084H
?IID_ITimerEngine@@3U_GUID@@B DD 0496401aeH		; IID_ITimerEngine
	DW	06fb0H
	DW	04e9fH
	DB	090H
	DB	098H
	DB	044H
	DB	09dH
	DB	09cH
	DB	0b2H
	DB	0bdH
	DB	097H
?IID_IAttemperEngine@@3U_GUID@@B DD 0b070b2cH		; IID_IAttemperEngine
	DW	09d72H
	DW	042d2H
	DB	0a5H
	DB	070H
	DB	0baH
	DB	02cH
	DB	0bfH
	DB	06fH
	DB	0bbH
	DB	01cH
CONST	ENDS
;	COMDAT ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	_swprintf_s
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	?AtlThrowImpl@ATL@@YGXJ@Z			; ATL::AtlThrowImpl
PUBLIC	?AtlThrowLastWin32@ATL@@YGXXZ			; ATL::AtlThrowLastWin32
PUBLIC	?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z		; ATL::CTrace::TraceV
PUBLIC	?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z		; ATL::CTrace::TraceV
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPBDI@Z		; ATL::CTrace::RegisterCategory
PUBLIC	?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>
PUBLIC	??1CPreserveLastError@ATL@@QAE@XZ		; ATL::CPreserveLastError::~CPreserveLastError
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	?GetYear@COleDateTime@ATL@@QBEHXZ		; ATL::COleDateTime::GetYear
PUBLIC	?GetMonth@COleDateTime@ATL@@QBEHXZ		; ATL::COleDateTime::GetMonth
PUBLIC	?GetDay@COleDateTime@ATL@@QBEHXZ		; ATL::COleDateTime::GetDay
PUBLIC	?GetHour@COleDateTime@ATL@@QBEHXZ		; ATL::COleDateTime::GetHour
PUBLIC	?GetMinute@COleDateTime@ATL@@QBEHXZ		; ATL::COleDateTime::GetMinute
PUBLIC	?GetSecond@COleDateTime@ATL@@QBEHXZ		; ATL::COleDateTime::GetSecond
PUBLIC	?GetDayOfWeek@COleDateTime@ATL@@QBEHXZ		; ATL::COleDateTime::GetDayOfWeek
PUBLIC	??4COleDateTime@ATL@@QAEAAV01@ABUtagVARIANT@@@Z	; ATL::COleDateTime::operator=
PUBLIC	??0_variant_t@@QAE@JG@Z				; _variant_t::_variant_t
PUBLIC	??1_variant_t@@QAE@XZ				; _variant_t::~_variant_t
PUBLIC	??B_variant_t@@QBEJXZ				; _variant_t::operator long
PUBLIC	??B_variant_t@@QBEMXZ				; _variant_t::operator float
PUBLIC	??B_variant_t@@QBENXZ				; _variant_t::operator double
PUBLIC	??B_variant_t@@QBEEXZ				; _variant_t::operator unsigned char
PUBLIC	??B_variant_t@@QBEGXZ				; _variant_t::operator unsigned short
PUBLIC	??B_variant_t@@QBEKXZ				; _variant_t::operator unsigned long
PUBLIC	??B_variant_t@@QBEHXZ				; _variant_t::operator int
PUBLIC	??B_variant_t@@QBEIXZ				; _variant_t::operator unsigned int
PUBLIC	??B_variant_t@@QBE_JXZ				; _variant_t::operator __int64
PUBLIC	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPA_WPB_W@Z			; std::_Maklocwcs
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z		; CDataBaseAide::CDataBaseAide
PUBLIC	??1CDataBaseAide@@UAE@XZ			; CDataBaseAide::~CDataBaseAide
PUBLIC	?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z ; CDataBaseAide::SetDataBase
PUBLIC	?GetDataBase@CDataBaseAide@@QAEPAXABU_GUID@@K@Z	; CDataBaseAide::GetDataBase
PUBLIC	?GetValue_INT@CDataBaseAide@@QAEHPBD@Z		; CDataBaseAide::GetValue_INT
PUBLIC	?GetValue_UINT@CDataBaseAide@@QAEIPBD@Z		; CDataBaseAide::GetValue_UINT
PUBLIC	?GetValue_LONG@CDataBaseAide@@QAEJPBD@Z		; CDataBaseAide::GetValue_LONG
PUBLIC	?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z		; CDataBaseAide::GetValue_BYTE
PUBLIC	?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z		; CDataBaseAide::GetValue_WORD
PUBLIC	?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z	; CDataBaseAide::GetValue_DWORD
PUBLIC	?GetValue_FLOAT@CDataBaseAide@@QAEMPBD@Z	; CDataBaseAide::GetValue_FLOAT
PUBLIC	?GetValue_DOUBLE@CDataBaseAide@@QAENPBD@Z	; CDataBaseAide::GetValue_DOUBLE
PUBLIC	?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z	; CDataBaseAide::GetValue_LONGLONG
PUBLIC	?GetValue_VarValue@CDataBaseAide@@QAEXPBDAAV_variant_t@@@Z ; CDataBaseAide::GetValue_VarValue
PUBLIC	?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z ; CDataBaseAide::GetValue_SystemTime
PUBLIC	?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z	; CDataBaseAide::GetValue_String
PUBLIC	?GetValue_String@CDataBaseAide@@QAEXPBDPA_WI@Z	; CDataBaseAide::GetValue_String
PUBLIC	?ResetParameter@CDataBaseAide@@QAEXXZ		; CDataBaseAide::ResetParameter
PUBLIC	?GetParameter@CDataBaseAide@@QAEXPBDAAV_variant_t@@@Z ; CDataBaseAide::GetParameter
PUBLIC	?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z	; CDataBaseAide::GetParameter
PUBLIC	?GetParameter@CDataBaseAide@@QAEXPBDPA_WI@Z	; CDataBaseAide::GetParameter
PUBLIC	?AddParameter@CDataBaseAide@@QAEXPBDHW4ParameterDirectionEnum@ADOCG@@@Z ; CDataBaseAide::AddParameter
PUBLIC	?AddParameter@CDataBaseAide@@QAEXPBDIW4ParameterDirectionEnum@ADOCG@@@Z ; CDataBaseAide::AddParameter
PUBLIC	?AddParameter@CDataBaseAide@@QAEXPBDJW4ParameterDirectionEnum@ADOCG@@@Z ; CDataBaseAide::AddParameter
PUBLIC	?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z ; CDataBaseAide::AddParameter
PUBLIC	?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z ; CDataBaseAide::AddParameter
PUBLIC	?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z ; CDataBaseAide::AddParameter
PUBLIC	?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z ; CDataBaseAide::AddParameter
PUBLIC	?AddParameter@CDataBaseAide@@QAEXPBDMW4ParameterDirectionEnum@ADOCG@@@Z ; CDataBaseAide::AddParameter
PUBLIC	?AddParameter@CDataBaseAide@@QAEXPBDNW4ParameterDirectionEnum@ADOCG@@@Z ; CDataBaseAide::AddParameter
PUBLIC	?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z ; CDataBaseAide::AddParameter
PUBLIC	?AddParameter@CDataBaseAide@@QAEXPBDPB_WW4ParameterDirectionEnum@ADOCG@@@Z ; CDataBaseAide::AddParameter
PUBLIC	?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z ; CDataBaseAide::AddParameter
PUBLIC	?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z ; CDataBaseAide::AddParameterOutput
PUBLIC	?AddParameterOutput@CDataBaseAide@@QAEXPBDPA_WIW4ParameterDirectionEnum@ADOCG@@@Z ; CDataBaseAide::AddParameterOutput
PUBLIC	?GetReturnValue@CDataBaseAide@@QAEJXZ		; CDataBaseAide::GetReturnValue
PUBLIC	?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z	; CDataBaseAide::ExecuteProcess
PUBLIC	??0CDataBaseAide@@QAE@ABV0@@Z			; CDataBaseAide::CDataBaseAide
PUBLIC	??4CDataBaseAide@@QAEAAV0@ABV0@@Z		; CDataBaseAide::operator=
PUBLIC	??_FCDataBaseAide@@QAEXXZ			; CDataBaseAide::`default constructor closure'
PUBLIC	??_GCDataBaseAide@@UAEPAXI@Z			; CDataBaseAide::`scalar deleting destructor'
PUBLIC	??_ECDataBaseAide@@UAEPAXI@Z			; CDataBaseAide::`vector deleting destructor'
PUBLIC	??1?$CW2AEX@$0IA@@ATL@@QAE@XZ			; ATL::CW2AEX<128>::~CW2AEX<128>
PUBLIC	?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z		; ATL::CW2AEX<128>::Init
PUBLIC	??$AtlConvFreeMemory@D@ATL@@YAXPAD0H@Z		; ATL::AtlConvFreeMemory<char>
PUBLIC	??$AtlConvAllocMemory@D@ATL@@YAXPAPADHPADH@Z	; ATL::AtlConvAllocMemory<char>
PUBLIC	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z	; std::_Maklocstr<char>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1OC@PNEKCFJL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?m_nLevel@CTrace@ATL@@1IA			; ATL::CTrace::m_nLevel
PUBLIC	?m_nCategory@CTrace@ATL@@1IA			; ATL::CTrace::m_nCategory
PUBLIC	??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ ; `string'
PUBLIC	??_C@_0HD@OEBHCJKM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6@ ; `string'
PUBLIC	??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@ ; `string'
PUBLIC	??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_7CDataBaseAide@@6B@				; CDataBaseAide::`vftable'
PUBLIC	??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_C@_0N@JKBGBCPB@RETURN_VALUE@			; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_R4CDataBaseAide@@6B@				; CDataBaseAide::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDataBaseAide@@@8			; CDataBaseAide `RTTI Type Descriptor'
PUBLIC	??_R3CDataBaseAide@@8				; CDataBaseAide::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDataBaseAide@@8				; CDataBaseAide::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDataBaseAide@@8			; CDataBaseAide::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__SetLastError@4:PROC
EXTRN	__imp__lstrcpynA@12:PROC
EXTRN	__imp__lstrcpynW@12:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__lstrlenW@4:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	__imp__WideCharToMultiByte@32:PROC
EXTRN	__imp____stdio_common_vswprintf_s:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp____stdio_common_vsnprintf_s:PROC
EXTRN	__imp__calloc:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp___recalloc:PROC
EXTRN	__imp___calloc_dbg:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	__imp__SysAllocString@4:PROC
EXTRN	__imp__SystemTimeToVariantTime@8:PROC
EXTRN	__imp__VariantTimeToSystemTime@12:PROC
EXTRN	__imp__VariantInit@4:PROC
EXTRN	__imp__VariantClear@4:PROC
EXTRN	__imp__VariantChangeType@16:PROC
EXTRN	?AfxThrowMemoryException@@YGXXZ:PROC		; AfxThrowMemoryException
EXTRN	?AfxThrowOleException@@YGXJ@Z:PROC		; AfxThrowOleException
EXTRN	?_com_issue_error@@YGXJ@Z:PROC			; _com_issue_error
EXTRN	?ConvertStringToBSTR@_com_util@@YGPA_WPBD@Z:PROC ; _com_util::ConvertStringToBSTR
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	__Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?m_nLevel@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLevel@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLevel
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CDataBaseAide@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDataBaseAide@@8 DD FLAT:??_R0?AVCDataBaseAide@@@8 ; CDataBaseAide::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDataBaseAide@@8
rdata$r	ENDS
;	COMDAT ??_R2CDataBaseAide@@8
rdata$r	SEGMENT
??_R2CDataBaseAide@@8 DD FLAT:??_R1A@?0A@EA@CDataBaseAide@@8 ; CDataBaseAide::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CDataBaseAide@@8
rdata$r	SEGMENT
??_R3CDataBaseAide@@8 DD 00H				; CDataBaseAide::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CDataBaseAide@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDataBaseAide@@@8
data$r	SEGMENT
??_R0?AVCDataBaseAide@@@8 DD FLAT:??_7type_info@@6B@	; CDataBaseAide `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDataBaseAide@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDataBaseAide@@6B@
rdata$r	SEGMENT
??_R4CDataBaseAide@@6B@ DD 00H				; CDataBaseAide::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDataBaseAide@@@8
	DD	FLAT:??_R3CDataBaseAide@@8
rdata$r	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JKBGBCPB@RETURN_VALUE@
CONST	SEGMENT
??_C@_0N@JKBGBCPB@RETURN_VALUE@ DB 'RETURN_VALUE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0c4H, 0daH, 0baH, 0cbH, 0d2H, 0fdH, 0c7H, 0e6H, '\d'
	DB	'atabaseaide.cpp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CDataBaseAide@@6B@
CONST	SEGMENT
??_7CDataBaseAide@@6B@ DD FLAT:??_R4CDataBaseAide@@6B@	; CDataBaseAide::`vftable'
	DD	FLAT:??_ECDataBaseAide@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocnum', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocale', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
CONST	SEGMENT
??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@ DB '_'
	DB	00H, '_', 00H, 'a', 00H, 't', 00H, 'l', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6@
CONST	SEGMENT
??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6@ DB 'AtlThrow: hr = 0x'
	DB	'%x', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0HD@OEBHCJKM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0HD@OEBHCJKM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\atlmfc\include\atlexcept.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H
	DB	's', 00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'u', 00H, ' '
	DB	00H, '-', 00H, ' ', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'l', 00H
	DB	's', 00H, ' ', 00H, '-', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?m_nCategory@CTrace@ATL@@1IA
_DATA	SEGMENT
?m_nCategory@CTrace@ATL@@1IA DD 0ffffffffH		; ATL::CTrace::m_nCategory
_DATA	ENDS
;	COMDAT ??_C@_1OC@PNEKCFJL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OC@PNEKCFJL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'v', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECDataBaseAide@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddParameterOutput@CDataBaseAide@@QAEXPBDPA_WIW4ParameterDirectionEnum@ADOCG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParameterOutput@CDataBaseAide@@QAEXPBDPA_WIW4ParameterDirectionEnum@ADOCG@@@Z$0
__ehfuncinfo$?AddParameterOutput@CDataBaseAide@@QAEXPBDPA_WIW4ParameterDirectionEnum@ADOCG@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParameterOutput@CDataBaseAide@@QAEXPBDPA_WIW4ParameterDirectionEnum@ADOCG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z$0
__ehfuncinfo$?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z$0
__ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDPB_WW4ParameterDirectionEnum@ADOCG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDPB_WW4ParameterDirectionEnum@ADOCG@@@Z$0
__ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDPB_WW4ParameterDirectionEnum@ADOCG@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDPB_WW4ParameterDirectionEnum@ADOCG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z$0
__ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDNW4ParameterDirectionEnum@ADOCG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDNW4ParameterDirectionEnum@ADOCG@@@Z$0
__ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDNW4ParameterDirectionEnum@ADOCG@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDNW4ParameterDirectionEnum@ADOCG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDMW4ParameterDirectionEnum@ADOCG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDMW4ParameterDirectionEnum@ADOCG@@@Z$0
__ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDMW4ParameterDirectionEnum@ADOCG@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDMW4ParameterDirectionEnum@ADOCG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z$0
__ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z$0
__ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z$0
__ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z$0
__ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDJW4ParameterDirectionEnum@ADOCG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDJW4ParameterDirectionEnum@ADOCG@@@Z$0
__ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDJW4ParameterDirectionEnum@ADOCG@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDJW4ParameterDirectionEnum@ADOCG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDIW4ParameterDirectionEnum@ADOCG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDIW4ParameterDirectionEnum@ADOCG@@@Z$0
__ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDIW4ParameterDirectionEnum@ADOCG@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDIW4ParameterDirectionEnum@ADOCG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDHW4ParameterDirectionEnum@ADOCG@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDHW4ParameterDirectionEnum@ADOCG@@@Z$0
__ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDHW4ParameterDirectionEnum@ADOCG@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParameter@CDataBaseAide@@QAEXPBDHW4ParameterDirectionEnum@ADOCG@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetParameter@CDataBaseAide@@QAEXPBDPA_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetParameter@CDataBaseAide@@QAEXPBDPA_WI@Z$0
__ehfuncinfo$?GetParameter@CDataBaseAide@@QAEXPBDPA_WI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetParameter@CDataBaseAide@@QAEXPBDPA_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z$0
__ehfuncinfo$?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ResetParameter@CDataBaseAide@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ResetParameter@CDataBaseAide@@QAEXXZ$0
__ehfuncinfo$?ResetParameter@CDataBaseAide@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ResetParameter@CDataBaseAide@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetValue_String@CDataBaseAide@@QAEXPBDPA_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetValue_String@CDataBaseAide@@QAEXPBDPA_WI@Z$0
__ehfuncinfo$?GetValue_String@CDataBaseAide@@QAEXPBDPA_WI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetValue_String@CDataBaseAide@@QAEXPBDPA_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z$0
__ehfuncinfo$?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z$0
__ehfuncinfo$?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z$0
__ehfuncinfo$?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetValue_DOUBLE@CDataBaseAide@@QAENPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetValue_DOUBLE@CDataBaseAide@@QAENPBD@Z$0
__ehfuncinfo$?GetValue_DOUBLE@CDataBaseAide@@QAENPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetValue_DOUBLE@CDataBaseAide@@QAENPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetValue_FLOAT@CDataBaseAide@@QAEMPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetValue_FLOAT@CDataBaseAide@@QAEMPBD@Z$0
__ehfuncinfo$?GetValue_FLOAT@CDataBaseAide@@QAEMPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetValue_FLOAT@CDataBaseAide@@QAEMPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z$0
__ehfuncinfo$?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z$0
__ehfuncinfo$?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z$0
__ehfuncinfo$?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetValue_LONG@CDataBaseAide@@QAEJPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetValue_LONG@CDataBaseAide@@QAEJPBD@Z$0
__ehfuncinfo$?GetValue_LONG@CDataBaseAide@@QAEJPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetValue_LONG@CDataBaseAide@@QAEJPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetValue_UINT@CDataBaseAide@@QAEIPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetValue_UINT@CDataBaseAide@@QAEIPBD@Z$0
__ehfuncinfo$?GetValue_UINT@CDataBaseAide@@QAEIPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetValue_UINT@CDataBaseAide@@QAEIPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetValue_INT@CDataBaseAide@@QAEHPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetValue_INT@CDataBaseAide@@QAEHPBD@Z$0
__ehfuncinfo$?GetValue_INT@CDataBaseAide@@QAEHPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetValue_INT@CDataBaseAide@@QAEHPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??B_variant_t@@QBE_JXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??B_variant_t@@QBE_JXZ$0
__ehfuncinfo$??B_variant_t@@QBE_JXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??B_variant_t@@QBE_JXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??B_variant_t@@QBEIXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??B_variant_t@@QBEIXZ$0
__ehfuncinfo$??B_variant_t@@QBEIXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??B_variant_t@@QBEIXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??B_variant_t@@QBEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??B_variant_t@@QBEHXZ$0
__ehfuncinfo$??B_variant_t@@QBEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??B_variant_t@@QBEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??B_variant_t@@QBEKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??B_variant_t@@QBEKXZ$0
__ehfuncinfo$??B_variant_t@@QBEKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??B_variant_t@@QBEKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??B_variant_t@@QBEGXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??B_variant_t@@QBEGXZ$0
__ehfuncinfo$??B_variant_t@@QBEGXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??B_variant_t@@QBEGXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??B_variant_t@@QBEEXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??B_variant_t@@QBEEXZ$0
__ehfuncinfo$??B_variant_t@@QBEEXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??B_variant_t@@QBEEXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??B_variant_t@@QBENXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??B_variant_t@@QBENXZ$0
__ehfuncinfo$??B_variant_t@@QBENXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??B_variant_t@@QBENXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??B_variant_t@@QBEMXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??B_variant_t@@QBEMXZ$0
__ehfuncinfo$??B_variant_t@@QBEMXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??B_variant_t@@QBEMXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??B_variant_t@@QBEJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??B_variant_t@@QBEJXZ$0
__ehfuncinfo$??B_variant_t@@QBEJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??B_variant_t@@QBEJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ$0
__ehfuncinfo$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$1
__ehfuncinfo$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
tv66 = -28						; size = 4
tv86 = -24						; size = 4
__Ptrdest$ = -20					; size = 4
__Ptrnext$1 = -16					; size = 4
__Count$ = -12						; size = 4
tv83 = -8						; size = 4
tv89 = -1						; size = 1
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 664  : 	{	// convert C string to _Elem sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH

; 665  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  00006	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR tv83[ebp], eax
  0000c	8b 4d f8	 mov	 ecx, DWORD PTR tv83[ebp]
  0000f	83 c1 01	 add	 ecx, 1
  00012	89 4d e8	 mov	 DWORD PTR tv86[ebp], ecx
$LL7@Maklocstr:
  00015	8b 55 f8	 mov	 edx, DWORD PTR tv83[ebp]
  00018	8a 02		 mov	 al, BYTE PTR [edx]
  0001a	88 45 ff	 mov	 BYTE PTR tv89[ebp], al
  0001d	83 45 f8 01	 add	 DWORD PTR tv83[ebp], 1
  00021	80 7d ff 00	 cmp	 BYTE PTR tv89[ebp], 0
  00025	75 ee		 jne	 SHORT $LL7@Maklocstr
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv83[ebp]
  0002a	2b 4d e8	 sub	 ecx, DWORD PTR tv86[ebp]
  0002d	89 4d e4	 mov	 DWORD PTR tv66[ebp], ecx
  00030	8b 55 e4	 mov	 edx, DWORD PTR tv66[ebp]
  00033	83 c2 01	 add	 edx, 1
  00036	89 55 f4	 mov	 DWORD PTR __Count$[ebp], edx

; 666  : 
; 667  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  00039	68 9c 02 00 00	 push	 668			; 0000029cH
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	6a 02		 push	 2
  00045	6a 01		 push	 1
  00047	8b 45 f4	 mov	 eax, DWORD PTR __Count$[ebp]
  0004a	50		 push	 eax
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00051	83 c4 14	 add	 esp, 20			; 00000014H
  00054	89 45 ec	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 668  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 669  : 
; 670  : 	if (!_Ptrdest)

  00057	83 7d ec 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  0005b	75 05		 jne	 SHORT $LN5@Maklocstr

; 671  : 		_Xbad_alloc();

  0005d	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 672  : 
; 673  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00062	8b 4d ec	 mov	 ecx, DWORD PTR __Ptrdest$[ebp]
  00065	89 4d f0	 mov	 DWORD PTR __Ptrnext$1[ebp], ecx
  00068	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  0006a	8b 55 f4	 mov	 edx, DWORD PTR __Count$[ebp]
  0006d	83 ea 01	 sub	 edx, 1
  00070	89 55 f4	 mov	 DWORD PTR __Count$[ebp], edx
  00073	8b 45 f0	 mov	 eax, DWORD PTR __Ptrnext$1[ebp]
  00076	83 c0 01	 add	 eax, 1
  00079	89 45 f0	 mov	 DWORD PTR __Ptrnext$1[ebp], eax
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0007f	83 c1 01	 add	 ecx, 1
  00082	89 4d 08	 mov	 DWORD PTR __Ptr$[ebp], ecx
$LN4@Maklocstr:
  00085	83 7d f4 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00089	76 0c		 jbe	 SHORT $LN3@Maklocstr

; 674  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  0008b	8b 55 f0	 mov	 edx, DWORD PTR __Ptrnext$1[ebp]
  0008e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00091	8a 08		 mov	 cl, BYTE PTR [eax]
  00093	88 0a		 mov	 BYTE PTR [edx], cl
  00095	eb d3		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 675  : 
; 676  : 	return (_Ptrdest);

  00097	8b 45 ec	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN6@Maklocstr:

; 677  : 	}

  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h
;	COMDAT ??$AtlConvAllocMemory@D@ATL@@YAXPAPADHPADH@Z
_TEXT	SEGMENT
_ppReallocBuf$1 = -28					; size = 4
___atl_condVal$2 = -24					; size = 4
tv129 = -20						; size = 4
___atl_condVal$3 = -16					; size = 4
tv81 = -12						; size = 4
___atl_condVal$4 = -8					; size = 4
tv65 = -4						; size = 4
_ppBuff$ = 8						; size = 4
_nLength$ = 12						; size = 4
_pszFixedBuffer$ = 16					; size = 4
_nFixedBufferLength$ = 20				; size = 4
??$AtlConvAllocMemory@D@ATL@@YAXPAPADHPADH@Z PROC	; ATL::AtlConvAllocMemory<char>, COMDAT

; 112  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
$LN4@AtlConvAll:

; 113  : 	ATLENSURE_THROW(ppBuff != NULL, E_INVALIDARG);

  00006	83 7d 08 00	 cmp	 DWORD PTR _ppBuff$[ebp], 0
  0000a	74 09		 je	 SHORT $LN32@AtlConvAll
  0000c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  00013	eb 07		 jmp	 SHORT $LN33@AtlConvAll
$LN32@AtlConvAll:
  00015	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN33@AtlConvAll:
  0001c	8b 45 fc	 mov	 eax, DWORD PTR tv65[ebp]
  0001f	89 45 f8	 mov	 DWORD PTR ___atl_condVal$4[ebp], eax
$LN7@AtlConvAll:
  00022	83 7d f8 00	 cmp	 DWORD PTR ___atl_condVal$4[ebp], 0
  00026	75 24		 jne	 SHORT $LN5@AtlConvAll
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00032	6a 00		 push	 0
  00034	6a 71		 push	 113			; 00000071H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@PNEKCFJL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0003b	6a 02		 push	 2
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00043	83 c4 18	 add	 esp, 24			; 00000018H
  00046	83 f8 01	 cmp	 eax, 1
  00049	75 01		 jne	 SHORT $LN5@AtlConvAll
  0004b	cc		 int	 3
$LN5@AtlConvAll:
  0004c	33 d2		 xor	 edx, edx
  0004e	75 d2		 jne	 SHORT $LN7@AtlConvAll
  00050	83 7d f8 00	 cmp	 DWORD PTR ___atl_condVal$4[ebp], 0
  00054	75 0a		 jne	 SHORT $LN2@AtlConvAll
  00056	68 57 00 07 80	 push	 -2147024809		; 80070057H
  0005b	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@AtlConvAll:
  00060	33 c0		 xor	 eax, eax
  00062	75 a2		 jne	 SHORT $LN4@AtlConvAll
$LN10@AtlConvAll:

; 114  : 	ATLENSURE_THROW(nLength >= 0, E_INVALIDARG);

  00064	83 7d 0c 00	 cmp	 DWORD PTR _nLength$[ebp], 0
  00068	7c 09		 jl	 SHORT $LN35@AtlConvAll
  0006a	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv81[ebp], 1
  00071	eb 07		 jmp	 SHORT $LN36@AtlConvAll
$LN35@AtlConvAll:
  00073	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN36@AtlConvAll:
  0007a	8b 4d f4	 mov	 ecx, DWORD PTR tv81[ebp]
  0007d	89 4d f0	 mov	 DWORD PTR ___atl_condVal$3[ebp], ecx
$LN13@AtlConvAll:
  00080	83 7d f0 00	 cmp	 DWORD PTR ___atl_condVal$3[ebp], 0
  00084	75 24		 jne	 SHORT $LN11@AtlConvAll
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00090	6a 00		 push	 0
  00092	6a 72		 push	 114			; 00000072H
  00094	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@PNEKCFJL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00099	6a 02		 push	 2
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  000a1	83 c4 18	 add	 esp, 24			; 00000018H
  000a4	83 f8 01	 cmp	 eax, 1
  000a7	75 01		 jne	 SHORT $LN11@AtlConvAll
  000a9	cc		 int	 3
$LN11@AtlConvAll:
  000aa	33 c0		 xor	 eax, eax
  000ac	75 d2		 jne	 SHORT $LN13@AtlConvAll
  000ae	83 7d f0 00	 cmp	 DWORD PTR ___atl_condVal$3[ebp], 0
  000b2	75 0a		 jne	 SHORT $LN8@AtlConvAll
  000b4	68 57 00 07 80	 push	 -2147024809		; 80070057H
  000b9	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN8@AtlConvAll:
  000be	33 c9		 xor	 ecx, ecx
  000c0	75 a2		 jne	 SHORT $LN10@AtlConvAll
$LN16@AtlConvAll:

; 115  : 	ATLENSURE_THROW(pszFixedBuffer != NULL, E_INVALIDARG);

  000c2	83 7d 10 00	 cmp	 DWORD PTR _pszFixedBuffer$[ebp], 0
  000c6	74 09		 je	 SHORT $LN38@AtlConvAll
  000c8	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv129[ebp], 1
  000cf	eb 07		 jmp	 SHORT $LN39@AtlConvAll
$LN38@AtlConvAll:
  000d1	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN39@AtlConvAll:
  000d8	8b 55 ec	 mov	 edx, DWORD PTR tv129[ebp]
  000db	89 55 e8	 mov	 DWORD PTR ___atl_condVal$2[ebp], edx
$LN19@AtlConvAll:
  000de	83 7d e8 00	 cmp	 DWORD PTR ___atl_condVal$2[ebp], 0
  000e2	75 24		 jne	 SHORT $LN17@AtlConvAll
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000ee	6a 00		 push	 0
  000f0	6a 73		 push	 115			; 00000073H
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@PNEKCFJL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  000f7	6a 02		 push	 2
  000f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  000ff	83 c4 18	 add	 esp, 24			; 00000018H
  00102	83 f8 01	 cmp	 eax, 1
  00105	75 01		 jne	 SHORT $LN17@AtlConvAll
  00107	cc		 int	 3
$LN17@AtlConvAll:
  00108	33 c9		 xor	 ecx, ecx
  0010a	75 d2		 jne	 SHORT $LN19@AtlConvAll
  0010c	83 7d e8 00	 cmp	 DWORD PTR ___atl_condVal$2[ebp], 0
  00110	75 0a		 jne	 SHORT $LN14@AtlConvAll
  00112	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00117	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN14@AtlConvAll:
  0011c	33 d2		 xor	 edx, edx
  0011e	75 a2		 jne	 SHORT $LN16@AtlConvAll

; 116  : 
; 117  : 	//if buffer malloced, try to realloc.
; 118  : 	if (*ppBuff != pszFixedBuffer)

  00120	8b 45 08	 mov	 eax, DWORD PTR _ppBuff$[ebp]
  00123	8b 08		 mov	 ecx, DWORD PTR [eax]
  00125	3b 4d 10	 cmp	 ecx, DWORD PTR _pszFixedBuffer$[ebp]
  00128	74 53		 je	 SHORT $LN23@AtlConvAll

; 119  : 	{
; 120  : 		if( nLength > nFixedBufferLength )

  0012a	8b 55 0c	 mov	 edx, DWORD PTR _nLength$[ebp]
  0012d	3b 55 14	 cmp	 edx, DWORD PTR _nFixedBufferLength$[ebp]
  00130	7e 32		 jle	 SHORT $LN25@AtlConvAll

; 121  : 		{
; 122  : 			_CharType* ppReallocBuf = static_cast< _CharType* >( _recalloc(*ppBuff, nLength,sizeof( _CharType ) ) );

  00132	6a 01		 push	 1
  00134	8b 45 0c	 mov	 eax, DWORD PTR _nLength$[ebp]
  00137	50		 push	 eax
  00138	8b 4d 08	 mov	 ecx, DWORD PTR _ppBuff$[ebp]
  0013b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0013d	52		 push	 edx
  0013e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___recalloc
  00144	83 c4 0c	 add	 esp, 12			; 0000000cH
  00147	89 45 e4	 mov	 DWORD PTR _ppReallocBuf$1[ebp], eax

; 123  : 			if (ppReallocBuf == NULL)

  0014a	83 7d e4 00	 cmp	 DWORD PTR _ppReallocBuf$1[ebp], 0
  0014e	75 0a		 jne	 SHORT $LN27@AtlConvAll

; 124  : 			{
; 125  : 				AtlThrow( E_OUTOFMEMORY );

  00150	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00155	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN27@AtlConvAll:

; 126  : 			}
; 127  : 			*ppBuff = ppReallocBuf;

  0015a	8b 45 08	 mov	 eax, DWORD PTR _ppBuff$[ebp]
  0015d	8b 4d e4	 mov	 ecx, DWORD PTR _ppReallocBuf$1[ebp]
  00160	89 08		 mov	 DWORD PTR [eax], ecx

; 128  : 		} else

  00162	eb 17		 jmp	 SHORT $LN26@AtlConvAll
$LN25@AtlConvAll:

; 129  : 		{
; 130  : 			free(*ppBuff);

  00164	8b 55 08	 mov	 edx, DWORD PTR _ppBuff$[ebp]
  00167	8b 02		 mov	 eax, DWORD PTR [edx]
  00169	50		 push	 eax
  0016a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00170	83 c4 04	 add	 esp, 4

; 131  : 			*ppBuff=pszFixedBuffer;

  00173	8b 4d 08	 mov	 ecx, DWORD PTR _ppBuff$[ebp]
  00176	8b 55 10	 mov	 edx, DWORD PTR _pszFixedBuffer$[ebp]
  00179	89 11		 mov	 DWORD PTR [ecx], edx
$LN26@AtlConvAll:

; 132  : 		}
; 133  : 
; 134  : 	} else //Buffer is not currently malloced.

  0017b	eb 26		 jmp	 SHORT $LN24@AtlConvAll
$LN23@AtlConvAll:

; 135  : 	{
; 136  : 		if( nLength > nFixedBufferLength )

  0017d	8b 45 0c	 mov	 eax, DWORD PTR _nLength$[ebp]
  00180	3b 45 14	 cmp	 eax, DWORD PTR _nFixedBufferLength$[ebp]
  00183	7e 16		 jle	 SHORT $LN28@AtlConvAll

; 137  : 		{
; 138  : 			*ppBuff = static_cast< _CharType* >( calloc(nLength,sizeof( _CharType ) ) );

  00185	6a 01		 push	 1
  00187	8b 4d 0c	 mov	 ecx, DWORD PTR _nLength$[ebp]
  0018a	51		 push	 ecx
  0018b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__calloc
  00191	83 c4 08	 add	 esp, 8
  00194	8b 55 08	 mov	 edx, DWORD PTR _ppBuff$[ebp]
  00197	89 02		 mov	 DWORD PTR [edx], eax

; 139  : 		} else

  00199	eb 08		 jmp	 SHORT $LN24@AtlConvAll
$LN28@AtlConvAll:

; 140  : 		{
; 141  : 			*ppBuff=pszFixedBuffer;

  0019b	8b 45 08	 mov	 eax, DWORD PTR _ppBuff$[ebp]
  0019e	8b 4d 10	 mov	 ecx, DWORD PTR _pszFixedBuffer$[ebp]
  001a1	89 08		 mov	 DWORD PTR [eax], ecx
$LN24@AtlConvAll:

; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	if (*ppBuff == NULL)

  001a3	8b 55 08	 mov	 edx, DWORD PTR _ppBuff$[ebp]
  001a6	83 3a 00	 cmp	 DWORD PTR [edx], 0
  001a9	75 0a		 jne	 SHORT $LN31@AtlConvAll

; 146  : 	{
; 147  : 		AtlThrow( E_OUTOFMEMORY );

  001ab	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  001b0	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN31@AtlConvAll:

; 148  : 	}
; 149  : }

  001b5	8b e5		 mov	 esp, ebp
  001b7	5d		 pop	 ebp
  001b8	c3		 ret	 0
??$AtlConvAllocMemory@D@ATL@@YAXPAPADHPADH@Z ENDP	; ATL::AtlConvAllocMemory<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h
;	COMDAT ??$AtlConvFreeMemory@D@ATL@@YAXPAD0H@Z
_TEXT	SEGMENT
_pBuff$ = 8						; size = 4
_pszFixedBuffer$ = 12					; size = 4
_nFixedBufferLength$ = 16				; size = 4
??$AtlConvFreeMemory@D@ATL@@YAXPAD0H@Z PROC		; ATL::AtlConvFreeMemory<char>, COMDAT

; 156  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 157  : 	(nFixedBufferLength);
; 158  : 	if( pBuff != pszFixedBuffer )

  00003	8b 45 08	 mov	 eax, DWORD PTR _pBuff$[ebp]
  00006	3b 45 0c	 cmp	 eax, DWORD PTR _pszFixedBuffer$[ebp]
  00009	74 0f		 je	 SHORT $LN2@AtlConvFre

; 159  : 	{
; 160  : 		free( pBuff );

  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _pBuff$[ebp]
  0000e	51		 push	 ecx
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00015	83 c4 04	 add	 esp, 4

; 161  : 	}
; 162  : #ifdef _DEBUG
; 163  : 	else

  00018	eb 15		 jmp	 SHORT $LN1@AtlConvFre
$LN2@AtlConvFre:

; 164  : 	{
; 165  : 		memset(pszFixedBuffer,ATLCONV_DEADLAND_FILL,nFixedBufferLength*sizeof(_CharType));

  0001a	8b 55 10	 mov	 edx, DWORD PTR _nFixedBufferLength$[ebp]
  0001d	52		 push	 edx
  0001e	68 fe 00 00 00	 push	 254			; 000000feH
  00023	8b 45 0c	 mov	 eax, DWORD PTR _pszFixedBuffer$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@AtlConvFre:

; 166  : 	}
; 167  : #endif
; 168  : }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
??$AtlConvFreeMemory@D@ATL@@YAXPAD0H@Z ENDP		; ATL::AtlConvFreeMemory<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h
;	COMDAT ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z
_TEXT	SEGMENT
tv68 = -40						; size = 4
tv159 = -36						; size = 4
tv150 = -32						; size = 4
tv88 = -28						; size = 4
_bFailed$ = -24						; size = 4
_nLengthW$ = -20					; size = 4
_nLengthA$ = -16					; size = 4
tv158 = -12						; size = 4
_this$ = -8						; size = 4
tv163 = -2						; size = 2
_psz$ = 8						; size = 4
_nConvertCodePage$ = 12					; size = 4
?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z PROC		; ATL::CW2AEX<128>::Init, COMDAT
; _this$ = ecx

; 439  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 440  : 		if (psz == NULL)

  00009	83 7d 08 00	 cmp	 DWORD PTR _psz$[ebp], 0
  0000d	75 0e		 jne	 SHORT $LN2@Init

; 441  : 		{
; 442  : 			m_psz = NULL;

  0000f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 443  : 			return;

  00018	e9 4a 01 00 00	 jmp	 $LN6@Init
$LN2@Init:

; 444  : 		}
; 445  : 		int nLengthW = static_cast<int>(wcslen( psz ))+1;

  0001d	8b 4d 08	 mov	 ecx, DWORD PTR _psz$[ebp]
  00020	89 4d f4	 mov	 DWORD PTR tv158[ebp], ecx
  00023	8b 55 f4	 mov	 edx, DWORD PTR tv158[ebp]
  00026	83 c2 02	 add	 edx, 2
  00029	89 55 dc	 mov	 DWORD PTR tv159[ebp], edx
$LL91@Init:
  0002c	8b 45 f4	 mov	 eax, DWORD PTR tv158[ebp]
  0002f	66 8b 08	 mov	 cx, WORD PTR [eax]
  00032	66 89 4d fe	 mov	 WORD PTR tv163[ebp], cx
  00036	83 45 f4 02	 add	 DWORD PTR tv158[ebp], 2
  0003a	66 83 7d fe 00	 cmp	 WORD PTR tv163[ebp], 0
  0003f	75 eb		 jne	 SHORT $LL91@Init
  00041	8b 55 f4	 mov	 edx, DWORD PTR tv158[ebp]
  00044	2b 55 dc	 sub	 edx, DWORD PTR tv159[ebp]
  00047	d1 fa		 sar	 edx, 1
  00049	89 55 d8	 mov	 DWORD PTR tv68[ebp], edx
  0004c	8b 45 d8	 mov	 eax, DWORD PTR tv68[ebp]
  0004f	83 c0 01	 add	 eax, 1
  00052	89 45 ec	 mov	 DWORD PTR _nLengthW$[ebp], eax

; 446  : 		int nLengthA = nLengthW*4;

  00055	8b 4d ec	 mov	 ecx, DWORD PTR _nLengthW$[ebp]
  00058	c1 e1 02	 shl	 ecx, 2
  0005b	89 4d f0	 mov	 DWORD PTR _nLengthA$[ebp], ecx

; 447  : 
; 448  : 		AtlConvAllocMemory(&m_psz,nLengthA,m_szBuffer,t_nBufferLength);

  0005e	68 80 00 00 00	 push	 128			; 00000080H
  00063	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00066	83 c2 04	 add	 edx, 4
  00069	52		 push	 edx
  0006a	8b 45 f0	 mov	 eax, DWORD PTR _nLengthA$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	51		 push	 ecx
  00072	e8 00 00 00 00	 call	 ??$AtlConvAllocMemory@D@ATL@@YAXPAPADHPADH@Z ; ATL::AtlConvAllocMemory<char>
  00077	83 c4 10	 add	 esp, 16			; 00000010H

; 449  : 
; 450  : 		BOOL bFailed=(0 == ::WideCharToMultiByte( nConvertCodePage, 0, psz, nLengthW, m_psz, nLengthA, NULL, NULL ));

  0007a	6a 00		 push	 0
  0007c	6a 00		 push	 0
  0007e	8b 55 f0	 mov	 edx, DWORD PTR _nLengthA$[ebp]
  00081	52		 push	 edx
  00082	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 08		 mov	 ecx, DWORD PTR [eax]
  00087	51		 push	 ecx
  00088	8b 55 ec	 mov	 edx, DWORD PTR _nLengthW$[ebp]
  0008b	52		 push	 edx
  0008c	8b 45 08	 mov	 eax, DWORD PTR _psz$[ebp]
  0008f	50		 push	 eax
  00090	6a 00		 push	 0
  00092	8b 4d 0c	 mov	 ecx, DWORD PTR _nConvertCodePage$[ebp]
  00095	51		 push	 ecx
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  0009c	85 c0		 test	 eax, eax
  0009e	75 09		 jne	 SHORT $LN7@Init
  000a0	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv88[ebp], 1
  000a7	eb 07		 jmp	 SHORT $LN8@Init
$LN7@Init:
  000a9	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN8@Init:
  000b0	8b 55 e4	 mov	 edx, DWORD PTR tv88[ebp]
  000b3	89 55 e8	 mov	 DWORD PTR _bFailed$[ebp], edx

; 451  : 		if (bFailed)

  000b6	83 7d e8 00	 cmp	 DWORD PTR _bFailed$[ebp], 0
  000ba	0f 84 82 00 00
	00		 je	 $LN3@Init

; 452  : 		{
; 453  : 			if (GetLastError()==ERROR_INSUFFICIENT_BUFFER)

  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  000c6	83 f8 7a	 cmp	 eax, 122		; 0000007aH
  000c9	75 77		 jne	 SHORT $LN3@Init

; 454  : 			{
; 455  : 				nLengthA = ::WideCharToMultiByte( nConvertCodePage, 0, psz, nLengthW, NULL, 0, NULL, NULL );

  000cb	6a 00		 push	 0
  000cd	6a 00		 push	 0
  000cf	6a 00		 push	 0
  000d1	6a 00		 push	 0
  000d3	8b 45 ec	 mov	 eax, DWORD PTR _nLengthW$[ebp]
  000d6	50		 push	 eax
  000d7	8b 4d 08	 mov	 ecx, DWORD PTR _psz$[ebp]
  000da	51		 push	 ecx
  000db	6a 00		 push	 0
  000dd	8b 55 0c	 mov	 edx, DWORD PTR _nConvertCodePage$[ebp]
  000e0	52		 push	 edx
  000e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  000e7	89 45 f0	 mov	 DWORD PTR _nLengthA$[ebp], eax

; 456  : ATLPREFAST_SUPPRESS(6102)
; 457  :                 AtlConvAllocMemory(&m_psz,nLengthA,m_szBuffer,t_nBufferLength);

  000ea	68 80 00 00 00	 push	 128			; 00000080H
  000ef	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f2	83 c0 04	 add	 eax, 4
  000f5	50		 push	 eax
  000f6	8b 4d f0	 mov	 ecx, DWORD PTR _nLengthA$[ebp]
  000f9	51		 push	 ecx
  000fa	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000fd	52		 push	 edx
  000fe	e8 00 00 00 00	 call	 ??$AtlConvAllocMemory@D@ATL@@YAXPAPADHPADH@Z ; ATL::AtlConvAllocMemory<char>
  00103	83 c4 10	 add	 esp, 16			; 00000010H

; 458  : ATLPREFAST_UNSUPPRESS()
; 459  : 				bFailed=(0 == ::WideCharToMultiByte( nConvertCodePage, 0, psz, nLengthW, m_psz, nLengthA, NULL, NULL ));

  00106	6a 00		 push	 0
  00108	6a 00		 push	 0
  0010a	8b 45 f0	 mov	 eax, DWORD PTR _nLengthA$[ebp]
  0010d	50		 push	 eax
  0010e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00111	8b 11		 mov	 edx, DWORD PTR [ecx]
  00113	52		 push	 edx
  00114	8b 45 ec	 mov	 eax, DWORD PTR _nLengthW$[ebp]
  00117	50		 push	 eax
  00118	8b 4d 08	 mov	 ecx, DWORD PTR _psz$[ebp]
  0011b	51		 push	 ecx
  0011c	6a 00		 push	 0
  0011e	8b 55 0c	 mov	 edx, DWORD PTR _nConvertCodePage$[ebp]
  00121	52		 push	 edx
  00122	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  00128	85 c0		 test	 eax, eax
  0012a	75 09		 jne	 SHORT $LN9@Init
  0012c	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR tv150[ebp], 1
  00133	eb 07		 jmp	 SHORT $LN10@Init
$LN9@Init:
  00135	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN10@Init:
  0013c	8b 45 e0	 mov	 eax, DWORD PTR tv150[ebp]
  0013f	89 45 e8	 mov	 DWORD PTR _bFailed$[ebp], eax
$LN3@Init:

; 460  : 			}
; 461  : 		}
; 462  : 		if (bFailed)

  00142	83 7d e8 00	 cmp	 DWORD PTR _bFailed$[ebp], 0
  00146	74 1f		 je	 SHORT $LN6@Init

; 463  : 		{
; 464  : 			AtlConvFreeMemory(m_psz, m_szBuffer, t_nBufferLength);

  00148	68 80 00 00 00	 push	 128			; 00000080H
  0014d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00150	83 c1 04	 add	 ecx, 4
  00153	51		 push	 ecx
  00154	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00157	8b 02		 mov	 eax, DWORD PTR [edx]
  00159	50		 push	 eax
  0015a	e8 00 00 00 00	 call	 ??$AtlConvFreeMemory@D@ATL@@YAXPAD0H@Z ; ATL::AtlConvFreeMemory<char>
  0015f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 465  : 			AtlThrowLastWin32();

  00162	e8 00 00 00 00	 call	 ?AtlThrowLastWin32@ATL@@YGXXZ ; ATL::AtlThrowLastWin32
$LN6@Init:

; 466  : 		}
; 467  : 	}

  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c2 08 00	 ret	 8
?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z ENDP		; ATL::CW2AEX<128>::Init
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h
;	COMDAT ??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ PROC			; ATL::CW2AEX<128>::operator char *, COMDAT
; _this$ = ecx

; 431  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 432  : 		return( m_psz );

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]

; 433  : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ ENDP			; ATL::CW2AEX<128>::operator char *
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h
;	COMDAT ??1?$CW2AEX@$0IA@@ATL@@QAE@XZ
_TEXT	SEGMENT
_pszFixedBuffer$ = -12					; size = 4
_pBuff$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$CW2AEX@$0IA@@ATL@@QAE@XZ PROC			; ATL::CW2AEX<128>::~CW2AEX<128>, COMDAT
; _this$ = ecx

; 426  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 427  : 		AtlConvFreeMemory(m_psz,m_szBuffer,t_nBufferLength);

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 f4	 mov	 DWORD PTR _pszFixedBuffer$[ebp], eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 11		 mov	 edx, DWORD PTR [ecx]
  00017	89 55 f8	 mov	 DWORD PTR _pBuff$[ebp], edx

; 158  : 	if( pBuff != pszFixedBuffer )

  0001a	8b 45 f8	 mov	 eax, DWORD PTR _pBuff$[ebp]
  0001d	3b 45 f4	 cmp	 eax, DWORD PTR _pszFixedBuffer$[ebp]
  00020	74 0f		 je	 SHORT $LN4@CW2AEX

; 159  : 	{
; 160  : 		free( pBuff );

  00022	8b 4d f8	 mov	 ecx, DWORD PTR _pBuff$[ebp]
  00025	51		 push	 ecx
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0002c	83 c4 04	 add	 esp, 4

; 161  : 	}
; 162  : #ifdef _DEBUG
; 163  : 	else

  0002f	eb 16		 jmp	 SHORT $LN1@CW2AEX
$LN4@CW2AEX:

; 164  : 	{
; 165  : 		memset(pszFixedBuffer,ATLCONV_DEADLAND_FILL,nFixedBufferLength*sizeof(_CharType));

  00031	68 80 00 00 00	 push	 128			; 00000080H
  00036	68 fe 00 00 00	 push	 254			; 000000feH
  0003b	8b 55 f4	 mov	 edx, DWORD PTR _pszFixedBuffer$[ebp]
  0003e	52		 push	 edx
  0003f	e8 00 00 00 00	 call	 _memset
  00044	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@CW2AEX:

; 428  : 	}

  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??1?$CW2AEX@$0IA@@ATL@@QAE@XZ ENDP			; ATL::CW2AEX<128>::~CW2AEX<128>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h
;	COMDAT ??0?$CW2AEX@$0IA@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_psz$ = 8						; size = 4
??0?$CW2AEX@$0IA@@ATL@@QAE@PB_W@Z PROC			; ATL::CW2AEX<128>::CW2AEX<128>, COMDAT
; _this$ = ecx

; 415  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 414  : 		m_psz( m_szBuffer )

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 c0 04	 add	 eax, 4
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	89 01		 mov	 DWORD PTR [ecx], eax

; 416  : 		Init( psz, _AtlGetConversionACP() );

  00012	6a 03		 push	 3
  00014	8b 55 08	 mov	 edx, DWORD PTR _psz$[ebp]
  00017	52		 push	 edx
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z ; ATL::CW2AEX<128>::Init

; 417  : 	}

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??0?$CW2AEX@$0IA@@ATL@@QAE@PB_W@Z ENDP			; ATL::CW2AEX<128>::CW2AEX<128>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_ECDataBaseAide@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECDataBaseAide@@UAEPAXI@Z PROC			; CDataBaseAide::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECDataBaseAide@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00029	83 e0 02	 and	 eax, 2
  0002c	74 44		 je	 SHORT $LN2@vector
  0002e	68 00 00 00 00	 push	 OFFSET ??1CDataBaseAide@@UAE@XZ ; CDataBaseAide::~CDataBaseAide
  00033	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00039	52		 push	 edx
  0003a	6a 08		 push	 8
  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00045	8b 4d 08	 mov	 ecx, DWORD PTR ___flags$[ebp]
  00048	83 e1 01	 and	 ecx, 1
  0004b	74 1d		 je	 SHORT $LN3@vector
  0004d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00050	8b 42 fc	 mov	 eax, DWORD PTR [edx-4]
  00053	8d 0c c5 04 00
	00 00		 lea	 ecx, DWORD PTR [eax*8+4]
  0005a	51		 push	 ecx
  0005b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	83 ea 04	 sub	 edx, 4
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00067	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	83 e8 04	 sub	 eax, 4
  00070	eb 21		 jmp	 SHORT $LN5@vector
$LN2@vector:
  00072	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ??1CDataBaseAide@@UAE@XZ ; CDataBaseAide::~CDataBaseAide
  0007a	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0007d	83 e0 01	 and	 eax, 1
  00080	74 0e		 je	 SHORT $LN4@vector
  00082	6a 08		 push	 8
  00084	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	51		 push	 ecx
  00088	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008d	83 c4 08	 add	 esp, 8
$LN4@vector:
  00090	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00093	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00096	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009d	59		 pop	 ecx
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECDataBaseAide@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECDataBaseAide@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECDataBaseAide@@UAEPAXI@Z ENDP			; CDataBaseAide::`vector deleting destructor'
; Function compile flags: /Odtp
;	COMDAT ??_GCDataBaseAide@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDataBaseAide@@UAEPAXI@Z PROC			; CDataBaseAide::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDataBaseAide@@UAE@XZ ; CDataBaseAide::~CDataBaseAide
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0e		 je	 SHORT $LN2@scalar
  00017	6a 08		 push	 8
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCDataBaseAide@@UAEPAXI@Z ENDP			; CDataBaseAide::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_FCDataBaseAide@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??_FCDataBaseAide@@QAEXXZ PROC				; CDataBaseAide::`default constructor closure', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	6a 00		 push	 0
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z ; CDataBaseAide::CDataBaseAide
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??_FCDataBaseAide@@QAEXXZ ENDP				; CDataBaseAide::`default constructor closure'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??4CDataBaseAide@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CDataBaseAide@@QAEAAV0@ABV0@@Z PROC			; CDataBaseAide::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??4CDataBaseAide@@QAEAAV0@ABV0@@Z ENDP			; CDataBaseAide::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0CDataBaseAide@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CDataBaseAide@@QAE@ABV0@@Z PROC			; CDataBaseAide::CDataBaseAide, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDataBaseAide@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00016	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00019	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
??0CDataBaseAide@@QAE@ABV0@@Z ENDP			; CDataBaseAide::CDataBaseAide
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszSPName$ = 8						; size = 4
_bRecordset$ = 12					; size = 1
?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z PROC		; CDataBaseAide::ExecuteProcess, COMDAT
; _this$ = ecx

; 432  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 433  :     ASSERT(m_pIDataBase != NULL);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0000e	75 14		 jne	 SHORT $LN3@ExecutePro
  00010	68 b1 01 00 00	 push	 433			; 000001b1H
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0001f	85 c0		 test	 eax, eax
  00021	74 01		 je	 SHORT $LN3@ExecutePro
  00023	cc		 int	 3
$LN3@ExecutePro:

; 434  :     m_pIDataBase->ExecuteProcess(pszSPName, bRecordset);

  00024	0f b6 55 0c	 movzx	 edx, BYTE PTR _bRecordset$[ebp]
  00028	52		 push	 edx
  00029	8b 45 08	 mov	 eax, DWORD PTR _pszSPName$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 12		 mov	 edx, DWORD PTR [edx]
  00038	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003b	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  0003e	ff d0		 call	 eax

; 435  :     return m_pIDataBase->GetReturnValue();

  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 12		 mov	 edx, DWORD PTR [edx]
  0004b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004e	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00051	ff d0		 call	 eax

; 436  : }

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
?ExecuteProcess@CDataBaseAide@@QAEJPBD_N@Z ENDP		; CDataBaseAide::ExecuteProcess
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetReturnValue@CDataBaseAide@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReturnValue@CDataBaseAide@@QAEJXZ PROC		; CDataBaseAide::GetReturnValue, COMDAT
; _this$ = ecx

; 425  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 426  :     ASSERT(m_pIDataBase != NULL);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0000e	75 14		 jne	 SHORT $LN3@GetReturnV
  00010	68 aa 01 00 00	 push	 426			; 000001aaH
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0001f	85 c0		 test	 eax, eax
  00021	74 01		 je	 SHORT $LN3@GetReturnV
  00023	cc		 int	 3
$LN3@GetReturnV:

; 427  :     return m_pIDataBase->GetReturnValue();

  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00032	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00035	ff d0		 call	 eax

; 428  : }

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?GetReturnValue@CDataBaseAide@@QAEJXZ ENDP		; CDataBaseAide::GetReturnValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?AddParameterOutput@CDataBaseAide@@QAEXPBDPA_WIW4ParameterDirectionEnum@ADOCG@@@Z
_TEXT	SEGMENT
$T2 = -36						; size = 16
tv89 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_pszString$ = 12					; size = 4
_uSize$ = 16						; size = 4
_ParameterDirection$ = 20				; size = 4
?AddParameterOutput@CDataBaseAide@@QAEXPBDPA_WIW4ParameterDirectionEnum@ADOCG@@@Z PROC ; CDataBaseAide::AddParameterOutput, COMDAT
; _this$ = ecx

; 418  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddParameterOutput@CDataBaseAide@@QAEXPBDPA_WIW4ParameterDirectionEnum@ADOCG@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 419  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@AddParamet
  00031	68 a3 01 00 00	 push	 419			; 000001a3H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@AddParamet
  00044	cc		 int	 3
$LN3@AddParamet:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1280 :     V_VT(this) = VT_BSTR;

  00045	ba 08 00 00 00	 mov	 edx, 8
  0004a	66 89 55 dc	 mov	 WORD PTR $T2[ebp], dx

; 1281 : 
; 1282 :     V_BSTR(this) = ::SysAllocString(pSrc);

  0004e	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  00051	50		 push	 eax
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysAllocString@4
  00058	89 45 e4	 mov	 DWORD PTR $T2[ebp+8], eax

; 1283 : 
; 1284 :     if (V_BSTR(this) == NULL && pSrc != NULL) {

  0005b	83 7d e4 00	 cmp	 DWORD PTR $T2[ebp+8], 0
  0005f	75 10		 jne	 SHORT $LN10@AddParamet
  00061	83 7d 0c 00	 cmp	 DWORD PTR _pszString$[ebp], 0
  00065	74 0a		 je	 SHORT $LN10@AddParamet

; 1285 :             _com_issue_error(E_OUTOFMEMORY);

  00067	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  0006c	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$LN10@AddParamet:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 420  :     m_pIDataBase->AddParameter(pszItem, adVarChar, ParameterDirection, uSize, CDBVarValue(pszString));

  00071	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00074	89 4d ec	 mov	 DWORD PTR tv89[ebp], ecx
  00077	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0007e	8b 55 ec	 mov	 edx, DWORD PTR tv89[ebp]
  00081	52		 push	 edx
  00082	8b 45 10	 mov	 eax, DWORD PTR _uSize$[ebp]
  00085	50		 push	 eax
  00086	8b 4d 14	 mov	 ecx, DWORD PTR _ParameterDirection$[ebp]
  00089	51		 push	 ecx
  0008a	68 c8 00 00 00	 push	 200			; 000000c8H
  0008f	8b 55 08	 mov	 edx, DWORD PTR _pszItem$[ebp]
  00092	52		 push	 edx
  00093	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00096	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00099	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0009c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0009e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  000a1	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  000a4	ff d2		 call	 edx
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  000ad	8d 45 dc	 lea	 eax, DWORD PTR $T2[ebp]
  000b0	50		 push	 eax
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
$LN11@AddParamet:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 422  : }

  000b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c1	59		 pop	 ecx
  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddParameterOutput@CDataBaseAide@@QAEXPBDPA_WIW4ParameterDirectionEnum@ADOCG@@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?AddParameterOutput@CDataBaseAide@@QAEXPBDPA_WIW4ParameterDirectionEnum@ADOCG@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddParameterOutput@CDataBaseAide@@QAEXPBDPA_WIW4ParameterDirectionEnum@ADOCG@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddParameterOutput@CDataBaseAide@@QAEXPBDPA_WIW4ParameterDirectionEnum@ADOCG@@@Z ENDP ; CDataBaseAide::AddParameterOutput
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z
_TEXT	SEGMENT
$T2 = -36						; size = 16
tv89 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_pszString$ = 12					; size = 4
_uSize$ = 16						; size = 4
_ParameterDirection$ = 20				; size = 4
?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z PROC ; CDataBaseAide::AddParameterOutput, COMDAT
; _this$ = ecx

; 410  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 411  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@AddParamet
  00031	68 9b 01 00 00	 push	 411			; 0000019bH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@AddParamet
  00044	cc		 int	 3
$LN3@AddParamet:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1293 :     V_VT(this) = VT_BSTR;

  00045	ba 08 00 00 00	 mov	 edx, 8
  0004a	66 89 55 dc	 mov	 WORD PTR $T2[ebp], dx

; 1294 :     V_BSTR(this) = _com_util::ConvertStringToBSTR(pSrc);

  0004e	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?ConvertStringToBSTR@_com_util@@YGPA_WPBD@Z ; _com_util::ConvertStringToBSTR
  00057	89 45 e4	 mov	 DWORD PTR $T2[ebp+8], eax
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 412  :     m_pIDataBase->AddParameter(pszItem, adVarChar, ParameterDirection, uSize, CDBVarValue(pszString));

  0005a	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  0005d	89 4d ec	 mov	 DWORD PTR tv89[ebp], ecx
  00060	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00067	8b 55 ec	 mov	 edx, DWORD PTR tv89[ebp]
  0006a	52		 push	 edx
  0006b	8b 45 10	 mov	 eax, DWORD PTR _uSize$[ebp]
  0006e	50		 push	 eax
  0006f	8b 4d 14	 mov	 ecx, DWORD PTR _ParameterDirection$[ebp]
  00072	51		 push	 ecx
  00073	68 c8 00 00 00	 push	 200			; 000000c8H
  00078	8b 55 08	 mov	 edx, DWORD PTR _pszItem$[ebp]
  0007b	52		 push	 edx
  0007c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00082	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00085	8b 01		 mov	 eax, DWORD PTR [ecx]
  00087	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0008a	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0008d	ff d2		 call	 edx
  0008f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  00096	8d 45 dc	 lea	 eax, DWORD PTR $T2[ebp]
  00099	50		 push	 eax
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 414  : }

  000a0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000aa	59		 pop	 ecx
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddParameterOutput@CDataBaseAide@@QAEXPBDPADIW4ParameterDirectionEnum@ADOCG@@@Z ENDP ; CDataBaseAide::AddParameterOutput
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z
_TEXT	SEGMENT
_vtEnrollmentDate$ = -48				; size = 16
_dNow$ = -32						; size = 8
_dblSrc$ = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_SystemTime$ = 12					; size = 4
_ParameterDirection$ = 16				; size = 4
?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z PROC ; CDataBaseAide::AddParameter, COMDAT
; _this$ = ecx

; 398  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 399  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@AddParamet
  00031	68 8f 01 00 00	 push	 399			; 0000018fH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@AddParamet
  00044	cc		 int	 3
$LN3@AddParamet:

; 400  : 
; 401  :     double dNow;
; 402  :     SystemTimeToVariantTime(&SystemTime, &dNow);

  00045	8d 55 e0	 lea	 edx, DWORD PTR _dNow$[ebp]
  00048	52		 push	 edx
  00049	8b 45 0c	 mov	 eax, DWORD PTR _SystemTime$[ebp]
  0004c	50		 push	 eax
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemTimeToVariantTime@8

; 403  :     _variant_t vtEnrollmentDate(dNow, VT_DATE);

  00053	f2 0f 10 45 e0	 movsd	 xmm0, QWORD PTR _dNow$[ebp]
  00058	f2 0f 11 45 e8	 movsd	 QWORD PTR _dblSrc$[ebp], xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1234 :     if ((vtSrc != VT_R8) && (vtSrc != VT_DATE)) {

  0005d	b9 07 00 00 00	 mov	 ecx, 7
  00062	0f b7 d1	 movzx	 edx, cx
  00065	83 fa 05	 cmp	 edx, 5
  00068	74 19		 je	 SHORT $LN9@AddParamet
  0006a	b8 07 00 00 00	 mov	 eax, 7
  0006f	0f b7 c8	 movzx	 ecx, ax
  00072	83 f9 07	 cmp	 ecx, 7
  00075	74 0c		 je	 SHORT $LN9@AddParamet

; 1235 :         _com_issue_error(E_INVALIDARG);

  00077	68 57 00 07 80	 push	 -2147024809		; 80070057H
  0007c	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error

; 1236 :         return;

  00081	eb 35		 jmp	 SHORT $LN8@AddParamet
$LN9@AddParamet:

; 1237 :     }
; 1238 : 
; 1239 :     if (vtSrc == VT_DATE) {

  00083	ba 07 00 00 00	 mov	 edx, 7
  00088	0f b7 c2	 movzx	 eax, dx
  0008b	83 f8 07	 cmp	 eax, 7
  0008e	75 15		 jne	 SHORT $LN10@AddParamet

; 1240 :         V_VT(this) = VT_DATE;

  00090	b9 07 00 00 00	 mov	 ecx, 7
  00095	66 89 4d d0	 mov	 WORD PTR _vtEnrollmentDate$[ebp], cx

; 1241 :         V_DATE(this) = dblSrc;

  00099	f2 0f 10 45 e8	 movsd	 xmm0, QWORD PTR _dblSrc$[ebp]
  0009e	f2 0f 11 45 d8	 movsd	 QWORD PTR _vtEnrollmentDate$[ebp+8], xmm0

; 1242 :     }
; 1243 :     else {

  000a3	eb 13		 jmp	 SHORT $LN11@AddParamet
$LN10@AddParamet:

; 1244 :         V_VT(this) = VT_R8;

  000a5	ba 05 00 00 00	 mov	 edx, 5
  000aa	66 89 55 d0	 mov	 WORD PTR _vtEnrollmentDate$[ebp], dx

; 1245 :         V_R8(this) = dblSrc;

  000ae	f2 0f 10 45 e8	 movsd	 xmm0, QWORD PTR _dblSrc$[ebp]
  000b3	f2 0f 11 45 d8	 movsd	 QWORD PTR _vtEnrollmentDate$[ebp+8], xmm0
$LN11@AddParamet:
$LN8@AddParamet:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 403  :     _variant_t vtEnrollmentDate(dNow, VT_DATE);

  000b8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 404  :     m_pIDataBase->AddParameter(pszItem, adDate, ParameterDirection, -1, vtEnrollmentDate);

  000bf	8d 45 d0	 lea	 eax, DWORD PTR _vtEnrollmentDate$[ebp]
  000c2	50		 push	 eax
  000c3	6a ff		 push	 -1
  000c5	8b 4d 10	 mov	 ecx, DWORD PTR _ParameterDirection$[ebp]
  000c8	51		 push	 ecx
  000c9	6a 07		 push	 7
  000cb	8b 55 08	 mov	 edx, DWORD PTR _pszItem$[ebp]
  000ce	52		 push	 edx
  000cf	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d5	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000d8	8b 01		 mov	 eax, DWORD PTR [ecx]
  000da	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  000dd	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  000e0	ff d2		 call	 edx

; 405  :     return;

  000e2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  000e9	8d 45 d0	 lea	 eax, DWORD PTR _vtEnrollmentDate$[ebp]
  000ec	50		 push	 eax
  000ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
$LN1@AddParamet:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 406  : }

  000f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fd	59		 pop	 ecx
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z$0:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR _vtEnrollmentDate$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddParameter@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@W4ParameterDirectionEnum@ADOCG@@@Z ENDP ; CDataBaseAide::AddParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?AddParameter@CDataBaseAide@@QAEXPBDPB_WW4ParameterDirectionEnum@ADOCG@@@Z
_TEXT	SEGMENT
$T2 = -36						; size = 16
tv93 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_pszString$ = 12					; size = 4
_ParameterDirection$ = 16				; size = 4
?AddParameter@CDataBaseAide@@QAEXPBDPB_WW4ParameterDirectionEnum@ADOCG@@@Z PROC ; CDataBaseAide::AddParameter, COMDAT
; _this$ = ecx

; 390  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDPB_WW4ParameterDirectionEnum@ADOCG@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 391  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@AddParamet
  00031	68 87 01 00 00	 push	 391			; 00000187H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@AddParamet
  00044	cc		 int	 3
$LN3@AddParamet:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1280 :     V_VT(this) = VT_BSTR;

  00045	ba 08 00 00 00	 mov	 edx, 8
  0004a	66 89 55 dc	 mov	 WORD PTR $T2[ebp], dx

; 1281 : 
; 1282 :     V_BSTR(this) = ::SysAllocString(pSrc);

  0004e	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  00051	50		 push	 eax
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysAllocString@4
  00058	89 45 e4	 mov	 DWORD PTR $T2[ebp+8], eax

; 1283 : 
; 1284 :     if (V_BSTR(this) == NULL && pSrc != NULL) {

  0005b	83 7d e4 00	 cmp	 DWORD PTR $T2[ebp+8], 0
  0005f	75 10		 jne	 SHORT $LN10@AddParamet
  00061	83 7d 0c 00	 cmp	 DWORD PTR _pszString$[ebp], 0
  00065	74 0a		 je	 SHORT $LN10@AddParamet

; 1285 :             _com_issue_error(E_OUTOFMEMORY);

  00067	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  0006c	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$LN10@AddParamet:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 392  :     m_pIDataBase->AddParameter(pszItem, adVarChar, ParameterDirection, CountStringBufferW(pszString), _variant_t(pszString));

  00071	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00074	89 4d ec	 mov	 DWORD PTR tv93[ebp], ecx
  00077	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0007e	8b 55 ec	 mov	 edx, DWORD PTR tv93[ebp]
  00081	52		 push	 edx
  00082	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  00085	50		 push	 eax
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenW@4
  0008c	8d 4c 00 02	 lea	 ecx, DWORD PTR [eax+eax+2]
  00090	51		 push	 ecx
  00091	8b 55 10	 mov	 edx, DWORD PTR _ParameterDirection$[ebp]
  00094	52		 push	 edx
  00095	68 c8 00 00 00	 push	 200			; 000000c8H
  0009a	8b 45 08	 mov	 eax, DWORD PTR _pszItem$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000a4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a7	8b 12		 mov	 edx, DWORD PTR [edx]
  000a9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ac	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000af	ff d0		 call	 eax
  000b1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  000b8	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  000bb	51		 push	 ecx
  000bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
$LN11@AddParamet:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 394  : }

  000c2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cc	59		 pop	 ecx
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDPB_WW4ParameterDirectionEnum@ADOCG@@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDPB_WW4ParameterDirectionEnum@ADOCG@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDPB_WW4ParameterDirectionEnum@ADOCG@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddParameter@CDataBaseAide@@QAEXPBDPB_WW4ParameterDirectionEnum@ADOCG@@@Z ENDP ; CDataBaseAide::AddParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z
_TEXT	SEGMENT
$T2 = -36						; size = 16
tv92 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_pszString$ = 12					; size = 4
_ParameterDirection$ = 16				; size = 4
?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z PROC ; CDataBaseAide::AddParameter, COMDAT
; _this$ = ecx

; 382  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 383  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@AddParamet
  00031	68 7f 01 00 00	 push	 383			; 0000017fH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@AddParamet
  00044	cc		 int	 3
$LN3@AddParamet:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1293 :     V_VT(this) = VT_BSTR;

  00045	ba 08 00 00 00	 mov	 edx, 8
  0004a	66 89 55 dc	 mov	 WORD PTR $T2[ebp], dx

; 1294 :     V_BSTR(this) = _com_util::ConvertStringToBSTR(pSrc);

  0004e	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?ConvertStringToBSTR@_com_util@@YGPA_WPBD@Z ; _com_util::ConvertStringToBSTR
  00057	89 45 e4	 mov	 DWORD PTR $T2[ebp+8], eax
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 384  :     m_pIDataBase->AddParameter(pszItem, adVarChar, ParameterDirection, CountStringBufferA(pszString), CDBVarValue(pszString));

  0005a	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  0005d	89 4d ec	 mov	 DWORD PTR tv92[ebp], ecx
  00060	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00067	8b 55 ec	 mov	 edx, DWORD PTR tv92[ebp]
  0006a	52		 push	 edx
  0006b	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  0006e	50		 push	 eax
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  00075	83 c0 01	 add	 eax, 1
  00078	50		 push	 eax
  00079	8b 4d 10	 mov	 ecx, DWORD PTR _ParameterDirection$[ebp]
  0007c	51		 push	 ecx
  0007d	68 c8 00 00 00	 push	 200			; 000000c8H
  00082	8b 55 08	 mov	 edx, DWORD PTR _pszItem$[ebp]
  00085	52		 push	 edx
  00086	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00089	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0008c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0008f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00091	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00094	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00097	ff d2		 call	 edx
  00099	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  000a0	8d 45 dc	 lea	 eax, DWORD PTR $T2[ebp]
  000a3	50		 push	 eax
  000a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 386  : }

  000aa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ad	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b4	59		 pop	 ecx
  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddParameter@CDataBaseAide@@QAEXPBD0W4ParameterDirectionEnum@ADOCG@@@Z ENDP ; CDataBaseAide::AddParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?AddParameter@CDataBaseAide@@QAEXPBDNW4ParameterDirectionEnum@ADOCG@@@Z
_TEXT	SEGMENT
$T2 = -36						; size = 16
tv90 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_dValue$ = 12						; size = 8
_ParameterDirection$ = 20				; size = 4
?AddParameter@CDataBaseAide@@QAEXPBDNW4ParameterDirectionEnum@ADOCG@@@Z PROC ; CDataBaseAide::AddParameter, COMDAT
; _this$ = ecx

; 374  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDNW4ParameterDirectionEnum@ADOCG@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 375  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@AddParamet
  00031	68 77 01 00 00	 push	 375			; 00000177H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@AddParamet
  00044	cc		 int	 3
$LN3@AddParamet:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1234 :     if ((vtSrc != VT_R8) && (vtSrc != VT_DATE)) {

  00045	ba 05 00 00 00	 mov	 edx, 5
  0004a	0f b7 c2	 movzx	 eax, dx
  0004d	83 f8 05	 cmp	 eax, 5
  00050	74 19		 je	 SHORT $LN9@AddParamet
  00052	b9 05 00 00 00	 mov	 ecx, 5
  00057	0f b7 d1	 movzx	 edx, cx
  0005a	83 fa 07	 cmp	 edx, 7
  0005d	74 0c		 je	 SHORT $LN9@AddParamet

; 1235 :         _com_issue_error(E_INVALIDARG);

  0005f	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00064	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error

; 1236 :         return;

  00069	eb 35		 jmp	 SHORT $LN8@AddParamet
$LN9@AddParamet:

; 1237 :     }
; 1238 : 
; 1239 :     if (vtSrc == VT_DATE) {

  0006b	b8 05 00 00 00	 mov	 eax, 5
  00070	0f b7 c8	 movzx	 ecx, ax
  00073	83 f9 07	 cmp	 ecx, 7
  00076	75 15		 jne	 SHORT $LN10@AddParamet

; 1240 :         V_VT(this) = VT_DATE;

  00078	ba 07 00 00 00	 mov	 edx, 7
  0007d	66 89 55 dc	 mov	 WORD PTR $T2[ebp], dx

; 1241 :         V_DATE(this) = dblSrc;

  00081	f2 0f 10 45 0c	 movsd	 xmm0, QWORD PTR _dValue$[ebp]
  00086	f2 0f 11 45 e4	 movsd	 QWORD PTR $T2[ebp+8], xmm0

; 1242 :     }
; 1243 :     else {

  0008b	eb 13		 jmp	 SHORT $LN11@AddParamet
$LN10@AddParamet:

; 1244 :         V_VT(this) = VT_R8;

  0008d	b8 05 00 00 00	 mov	 eax, 5
  00092	66 89 45 dc	 mov	 WORD PTR $T2[ebp], ax

; 1245 :         V_R8(this) = dblSrc;

  00096	f2 0f 10 45 0c	 movsd	 xmm0, QWORD PTR _dValue$[ebp]
  0009b	f2 0f 11 45 e4	 movsd	 QWORD PTR $T2[ebp+8], xmm0
$LN11@AddParamet:
$LN8@AddParamet:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 376  :     m_pIDataBase->AddParameter(pszItem, adDouble, ParameterDirection, sizeof(DOUBLE), CDBVarValue((DOUBLE)dValue));

  000a0	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  000a3	89 4d ec	 mov	 DWORD PTR tv90[ebp], ecx
  000a6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000ad	8b 55 ec	 mov	 edx, DWORD PTR tv90[ebp]
  000b0	52		 push	 edx
  000b1	6a 08		 push	 8
  000b3	8b 45 14	 mov	 eax, DWORD PTR _ParameterDirection$[ebp]
  000b6	50		 push	 eax
  000b7	6a 05		 push	 5
  000b9	8b 4d 08	 mov	 ecx, DWORD PTR _pszItem$[ebp]
  000bc	51		 push	 ecx
  000bd	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000c0	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000c3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	8b 10		 mov	 edx, DWORD PTR [eax]
  000c8	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000cb	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000ce	ff d0		 call	 eax
  000d0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  000d7	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  000da	51		 push	 ecx
  000db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
$LN1@AddParamet:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 378  : }

  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	8b e5		 mov	 esp, ebp
  000ee	5d		 pop	 ebp
  000ef	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDNW4ParameterDirectionEnum@ADOCG@@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDNW4ParameterDirectionEnum@ADOCG@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDNW4ParameterDirectionEnum@ADOCG@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddParameter@CDataBaseAide@@QAEXPBDNW4ParameterDirectionEnum@ADOCG@@@Z ENDP ; CDataBaseAide::AddParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?AddParameter@CDataBaseAide@@QAEXPBDMW4ParameterDirectionEnum@ADOCG@@@Z
_TEXT	SEGMENT
$T2 = -44						; size = 16
_dblSrc$ = -28						; size = 8
tv91 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_fValue$ = 12						; size = 4
_ParameterDirection$ = 16				; size = 4
?AddParameter@CDataBaseAide@@QAEXPBDMW4ParameterDirectionEnum@ADOCG@@@Z PROC ; CDataBaseAide::AddParameter, COMDAT
; _this$ = ecx

; 366  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDMW4ParameterDirectionEnum@ADOCG@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 367  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@AddParamet
  00031	68 6f 01 00 00	 push	 367			; 0000016fH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@AddParamet
  00044	cc		 int	 3
$LN3@AddParamet:

; 368  :     m_pIDataBase->AddParameter(pszItem, adDouble, ParameterDirection, sizeof(DOUBLE), CDBVarValue((DOUBLE)fValue));

  00045	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _fValue$[ebp]
  0004a	f2 0f 11 45 e4	 movsd	 QWORD PTR _dblSrc$[ebp], xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1234 :     if ((vtSrc != VT_R8) && (vtSrc != VT_DATE)) {

  0004f	ba 05 00 00 00	 mov	 edx, 5
  00054	0f b7 c2	 movzx	 eax, dx
  00057	83 f8 05	 cmp	 eax, 5
  0005a	74 19		 je	 SHORT $LN9@AddParamet
  0005c	b9 05 00 00 00	 mov	 ecx, 5
  00061	0f b7 d1	 movzx	 edx, cx
  00064	83 fa 07	 cmp	 edx, 7
  00067	74 0c		 je	 SHORT $LN9@AddParamet

; 1235 :         _com_issue_error(E_INVALIDARG);

  00069	68 57 00 07 80	 push	 -2147024809		; 80070057H
  0006e	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error

; 1236 :         return;

  00073	eb 35		 jmp	 SHORT $LN8@AddParamet
$LN9@AddParamet:

; 1237 :     }
; 1238 : 
; 1239 :     if (vtSrc == VT_DATE) {

  00075	b8 05 00 00 00	 mov	 eax, 5
  0007a	0f b7 c8	 movzx	 ecx, ax
  0007d	83 f9 07	 cmp	 ecx, 7
  00080	75 15		 jne	 SHORT $LN10@AddParamet

; 1240 :         V_VT(this) = VT_DATE;

  00082	ba 07 00 00 00	 mov	 edx, 7
  00087	66 89 55 d4	 mov	 WORD PTR $T2[ebp], dx

; 1241 :         V_DATE(this) = dblSrc;

  0008b	f2 0f 10 45 e4	 movsd	 xmm0, QWORD PTR _dblSrc$[ebp]
  00090	f2 0f 11 45 dc	 movsd	 QWORD PTR $T2[ebp+8], xmm0

; 1242 :     }
; 1243 :     else {

  00095	eb 13		 jmp	 SHORT $LN11@AddParamet
$LN10@AddParamet:

; 1244 :         V_VT(this) = VT_R8;

  00097	b8 05 00 00 00	 mov	 eax, 5
  0009c	66 89 45 d4	 mov	 WORD PTR $T2[ebp], ax

; 1245 :         V_R8(this) = dblSrc;

  000a0	f2 0f 10 45 e4	 movsd	 xmm0, QWORD PTR _dblSrc$[ebp]
  000a5	f2 0f 11 45 dc	 movsd	 QWORD PTR $T2[ebp+8], xmm0
$LN11@AddParamet:
$LN8@AddParamet:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 368  :     m_pIDataBase->AddParameter(pszItem, adDouble, ParameterDirection, sizeof(DOUBLE), CDBVarValue((DOUBLE)fValue));

  000aa	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp]
  000ad	89 4d ec	 mov	 DWORD PTR tv91[ebp], ecx
  000b0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000b7	8b 55 ec	 mov	 edx, DWORD PTR tv91[ebp]
  000ba	52		 push	 edx
  000bb	6a 08		 push	 8
  000bd	8b 45 10	 mov	 eax, DWORD PTR _ParameterDirection$[ebp]
  000c0	50		 push	 eax
  000c1	6a 05		 push	 5
  000c3	8b 4d 08	 mov	 ecx, DWORD PTR _pszItem$[ebp]
  000c6	51		 push	 ecx
  000c7	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000ca	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000cd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	8b 10		 mov	 edx, DWORD PTR [eax]
  000d2	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000d5	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000d8	ff d0		 call	 eax
  000da	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  000e1	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp]
  000e4	51		 push	 ecx
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
$LN1@AddParamet:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 370  : }

  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	8b e5		 mov	 esp, ebp
  000f8	5d		 pop	 ebp
  000f9	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDMW4ParameterDirectionEnum@ADOCG@@@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDMW4ParameterDirectionEnum@ADOCG@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDMW4ParameterDirectionEnum@ADOCG@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddParameter@CDataBaseAide@@QAEXPBDMW4ParameterDirectionEnum@ADOCG@@@Z ENDP ; CDataBaseAide::AddParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 16
tv90 = -24						; size = 4
tv82 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_dwValue$ = 12						; size = 4
_ParameterDirection$ = 16				; size = 4
?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z PROC ; CDataBaseAide::AddParameter, COMDAT
; _this$ = ecx

; 358  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 359  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@AddParamet
  00031	68 67 01 00 00	 push	 359			; 00000167H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@AddParamet
  00044	cc		 int	 3
$LN3@AddParamet:

; 360  :     m_pIDataBase->AddParameter(pszItem, adInteger, ParameterDirection, sizeof(LONG), CDBVarValue((LONG)dwValue));

  00045	6a 03		 push	 3
  00047	8b 55 0c	 mov	 edx, DWORD PTR _dwValue$[ebp]
  0004a	52		 push	 edx
  0004b	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  0004e	e8 00 00 00 00	 call	 ??0_variant_t@@QAE@JG@Z	; _variant_t::_variant_t
  00053	89 45 ec	 mov	 DWORD PTR tv82[ebp], eax
  00056	8b 45 ec	 mov	 eax, DWORD PTR tv82[ebp]
  00059	89 45 e8	 mov	 DWORD PTR tv90[ebp], eax
  0005c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00063	8b 4d e8	 mov	 ecx, DWORD PTR tv90[ebp]
  00066	51		 push	 ecx
  00067	6a 04		 push	 4
  00069	8b 55 10	 mov	 edx, DWORD PTR _ParameterDirection$[ebp]
  0006c	52		 push	 edx
  0006d	6a 03		 push	 3
  0006f	8b 45 08	 mov	 eax, DWORD PTR _pszItem$[ebp]
  00072	50		 push	 eax
  00073	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00079	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b 12		 mov	 edx, DWORD PTR [edx]
  0007e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00081	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00084	ff d0		 call	 eax
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  0008d	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00090	51		 push	 ecx
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 362  : }

  00097	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a1	59		 pop	 ecx
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddParameter@CDataBaseAide@@QAEXPBDKW4ParameterDirectionEnum@ADOCG@@@Z ENDP ; CDataBaseAide::AddParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 16
tv91 = -24						; size = 4
tv83 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_wValue$ = 12						; size = 2
_ParameterDirection$ = 16				; size = 4
?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z PROC ; CDataBaseAide::AddParameter, COMDAT
; _this$ = ecx

; 350  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 351  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@AddParamet
  00031	68 5f 01 00 00	 push	 351			; 0000015fH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@AddParamet
  00044	cc		 int	 3
$LN3@AddParamet:

; 352  :     m_pIDataBase->AddParameter(pszItem, adInteger, ParameterDirection, sizeof(LONG), CDBVarValue((LONG)wValue));

  00045	6a 03		 push	 3
  00047	0f b7 55 0c	 movzx	 edx, WORD PTR _wValue$[ebp]
  0004b	52		 push	 edx
  0004c	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  0004f	e8 00 00 00 00	 call	 ??0_variant_t@@QAE@JG@Z	; _variant_t::_variant_t
  00054	89 45 ec	 mov	 DWORD PTR tv83[ebp], eax
  00057	8b 45 ec	 mov	 eax, DWORD PTR tv83[ebp]
  0005a	89 45 e8	 mov	 DWORD PTR tv91[ebp], eax
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	8b 4d e8	 mov	 ecx, DWORD PTR tv91[ebp]
  00067	51		 push	 ecx
  00068	6a 04		 push	 4
  0006a	8b 55 10	 mov	 edx, DWORD PTR _ParameterDirection$[ebp]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	8b 45 08	 mov	 eax, DWORD PTR _pszItem$[ebp]
  00073	50		 push	 eax
  00074	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0007a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 12		 mov	 edx, DWORD PTR [edx]
  0007f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00082	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00085	ff d0		 call	 eax
  00087	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  0008e	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00091	51		 push	 ecx
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 354  : }

  00098	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a2	59		 pop	 ecx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddParameter@CDataBaseAide@@QAEXPBDGW4ParameterDirectionEnum@ADOCG@@@Z ENDP ; CDataBaseAide::AddParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z
_TEXT	SEGMENT
$T2 = -36						; size = 16
tv89 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_cbValue$ = 12						; size = 1
_ParameterDirection$ = 16				; size = 4
?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z PROC ; CDataBaseAide::AddParameter, COMDAT
; _this$ = ecx

; 342  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 343  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@AddParamet
  00031	68 57 01 00 00	 push	 343			; 00000157H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@AddParamet
  00044	cc		 int	 3
$LN3@AddParamet:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1353 :     V_VT(this) = VT_UI1;

  00045	ba 11 00 00 00	 mov	 edx, 17			; 00000011H
  0004a	66 89 55 dc	 mov	 WORD PTR $T2[ebp], dx

; 1354 :     V_UI1(this) = bSrc;

  0004e	8a 45 0c	 mov	 al, BYTE PTR _cbValue$[ebp]
  00051	88 45 e4	 mov	 BYTE PTR $T2[ebp+8], al
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 344  :     m_pIDataBase->AddParameter(pszItem, adTinyInt, ParameterDirection, sizeof(BYTE), CDBVarValue((BYTE)cbValue));

  00054	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00057	89 4d ec	 mov	 DWORD PTR tv89[ebp], ecx
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	8b 55 ec	 mov	 edx, DWORD PTR tv89[ebp]
  00064	52		 push	 edx
  00065	6a 01		 push	 1
  00067	8b 45 10	 mov	 eax, DWORD PTR _ParameterDirection$[ebp]
  0006a	50		 push	 eax
  0006b	6a 10		 push	 16			; 00000010H
  0006d	8b 4d 08	 mov	 ecx, DWORD PTR _pszItem$[ebp]
  00070	51		 push	 ecx
  00071	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00074	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00077	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	8b 10		 mov	 edx, DWORD PTR [eax]
  0007c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0007f	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00082	ff d0		 call	 eax
  00084	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  0008b	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  0008e	51		 push	 ecx
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 346  : }

  00095	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009f	59		 pop	 ecx
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddParameter@CDataBaseAide@@QAEXPBDEW4ParameterDirectionEnum@ADOCG@@@Z ENDP ; CDataBaseAide::AddParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z
_TEXT	SEGMENT
$T2 = -36						; size = 16
tv89 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_lValue$ = 12						; size = 8
_ParameterDirection$ = 20				; size = 4
?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z PROC ; CDataBaseAide::AddParameter, COMDAT
; _this$ = ecx

; 334  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 335  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@AddParamet
  00031	68 4f 01 00 00	 push	 335			; 0000014fH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@AddParamet
  00044	cc		 int	 3
$LN3@AddParamet:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1402 :     V_VT(this) = VT_I8;

  00045	ba 14 00 00 00	 mov	 edx, 20			; 00000014H
  0004a	66 89 55 dc	 mov	 WORD PTR $T2[ebp], dx

; 1403 :     V_I8(this) = i8Src;

  0004e	8b 45 0c	 mov	 eax, DWORD PTR _lValue$[ebp]
  00051	89 45 e4	 mov	 DWORD PTR $T2[ebp+8], eax
  00054	8b 4d 10	 mov	 ecx, DWORD PTR _lValue$[ebp+4]
  00057	89 4d e8	 mov	 DWORD PTR $T2[ebp+12], ecx
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 336  :     m_pIDataBase->AddParameter(pszItem, adBigInt, ParameterDirection, sizeof(LONGLONG), CDBVarValue((LONGLONG)lValue));

  0005a	8d 55 dc	 lea	 edx, DWORD PTR $T2[ebp]
  0005d	89 55 ec	 mov	 DWORD PTR tv89[ebp], edx
  00060	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00067	8b 45 ec	 mov	 eax, DWORD PTR tv89[ebp]
  0006a	50		 push	 eax
  0006b	6a 08		 push	 8
  0006d	8b 4d 14	 mov	 ecx, DWORD PTR _ParameterDirection$[ebp]
  00070	51		 push	 ecx
  00071	6a 14		 push	 20			; 00000014H
  00073	8b 55 08	 mov	 edx, DWORD PTR _pszItem$[ebp]
  00076	52		 push	 edx
  00077	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00080	8b 01		 mov	 eax, DWORD PTR [ecx]
  00082	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00085	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00088	ff d2		 call	 edx
  0008a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  00091	8d 45 dc	 lea	 eax, DWORD PTR $T2[ebp]
  00094	50		 push	 eax
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 338  : }

  0009b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a5	59		 pop	 ecx
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddParameter@CDataBaseAide@@QAEXPBD_JW4ParameterDirectionEnum@ADOCG@@@Z ENDP ; CDataBaseAide::AddParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?AddParameter@CDataBaseAide@@QAEXPBDJW4ParameterDirectionEnum@ADOCG@@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 16
tv90 = -24						; size = 4
tv82 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_lValue$ = 12						; size = 4
_ParameterDirection$ = 16				; size = 4
?AddParameter@CDataBaseAide@@QAEXPBDJW4ParameterDirectionEnum@ADOCG@@@Z PROC ; CDataBaseAide::AddParameter, COMDAT
; _this$ = ecx

; 326  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDJW4ParameterDirectionEnum@ADOCG@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 327  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@AddParamet
  00031	68 47 01 00 00	 push	 327			; 00000147H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@AddParamet
  00044	cc		 int	 3
$LN3@AddParamet:

; 328  :     m_pIDataBase->AddParameter(pszItem, adInteger, ParameterDirection, sizeof(LONG), CDBVarValue((LONG)lValue));

  00045	6a 03		 push	 3
  00047	8b 55 0c	 mov	 edx, DWORD PTR _lValue$[ebp]
  0004a	52		 push	 edx
  0004b	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  0004e	e8 00 00 00 00	 call	 ??0_variant_t@@QAE@JG@Z	; _variant_t::_variant_t
  00053	89 45 ec	 mov	 DWORD PTR tv82[ebp], eax
  00056	8b 45 ec	 mov	 eax, DWORD PTR tv82[ebp]
  00059	89 45 e8	 mov	 DWORD PTR tv90[ebp], eax
  0005c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00063	8b 4d e8	 mov	 ecx, DWORD PTR tv90[ebp]
  00066	51		 push	 ecx
  00067	6a 04		 push	 4
  00069	8b 55 10	 mov	 edx, DWORD PTR _ParameterDirection$[ebp]
  0006c	52		 push	 edx
  0006d	6a 03		 push	 3
  0006f	8b 45 08	 mov	 eax, DWORD PTR _pszItem$[ebp]
  00072	50		 push	 eax
  00073	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00079	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b 12		 mov	 edx, DWORD PTR [edx]
  0007e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00081	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00084	ff d0		 call	 eax
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  0008d	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00090	51		 push	 ecx
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 330  : }

  00097	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a1	59		 pop	 ecx
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDJW4ParameterDirectionEnum@ADOCG@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDJW4ParameterDirectionEnum@ADOCG@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDJW4ParameterDirectionEnum@ADOCG@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddParameter@CDataBaseAide@@QAEXPBDJW4ParameterDirectionEnum@ADOCG@@@Z ENDP ; CDataBaseAide::AddParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?AddParameter@CDataBaseAide@@QAEXPBDIW4ParameterDirectionEnum@ADOCG@@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 16
tv90 = -24						; size = 4
tv82 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_uValue$ = 12						; size = 4
_ParameterDirection$ = 16				; size = 4
?AddParameter@CDataBaseAide@@QAEXPBDIW4ParameterDirectionEnum@ADOCG@@@Z PROC ; CDataBaseAide::AddParameter, COMDAT
; _this$ = ecx

; 318  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDIW4ParameterDirectionEnum@ADOCG@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 319  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@AddParamet
  00031	68 3f 01 00 00	 push	 319			; 0000013fH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@AddParamet
  00044	cc		 int	 3
$LN3@AddParamet:

; 320  :     m_pIDataBase->AddParameter(pszItem, adInteger, ParameterDirection, sizeof(LONG), CDBVarValue((LONG)uValue));

  00045	6a 03		 push	 3
  00047	8b 55 0c	 mov	 edx, DWORD PTR _uValue$[ebp]
  0004a	52		 push	 edx
  0004b	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  0004e	e8 00 00 00 00	 call	 ??0_variant_t@@QAE@JG@Z	; _variant_t::_variant_t
  00053	89 45 ec	 mov	 DWORD PTR tv82[ebp], eax
  00056	8b 45 ec	 mov	 eax, DWORD PTR tv82[ebp]
  00059	89 45 e8	 mov	 DWORD PTR tv90[ebp], eax
  0005c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00063	8b 4d e8	 mov	 ecx, DWORD PTR tv90[ebp]
  00066	51		 push	 ecx
  00067	6a 04		 push	 4
  00069	8b 55 10	 mov	 edx, DWORD PTR _ParameterDirection$[ebp]
  0006c	52		 push	 edx
  0006d	6a 03		 push	 3
  0006f	8b 45 08	 mov	 eax, DWORD PTR _pszItem$[ebp]
  00072	50		 push	 eax
  00073	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00079	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b 12		 mov	 edx, DWORD PTR [edx]
  0007e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00081	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00084	ff d0		 call	 eax
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  0008d	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00090	51		 push	 ecx
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 322  : }

  00097	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a1	59		 pop	 ecx
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDIW4ParameterDirectionEnum@ADOCG@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDIW4ParameterDirectionEnum@ADOCG@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDIW4ParameterDirectionEnum@ADOCG@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddParameter@CDataBaseAide@@QAEXPBDIW4ParameterDirectionEnum@ADOCG@@@Z ENDP ; CDataBaseAide::AddParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?AddParameter@CDataBaseAide@@QAEXPBDHW4ParameterDirectionEnum@ADOCG@@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 16
tv90 = -24						; size = 4
tv82 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_nValue$ = 12						; size = 4
_ParameterDirection$ = 16				; size = 4
?AddParameter@CDataBaseAide@@QAEXPBDHW4ParameterDirectionEnum@ADOCG@@@Z PROC ; CDataBaseAide::AddParameter, COMDAT
; _this$ = ecx

; 310  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDHW4ParameterDirectionEnum@ADOCG@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 311  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@AddParamet
  00031	68 37 01 00 00	 push	 311			; 00000137H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@AddParamet
  00044	cc		 int	 3
$LN3@AddParamet:

; 312  :     m_pIDataBase->AddParameter(pszItem, adInteger, ParameterDirection, sizeof(LONG), CDBVarValue((LONG)nValue));

  00045	6a 03		 push	 3
  00047	8b 55 0c	 mov	 edx, DWORD PTR _nValue$[ebp]
  0004a	52		 push	 edx
  0004b	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  0004e	e8 00 00 00 00	 call	 ??0_variant_t@@QAE@JG@Z	; _variant_t::_variant_t
  00053	89 45 ec	 mov	 DWORD PTR tv82[ebp], eax
  00056	8b 45 ec	 mov	 eax, DWORD PTR tv82[ebp]
  00059	89 45 e8	 mov	 DWORD PTR tv90[ebp], eax
  0005c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00063	8b 4d e8	 mov	 ecx, DWORD PTR tv90[ebp]
  00066	51		 push	 ecx
  00067	6a 04		 push	 4
  00069	8b 55 10	 mov	 edx, DWORD PTR _ParameterDirection$[ebp]
  0006c	52		 push	 edx
  0006d	6a 03		 push	 3
  0006f	8b 45 08	 mov	 eax, DWORD PTR _pszItem$[ebp]
  00072	50		 push	 eax
  00073	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00079	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b 12		 mov	 edx, DWORD PTR [edx]
  0007e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00081	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00084	ff d0		 call	 eax
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  0008d	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00090	51		 push	 ecx
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 314  : }

  00097	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a1	59		 pop	 ecx
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddParameter@CDataBaseAide@@QAEXPBDHW4ParameterDirectionEnum@ADOCG@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?AddParameter@CDataBaseAide@@QAEXPBDHW4ParameterDirectionEnum@ADOCG@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddParameter@CDataBaseAide@@QAEXPBDHW4ParameterDirectionEnum@ADOCG@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddParameter@CDataBaseAide@@QAEXPBDHW4ParameterDirectionEnum@ADOCG@@@Z ENDP ; CDataBaseAide::AddParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetParameter@CDataBaseAide@@QAEXPBDPA_WI@Z
_TEXT	SEGMENT
_DBVarValue$ = -32					; size = 16
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_pszString$ = 12					; size = 4
_uSize$ = 16						; size = 4
?GetParameter@CDataBaseAide@@QAEXPBDPA_WI@Z PROC	; CDataBaseAide::GetParameter, COMDAT
; _this$ = ecx

; 294  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetParameter@CDataBaseAide@@QAEXPBDPA_WI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1130 :     ::VariantInit(this);

  00028	8d 45 e0	 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  0002b	50		 push	 eax
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 296  :     CDBVarValue DBVarValue;

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 297  : 
; 298  :     // 获取参数
; 299  :     ASSERT(m_pIDataBase != NULL);

  00039	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00040	75 14		 jne	 SHORT $LN3@GetParamet
  00042	68 2b 01 00 00	 push	 299			; 0000012bH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0004c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00051	85 c0		 test	 eax, eax
  00053	74 01		 je	 SHORT $LN3@GetParamet
  00055	cc		 int	 3
$LN3@GetParamet:

; 300  :     m_pIDataBase->GetParameter(pszItem, DBVarValue);

  00056	8d 45 e0	 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _pszItem$[ebp]
  0005d	51		 push	 ecx
  0005e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00061	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	8b 10		 mov	 edx, DWORD PTR [eax]
  00069	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0006c	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0006f	ff d0		 call	 eax

; 301  : 
; 302  :     // 设置结果
; 303  :     lstrcpynW(pszString, (LPCWSTR)(DBVarValue.bstrVal), uSize);

  00071	8b 4d 10	 mov	 ecx, DWORD PTR _uSize$[ebp]
  00074	51		 push	 ecx
  00075	8b 55 e8	 mov	 edx, DWORD PTR _DBVarValue$[ebp+8]
  00078	52		 push	 edx
  00079	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  0007c	50		 push	 eax
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynW@12

; 304  : 
; 305  :     return;

  00083	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  0008a	8d 4d e0	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  0008d	51		 push	 ecx
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 306  : }

  00094	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00097	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009e	59		 pop	 ecx
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetParameter@CDataBaseAide@@QAEXPBDPA_WI@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?GetParameter@CDataBaseAide@@QAEXPBDPA_WI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetParameter@CDataBaseAide@@QAEXPBDPA_WI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetParameter@CDataBaseAide@@QAEXPBDPA_WI@Z ENDP	; CDataBaseAide::GetParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z
_TEXT	SEGMENT
_DBVarValue$ = -180					; size = 16
$T2 = -164						; size = 4
$T3 = -160						; size = 4
_psz$ = -156						; size = 4
_this$ = -152						; size = 4
$T4 = -148						; size = 132
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_pszString$ = 12					; size = 4
_uSize$ = 16						; size = 4
?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z PROC		; CDataBaseAide::GetParameter, COMDAT
; _this$ = ecx

; 278  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec a8 00 00
	00		 sub	 esp, 168		; 000000a8H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 8d 68 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1130 :     ::VariantInit(this);

  00031	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  00037	50		 push	 eax
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 280  :     CDBVarValue DBVarValue;

  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 281  : 
; 282  :     // 获取参数
; 283  :     ASSERT(m_pIDataBase != NULL);

  00045	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  0004f	75 14		 jne	 SHORT $LN3@GetParamet
  00051	68 1b 01 00 00	 push	 283			; 0000011bH
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0005b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00060	85 c0		 test	 eax, eax
  00062	74 01		 je	 SHORT $LN3@GetParamet
  00064	cc		 int	 3
$LN3@GetParamet:

; 284  :     m_pIDataBase->GetParameter(pszItem, DBVarValue);

  00065	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d 08	 mov	 ecx, DWORD PTR _pszItem$[ebp]
  0006f	51		 push	 ecx
  00070	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00076	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00079	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	8b 10		 mov	 edx, DWORD PTR [eax]
  00081	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00084	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00087	ff d0		 call	 eax

; 287  :     lstrcpynA(pszString, (LPCSTR)(CW2A(DBVarValue.bstrVal)), uSize);

  00089	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _DBVarValue$[ebp+8]
  0008f	89 8d 64 ff ff
	ff		 mov	 DWORD PTR _psz$[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h

; 414  : 		m_psz( m_szBuffer )

  00095	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR $T4[ebp+4]
  0009b	89 95 6c ff ff
	ff		 mov	 DWORD PTR $T4[ebp], edx

; 415  : 	{
; 416  : 		Init( psz, _AtlGetConversionACP() );

  000a1	6a 03		 push	 3
  000a3	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _psz$[ebp]
  000a9	50		 push	 eax
  000aa	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  000b0	e8 00 00 00 00	 call	 ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z ; ATL::CW2AEX<128>::Init
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 287  :     lstrcpynA(pszString, (LPCSTR)(CW2A(DBVarValue.bstrVal)), uSize);

  000b5	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  000bb	89 8d 60 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h

; 432  : 		return( m_psz );

  000c1	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  000c7	8b 02		 mov	 eax, DWORD PTR [edx]
  000c9	89 85 5c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 287  :     lstrcpynA(pszString, (LPCSTR)(CW2A(DBVarValue.bstrVal)), uSize);

  000cf	8b 4d 10	 mov	 ecx, DWORD PTR _uSize$[ebp]
  000d2	51		 push	 ecx
  000d3	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  000d9	52		 push	 edx
  000da	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  000dd	50		 push	 eax
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12
  000e4	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  000ea	e8 00 00 00 00	 call	 ??1?$CW2AEX@$0IA@@ATL@@QAE@XZ ; ATL::CW2AEX<128>::~CW2AEX<128>

; 288  : 
; 289  :     return;

  000ef	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  000f6	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  000fc	51		 push	 ecx
  000fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 290  : }

  00103	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00106	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010d	59		 pop	 ecx
  0010e	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00111	33 cd		 xor	 ecx, ebp
  00113	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z$0:
  00000	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 54 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-172]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetParameter@CDataBaseAide@@QAEXPBDPADI@Z ENDP		; CDataBaseAide::GetParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetParameter@CDataBaseAide@@QAEXPBDAAV_variant_t@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszItem$ = 8						; size = 4
_DBVarValue$ = 12					; size = 4
?GetParameter@CDataBaseAide@@QAEXPBDAAV_variant_t@@@Z PROC ; CDataBaseAide::GetParameter, COMDAT
; _this$ = ecx

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 271  :     ASSERT(m_pIDataBase != NULL);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0000e	75 14		 jne	 SHORT $LN3@GetParamet
  00010	68 0f 01 00 00	 push	 271			; 0000010fH
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0001f	85 c0		 test	 eax, eax
  00021	74 01		 je	 SHORT $LN3@GetParamet
  00023	cc		 int	 3
$LN3@GetParamet:

; 272  :     m_pIDataBase->GetParameter(pszItem, DBVarValue);

  00024	8b 55 0c	 mov	 edx, DWORD PTR _DBVarValue$[ebp]
  00027	52		 push	 edx
  00028	8b 45 08	 mov	 eax, DWORD PTR _pszItem$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 12		 mov	 edx, DWORD PTR [edx]
  00037	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003a	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0003d	ff d0		 call	 eax

; 273  :     return;
; 274  : }

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?GetParameter@CDataBaseAide@@QAEXPBDAAV_variant_t@@@Z ENDP ; CDataBaseAide::GetParameter
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?ResetParameter@CDataBaseAide@@QAEXXZ
_TEXT	SEGMENT
$T2 = -40						; size = 16
tv129 = -24						; size = 4
tv89 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?ResetParameter@CDataBaseAide@@QAEXXZ PROC		; CDataBaseAide::ResetParameter, COMDAT
; _this$ = ecx

; 261  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ResetParameter@CDataBaseAide@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 262  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@ResetParam
  00031	68 06 01 00 00	 push	 262			; 00000106H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@ResetParam
  00044	cc		 int	 3
$LN3@ResetParam:

; 263  :     m_pIDataBase->ClearParameters();

  00045	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	8b 10		 mov	 edx, DWORD PTR [eax]
  00050	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00053	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00056	ff d0		 call	 eax

; 264  :     m_pIDataBase->AddParameter(TEXT("RETURN_VALUE"), adInteger, adParamReturnValue, sizeof(LONG), CDBVarValue((LONG)0));

  00058	6a 03		 push	 3
  0005a	6a 00		 push	 0
  0005c	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  0005f	e8 00 00 00 00	 call	 ??0_variant_t@@QAE@JG@Z	; _variant_t::_variant_t
  00064	89 45 ec	 mov	 DWORD PTR tv89[ebp], eax
  00067	8b 4d ec	 mov	 ecx, DWORD PTR tv89[ebp]
  0006a	89 4d e8	 mov	 DWORD PTR tv129[ebp], ecx
  0006d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00074	8b 55 e8	 mov	 edx, DWORD PTR tv129[ebp]
  00077	52		 push	 edx
  00078	6a 04		 push	 4
  0007a	6a 04		 push	 4
  0007c	6a 03		 push	 3
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JKBGBCPB@RETURN_VALUE@
  00083	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00086	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00089	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0008c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00091	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00094	ff d2		 call	 edx
  00096	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  0009d	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  000a0	50		 push	 eax
  000a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 266  : }

  000a7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000aa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b1	59		 pop	 ecx
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ResetParameter@CDataBaseAide@@QAEXXZ$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?ResetParameter@CDataBaseAide@@QAEXXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ResetParameter@CDataBaseAide@@QAEXXZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ResetParameter@CDataBaseAide@@QAEXXZ ENDP		; CDataBaseAide::ResetParameter
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetValue_String@CDataBaseAide@@QAEXPBDPA_WI@Z
_TEXT	SEGMENT
_DBVarValue$ = -36					; size = 16
tv95 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_pszString$ = 12					; size = 4
_uMaxCount$ = 16					; size = 4
?GetValue_String@CDataBaseAide@@QAEXPBDPA_WI@Z PROC	; CDataBaseAide::GetValue_String, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetValue_String@CDataBaseAide@@QAEXPBDPA_WI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 233  :     // 效验参数
; 234  :     ASSERT(pszString != NULL);

  00028	83 7d 0c 00	 cmp	 DWORD PTR _pszString$[ebp], 0
  0002c	75 14		 jne	 SHORT $LN7@GetValue_S
  0002e	68 ea 00 00 00	 push	 234			; 000000eaH
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN7@GetValue_S
  00041	cc		 int	 3
$LN7@GetValue_S:

; 235  :     ASSERT(m_pIDataBase != NULL);

  00042	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00049	75 14		 jne	 SHORT $LN8@GetValue_S
  0004b	68 eb 00 00 00	 push	 235			; 000000ebH
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00055	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0005a	85 c0		 test	 eax, eax
  0005c	74 01		 je	 SHORT $LN8@GetValue_S
  0005e	cc		 int	 3
$LN8@GetValue_S:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1130 :     ::VariantInit(this);

  0005f	8d 45 dc	 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  00062	50		 push	 eax
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 238  :     CDBVarValue DBVarValue;

  00069	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 239  :     m_pIDataBase->GetRecordsetValue(pszItem, DBVarValue);

  00070	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00073	51		 push	 ecx
  00074	8b 55 08	 mov	 edx, DWORD PTR _pszItem$[ebp]
  00077	52		 push	 edx
  00078	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00081	8b 01		 mov	 eax, DWORD PTR [ecx]
  00083	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00086	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  00089	ff d2		 call	 edx

; 240  : 
; 241  :     // 转换变量
; 242  :     switch (DBVarValue.vt)

  0008b	0f b7 45 dc	 movzx	 eax, WORD PTR _DBVarValue$[ebp]
  0008f	89 45 ec	 mov	 DWORD PTR tv95[ebp], eax
  00092	83 7d ec 08	 cmp	 DWORD PTR tv95[ebp], 8
  00096	74 02		 je	 SHORT $LN4@GetValue_S
  00098	eb 25		 jmp	 SHORT $LN5@GetValue_S
$LN4@GetValue_S:

; 243  :     {
; 244  :         case VT_BSTR:
; 245  :         {
; 246  :             lstrcpynW(pszString, DBVarValue.bstrVal, uMaxCount);

  0009a	8b 4d 10	 mov	 ecx, DWORD PTR _uMaxCount$[ebp]
  0009d	51		 push	 ecx
  0009e	8b 55 e4	 mov	 edx, DWORD PTR _DBVarValue$[ebp+8]
  000a1	52		 push	 edx
  000a2	8b 45 0c	 mov	 eax, DWORD PTR _pszString$[ebp]
  000a5	50		 push	 eax
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynW@12

; 247  :             return;

  000ac	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  000b3	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  000b6	51		 push	 ecx
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 247  :             return;

  000bd	eb 35		 jmp	 SHORT $LN1@GetValue_S
$LN5@GetValue_S:

; 248  :         }
; 249  :         default:
; 250  :         {
; 251  :             pszString[0] = 0;

  000bf	ba 02 00 00 00	 mov	 edx, 2
  000c4	6b c2 00	 imul	 eax, edx, 0
  000c7	33 c9		 xor	 ecx, ecx
  000c9	8b 55 0c	 mov	 edx, DWORD PTR _pszString$[ebp]
  000cc	66 89 0c 02	 mov	 WORD PTR [edx+eax], cx

; 252  :             return;

  000d0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  000d7	8d 45 dc	 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  000da	50		 push	 eax
  000db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 252  :             return;

  000e1	eb 11		 jmp	 SHORT $LN1@GetValue_S

; 253  :         }
; 254  :     }
; 255  : 
; 256  :     return;

  000e3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  000ea	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  000ed	51		 push	 ecx
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
$LN1@GetValue_S:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 257  : }

  000f4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fe	59		 pop	 ecx
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetValue_String@CDataBaseAide@@QAEXPBDPA_WI@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?GetValue_String@CDataBaseAide@@QAEXPBDPA_WI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetValue_String@CDataBaseAide@@QAEXPBDPA_WI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetValue_String@CDataBaseAide@@QAEXPBDPA_WI@Z ENDP	; CDataBaseAide::GetValue_String
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z
_TEXT	SEGMENT
_DBVarValue$ = -180					; size = 16
$T2 = -164						; size = 4
_psz$ = -160						; size = 4
tv95 = -156						; size = 4
_this$ = -152						; size = 4
_DBString$3 = -148					; size = 132
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_pszString$ = 12					; size = 4
_uMaxCount$ = 16					; size = 4
?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z PROC	; CDataBaseAide::GetValue_String, COMDAT
; _this$ = ecx

; 202  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec a8 00 00
	00		 sub	 esp, 168		; 000000a8H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 8d 68 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 203  :     // 效验参数
; 204  :     ASSERT(pszString != NULL);

  00031	83 7d 0c 00	 cmp	 DWORD PTR _pszString$[ebp], 0
  00035	75 14		 jne	 SHORT $LN7@GetValue_S
  00037	68 cc 00 00 00	 push	 204			; 000000ccH
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00041	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00046	85 c0		 test	 eax, eax
  00048	74 01		 je	 SHORT $LN7@GetValue_S
  0004a	cc		 int	 3
$LN7@GetValue_S:

; 205  :     ASSERT(m_pIDataBase != NULL);

  0004b	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00051	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  00055	75 14		 jne	 SHORT $LN8@GetValue_S
  00057	68 cd 00 00 00	 push	 205			; 000000cdH
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00061	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00066	85 c0		 test	 eax, eax
  00068	74 01		 je	 SHORT $LN8@GetValue_S
  0006a	cc		 int	 3
$LN8@GetValue_S:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1130 :     ::VariantInit(this);

  0006b	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  00071	50		 push	 eax
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 208  :     CDBVarValue DBVarValue;

  00078	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 209  :     m_pIDataBase->GetRecordsetValue(pszItem, DBVarValue);

  0007f	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00085	51		 push	 ecx
  00086	8b 55 08	 mov	 edx, DWORD PTR _pszItem$[ebp]
  00089	52		 push	 edx
  0008a	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00090	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00093	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00099	8b 01		 mov	 eax, DWORD PTR [ecx]
  0009b	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0009e	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  000a1	ff d2		 call	 edx

; 210  : 
; 211  :     // 转换变量
; 212  :     switch (DBVarValue.vt)

  000a3	0f b7 85 4c ff
	ff ff		 movzx	 eax, WORD PTR _DBVarValue$[ebp]
  000aa	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv95[ebp], eax
  000b0	83 bd 64 ff ff
	ff 08		 cmp	 DWORD PTR tv95[ebp], 8
  000b7	74 02		 je	 SHORT $LN4@GetValue_S
  000b9	eb 6e		 jmp	 SHORT $LN5@GetValue_S
$LN4@GetValue_S:

; 213  :     {
; 214  :         case VT_BSTR:
; 215  :         {
; 216  :             CW2A DBString(DBVarValue.bstrVal);

  000bb	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _DBVarValue$[ebp+8]
  000c1	89 8d 60 ff ff
	ff		 mov	 DWORD PTR _psz$[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h

; 414  : 		m_psz( m_szBuffer )

  000c7	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR _DBString$3[ebp+4]
  000cd	89 95 6c ff ff
	ff		 mov	 DWORD PTR _DBString$3[ebp], edx

; 415  : 	{
; 416  : 		Init( psz, _AtlGetConversionACP() );

  000d3	6a 03		 push	 3
  000d5	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _psz$[ebp]
  000db	50		 push	 eax
  000dc	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _DBString$3[ebp]
  000e2	e8 00 00 00 00	 call	 ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z ; ATL::CW2AEX<128>::Init

; 432  : 		return( m_psz );

  000e7	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _DBString$3[ebp]
  000ed	89 8d 5c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 217  :             lstrcpynA(pszString, DBString, uMaxCount);

  000f3	8b 55 10	 mov	 edx, DWORD PTR _uMaxCount$[ebp]
  000f6	52		 push	 edx
  000f7	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  000fd	50		 push	 eax
  000fe	8b 4d 0c	 mov	 ecx, DWORD PTR _pszString$[ebp]
  00101	51		 push	 ecx
  00102	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpynA@12

; 218  :             return;

  00108	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _DBString$3[ebp]
  0010e	e8 00 00 00 00	 call	 ??1?$CW2AEX@$0IA@@ATL@@QAE@XZ ; ATL::CW2AEX<128>::~CW2AEX<128>
  00113	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  0011a	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR _DBVarValue$[ebp]
  00120	52		 push	 edx
  00121	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 218  :             return;

  00127	eb 39		 jmp	 SHORT $LN1@GetValue_S
$LN5@GetValue_S:

; 219  :         }
; 220  :         default:
; 221  :         {
; 222  :             pszString[0] = 0;

  00129	b8 01 00 00 00	 mov	 eax, 1
  0012e	6b c8 00	 imul	 ecx, eax, 0
  00131	8b 55 0c	 mov	 edx, DWORD PTR _pszString$[ebp]
  00134	c6 04 0a 00	 mov	 BYTE PTR [edx+ecx], 0

; 223  :             return;

  00138	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  0013f	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  00145	50		 push	 eax
  00146	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 223  :             return;

  0014c	eb 14		 jmp	 SHORT $LN1@GetValue_S

; 224  :         }
; 225  :     }
; 226  : 
; 227  :     return;

  0014e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  00155	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  0015b	51		 push	 ecx
  0015c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
$LN1@GetValue_S:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 228  : }

  00162	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00165	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016c	59		 pop	 ecx
  0016d	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00170	33 cd		 xor	 ecx, ebp
  00172	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00177	8b e5		 mov	 esp, ebp
  00179	5d		 pop	 ebp
  0017a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z$0:
  00000	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 54 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-172]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetValue_String@CDataBaseAide@@QAEXPBDPADI@Z ENDP	; CDataBaseAide::GetValue_String
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcomtime.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z
_TEXT	SEGMENT
_DBVarValue$ = -44					; size = 16
_OleDateTime$ = -28					; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
_SystemTime$ = 12					; size = 4
?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z PROC ; CDataBaseAide::GetValue_SystemTime, COMDAT
; _this$ = ecx

; 178  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 179  :     // 效验参数
; 180  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@GetValue_S
  00031	68 b4 00 00 00	 push	 180			; 000000b4H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@GetValue_S
  00044	cc		 int	 3
$LN3@GetValue_S:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1130 :     ::VariantInit(this);

  00045	8d 55 d4	 lea	 edx, DWORD PTR _DBVarValue$[ebp]
  00048	52		 push	 edx
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 183  :     CDBVarValue DBVarValue;

  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 184  :     ZeroMemory(&SystemTime, sizeof(SystemTime));

  00056	33 c0		 xor	 eax, eax
  00058	8b 4d 0c	 mov	 ecx, DWORD PTR _SystemTime$[ebp]
  0005b	89 01		 mov	 DWORD PTR [ecx], eax
  0005d	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00060	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00063	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 185  :     m_pIDataBase->GetRecordsetValue(pszItem, DBVarValue);

  00066	8d 55 d4	 lea	 edx, DWORD PTR _DBVarValue$[ebp]
  00069	52		 push	 edx
  0006a	8b 45 08	 mov	 eax, DWORD PTR _pszItem$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00074	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00077	8b 12		 mov	 edx, DWORD PTR [edx]
  00079	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007c	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0007f	ff d0		 call	 eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcomtime.h

; 532  : 	m_dt( 0 ), m_status(valid)

  00081	0f 57 c0	 xorps	 xmm0, xmm0
  00084	f2 0f 11 45 e4	 movsd	 QWORD PTR _OleDateTime$[ebp], xmm0
  00089	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _OleDateTime$[ebp+8], 0

; 533  : {
; 534  : 	*this = varSrc;

  00090	8d 4d d4	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00093	51		 push	 ecx
  00094	8d 4d e4	 lea	 ecx, DWORD PTR _OleDateTime$[ebp]
  00097	e8 00 00 00 00	 call	 ??4COleDateTime@ATL@@QAEAAV01@ABUtagVARIANT@@@Z ; ATL::COleDateTime::operator=
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 189  :     SystemTime.wYear = OleDateTime.GetYear();

  0009c	8d 4d e4	 lea	 ecx, DWORD PTR _OleDateTime$[ebp]
  0009f	e8 00 00 00 00	 call	 ?GetYear@COleDateTime@ATL@@QBEHXZ ; ATL::COleDateTime::GetYear
  000a4	8b 55 0c	 mov	 edx, DWORD PTR _SystemTime$[ebp]
  000a7	66 89 02	 mov	 WORD PTR [edx], ax

; 190  :     SystemTime.wMonth = OleDateTime.GetMonth();

  000aa	8d 4d e4	 lea	 ecx, DWORD PTR _OleDateTime$[ebp]
  000ad	e8 00 00 00 00	 call	 ?GetMonth@COleDateTime@ATL@@QBEHXZ ; ATL::COleDateTime::GetMonth
  000b2	8b 4d 0c	 mov	 ecx, DWORD PTR _SystemTime$[ebp]
  000b5	66 89 41 02	 mov	 WORD PTR [ecx+2], ax

; 191  :     SystemTime.wDayOfWeek = OleDateTime.GetDayOfWeek();

  000b9	8d 4d e4	 lea	 ecx, DWORD PTR _OleDateTime$[ebp]
  000bc	e8 00 00 00 00	 call	 ?GetDayOfWeek@COleDateTime@ATL@@QBEHXZ ; ATL::COleDateTime::GetDayOfWeek
  000c1	8b 55 0c	 mov	 edx, DWORD PTR _SystemTime$[ebp]
  000c4	66 89 42 04	 mov	 WORD PTR [edx+4], ax

; 192  :     SystemTime.wDay = OleDateTime.GetDay();

  000c8	8d 4d e4	 lea	 ecx, DWORD PTR _OleDateTime$[ebp]
  000cb	e8 00 00 00 00	 call	 ?GetDay@COleDateTime@ATL@@QBEHXZ ; ATL::COleDateTime::GetDay
  000d0	8b 4d 0c	 mov	 ecx, DWORD PTR _SystemTime$[ebp]
  000d3	66 89 41 06	 mov	 WORD PTR [ecx+6], ax

; 193  :     SystemTime.wHour = OleDateTime.GetHour();

  000d7	8d 4d e4	 lea	 ecx, DWORD PTR _OleDateTime$[ebp]
  000da	e8 00 00 00 00	 call	 ?GetHour@COleDateTime@ATL@@QBEHXZ ; ATL::COleDateTime::GetHour
  000df	8b 55 0c	 mov	 edx, DWORD PTR _SystemTime$[ebp]
  000e2	66 89 42 08	 mov	 WORD PTR [edx+8], ax

; 194  :     SystemTime.wMinute = OleDateTime.GetMinute();

  000e6	8d 4d e4	 lea	 ecx, DWORD PTR _OleDateTime$[ebp]
  000e9	e8 00 00 00 00	 call	 ?GetMinute@COleDateTime@ATL@@QBEHXZ ; ATL::COleDateTime::GetMinute
  000ee	8b 4d 0c	 mov	 ecx, DWORD PTR _SystemTime$[ebp]
  000f1	66 89 41 0a	 mov	 WORD PTR [ecx+10], ax

; 195  :     SystemTime.wSecond = OleDateTime.GetSecond();

  000f5	8d 4d e4	 lea	 ecx, DWORD PTR _OleDateTime$[ebp]
  000f8	e8 00 00 00 00	 call	 ?GetSecond@COleDateTime@ATL@@QBEHXZ ; ATL::COleDateTime::GetSecond
  000fd	8b 55 0c	 mov	 edx, DWORD PTR _SystemTime$[ebp]
  00100	66 89 42 0c	 mov	 WORD PTR [edx+12], ax

; 196  : 
; 197  :     return;

  00104	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  0010b	8d 45 d4	 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  0010e	50		 push	 eax
  0010f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 198  : }

  00115	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00118	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011f	59		 pop	 ecx
  00120	8b e5		 mov	 esp, ebp
  00122	5d		 pop	 ebp
  00123	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetValue_SystemTime@CDataBaseAide@@QAEXPBDAAU_SYSTEMTIME@@@Z ENDP ; CDataBaseAide::GetValue_SystemTime
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetValue_VarValue@CDataBaseAide@@QAEXPBDAAV_variant_t@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszItem$ = 8						; size = 4
_DBVarValue$ = 12					; size = 4
?GetValue_VarValue@CDataBaseAide@@QAEXPBDAAV_variant_t@@@Z PROC ; CDataBaseAide::GetValue_VarValue, COMDAT
; _this$ = ecx

; 166  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 167  :     // 效验参数
; 168  :     ASSERT(m_pIDataBase != NULL);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0000e	75 14		 jne	 SHORT $LN3@GetValue_V
  00010	68 a8 00 00 00	 push	 168			; 000000a8H
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0001f	85 c0		 test	 eax, eax
  00021	74 01		 je	 SHORT $LN3@GetValue_V
  00023	cc		 int	 3
$LN3@GetValue_V:

; 169  : 
; 170  :     // 读取变量
; 171  :     m_pIDataBase->GetRecordsetValue(pszItem, DBVarValue);

  00024	8b 55 0c	 mov	 edx, DWORD PTR _DBVarValue$[ebp]
  00027	52		 push	 edx
  00028	8b 45 08	 mov	 eax, DWORD PTR _pszItem$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 12		 mov	 edx, DWORD PTR [edx]
  00037	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003a	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0003d	ff d0		 call	 eax

; 172  : 
; 173  :     return;
; 174  : }

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?GetValue_VarValue@CDataBaseAide@@QAEXPBDAAV_variant_t@@@Z ENDP ; CDataBaseAide::GetValue_VarValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z
_TEXT	SEGMENT
_DBVarValue$ = -40					; size = 16
$T2 = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z PROC	; CDataBaseAide::GetValue_LONGLONG, COMDAT
; _this$ = ecx

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 154  :     // 效验参数
; 155  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@GetValue_L
  00031	68 9b 00 00 00	 push	 155			; 0000009bH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@GetValue_L
  00044	cc		 int	 3
$LN3@GetValue_L:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1130 :     ::VariantInit(this);

  00045	8d 55 d8	 lea	 edx, DWORD PTR _DBVarValue$[ebp]
  00048	52		 push	 edx
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 158  :     CDBVarValue DBVarValue;

  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 159  :     m_pIDataBase->GetRecordsetValue(pszItem, DBVarValue);

  00056	8d 45 d8	 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _pszItem$[ebp]
  0005d	51		 push	 ecx
  0005e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00061	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	8b 10		 mov	 edx, DWORD PTR [eax]
  00069	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0006c	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0006f	ff d0		 call	 eax

; 161  :     return DBVarValue;

  00071	8d 4d d8	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00074	e8 00 00 00 00	 call	 ??B_variant_t@@QBE_JXZ	; _variant_t::operator __int64
  00079	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0007c	89 55 ec	 mov	 DWORD PTR $T2[ebp+4], edx
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  00086	8d 4d d8	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00089	51		 push	 ecx
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 161  :     return DBVarValue;

  00090	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00093	8b 55 ec	 mov	 edx, DWORD PTR $T2[ebp+4]

; 162  : }

  00096	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00099	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a0	59		 pop	 ecx
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetValue_LONGLONG@CDataBaseAide@@QAE_JPBD@Z ENDP	; CDataBaseAide::GetValue_LONGLONG
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetValue_DOUBLE@CDataBaseAide@@QAENPBD@Z
_TEXT	SEGMENT
_DBVarValue$ = -40					; size = 16
$T2 = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
?GetValue_DOUBLE@CDataBaseAide@@QAENPBD@Z PROC		; CDataBaseAide::GetValue_DOUBLE, COMDAT
; _this$ = ecx

; 140  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetValue_DOUBLE@CDataBaseAide@@QAENPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 141  :     // 效验参数
; 142  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@GetValue_D
  00031	68 8e 00 00 00	 push	 142			; 0000008eH
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@GetValue_D
  00044	cc		 int	 3
$LN3@GetValue_D:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1130 :     ::VariantInit(this);

  00045	8d 55 d8	 lea	 edx, DWORD PTR _DBVarValue$[ebp]
  00048	52		 push	 edx
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 145  :     CDBVarValue DBVarValue;

  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 146  :     m_pIDataBase->GetRecordsetValue(pszItem, DBVarValue);

  00056	8d 45 d8	 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _pszItem$[ebp]
  0005d	51		 push	 ecx
  0005e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00061	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	8b 10		 mov	 edx, DWORD PTR [eax]
  00069	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0006c	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0006f	ff d0		 call	 eax

; 148  :     return DBVarValue;

  00071	8d 4d d8	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00074	e8 00 00 00 00	 call	 ??B_variant_t@@QBENXZ	; _variant_t::operator double
  00079	dd 5d e8	 fstp	 QWORD PTR $T2[ebp]
  0007c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  00083	8d 4d d8	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00086	51		 push	 ecx
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 148  :     return DBVarValue;

  0008d	dd 45 e8	 fld	 QWORD PTR $T2[ebp]

; 149  : }

  00090	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00093	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009a	59		 pop	 ecx
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetValue_DOUBLE@CDataBaseAide@@QAENPBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?GetValue_DOUBLE@CDataBaseAide@@QAENPBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetValue_DOUBLE@CDataBaseAide@@QAENPBD@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetValue_DOUBLE@CDataBaseAide@@QAENPBD@Z ENDP		; CDataBaseAide::GetValue_DOUBLE
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetValue_FLOAT@CDataBaseAide@@QAEMPBD@Z
_TEXT	SEGMENT
_DBVarValue$ = -36					; size = 16
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
?GetValue_FLOAT@CDataBaseAide@@QAEMPBD@Z PROC		; CDataBaseAide::GetValue_FLOAT, COMDAT
; _this$ = ecx

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetValue_FLOAT@CDataBaseAide@@QAEMPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 128  :     // 效验参数
; 129  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 14		 jne	 SHORT $LN3@GetValue_F
  00031	68 81 00 00 00	 push	 129			; 00000081H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003b	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00040	85 c0		 test	 eax, eax
  00042	74 01		 je	 SHORT $LN3@GetValue_F
  00044	cc		 int	 3
$LN3@GetValue_F:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1130 :     ::VariantInit(this);

  00045	8d 55 dc	 lea	 edx, DWORD PTR _DBVarValue$[ebp]
  00048	52		 push	 edx
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 132  :     CDBVarValue DBVarValue;

  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 133  :     m_pIDataBase->GetRecordsetValue(pszItem, DBVarValue);

  00056	8d 45 dc	 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _pszItem$[ebp]
  0005d	51		 push	 ecx
  0005e	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00061	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	8b 10		 mov	 edx, DWORD PTR [eax]
  00069	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0006c	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0006f	ff d0		 call	 eax

; 135  :     return DBVarValue;

  00071	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00074	e8 00 00 00 00	 call	 ??B_variant_t@@QBEMXZ	; _variant_t::operator float
  00079	d9 5d ec	 fstp	 DWORD PTR $T2[ebp]
  0007c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  00083	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00086	51		 push	 ecx
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 135  :     return DBVarValue;

  0008d	d9 45 ec	 fld	 DWORD PTR $T2[ebp]

; 136  : }

  00090	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00093	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009a	59		 pop	 ecx
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetValue_FLOAT@CDataBaseAide@@QAEMPBD@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?GetValue_FLOAT@CDataBaseAide@@QAEMPBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetValue_FLOAT@CDataBaseAide@@QAEMPBD@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetValue_FLOAT@CDataBaseAide@@QAEMPBD@Z ENDP		; CDataBaseAide::GetValue_FLOAT
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z
_TEXT	SEGMENT
_DBVarValue$ = -36					; size = 16
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z PROC		; CDataBaseAide::GetValue_DWORD, COMDAT
; _this$ = ecx

; 114  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 115  :     // 效验参数
; 116  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 11		 jne	 SHORT $LN3@GetValue_D
  00031	6a 74		 push	 116			; 00000074H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN3@GetValue_D
  00041	cc		 int	 3
$LN3@GetValue_D:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1130 :     ::VariantInit(this);

  00042	8d 55 dc	 lea	 edx, DWORD PTR _DBVarValue$[ebp]
  00045	52		 push	 edx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 119  :     CDBVarValue DBVarValue;

  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 120  :     m_pIDataBase->GetRecordsetValue(pszItem, DBVarValue);

  00053	8d 45 dc	 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  00056	50		 push	 eax
  00057	8b 4d 08	 mov	 ecx, DWORD PTR _pszItem$[ebp]
  0005a	51		 push	 ecx
  0005b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	8b 10		 mov	 edx, DWORD PTR [eax]
  00066	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00069	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0006c	ff d0		 call	 eax

; 122  :     return DBVarValue;

  0006e	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00071	e8 00 00 00 00	 call	 ??B_variant_t@@QBEKXZ	; _variant_t::operator unsigned long
  00076	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  00079	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  00080	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00083	51		 push	 ecx
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 122  :     return DBVarValue;

  0008a	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]

; 123  : }

  0008d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00090	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00097	59		 pop	 ecx
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetValue_DWORD@CDataBaseAide@@QAEKPBD@Z ENDP		; CDataBaseAide::GetValue_DWORD
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z
_TEXT	SEGMENT
_DBVarValue$ = -36					; size = 16
_this$ = -20						; size = 4
$T2 = -14						; size = 2
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z PROC		; CDataBaseAide::GetValue_WORD, COMDAT
; _this$ = ecx

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 102  :     // 效验参数
; 103  :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 11		 jne	 SHORT $LN3@GetValue_W
  00031	6a 67		 push	 103			; 00000067H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN3@GetValue_W
  00041	cc		 int	 3
$LN3@GetValue_W:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1130 :     ::VariantInit(this);

  00042	8d 55 dc	 lea	 edx, DWORD PTR _DBVarValue$[ebp]
  00045	52		 push	 edx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 106  :     CDBVarValue DBVarValue;

  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 107  :     m_pIDataBase->GetRecordsetValue(pszItem, DBVarValue);

  00053	8d 45 dc	 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  00056	50		 push	 eax
  00057	8b 4d 08	 mov	 ecx, DWORD PTR _pszItem$[ebp]
  0005a	51		 push	 ecx
  0005b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00061	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	8b 10		 mov	 edx, DWORD PTR [eax]
  00066	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00069	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0006c	ff d0		 call	 eax

; 109  :     return DBVarValue;

  0006e	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00071	e8 00 00 00 00	 call	 ??B_variant_t@@QBEGXZ	; _variant_t::operator unsigned short
  00076	66 89 45 f2	 mov	 WORD PTR $T2[ebp], ax
  0007a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  00081	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00084	51		 push	 ecx
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 109  :     return DBVarValue;

  0008b	66 8b 45 f2	 mov	 ax, WORD PTR $T2[ebp]

; 110  : }

  0008f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00092	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00099	59		 pop	 ecx
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetValue_WORD@CDataBaseAide@@QAEGPBD@Z ENDP		; CDataBaseAide::GetValue_WORD
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
_TEXT	SEGMENT
_DBVarValue$ = -36					; size = 16
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z PROC		; CDataBaseAide::GetValue_BYTE, COMDAT
; _this$ = ecx

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :     // 效验参数
; 90   :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 11		 jne	 SHORT $LN3@GetValue_B
  00031	6a 5a		 push	 90			; 0000005aH
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN3@GetValue_B
  00041	cc		 int	 3
$LN3@GetValue_B:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1130 :     ::VariantInit(this);

  00042	8d 55 dc	 lea	 edx, DWORD PTR _DBVarValue$[ebp]
  00045	52		 push	 edx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 93   :     CDBVarValue DBVarValue;

  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 94   :     m_pIDataBase->GetRecordsetValue(pszItem, DBVarValue);

  00053	8d 45 dc	 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  00056	50		 push	 eax
  00057	8b 4d 08	 mov	 ecx, DWORD PTR _pszItem$[ebp]
  0005a	51		 push	 ecx
  0005b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00061	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	8b 10		 mov	 edx, DWORD PTR [eax]
  00066	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00069	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0006c	ff d0		 call	 eax

; 96   :     return DBVarValue;

  0006e	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00071	e8 00 00 00 00	 call	 ??B_variant_t@@QBEEXZ	; _variant_t::operator unsigned char
  00076	88 45 f3	 mov	 BYTE PTR $T2[ebp], al
  00079	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  00080	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00083	51		 push	 ecx
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 96   :     return DBVarValue;

  0008a	8a 45 f3	 mov	 al, BYTE PTR $T2[ebp]

; 97   : }

  0008d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00090	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00097	59		 pop	 ecx
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetValue_BYTE@CDataBaseAide@@QAEEPBD@Z ENDP		; CDataBaseAide::GetValue_BYTE
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetValue_LONG@CDataBaseAide@@QAEJPBD@Z
_TEXT	SEGMENT
_DBVarValue$ = -36					; size = 16
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
?GetValue_LONG@CDataBaseAide@@QAEJPBD@Z PROC		; CDataBaseAide::GetValue_LONG, COMDAT
; _this$ = ecx

; 75   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetValue_LONG@CDataBaseAide@@QAEJPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 76   :     // 效验参数
; 77   :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 11		 jne	 SHORT $LN3@GetValue_L
  00031	6a 4d		 push	 77			; 0000004dH
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN3@GetValue_L
  00041	cc		 int	 3
$LN3@GetValue_L:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1130 :     ::VariantInit(this);

  00042	8d 55 dc	 lea	 edx, DWORD PTR _DBVarValue$[ebp]
  00045	52		 push	 edx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 80   :     CDBVarValue DBVarValue;

  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 81   :     m_pIDataBase->GetRecordsetValue(pszItem, DBVarValue);

  00053	8d 45 dc	 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  00056	50		 push	 eax
  00057	8b 4d 08	 mov	 ecx, DWORD PTR _pszItem$[ebp]
  0005a	51		 push	 ecx
  0005b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	8b 10		 mov	 edx, DWORD PTR [eax]
  00066	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00069	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0006c	ff d0		 call	 eax

; 83   :     return DBVarValue;

  0006e	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00071	e8 00 00 00 00	 call	 ??B_variant_t@@QBEJXZ	; _variant_t::operator long
  00076	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  00079	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  00080	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00083	51		 push	 ecx
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 83   :     return DBVarValue;

  0008a	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]

; 84   : }

  0008d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00090	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00097	59		 pop	 ecx
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetValue_LONG@CDataBaseAide@@QAEJPBD@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?GetValue_LONG@CDataBaseAide@@QAEJPBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetValue_LONG@CDataBaseAide@@QAEJPBD@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetValue_LONG@CDataBaseAide@@QAEJPBD@Z ENDP		; CDataBaseAide::GetValue_LONG
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetValue_UINT@CDataBaseAide@@QAEIPBD@Z
_TEXT	SEGMENT
_DBVarValue$ = -36					; size = 16
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
?GetValue_UINT@CDataBaseAide@@QAEIPBD@Z PROC		; CDataBaseAide::GetValue_UINT, COMDAT
; _this$ = ecx

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetValue_UINT@CDataBaseAide@@QAEIPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 63   :     // 效验参数
; 64   :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 11		 jne	 SHORT $LN3@GetValue_U
  00031	6a 40		 push	 64			; 00000040H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN3@GetValue_U
  00041	cc		 int	 3
$LN3@GetValue_U:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1130 :     ::VariantInit(this);

  00042	8d 55 dc	 lea	 edx, DWORD PTR _DBVarValue$[ebp]
  00045	52		 push	 edx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 67   :     CDBVarValue DBVarValue;

  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 68   :     m_pIDataBase->GetRecordsetValue(pszItem, DBVarValue);

  00053	8d 45 dc	 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  00056	50		 push	 eax
  00057	8b 4d 08	 mov	 ecx, DWORD PTR _pszItem$[ebp]
  0005a	51		 push	 ecx
  0005b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	8b 10		 mov	 edx, DWORD PTR [eax]
  00066	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00069	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0006c	ff d0		 call	 eax

; 70   :     return DBVarValue;

  0006e	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00071	e8 00 00 00 00	 call	 ??B_variant_t@@QBEIXZ	; _variant_t::operator unsigned int
  00076	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  00079	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  00080	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00083	51		 push	 ecx
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 70   :     return DBVarValue;

  0008a	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]

; 71   : }

  0008d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00090	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00097	59		 pop	 ecx
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetValue_UINT@CDataBaseAide@@QAEIPBD@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?GetValue_UINT@CDataBaseAide@@QAEIPBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetValue_UINT@CDataBaseAide@@QAEIPBD@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetValue_UINT@CDataBaseAide@@QAEIPBD@Z ENDP		; CDataBaseAide::GetValue_UINT
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetValue_INT@CDataBaseAide@@QAEHPBD@Z
_TEXT	SEGMENT
_DBVarValue$ = -36					; size = 16
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszItem$ = 8						; size = 4
?GetValue_INT@CDataBaseAide@@QAEHPBD@Z PROC		; CDataBaseAide::GetValue_INT, COMDAT
; _this$ = ecx

; 49   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetValue_INT@CDataBaseAide@@QAEHPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 50   :     // 效验参数
; 51   :     ASSERT(m_pIDataBase != NULL);

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002f	75 11		 jne	 SHORT $LN3@GetValue_I
  00031	6a 33		 push	 51			; 00000033H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN3@GetValue_I
  00041	cc		 int	 3
$LN3@GetValue_I:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 1130 :     ::VariantInit(this);

  00042	8d 55 dc	 lea	 edx, DWORD PTR _DBVarValue$[ebp]
  00045	52		 push	 edx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 54   :     CDBVarValue DBVarValue;

  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 55   :     m_pIDataBase->GetRecordsetValue(pszItem, DBVarValue);

  00053	8d 45 dc	 lea	 eax, DWORD PTR _DBVarValue$[ebp]
  00056	50		 push	 eax
  00057	8b 4d 08	 mov	 ecx, DWORD PTR _pszItem$[ebp]
  0005a	51		 push	 ecx
  0005b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	8b 10		 mov	 edx, DWORD PTR [eax]
  00066	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00069	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0006c	ff d0		 call	 eax

; 57   :     return DBVarValue;

  0006e	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00071	e8 00 00 00 00	 call	 ??B_variant_t@@QBEHXZ	; _variant_t::operator int
  00076	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  00079	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h

; 2334 :     ::VariantClear(this);

  00080	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00083	51		 push	 ecx
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp

; 57   :     return DBVarValue;

  0008a	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]

; 58   : }

  0008d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00090	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00097	59		 pop	 ecx
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetValue_INT@CDataBaseAide@@QAEHPBD@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _DBVarValue$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$?GetValue_INT@CDataBaseAide@@QAEHPBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetValue_INT@CDataBaseAide@@QAEHPBD@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetValue_INT@CDataBaseAide@@QAEHPBD@Z ENDP		; CDataBaseAide::GetValue_INT
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?GetDataBase@CDataBaseAide@@QAEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Guid$ = 8						; size = 4
_dwQueryVer$ = 12					; size = 4
?GetDataBase@CDataBaseAide@@QAEPAXABU_GUID@@K@Z PROC	; CDataBaseAide::GetDataBase, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 42   :     if (m_pIDataBase == NULL)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0000e	75 04		 jne	 SHORT $LN2@GetDataBas

; 43   :         return NULL;

  00010	33 c0		 xor	 eax, eax
  00012	eb 1b		 jmp	 SHORT $LN1@GetDataBas
$LN2@GetDataBas:

; 44   :     return m_pIDataBase->QueryInterface(Guid, dwQueryVer);

  00014	8b 4d 0c	 mov	 ecx, DWORD PTR _dwQueryVer$[ebp]
  00017	51		 push	 ecx
  00018	8b 55 08	 mov	 edx, DWORD PTR _Guid$[ebp]
  0001b	52		 push	 edx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	8b 01		 mov	 eax, DWORD PTR [ecx]
  00027	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0002a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0002d	ff d2		 call	 edx
$LN1@GetDataBas:

; 45   : }

  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
?GetDataBase@CDataBaseAide@@QAEPAXABU_GUID@@K@Z ENDP	; CDataBaseAide::GetDataBase
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z
_TEXT	SEGMENT
tv87 = -12						; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_pIUnknownEx$ = 8					; size = 4
?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z PROC	; CDataBaseAide::SetDataBase, COMDAT
; _this$ = ecx

; 22   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 23   :     // 设置接口
; 24   :     if (pIUnknownEx != NULL)

  00009	83 7d 08 00	 cmp	 DWORD PTR _pIUnknownEx$[ebp], 0
  0000d	0f 84 81 00 00
	00		 je	 $LN2@SetDataBas

; 25   :     {
; 26   :         // 查询接口
; 27   :         ASSERT(QUERY_OBJECT_PTR_INTERFACE(pIUnknownEx, IDataBase) != NULL);

  00013	83 7d 08 00	 cmp	 DWORD PTR _pIUnknownEx$[ebp], 0
  00017	75 09		 jne	 SHORT $LN6@SetDataBas
  00019	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
  00020	eb 1a		 jmp	 SHORT $LN7@SetDataBas
$LN6@SetDataBas:
  00022	68 00 01 01 06	 push	 100729088		; 06010100H
  00027	68 00 00 00 00	 push	 OFFSET ?IID_IDataBase@@3U_GUID@@B
  0002c	8b 45 08	 mov	 eax, DWORD PTR _pIUnknownEx$[ebp]
  0002f	8b 10		 mov	 edx, DWORD PTR [eax]
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _pIUnknownEx$[ebp]
  00034	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00037	ff d0		 call	 eax
  00039	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
$LN7@SetDataBas:
  0003c	83 7d f8 00	 cmp	 DWORD PTR tv72[ebp], 0
  00040	75 11		 jne	 SHORT $LN8@SetDataBas
  00042	6a 1b		 push	 27			; 0000001bH
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@OJJHCOHL@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00049	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0004e	85 c0		 test	 eax, eax
  00050	74 01		 je	 SHORT $LN8@SetDataBas
  00052	cc		 int	 3
$LN8@SetDataBas:

; 28   :         m_pIDataBase = QUERY_OBJECT_PTR_INTERFACE(pIUnknownEx, IDataBase);

  00053	83 7d 08 00	 cmp	 DWORD PTR _pIUnknownEx$[ebp], 0
  00057	75 09		 jne	 SHORT $LN9@SetDataBas
  00059	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
  00060	eb 1a		 jmp	 SHORT $LN10@SetDataBas
$LN9@SetDataBas:
  00062	68 00 01 01 06	 push	 100729088		; 06010100H
  00067	68 00 00 00 00	 push	 OFFSET ?IID_IDataBase@@3U_GUID@@B
  0006c	8b 55 08	 mov	 edx, DWORD PTR _pIUnknownEx$[ebp]
  0006f	8b 02		 mov	 eax, DWORD PTR [edx]
  00071	8b 4d 08	 mov	 ecx, DWORD PTR _pIUnknownEx$[ebp]
  00074	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00077	ff d2		 call	 edx
  00079	89 45 f4	 mov	 DWORD PTR tv87[ebp], eax
$LN10@SetDataBas:
  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR tv87[ebp]
  00082	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 29   : 
; 30   :         // 成功判断
; 31   :         if (m_pIDataBase == NULL)

  00085	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00088	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  0008c	75 04		 jne	 SHORT $LN4@SetDataBas

; 32   :             return false;

  0008e	32 c0		 xor	 al, al
  00090	eb 0e		 jmp	 SHORT $LN1@SetDataBas
$LN4@SetDataBas:

; 33   :     }

  00092	eb 0a		 jmp	 SHORT $LN3@SetDataBas
$LN2@SetDataBas:

; 34   :     else m_pIDataBase = NULL;

  00094	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00097	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN3@SetDataBas:

; 35   : 
; 36   :     return true;

  0009e	b0 01		 mov	 al, 1
$LN1@SetDataBas:

; 37   : }

  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
?SetDataBase@CDataBaseAide@@QAE_NPAUIUnknownEx@@@Z ENDP	; CDataBaseAide::SetDataBase
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ??1CDataBaseAide@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDataBaseAide@@UAE@XZ PROC				; CDataBaseAide::~CDataBaseAide, COMDAT
; _this$ = ecx

; 17   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDataBaseAide@@6B@

; 18   : }

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??1CDataBaseAide@@UAE@XZ ENDP				; CDataBaseAide::~CDataBaseAide
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_pIUnknownEx$ = 8					; size = 4
??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z PROC		; CDataBaseAide::CDataBaseAide, COMDAT
; _this$ = ecx

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDataBaseAide@@6B@

; 9    :     // 查询接口
; 10   :     m_pIDataBase = QUERY_OBJECT_PTR_INTERFACE(pIUnknownEx, IDataBase);

  00012	83 7d 08 00	 cmp	 DWORD PTR _pIUnknownEx$[ebp], 0
  00016	75 09		 jne	 SHORT $LN3@CDataBaseA
  00018	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  0001f	eb 1a		 jmp	 SHORT $LN4@CDataBaseA
$LN3@CDataBaseA:
  00021	68 00 01 01 06	 push	 100729088		; 06010100H
  00026	68 00 00 00 00	 push	 OFFSET ?IID_IDataBase@@3U_GUID@@B
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _pIUnknownEx$[ebp]
  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _pIUnknownEx$[ebp]
  00033	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00036	ff d0		 call	 eax
  00038	89 45 f8	 mov	 DWORD PTR tv73[ebp], eax
$LN4@CDataBaseA:
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8b 55 f8	 mov	 edx, DWORD PTR tv73[ebp]
  00041	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 11   : 
; 12   :     return;
; 13   : }

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??0CDataBaseAide@@QAE@PAUIUnknownEx@@@Z ENDP		; CDataBaseAide::CDataBaseAide
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
_this$ = -52						; size = 4
$T1 = -48						; size = 44
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00015	8d 45 d0	 lea	 eax, DWORD PTR $T1[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00022	8b 7d cc	 mov	 edi, DWORD PTR _this$[ebp]
  00025	83 c7 18	 add	 edi, 24			; 00000018H
  00028	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002d	8b f0		 mov	 esi, eax
  0002f	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00031	b9 01 00 00 00	 mov	 ecx, 1
  00036	85 c9		 test	 ecx, ecx
  00038	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00052	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00061	83 c4 04	 add	 esp, 4
  00064	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  0006f	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00074	83 c4 04	 add	 esp, 4
  00077	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  0007a	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 224  : 			}
; 225  : 		else

  0007d	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  0007f	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00082	83 c0 18	 add	 eax, 24			; 00000018H
  00085	50		 push	 eax
  00086	6a 00		 push	 0
  00088	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a0	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  000a3	83 c2 18	 add	 edx, 24			; 00000018H
  000a6	52		 push	 edx
  000a7	6a 00		 push	 0
  000a9	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bb	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c1	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  000c4	83 c2 18	 add	 edx, 24			; 00000018H
  000c7	52		 push	 edx
  000c8	6a 00		 push	 0
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000cf	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d7	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e2	33 cd		 xor	 ecx, ebp
  000e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
_this$ = -52						; size = 4
$T1 = -48						; size = 44
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00015	8d 45 d0	 lea	 eax, DWORD PTR $T1[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00022	8b 7d cc	 mov	 edi, DWORD PTR _this$[ebp]
  00025	83 c7 18	 add	 edi, 24			; 00000018H
  00028	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002d	8b f0		 mov	 esi, eax
  0002f	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00031	b9 01 00 00 00	 mov	 ecx, 1
  00036	85 c9		 test	 ecx, ecx
  00038	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00052	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00061	83 c4 04	 add	 esp, 4
  00064	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  0006f	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00074	83 c4 04	 add	 esp, 4
  00077	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  0007a	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 224  : 			}
; 225  : 		else

  0007d	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  0007f	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00082	83 c0 18	 add	 eax, 24			; 00000018H
  00085	50		 push	 eax
  00086	6a 00		 push	 0
  00088	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a0	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  000a3	83 c2 18	 add	 edx, 24			; 00000018H
  000a6	52		 push	 edx
  000a7	6a 00		 push	 0
  000a9	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bb	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c1	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  000c4	83 c2 18	 add	 edx, 24			; 00000018H
  000c7	52		 push	 edx
  000c8	6a 00		 push	 0
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000cf	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d7	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e2	33 cd		 xor	 ecx, ebp
  000e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPA_WPB_W@Z
_TEXT	SEGMENT
tv66 = -24						; size = 4
tv86 = -20						; size = 4
__Count$ = -16						; size = 4
__Ptrdest$ = -12					; size = 4
tv79 = -8						; size = 4
tv89 = -2						; size = 2
__Ptr$ = 8						; size = 4
?_Maklocwcs@std@@YAPA_WPB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 97   : 	{	// copy NTWCS to allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 98   : 	const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  00006	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR tv79[ebp], eax
  0000c	8b 4d f8	 mov	 ecx, DWORD PTR tv79[ebp]
  0000f	83 c1 02	 add	 ecx, 2
  00012	89 4d ec	 mov	 DWORD PTR tv86[ebp], ecx
$LL6@Maklocwcs:
  00015	8b 55 f8	 mov	 edx, DWORD PTR tv79[ebp]
  00018	66 8b 02	 mov	 ax, WORD PTR [edx]
  0001b	66 89 45 fe	 mov	 WORD PTR tv89[ebp], ax
  0001f	83 45 f8 02	 add	 DWORD PTR tv79[ebp], 2
  00023	66 83 7d fe 00	 cmp	 WORD PTR tv89[ebp], 0
  00028	75 eb		 jne	 SHORT $LL6@Maklocwcs
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR tv79[ebp]
  0002d	2b 4d ec	 sub	 ecx, DWORD PTR tv86[ebp]
  00030	d1 f9		 sar	 ecx, 1
  00032	89 4d e8	 mov	 DWORD PTR tv66[ebp], ecx
  00035	8b 55 e8	 mov	 edx, DWORD PTR tv66[ebp]
  00038	83 c2 01	 add	 edx, 1
  0003b	89 55 f0	 mov	 DWORD PTR __Count$[ebp], edx

; 99   : 
; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

  0003e	6a 65		 push	 101			; 00000065H
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00045	6a 02		 push	 2
  00047	6a 02		 push	 2
  00049	8b 45 f0	 mov	 eax, DWORD PTR __Count$[ebp]
  0004c	50		 push	 eax
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00053	83 c4 14	 add	 esp, 20			; 00000014H
  00056	89 45 f4	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 101  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 102  : 
; 103  : 	if (!_Ptrdest)

  00059	83 7d f4 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  0005d	75 05		 jne	 SHORT $LN2@Maklocwcs

; 104  : 		_Xbad_alloc();

  0005f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h

; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00064	8b 4d f0	 mov	 ecx, DWORD PTR __Count$[ebp]
  00067	d1 e1		 shl	 ecx, 1
  00069	51		 push	 ecx
  0006a	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0006d	52		 push	 edx
  0006e	8b 45 f4	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 _memcpy
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum

; 106  : 	return (_Ptrdest);

  0007a	8b 45 f4	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN3@Maklocwcs:

; 107  : 	}

  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
?_Maklocwcs@std@@YAPA_WPB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Mbst2$ = -64						; size = 8
__Mbst1$ = -56						; size = 8
tv69 = -48						; size = 4
tv146 = -44						; size = 4
__Count1$ = -40						; size = 4
__Ptrdest$ = -36					; size = 4
__Ptr1$ = -32						; size = 4
__Ptrnext$ = -28					; size = 4
tv143 = -24						; size = 4
__Count$ = -20						; size = 4
__Bytes$ = -16						; size = 4
__Wchars$ = -12						; size = 4
__Wc$ = -8						; size = 2
tv149 = -1						; size = 1
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
__Cvt$ = 16						; size = 4
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z PROC	; std::_Maklocstr<wchar_t>, COMDAT

; 682  : 	{	// convert C string to wchar_t sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H

; 683  : 	size_t _Count, _Count1;
; 684  : 	size_t _Wchars;
; 685  : 	const char *_Ptr1;
; 686  : 	int _Bytes;
; 687  : 	wchar_t _Wc;
; 688  : 	mbstate_t _Mbst1 = {};

  00006	33 c0		 xor	 eax, eax
  00008	89 45 c8	 mov	 DWORD PTR __Mbst1$[ebp], eax
  0000b	89 45 cc	 mov	 DWORD PTR __Mbst1$[ebp+4], eax

; 689  : 
; 690  : 	_Count1 = _CSTD strlen(_Ptr) + 1;

  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00011	89 4d e8	 mov	 DWORD PTR tv143[ebp], ecx
  00014	8b 55 e8	 mov	 edx, DWORD PTR tv143[ebp]
  00017	83 c2 01	 add	 edx, 1
  0001a	89 55 d4	 mov	 DWORD PTR tv146[ebp], edx
$LL12@Maklocstr:
  0001d	8b 45 e8	 mov	 eax, DWORD PTR tv143[ebp]
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	88 4d ff	 mov	 BYTE PTR tv149[ebp], cl
  00025	83 45 e8 01	 add	 DWORD PTR tv143[ebp], 1
  00029	80 7d ff 00	 cmp	 BYTE PTR tv149[ebp], 0
  0002d	75 ee		 jne	 SHORT $LL12@Maklocstr
  0002f	8b 55 e8	 mov	 edx, DWORD PTR tv143[ebp]
  00032	2b 55 d4	 sub	 edx, DWORD PTR tv146[ebp]
  00035	89 55 d0	 mov	 DWORD PTR tv69[ebp], edx
  00038	8b 45 d0	 mov	 eax, DWORD PTR tv69[ebp]
  0003b	83 c0 01	 add	 eax, 1
  0003e	89 45 d8	 mov	 DWORD PTR __Count1$[ebp], eax

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00041	8b 4d d8	 mov	 ecx, DWORD PTR __Count1$[ebp]
  00044	89 4d ec	 mov	 DWORD PTR __Count$[ebp], ecx
  00047	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __Wchars$[ebp], 0
  0004e	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00051	89 55 e0	 mov	 DWORD PTR __Ptr1$[ebp], edx
  00054	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:

; 692  : 		_Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars)

  00056	8b 45 ec	 mov	 eax, DWORD PTR __Count$[ebp]
  00059	2b 45 f0	 sub	 eax, DWORD PTR __Bytes$[ebp]
  0005c	89 45 ec	 mov	 DWORD PTR __Count$[ebp], eax
  0005f	8b 4d e0	 mov	 ecx, DWORD PTR __Ptr1$[ebp]
  00062	03 4d f0	 add	 ecx, DWORD PTR __Bytes$[ebp]
  00065	89 4d e0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  00068	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  0006b	83 c2 01	 add	 edx, 1
  0006e	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
$LN4@Maklocstr:

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00071	83 7d ec 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00075	76 29		 jbe	 SHORT $LN3@Maklocstr

; 693  : 		if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0)

  00077	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  0007a	50		 push	 eax
  0007b	8d 4d c8	 lea	 ecx, DWORD PTR __Mbst1$[ebp]
  0007e	51		 push	 ecx
  0007f	8b 55 ec	 mov	 edx, DWORD PTR __Count$[ebp]
  00082	52		 push	 edx
  00083	8b 45 e0	 mov	 eax, DWORD PTR __Ptr1$[ebp]
  00086	50		 push	 eax
  00087	8d 4d f8	 lea	 ecx, DWORD PTR __Wc$[ebp]
  0008a	51		 push	 ecx
  0008b	e8 00 00 00 00	 call	 __Mbrtowc
  00090	83 c4 14	 add	 esp, 20			; 00000014H
  00093	89 45 f0	 mov	 DWORD PTR __Bytes$[ebp], eax
  00096	83 7d f0 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0009a	7f 02		 jg	 SHORT $LN8@Maklocstr

; 694  : 			break;

  0009c	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 695  : 	++_Wchars;	// count terminating nul

  0009e	eb b6		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:
  000a0	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  000a3	83 c2 01	 add	 edx, 1
  000a6	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx

; 696  : 
; 697  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Wchars, sizeof (wchar_t),

  000a9	68 ba 02 00 00	 push	 698			; 000002baH
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b3	6a 02		 push	 2
  000b5	6a 02		 push	 2
  000b7	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  000ba	50		 push	 eax
  000bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  000c1	83 c4 14	 add	 esp, 20			; 00000014H
  000c4	89 45 dc	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 698  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 699  : 
; 700  : 	if (!_Ptrdest)

  000c7	83 7d dc 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  000cb	75 05		 jne	 SHORT $LN9@Maklocstr

; 701  : 		_Xbad_alloc();

  000cd	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 702  : 	wchar_t *_Ptrnext = _Ptrdest;

  000d2	8b 4d dc	 mov	 ecx, DWORD PTR __Ptrdest$[ebp]
  000d5	89 4d e4	 mov	 DWORD PTR __Ptrnext$[ebp], ecx

; 703  : 	mbstate_t _Mbst2 = {};

  000d8	33 d2		 xor	 edx, edx
  000da	89 55 c0	 mov	 DWORD PTR __Mbst2$[ebp], edx
  000dd	89 55 c4	 mov	 DWORD PTR __Mbst2$[ebp+4], edx

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000e0	eb 24		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:

; 706  : 		_Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext)

  000e2	8b 45 ec	 mov	 eax, DWORD PTR __Count$[ebp]
  000e5	2b 45 f0	 sub	 eax, DWORD PTR __Bytes$[ebp]
  000e8	89 45 ec	 mov	 DWORD PTR __Count$[ebp], eax
  000eb	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000ee	03 4d f0	 add	 ecx, DWORD PTR __Bytes$[ebp]
  000f1	89 4d 08	 mov	 DWORD PTR __Ptr$[ebp], ecx
  000f4	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  000f7	83 ea 01	 sub	 edx, 1
  000fa	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
  000fd	8b 45 e4	 mov	 eax, DWORD PTR __Ptrnext$[ebp]
  00100	83 c0 02	 add	 eax, 2
  00103	89 45 e4	 mov	 DWORD PTR __Ptrnext$[ebp], eax
$LN7@Maklocstr:

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  00106	83 7d f4 00	 cmp	 DWORD PTR __Wchars$[ebp], 0
  0010a	76 29		 jbe	 SHORT $LN6@Maklocstr

; 707  : 		if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0)

  0010c	8b 4d 10	 mov	 ecx, DWORD PTR __Cvt$[ebp]
  0010f	51		 push	 ecx
  00110	8d 55 c0	 lea	 edx, DWORD PTR __Mbst2$[ebp]
  00113	52		 push	 edx
  00114	8b 45 d8	 mov	 eax, DWORD PTR __Count1$[ebp]
  00117	50		 push	 eax
  00118	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0011b	51		 push	 ecx
  0011c	8b 55 e4	 mov	 edx, DWORD PTR __Ptrnext$[ebp]
  0011f	52		 push	 edx
  00120	e8 00 00 00 00	 call	 __Mbrtowc
  00125	83 c4 14	 add	 esp, 20			; 00000014H
  00128	89 45 f0	 mov	 DWORD PTR __Bytes$[ebp], eax
  0012b	83 7d f0 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0012f	7f 02		 jg	 SHORT $LN10@Maklocstr

; 708  : 			break;

  00131	eb 02		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 709  : 	*_Ptrnext = L'\0';

  00133	eb ad		 jmp	 SHORT $LN5@Maklocstr
$LN6@Maklocstr:
  00135	33 c0		 xor	 eax, eax
  00137	8b 4d e4	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  0013a	66 89 01	 mov	 WORD PTR [ecx], ax

; 710  : 
; 711  : 	return (_Ptrdest);

  0013d	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN11@Maklocstr:

; 712  : 	}

  00140	8b e5		 mov	 esp, ebp
  00142	5d		 pop	 ebp
  00143	c3		 ret	 0
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_vartype$ = 8						; size = 2
_pSrc$ = 12						; size = 4
?ChangeType@_variant_t@@QAEXGPBV1@@Z PROC		; _variant_t::ChangeType, COMDAT
; _this$ = ecx

; 2306 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2307 :     //
; 2308 :     // If pDest is NULL, convert type in place
; 2309 :     //
; 2310 :     if (pSrc == NULL) {

  00009	83 7d 0c 00	 cmp	 DWORD PTR _pSrc$[ebp], 0
  0000d	75 06		 jne	 SHORT $LN2@ChangeType

; 2311 :         pSrc = this;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	89 45 0c	 mov	 DWORD PTR _pSrc$[ebp], eax
$LN2@ChangeType:

; 2312 :     }
; 2313 : 
; 2314 :     if ((this != pSrc) || (vartype != V_VT(this))) {

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	3b 4d 0c	 cmp	 ecx, DWORD PTR _pSrc$[ebp]
  0001b	75 0e		 jne	 SHORT $LN4@ChangeType
  0001d	0f b7 55 08	 movzx	 edx, WORD PTR _vartype$[ebp]
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00027	3b d1		 cmp	 edx, ecx
  00029	74 27		 je	 SHORT $LN9@ChangeType
$LN4@ChangeType:

; 2315 :         _com_util::CheckError(::VariantChangeType(static_cast<VARIANT*>(this),

  0002b	0f b7 55 08	 movzx	 edx, WORD PTR _vartype$[ebp]
  0002f	52		 push	 edx
  00030	6a 00		 push	 0
  00032	8b 45 0c	 mov	 eax, DWORD PTR _pSrc$[ebp]
  00035	50		 push	 eax
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	51		 push	 ecx
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantChangeType@16
  00040	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 96   :         if (FAILED(hr)) {

  00043	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00047	7d 09		 jge	 SHORT $LN9@ChangeType

; 97   :             _com_issue_error(hr);

  00049	8b 55 f8	 mov	 edx, DWORD PTR _hr$[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$LN9@ChangeType:

; 2316 :                                                   const_cast<VARIANT*>(static_cast<const VARIANT*>(pSrc)),
; 2317 :                                                   0, vartype));
; 2318 :     }
; 2319 : }

  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 08 00	 ret	 8
?ChangeType@_variant_t@@QAEXGPBV1@@Z ENDP		; _variant_t::ChangeType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??B_variant_t@@QBE_JXZ
_TEXT	SEGMENT
_varDest$ = -48						; size = 16
$T2 = -32						; size = 8
_hr$ = -24						; size = 4
_this$ = -20						; size = 4
_pSrc$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??B_variant_t@@QBE_JXZ PROC				; _variant_t::operator __int64, COMDAT
; _this$ = ecx

; 1670 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??B_variant_t@@QBE_JXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1671 :     if (V_VT(this) == VT_I8) {

  00028	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0002e	83 f9 14	 cmp	 ecx, 20			; 00000014H
  00031	75 0e		 jne	 SHORT $LN2@operator

; 1672 :         return V_I8(this);

  00033	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00039	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  0003c	e9 82 00 00 00	 jmp	 $LN16@operator
$LN2@operator:

; 1130 :     ::VariantInit(this);

  00041	8d 45 d0	 lea	 eax, DWORD PTR _varDest$[ebp]
  00044	50		 push	 eax
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4

; 1673 :     }
; 1674 : 
; 1675 :     _variant_t varDest;

  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1676 :     varDest.ChangeType(VT_I8, this);

  00052	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	89 4d f0	 mov	 DWORD PTR _pSrc$[ebp], ecx

; 2310 :     if (pSrc == NULL) {

  00058	83 7d f0 00	 cmp	 DWORD PTR _pSrc$[ebp], 0
  0005c	75 06		 jne	 SHORT $LN8@operator

; 2311 :         pSrc = this;

  0005e	8d 55 d0	 lea	 edx, DWORD PTR _varDest$[ebp]
  00061	89 55 f0	 mov	 DWORD PTR _pSrc$[ebp], edx
$LN8@operator:

; 2312 :     }
; 2313 : 
; 2314 :     if ((this != pSrc) || (vartype != V_VT(this))) {

  00064	8d 45 d0	 lea	 eax, DWORD PTR _varDest$[ebp]
  00067	3b 45 f0	 cmp	 eax, DWORD PTR _pSrc$[ebp]
  0006a	75 10		 jne	 SHORT $LN10@operator
  0006c	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  00071	0f b7 d1	 movzx	 edx, cx
  00074	0f b7 45 d0	 movzx	 eax, WORD PTR _varDest$[ebp]
  00078	3b d0		 cmp	 edx, eax
  0007a	74 24		 je	 SHORT $LN15@operator
$LN10@operator:

; 2315 :         _com_util::CheckError(::VariantChangeType(static_cast<VARIANT*>(this),

  0007c	6a 14		 push	 20			; 00000014H
  0007e	6a 00		 push	 0
  00080	8b 4d f0	 mov	 ecx, DWORD PTR _pSrc$[ebp]
  00083	51		 push	 ecx
  00084	8d 55 d0	 lea	 edx, DWORD PTR _varDest$[ebp]
  00087	52		 push	 edx
  00088	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantChangeType@16
  0008e	89 45 e8	 mov	 DWORD PTR _hr$[ebp], eax

; 96   :         if (FAILED(hr)) {

  00091	83 7d e8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00095	7d 09		 jge	 SHORT $LN15@operator

; 97   :             _com_issue_error(hr);

  00097	8b 45 e8	 mov	 eax, DWORD PTR _hr$[ebp]
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$LN15@operator:

; 1677 : 
; 1678 :     return V_I8(&varDest);

  000a0	8b 4d d8	 mov	 ecx, DWORD PTR _varDest$[ebp+8]
  000a3	89 4d e0	 mov	 DWORD PTR $T2[ebp], ecx
  000a6	8b 55 dc	 mov	 edx, DWORD PTR _varDest$[ebp+12]
  000a9	89 55 e4	 mov	 DWORD PTR $T2[ebp+4], edx
  000ac	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 2334 :     ::VariantClear(this);

  000b3	8d 45 d0	 lea	 eax, DWORD PTR _varDest$[ebp]
  000b6	50		 push	 eax
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4

; 1677 : 
; 1678 :     return V_I8(&varDest);

  000bd	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  000c0	8b 55 e4	 mov	 edx, DWORD PTR $T2[ebp+4]
$LN16@operator:

; 1679 : }

  000c3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cd	59		 pop	 ecx
  000ce	8b e5		 mov	 esp, ebp
  000d0	5d		 pop	 ebp
  000d1	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??B_variant_t@@QBE_JXZ$0:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR _varDest$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$??B_variant_t@@QBE_JXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??B_variant_t@@QBE_JXZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??B_variant_t@@QBE_JXZ ENDP				; _variant_t::operator __int64
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??B_variant_t@@QBEIXZ
_TEXT	SEGMENT
_varDest$ = -44						; size = 16
$T2 = -28						; size = 4
_hr$ = -24						; size = 4
_this$ = -20						; size = 4
_pSrc$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??B_variant_t@@QBEIXZ PROC				; _variant_t::operator unsigned int, COMDAT
; _this$ = ecx

; 1655 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??B_variant_t@@QBEIXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1656 :     if (V_VT(this) == VT_UINT) {

  00028	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0002e	83 f9 17	 cmp	 ecx, 23			; 00000017H
  00031	75 08		 jne	 SHORT $LN2@operator

; 1657 :         return V_UINT(this);

  00033	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00039	eb 79		 jmp	 SHORT $LN16@operator
$LN2@operator:

; 1130 :     ::VariantInit(this);

  0003b	8d 45 d4	 lea	 eax, DWORD PTR _varDest$[ebp]
  0003e	50		 push	 eax
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4

; 1658 :     }
; 1659 : 
; 1660 :     _variant_t varDest;

  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1661 :     varDest.ChangeType(VT_UINT, this);

  0004c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	89 4d f0	 mov	 DWORD PTR _pSrc$[ebp], ecx

; 2310 :     if (pSrc == NULL) {

  00052	83 7d f0 00	 cmp	 DWORD PTR _pSrc$[ebp], 0
  00056	75 06		 jne	 SHORT $LN8@operator

; 2311 :         pSrc = this;

  00058	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  0005b	89 55 f0	 mov	 DWORD PTR _pSrc$[ebp], edx
$LN8@operator:

; 2312 :     }
; 2313 : 
; 2314 :     if ((this != pSrc) || (vartype != V_VT(this))) {

  0005e	8d 45 d4	 lea	 eax, DWORD PTR _varDest$[ebp]
  00061	3b 45 f0	 cmp	 eax, DWORD PTR _pSrc$[ebp]
  00064	75 10		 jne	 SHORT $LN10@operator
  00066	b9 17 00 00 00	 mov	 ecx, 23			; 00000017H
  0006b	0f b7 d1	 movzx	 edx, cx
  0006e	0f b7 45 d4	 movzx	 eax, WORD PTR _varDest$[ebp]
  00072	3b d0		 cmp	 edx, eax
  00074	74 24		 je	 SHORT $LN15@operator
$LN10@operator:

; 2315 :         _com_util::CheckError(::VariantChangeType(static_cast<VARIANT*>(this),

  00076	6a 17		 push	 23			; 00000017H
  00078	6a 00		 push	 0
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _pSrc$[ebp]
  0007d	51		 push	 ecx
  0007e	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  00081	52		 push	 edx
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantChangeType@16
  00088	89 45 e8	 mov	 DWORD PTR _hr$[ebp], eax

; 96   :         if (FAILED(hr)) {

  0008b	83 7d e8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0008f	7d 09		 jge	 SHORT $LN15@operator

; 97   :             _com_issue_error(hr);

  00091	8b 45 e8	 mov	 eax, DWORD PTR _hr$[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$LN15@operator:

; 1662 : 
; 1663 :     return V_UINT(&varDest);

  0009a	8b 4d dc	 mov	 ecx, DWORD PTR _varDest$[ebp+8]
  0009d	89 4d e4	 mov	 DWORD PTR $T2[ebp], ecx
  000a0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 2334 :     ::VariantClear(this);

  000a7	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  000aa	52		 push	 edx
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4

; 1662 : 
; 1663 :     return V_UINT(&varDest);

  000b1	8b 45 e4	 mov	 eax, DWORD PTR $T2[ebp]
$LN16@operator:

; 1664 : }

  000b4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000be	59		 pop	 ecx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??B_variant_t@@QBEIXZ$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _varDest$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$??B_variant_t@@QBEIXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??B_variant_t@@QBEIXZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??B_variant_t@@QBEIXZ ENDP				; _variant_t::operator unsigned int
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??B_variant_t@@QBEHXZ
_TEXT	SEGMENT
_varDest$ = -44						; size = 16
$T2 = -28						; size = 4
_hr$ = -24						; size = 4
_this$ = -20						; size = 4
_pSrc$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??B_variant_t@@QBEHXZ PROC				; _variant_t::operator int, COMDAT
; _this$ = ecx

; 1641 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??B_variant_t@@QBEHXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1642 :     if (V_VT(this) == VT_INT) {

  00028	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0002e	83 f9 16	 cmp	 ecx, 22			; 00000016H
  00031	75 08		 jne	 SHORT $LN2@operator

; 1643 :         return V_INT(this);

  00033	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00039	eb 79		 jmp	 SHORT $LN16@operator
$LN2@operator:

; 1130 :     ::VariantInit(this);

  0003b	8d 45 d4	 lea	 eax, DWORD PTR _varDest$[ebp]
  0003e	50		 push	 eax
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4

; 1644 :     }
; 1645 : 
; 1646 :     _variant_t varDest;

  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1647 :     varDest.ChangeType(VT_INT, this);

  0004c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	89 4d f0	 mov	 DWORD PTR _pSrc$[ebp], ecx

; 2310 :     if (pSrc == NULL) {

  00052	83 7d f0 00	 cmp	 DWORD PTR _pSrc$[ebp], 0
  00056	75 06		 jne	 SHORT $LN8@operator

; 2311 :         pSrc = this;

  00058	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  0005b	89 55 f0	 mov	 DWORD PTR _pSrc$[ebp], edx
$LN8@operator:

; 2312 :     }
; 2313 : 
; 2314 :     if ((this != pSrc) || (vartype != V_VT(this))) {

  0005e	8d 45 d4	 lea	 eax, DWORD PTR _varDest$[ebp]
  00061	3b 45 f0	 cmp	 eax, DWORD PTR _pSrc$[ebp]
  00064	75 10		 jne	 SHORT $LN10@operator
  00066	b9 16 00 00 00	 mov	 ecx, 22			; 00000016H
  0006b	0f b7 d1	 movzx	 edx, cx
  0006e	0f b7 45 d4	 movzx	 eax, WORD PTR _varDest$[ebp]
  00072	3b d0		 cmp	 edx, eax
  00074	74 24		 je	 SHORT $LN15@operator
$LN10@operator:

; 2315 :         _com_util::CheckError(::VariantChangeType(static_cast<VARIANT*>(this),

  00076	6a 16		 push	 22			; 00000016H
  00078	6a 00		 push	 0
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _pSrc$[ebp]
  0007d	51		 push	 ecx
  0007e	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  00081	52		 push	 edx
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantChangeType@16
  00088	89 45 e8	 mov	 DWORD PTR _hr$[ebp], eax

; 96   :         if (FAILED(hr)) {

  0008b	83 7d e8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0008f	7d 09		 jge	 SHORT $LN15@operator

; 97   :             _com_issue_error(hr);

  00091	8b 45 e8	 mov	 eax, DWORD PTR _hr$[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$LN15@operator:

; 1648 : 
; 1649 :     return V_INT(&varDest);

  0009a	8b 4d dc	 mov	 ecx, DWORD PTR _varDest$[ebp+8]
  0009d	89 4d e4	 mov	 DWORD PTR $T2[ebp], ecx
  000a0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 2334 :     ::VariantClear(this);

  000a7	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  000aa	52		 push	 edx
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4

; 1648 : 
; 1649 :     return V_INT(&varDest);

  000b1	8b 45 e4	 mov	 eax, DWORD PTR $T2[ebp]
$LN16@operator:

; 1650 : }

  000b4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000be	59		 pop	 ecx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??B_variant_t@@QBEHXZ$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _varDest$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$??B_variant_t@@QBEHXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??B_variant_t@@QBEHXZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??B_variant_t@@QBEHXZ ENDP				; _variant_t::operator int
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??B_variant_t@@QBEKXZ
_TEXT	SEGMENT
_varDest$ = -44						; size = 16
$T2 = -28						; size = 4
_hr$ = -24						; size = 4
_this$ = -20						; size = 4
_pSrc$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??B_variant_t@@QBEKXZ PROC				; _variant_t::operator unsigned long, COMDAT
; _this$ = ecx

; 1627 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??B_variant_t@@QBEKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1628 :     if (V_VT(this) == VT_UI4) {

  00028	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0002e	83 f9 13	 cmp	 ecx, 19			; 00000013H
  00031	75 08		 jne	 SHORT $LN2@operator

; 1629 :         return V_UI4(this);

  00033	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00039	eb 79		 jmp	 SHORT $LN16@operator
$LN2@operator:

; 1130 :     ::VariantInit(this);

  0003b	8d 45 d4	 lea	 eax, DWORD PTR _varDest$[ebp]
  0003e	50		 push	 eax
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4

; 1630 :     }
; 1631 : 
; 1632 :     _variant_t varDest;

  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1633 :     varDest.ChangeType(VT_UI4, this);

  0004c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	89 4d f0	 mov	 DWORD PTR _pSrc$[ebp], ecx

; 2310 :     if (pSrc == NULL) {

  00052	83 7d f0 00	 cmp	 DWORD PTR _pSrc$[ebp], 0
  00056	75 06		 jne	 SHORT $LN8@operator

; 2311 :         pSrc = this;

  00058	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  0005b	89 55 f0	 mov	 DWORD PTR _pSrc$[ebp], edx
$LN8@operator:

; 2312 :     }
; 2313 : 
; 2314 :     if ((this != pSrc) || (vartype != V_VT(this))) {

  0005e	8d 45 d4	 lea	 eax, DWORD PTR _varDest$[ebp]
  00061	3b 45 f0	 cmp	 eax, DWORD PTR _pSrc$[ebp]
  00064	75 10		 jne	 SHORT $LN10@operator
  00066	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  0006b	0f b7 d1	 movzx	 edx, cx
  0006e	0f b7 45 d4	 movzx	 eax, WORD PTR _varDest$[ebp]
  00072	3b d0		 cmp	 edx, eax
  00074	74 24		 je	 SHORT $LN15@operator
$LN10@operator:

; 2315 :         _com_util::CheckError(::VariantChangeType(static_cast<VARIANT*>(this),

  00076	6a 13		 push	 19			; 00000013H
  00078	6a 00		 push	 0
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _pSrc$[ebp]
  0007d	51		 push	 ecx
  0007e	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  00081	52		 push	 edx
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantChangeType@16
  00088	89 45 e8	 mov	 DWORD PTR _hr$[ebp], eax

; 96   :         if (FAILED(hr)) {

  0008b	83 7d e8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0008f	7d 09		 jge	 SHORT $LN15@operator

; 97   :             _com_issue_error(hr);

  00091	8b 45 e8	 mov	 eax, DWORD PTR _hr$[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$LN15@operator:

; 1634 : 
; 1635 :     return V_UI4(&varDest);

  0009a	8b 4d dc	 mov	 ecx, DWORD PTR _varDest$[ebp+8]
  0009d	89 4d e4	 mov	 DWORD PTR $T2[ebp], ecx
  000a0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 2334 :     ::VariantClear(this);

  000a7	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  000aa	52		 push	 edx
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4

; 1634 : 
; 1635 :     return V_UI4(&varDest);

  000b1	8b 45 e4	 mov	 eax, DWORD PTR $T2[ebp]
$LN16@operator:

; 1636 : }

  000b4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000be	59		 pop	 ecx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??B_variant_t@@QBEKXZ$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _varDest$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$??B_variant_t@@QBEKXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??B_variant_t@@QBEKXZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??B_variant_t@@QBEKXZ ENDP				; _variant_t::operator unsigned long
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??B_variant_t@@QBEGXZ
_TEXT	SEGMENT
_varDest$ = -44						; size = 16
_hr$ = -28						; size = 4
_this$ = -24						; size = 4
_pSrc$ = -20						; size = 4
$T2 = -14						; size = 2
__$EHRec$ = -12						; size = 12
??B_variant_t@@QBEGXZ PROC				; _variant_t::operator unsigned short, COMDAT
; _this$ = ecx

; 1613 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??B_variant_t@@QBEGXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 1614 :     if (V_VT(this) == VT_UI2) {

  00028	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0002e	83 f9 12	 cmp	 ecx, 18			; 00000012H
  00031	75 09		 jne	 SHORT $LN2@operator

; 1615 :         return V_UI2(this);

  00033	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00036	66 8b 42 08	 mov	 ax, WORD PTR [edx+8]
  0003a	eb 7c		 jmp	 SHORT $LN16@operator
$LN2@operator:

; 1130 :     ::VariantInit(this);

  0003c	8d 45 d4	 lea	 eax, DWORD PTR _varDest$[ebp]
  0003f	50		 push	 eax
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4

; 1616 :     }
; 1617 : 
; 1618 :     _variant_t varDest;

  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1619 :     varDest.ChangeType(VT_UI2, this);

  0004d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 4d ec	 mov	 DWORD PTR _pSrc$[ebp], ecx

; 2310 :     if (pSrc == NULL) {

  00053	83 7d ec 00	 cmp	 DWORD PTR _pSrc$[ebp], 0
  00057	75 06		 jne	 SHORT $LN8@operator

; 2311 :         pSrc = this;

  00059	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  0005c	89 55 ec	 mov	 DWORD PTR _pSrc$[ebp], edx
$LN8@operator:

; 2312 :     }
; 2313 : 
; 2314 :     if ((this != pSrc) || (vartype != V_VT(this))) {

  0005f	8d 45 d4	 lea	 eax, DWORD PTR _varDest$[ebp]
  00062	3b 45 ec	 cmp	 eax, DWORD PTR _pSrc$[ebp]
  00065	75 10		 jne	 SHORT $LN10@operator
  00067	b9 12 00 00 00	 mov	 ecx, 18			; 00000012H
  0006c	0f b7 d1	 movzx	 edx, cx
  0006f	0f b7 45 d4	 movzx	 eax, WORD PTR _varDest$[ebp]
  00073	3b d0		 cmp	 edx, eax
  00075	74 24		 je	 SHORT $LN15@operator
$LN10@operator:

; 2315 :         _com_util::CheckError(::VariantChangeType(static_cast<VARIANT*>(this),

  00077	6a 12		 push	 18			; 00000012H
  00079	6a 00		 push	 0
  0007b	8b 4d ec	 mov	 ecx, DWORD PTR _pSrc$[ebp]
  0007e	51		 push	 ecx
  0007f	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  00082	52		 push	 edx
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantChangeType@16
  00089	89 45 e4	 mov	 DWORD PTR _hr$[ebp], eax

; 96   :         if (FAILED(hr)) {

  0008c	83 7d e4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00090	7d 09		 jge	 SHORT $LN15@operator

; 97   :             _com_issue_error(hr);

  00092	8b 45 e4	 mov	 eax, DWORD PTR _hr$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$LN15@operator:

; 1620 : 
; 1621 :     return V_UI2(&varDest);

  0009b	66 8b 4d dc	 mov	 cx, WORD PTR _varDest$[ebp+8]
  0009f	66 89 4d f2	 mov	 WORD PTR $T2[ebp], cx
  000a3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 2334 :     ::VariantClear(this);

  000aa	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  000ad	52		 push	 edx
  000ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4

; 1620 : 
; 1621 :     return V_UI2(&varDest);

  000b4	66 8b 45 f2	 mov	 ax, WORD PTR $T2[ebp]
$LN16@operator:

; 1622 : }

  000b8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c2	59		 pop	 ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??B_variant_t@@QBEGXZ$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _varDest$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$??B_variant_t@@QBEGXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??B_variant_t@@QBEGXZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??B_variant_t@@QBEGXZ ENDP				; _variant_t::operator unsigned short
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??B_variant_t@@QBEEXZ
_TEXT	SEGMENT
_varDest$ = -44						; size = 16
_hr$ = -28						; size = 4
_this$ = -24						; size = 4
_pSrc$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??B_variant_t@@QBEEXZ PROC				; _variant_t::operator unsigned char, COMDAT
; _this$ = ecx

; 1578 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??B_variant_t@@QBEEXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 1579 :     if (V_VT(this) == VT_UI1) {

  00028	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0002e	83 f9 11	 cmp	 ecx, 17			; 00000011H
  00031	75 08		 jne	 SHORT $LN2@operator

; 1580 :         return V_UI1(this);

  00033	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8a 42 08	 mov	 al, BYTE PTR [edx+8]
  00039	eb 79		 jmp	 SHORT $LN16@operator
$LN2@operator:

; 1130 :     ::VariantInit(this);

  0003b	8d 45 d4	 lea	 eax, DWORD PTR _varDest$[ebp]
  0003e	50		 push	 eax
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4

; 1581 :     }
; 1582 : 
; 1583 :     _variant_t varDest;

  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1584 :     varDest.ChangeType(VT_UI1, this);

  0004c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	89 4d ec	 mov	 DWORD PTR _pSrc$[ebp], ecx

; 2310 :     if (pSrc == NULL) {

  00052	83 7d ec 00	 cmp	 DWORD PTR _pSrc$[ebp], 0
  00056	75 06		 jne	 SHORT $LN8@operator

; 2311 :         pSrc = this;

  00058	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  0005b	89 55 ec	 mov	 DWORD PTR _pSrc$[ebp], edx
$LN8@operator:

; 2312 :     }
; 2313 : 
; 2314 :     if ((this != pSrc) || (vartype != V_VT(this))) {

  0005e	8d 45 d4	 lea	 eax, DWORD PTR _varDest$[ebp]
  00061	3b 45 ec	 cmp	 eax, DWORD PTR _pSrc$[ebp]
  00064	75 10		 jne	 SHORT $LN10@operator
  00066	b9 11 00 00 00	 mov	 ecx, 17			; 00000011H
  0006b	0f b7 d1	 movzx	 edx, cx
  0006e	0f b7 45 d4	 movzx	 eax, WORD PTR _varDest$[ebp]
  00072	3b d0		 cmp	 edx, eax
  00074	74 24		 je	 SHORT $LN15@operator
$LN10@operator:

; 2315 :         _com_util::CheckError(::VariantChangeType(static_cast<VARIANT*>(this),

  00076	6a 11		 push	 17			; 00000011H
  00078	6a 00		 push	 0
  0007a	8b 4d ec	 mov	 ecx, DWORD PTR _pSrc$[ebp]
  0007d	51		 push	 ecx
  0007e	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  00081	52		 push	 edx
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantChangeType@16
  00088	89 45 e4	 mov	 DWORD PTR _hr$[ebp], eax

; 96   :         if (FAILED(hr)) {

  0008b	83 7d e4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0008f	7d 09		 jge	 SHORT $LN15@operator

; 97   :             _com_issue_error(hr);

  00091	8b 45 e4	 mov	 eax, DWORD PTR _hr$[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$LN15@operator:

; 1585 : 
; 1586 :     return V_UI1(&varDest);

  0009a	8a 4d dc	 mov	 cl, BYTE PTR _varDest$[ebp+8]
  0009d	88 4d f3	 mov	 BYTE PTR $T2[ebp], cl
  000a0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 2334 :     ::VariantClear(this);

  000a7	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  000aa	52		 push	 edx
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4

; 1585 : 
; 1586 :     return V_UI1(&varDest);

  000b1	8a 45 f3	 mov	 al, BYTE PTR $T2[ebp]
$LN16@operator:

; 1587 : }

  000b4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000be	59		 pop	 ecx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??B_variant_t@@QBEEXZ$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _varDest$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$??B_variant_t@@QBEEXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??B_variant_t@@QBEEXZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??B_variant_t@@QBEEXZ ENDP				; _variant_t::operator unsigned char
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??B_variant_t@@QBENXZ
_TEXT	SEGMENT
_varDest$ = -56						; size = 16
$T2 = -40						; size = 8
tv159 = -32						; size = 8
_hr$ = -24						; size = 4
_this$ = -20						; size = 4
_pSrc$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??B_variant_t@@QBENXZ PROC				; _variant_t::operator double, COMDAT
; _this$ = ecx

; 1466 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??B_variant_t@@QBENXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1467 :     if (V_VT(this) == VT_R8) {

  00028	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0002e	83 f9 05	 cmp	 ecx, 5
  00031	75 12		 jne	 SHORT $LN2@operator

; 1468 :         return V_R8(this);

  00033	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00036	f2 0f 10 42 08	 movsd	 xmm0, QWORD PTR [edx+8]
  0003b	f2 0f 11 45 e0	 movsd	 QWORD PTR tv159[ebp], xmm0
  00040	dd 45 e0	 fld	 QWORD PTR tv159[ebp]
  00043	eb 7d		 jmp	 SHORT $LN1@operator
$LN2@operator:

; 1130 :     ::VariantInit(this);

  00045	8d 45 c8	 lea	 eax, DWORD PTR _varDest$[ebp]
  00048	50		 push	 eax
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4

; 1469 :     }
; 1470 : 
; 1471 :     _variant_t varDest;

  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1472 :     varDest.ChangeType(VT_R8, this);

  00056	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	89 4d f0	 mov	 DWORD PTR _pSrc$[ebp], ecx

; 2310 :     if (pSrc == NULL) {

  0005c	83 7d f0 00	 cmp	 DWORD PTR _pSrc$[ebp], 0
  00060	75 06		 jne	 SHORT $LN8@operator

; 2311 :         pSrc = this;

  00062	8d 55 c8	 lea	 edx, DWORD PTR _varDest$[ebp]
  00065	89 55 f0	 mov	 DWORD PTR _pSrc$[ebp], edx
$LN8@operator:

; 2312 :     }
; 2313 : 
; 2314 :     if ((this != pSrc) || (vartype != V_VT(this))) {

  00068	8d 45 c8	 lea	 eax, DWORD PTR _varDest$[ebp]
  0006b	3b 45 f0	 cmp	 eax, DWORD PTR _pSrc$[ebp]
  0006e	75 10		 jne	 SHORT $LN10@operator
  00070	b9 05 00 00 00	 mov	 ecx, 5
  00075	0f b7 d1	 movzx	 edx, cx
  00078	0f b7 45 c8	 movzx	 eax, WORD PTR _varDest$[ebp]
  0007c	3b d0		 cmp	 edx, eax
  0007e	74 24		 je	 SHORT $LN12@operator
$LN10@operator:

; 2315 :         _com_util::CheckError(::VariantChangeType(static_cast<VARIANT*>(this),

  00080	6a 05		 push	 5
  00082	6a 00		 push	 0
  00084	8b 4d f0	 mov	 ecx, DWORD PTR _pSrc$[ebp]
  00087	51		 push	 ecx
  00088	8d 55 c8	 lea	 edx, DWORD PTR _varDest$[ebp]
  0008b	52		 push	 edx
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantChangeType@16
  00092	89 45 e8	 mov	 DWORD PTR _hr$[ebp], eax

; 96   :         if (FAILED(hr)) {

  00095	83 7d e8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00099	7d 09		 jge	 SHORT $LN13@operator

; 97   :             _com_issue_error(hr);

  0009b	8b 45 e8	 mov	 eax, DWORD PTR _hr$[ebp]
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$LN13@operator:
$LN12@operator:

; 1473 : 
; 1474 :     return V_R8(&varDest);

  000a4	f2 0f 10 45 d0	 movsd	 xmm0, QWORD PTR _varDest$[ebp+8]
  000a9	f2 0f 11 45 d8	 movsd	 QWORD PTR $T2[ebp], xmm0
  000ae	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 2334 :     ::VariantClear(this);

  000b5	8d 4d c8	 lea	 ecx, DWORD PTR _varDest$[ebp]
  000b8	51		 push	 ecx
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4

; 1473 : 
; 1474 :     return V_R8(&varDest);

  000bf	dd 45 d8	 fld	 QWORD PTR $T2[ebp]
$LN1@operator:

; 1475 : }

  000c2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cc	59		 pop	 ecx
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??B_variant_t@@QBENXZ$0:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR _varDest$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$??B_variant_t@@QBENXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??B_variant_t@@QBENXZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??B_variant_t@@QBENXZ ENDP				; _variant_t::operator double
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??B_variant_t@@QBEMXZ
_TEXT	SEGMENT
_varDest$ = -48						; size = 16
$T2 = -32						; size = 4
tv159 = -28						; size = 4
_hr$ = -24						; size = 4
_this$ = -20						; size = 4
_pSrc$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??B_variant_t@@QBEMXZ PROC				; _variant_t::operator float, COMDAT
; _this$ = ecx

; 1452 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??B_variant_t@@QBEMXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1453 :     if (V_VT(this) == VT_R4) {

  00028	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0002e	83 f9 04	 cmp	 ecx, 4
  00031	75 12		 jne	 SHORT $LN2@operator

; 1454 :         return V_R4(this);

  00033	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00036	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  0003b	f3 0f 11 45 e4	 movss	 DWORD PTR tv159[ebp], xmm0
  00040	d9 45 e4	 fld	 DWORD PTR tv159[ebp]
  00043	eb 7d		 jmp	 SHORT $LN1@operator
$LN2@operator:

; 1130 :     ::VariantInit(this);

  00045	8d 45 d0	 lea	 eax, DWORD PTR _varDest$[ebp]
  00048	50		 push	 eax
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4

; 1455 :     }
; 1456 : 
; 1457 :     _variant_t varDest;

  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1458 :     varDest.ChangeType(VT_R4, this);

  00056	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	89 4d f0	 mov	 DWORD PTR _pSrc$[ebp], ecx

; 2310 :     if (pSrc == NULL) {

  0005c	83 7d f0 00	 cmp	 DWORD PTR _pSrc$[ebp], 0
  00060	75 06		 jne	 SHORT $LN8@operator

; 2311 :         pSrc = this;

  00062	8d 55 d0	 lea	 edx, DWORD PTR _varDest$[ebp]
  00065	89 55 f0	 mov	 DWORD PTR _pSrc$[ebp], edx
$LN8@operator:

; 2312 :     }
; 2313 : 
; 2314 :     if ((this != pSrc) || (vartype != V_VT(this))) {

  00068	8d 45 d0	 lea	 eax, DWORD PTR _varDest$[ebp]
  0006b	3b 45 f0	 cmp	 eax, DWORD PTR _pSrc$[ebp]
  0006e	75 10		 jne	 SHORT $LN10@operator
  00070	b9 04 00 00 00	 mov	 ecx, 4
  00075	0f b7 d1	 movzx	 edx, cx
  00078	0f b7 45 d0	 movzx	 eax, WORD PTR _varDest$[ebp]
  0007c	3b d0		 cmp	 edx, eax
  0007e	74 24		 je	 SHORT $LN12@operator
$LN10@operator:

; 2315 :         _com_util::CheckError(::VariantChangeType(static_cast<VARIANT*>(this),

  00080	6a 04		 push	 4
  00082	6a 00		 push	 0
  00084	8b 4d f0	 mov	 ecx, DWORD PTR _pSrc$[ebp]
  00087	51		 push	 ecx
  00088	8d 55 d0	 lea	 edx, DWORD PTR _varDest$[ebp]
  0008b	52		 push	 edx
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantChangeType@16
  00092	89 45 e8	 mov	 DWORD PTR _hr$[ebp], eax

; 96   :         if (FAILED(hr)) {

  00095	83 7d e8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00099	7d 09		 jge	 SHORT $LN13@operator

; 97   :             _com_issue_error(hr);

  0009b	8b 45 e8	 mov	 eax, DWORD PTR _hr$[ebp]
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$LN13@operator:
$LN12@operator:

; 1459 : 
; 1460 :     return V_R4(&varDest);

  000a4	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _varDest$[ebp+8]
  000a9	f3 0f 11 45 e0	 movss	 DWORD PTR $T2[ebp], xmm0
  000ae	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 2334 :     ::VariantClear(this);

  000b5	8d 4d d0	 lea	 ecx, DWORD PTR _varDest$[ebp]
  000b8	51		 push	 ecx
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4

; 1459 : 
; 1460 :     return V_R4(&varDest);

  000bf	d9 45 e0	 fld	 DWORD PTR $T2[ebp]
$LN1@operator:

; 1461 : }

  000c2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cc	59		 pop	 ecx
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??B_variant_t@@QBEMXZ$0:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR _varDest$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$??B_variant_t@@QBEMXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??B_variant_t@@QBEMXZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??B_variant_t@@QBEMXZ ENDP				; _variant_t::operator float
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??B_variant_t@@QBEJXZ
_TEXT	SEGMENT
_varDest$ = -44						; size = 16
$T2 = -28						; size = 4
_hr$ = -24						; size = 4
_this$ = -20						; size = 4
_pSrc$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??B_variant_t@@QBEJXZ PROC				; _variant_t::operator long, COMDAT
; _this$ = ecx

; 1438 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??B_variant_t@@QBEJXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1439 :     if (V_VT(this) == VT_I4) {

  00028	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0002e	83 f9 03	 cmp	 ecx, 3
  00031	75 08		 jne	 SHORT $LN2@operator

; 1440 :         return V_I4(this);

  00033	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00039	eb 79		 jmp	 SHORT $LN16@operator
$LN2@operator:

; 1130 :     ::VariantInit(this);

  0003b	8d 45 d4	 lea	 eax, DWORD PTR _varDest$[ebp]
  0003e	50		 push	 eax
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4

; 1441 :     }
; 1442 : 
; 1443 :     _variant_t varDest;

  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1444 :     varDest.ChangeType(VT_I4, this);

  0004c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	89 4d f0	 mov	 DWORD PTR _pSrc$[ebp], ecx

; 2310 :     if (pSrc == NULL) {

  00052	83 7d f0 00	 cmp	 DWORD PTR _pSrc$[ebp], 0
  00056	75 06		 jne	 SHORT $LN8@operator

; 2311 :         pSrc = this;

  00058	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  0005b	89 55 f0	 mov	 DWORD PTR _pSrc$[ebp], edx
$LN8@operator:

; 2312 :     }
; 2313 : 
; 2314 :     if ((this != pSrc) || (vartype != V_VT(this))) {

  0005e	8d 45 d4	 lea	 eax, DWORD PTR _varDest$[ebp]
  00061	3b 45 f0	 cmp	 eax, DWORD PTR _pSrc$[ebp]
  00064	75 10		 jne	 SHORT $LN10@operator
  00066	b9 03 00 00 00	 mov	 ecx, 3
  0006b	0f b7 d1	 movzx	 edx, cx
  0006e	0f b7 45 d4	 movzx	 eax, WORD PTR _varDest$[ebp]
  00072	3b d0		 cmp	 edx, eax
  00074	74 24		 je	 SHORT $LN15@operator
$LN10@operator:

; 2315 :         _com_util::CheckError(::VariantChangeType(static_cast<VARIANT*>(this),

  00076	6a 03		 push	 3
  00078	6a 00		 push	 0
  0007a	8b 4d f0	 mov	 ecx, DWORD PTR _pSrc$[ebp]
  0007d	51		 push	 ecx
  0007e	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  00081	52		 push	 edx
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantChangeType@16
  00088	89 45 e8	 mov	 DWORD PTR _hr$[ebp], eax

; 96   :         if (FAILED(hr)) {

  0008b	83 7d e8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0008f	7d 09		 jge	 SHORT $LN15@operator

; 97   :             _com_issue_error(hr);

  00091	8b 45 e8	 mov	 eax, DWORD PTR _hr$[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$LN15@operator:

; 1445 : 
; 1446 :     return V_I4(&varDest);

  0009a	8b 4d dc	 mov	 ecx, DWORD PTR _varDest$[ebp+8]
  0009d	89 4d e4	 mov	 DWORD PTR $T2[ebp], ecx
  000a0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 2334 :     ::VariantClear(this);

  000a7	8d 55 d4	 lea	 edx, DWORD PTR _varDest$[ebp]
  000aa	52		 push	 edx
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4

; 1445 : 
; 1446 :     return V_I4(&varDest);

  000b1	8b 45 e4	 mov	 eax, DWORD PTR $T2[ebp]
$LN16@operator:

; 1447 : }

  000b4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000be	59		 pop	 ecx
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??B_variant_t@@QBEJXZ$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _varDest$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_variant_t@@QAE@XZ	; _variant_t::~_variant_t
__ehhandler$??B_variant_t@@QBEJXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??B_variant_t@@QBEJXZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??B_variant_t@@QBEJXZ ENDP				; _variant_t::operator long
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_variant_t@@QAE@XZ PROC				; _variant_t::~_variant_t, COMDAT
; _this$ = ecx

; 2333 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2334 :     ::VariantClear(this);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantClear@4

; 2335 : }

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??1_variant_t@@QAE@XZ ENDP				; _variant_t::~_variant_t
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??0_variant_t@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i8Src$ = 8						; size = 8
??0_variant_t@@QAE@_J@Z PROC				; _variant_t::_variant_t, COMDAT
; _this$ = ecx

; 1401 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1402 :     V_VT(this) = VT_I8;

  00007	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	66 89 01	 mov	 WORD PTR [ecx], ax

; 1403 :     V_I8(this) = i8Src;

  00012	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00015	8b 45 08	 mov	 eax, DWORD PTR _i8Src$[ebp]
  00018	89 42 08	 mov	 DWORD PTR [edx+8], eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR _i8Src$[ebp+4]
  0001e	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 1404 : }

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??0_variant_t@@QAE@_J@Z ENDP				; _variant_t::_variant_t
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??0_variant_t@@QAE@E@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bSrc$ = 8						; size = 1
??0_variant_t@@QAE@E@Z PROC				; _variant_t::_variant_t, COMDAT
; _this$ = ecx

; 1352 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1353 :     V_VT(this) = VT_UI1;

  00007	b8 11 00 00 00	 mov	 eax, 17			; 00000011H
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	66 89 01	 mov	 WORD PTR [ecx], ax

; 1354 :     V_UI1(this) = bSrc;

  00012	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00015	8a 45 08	 mov	 al, BYTE PTR _bSrc$[ebp]
  00018	88 42 08	 mov	 BYTE PTR [edx+8], al

; 1355 : }

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??0_variant_t@@QAE@E@Z ENDP				; _variant_t::_variant_t
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??0_variant_t@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pSrc$ = 8						; size = 4
??0_variant_t@@QAE@PBD@Z PROC				; _variant_t::_variant_t, COMDAT
; _this$ = ecx

; 1292 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1293 :     V_VT(this) = VT_BSTR;

  00007	b8 08 00 00 00	 mov	 eax, 8
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	66 89 01	 mov	 WORD PTR [ecx], ax

; 1294 :     V_BSTR(this) = _com_util::ConvertStringToBSTR(pSrc);

  00012	8b 55 08	 mov	 edx, DWORD PTR _pSrc$[ebp]
  00015	52		 push	 edx
  00016	e8 00 00 00 00	 call	 ?ConvertStringToBSTR@_com_util@@YGPA_WPBD@Z ; _com_util::ConvertStringToBSTR
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1295 : }

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
??0_variant_t@@QAE@PBD@Z ENDP				; _variant_t::_variant_t
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??0_variant_t@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pSrc$ = 8						; size = 4
??0_variant_t@@QAE@PB_W@Z PROC				; _variant_t::_variant_t, COMDAT
; _this$ = ecx

; 1279 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1280 :     V_VT(this) = VT_BSTR;

  00007	b8 08 00 00 00	 mov	 eax, 8
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	66 89 01	 mov	 WORD PTR [ecx], ax

; 1281 : 
; 1282 :     V_BSTR(this) = ::SysAllocString(pSrc);

  00012	8b 55 08	 mov	 edx, DWORD PTR _pSrc$[ebp]
  00015	52		 push	 edx
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysAllocString@4
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1283 : 
; 1284 :     if (V_BSTR(this) == NULL && pSrc != NULL) {

  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00029	75 10		 jne	 SHORT $LN1@variant_t
  0002b	83 7d 08 00	 cmp	 DWORD PTR _pSrc$[ebp], 0
  0002f	74 0a		 je	 SHORT $LN1@variant_t

; 1285 :             _com_issue_error(E_OUTOFMEMORY);

  00031	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00036	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$LN1@variant_t:

; 1286 :     }
; 1287 : }

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$LN3@variant_t:
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
??0_variant_t@@QAE@PB_W@Z ENDP				; _variant_t::_variant_t
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??0_variant_t@@QAE@NG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dblSrc$ = 8						; size = 8
_vtSrc$ = 16						; size = 2
??0_variant_t@@QAE@NG@Z PROC				; _variant_t::_variant_t, COMDAT
; _this$ = ecx

; 1233 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1234 :     if ((vtSrc != VT_R8) && (vtSrc != VT_DATE)) {

  00007	0f b7 45 10	 movzx	 eax, WORD PTR _vtSrc$[ebp]
  0000b	83 f8 05	 cmp	 eax, 5
  0000e	74 15		 je	 SHORT $LN2@variant_t
  00010	0f b7 4d 10	 movzx	 ecx, WORD PTR _vtSrc$[ebp]
  00014	83 f9 07	 cmp	 ecx, 7
  00017	74 0c		 je	 SHORT $LN2@variant_t

; 1235 :         _com_issue_error(E_INVALIDARG);

  00019	68 57 00 07 80	 push	 -2147024809		; 80070057H
  0001e	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error

; 1236 :         return;

  00023	eb 3b		 jmp	 SHORT $LN1@variant_t
$LN2@variant_t:

; 1237 :     }
; 1238 : 
; 1239 :     if (vtSrc == VT_DATE) {

  00025	0f b7 55 10	 movzx	 edx, WORD PTR _vtSrc$[ebp]
  00029	83 fa 07	 cmp	 edx, 7
  0002c	75 1a		 jne	 SHORT $LN3@variant_t

; 1240 :         V_VT(this) = VT_DATE;

  0002e	b8 07 00 00 00	 mov	 eax, 7
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	66 89 01	 mov	 WORD PTR [ecx], ax

; 1241 :         V_DATE(this) = dblSrc;

  00039	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003c	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _dblSrc$[ebp]
  00041	f2 0f 11 42 08	 movsd	 QWORD PTR [edx+8], xmm0

; 1242 :     }
; 1243 :     else {

  00046	eb 18		 jmp	 SHORT $LN4@variant_t
$LN3@variant_t:

; 1244 :         V_VT(this) = VT_R8;

  00048	b8 05 00 00 00	 mov	 eax, 5
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	66 89 01	 mov	 WORD PTR [ecx], ax

; 1245 :         V_R8(this) = dblSrc;

  00053	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00056	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _dblSrc$[ebp]
  0005b	f2 0f 11 42 08	 movsd	 QWORD PTR [edx+8], xmm0
$LN4@variant_t:
$LN1@variant_t:

; 1246 :     }
; 1247 : }

  00060	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@variant_t:
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 0c 00	 ret	 12			; 0000000cH
??0_variant_t@@QAE@NG@Z ENDP				; _variant_t::_variant_t
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??0_variant_t@@QAE@JG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv132 = -2						; size = 2
_lSrc$ = 8						; size = 4
_vtSrc$ = 12						; size = 2
??0_variant_t@@QAE@JG@Z PROC				; _variant_t::_variant_t, COMDAT
; _this$ = ecx

; 1201 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1202 :     if ((vtSrc != VT_I4) && (vtSrc != VT_ERROR) && (vtSrc != VT_BOOL)) {

  00009	0f b7 45 0c	 movzx	 eax, WORD PTR _vtSrc$[ebp]
  0000d	83 f8 03	 cmp	 eax, 3
  00010	74 1e		 je	 SHORT $LN2@variant_t
  00012	0f b7 4d 0c	 movzx	 ecx, WORD PTR _vtSrc$[ebp]
  00016	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  00019	74 15		 je	 SHORT $LN2@variant_t
  0001b	0f b7 55 0c	 movzx	 edx, WORD PTR _vtSrc$[ebp]
  0001f	83 fa 0b	 cmp	 edx, 11			; 0000000bH
  00022	74 0c		 je	 SHORT $LN2@variant_t

; 1203 :         _com_issue_error(E_INVALIDARG);

  00024	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00029	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error

; 1204 :         return;

  0002e	eb 69		 jmp	 SHORT $LN1@variant_t
$LN2@variant_t:

; 1205 :     }
; 1206 : 
; 1207 :     if (vtSrc == VT_ERROR) {

  00030	0f b7 45 0c	 movzx	 eax, WORD PTR _vtSrc$[ebp]
  00034	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00037	75 16		 jne	 SHORT $LN3@variant_t

; 1208 :         V_VT(this) = VT_ERROR;

  00039	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0003e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00041	66 89 0a	 mov	 WORD PTR [edx], cx

; 1209 :         V_ERROR(this) = lSrc;

  00044	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _lSrc$[ebp]
  0004a	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0004d	eb 4a		 jmp	 SHORT $LN1@variant_t
$LN3@variant_t:

; 1210 :     }
; 1211 :     else if (vtSrc == VT_BOOL) {

  0004f	0f b7 55 0c	 movzx	 edx, WORD PTR _vtSrc$[ebp]
  00053	83 fa 0b	 cmp	 edx, 11			; 0000000bH
  00056	75 2d		 jne	 SHORT $LN5@variant_t

; 1212 :         V_VT(this) = VT_BOOL;

  00058	b8 0b 00 00 00	 mov	 eax, 11			; 0000000bH
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	66 89 01	 mov	 WORD PTR [ecx], ax

; 1213 :         V_BOOL(this) = (lSrc ? VARIANT_TRUE : VARIANT_FALSE);

  00063	83 7d 08 00	 cmp	 DWORD PTR _lSrc$[ebp], 0
  00067	74 09		 je	 SHORT $LN8@variant_t
  00069	83 ca ff	 or	 edx, -1
  0006c	66 89 55 fe	 mov	 WORD PTR tv132[ebp], dx
  00070	eb 06		 jmp	 SHORT $LN9@variant_t
$LN8@variant_t:
  00072	33 c0		 xor	 eax, eax
  00074	66 89 45 fe	 mov	 WORD PTR tv132[ebp], ax
$LN9@variant_t:
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	66 8b 55 fe	 mov	 dx, WORD PTR tv132[ebp]
  0007f	66 89 51 08	 mov	 WORD PTR [ecx+8], dx

; 1214 :     }
; 1215 :     else {

  00083	eb 14		 jmp	 SHORT $LN1@variant_t
$LN5@variant_t:

; 1216 :         V_VT(this) = VT_I4;

  00085	b8 03 00 00 00	 mov	 eax, 3
  0008a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	66 89 01	 mov	 WORD PTR [ecx], ax

; 1217 :         V_I4(this) = lSrc;

  00090	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00093	8b 45 08	 mov	 eax, DWORD PTR _lSrc$[ebp]
  00096	89 42 08	 mov	 DWORD PTR [edx+8], eax
$LN1@variant_t:

; 1218 :     }
; 1219 : }

  00099	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN7@variant_t:
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c2 08 00	 ret	 8
??0_variant_t@@QAE@JG@Z ENDP				; _variant_t::_variant_t
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_variant_t@@QAE@XZ PROC				; _variant_t::_variant_t, COMDAT
; _this$ = ecx

; 1129 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1130 :     ::VariantInit(this);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantInit@4

; 1131 : }

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??0_variant_t@@QAE@XZ ENDP				; _variant_t::_variant_t
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\comutil.h
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT
_hr$ = 8						; size = 4
?CheckError@_com_util@@YAXJ@Z PROC			; _com_util::CheckError, COMDAT

; 95   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 96   :         if (FAILED(hr)) {

  00003	83 7d 08 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00007	7d 09		 jge	 SHORT $LN3@CheckError

; 97   :             _com_issue_error(hr);

  00009	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?_com_issue_error@@YGXJ@Z ; _com_issue_error
$LN3@CheckError:

; 98   :         }
; 99   :     }

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?CheckError@_com_util@@YAXJ@Z ENDP			; _com_util::CheckError
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcomtime.h
;	COMDAT ??4COleDateTime@ATL@@QAEAAV01@ABUtagVARIANT@@@Z
_TEXT	SEGMENT
_varDest$1 = -20					; size = 16
_this$ = -4						; size = 4
_varSrc$ = 8						; size = 4
??4COleDateTime@ATL@@QAEAAV01@ABUtagVARIANT@@@Z PROC	; ATL::COleDateTime::operator=, COMDAT
; _this$ = ecx

; 657  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 658  : 	if (varSrc.vt != VT_DATE)

  00009	8b 45 08	 mov	 eax, DWORD PTR _varSrc$[ebp]
  0000c	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0000f	83 f9 07	 cmp	 ecx, 7
  00012	74 40		 je	 SHORT $LN2@operator

; 659  : 	{
; 660  : 		VARIANT varDest;
; 661  : 		varDest.vt = VT_EMPTY;

  00014	33 d2		 xor	 edx, edx
  00016	66 89 55 ec	 mov	 WORD PTR _varDest$1[ebp], dx

; 662  : 		if(SUCCEEDED(::VariantChangeType(&varDest, const_cast<VARIANT *>(&varSrc), 0, VT_DATE)))

  0001a	6a 07		 push	 7
  0001c	6a 00		 push	 0
  0001e	8b 45 08	 mov	 eax, DWORD PTR _varSrc$[ebp]
  00021	50		 push	 eax
  00022	8d 4d ec	 lea	 ecx, DWORD PTR _varDest$1[ebp]
  00025	51		 push	 ecx
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantChangeType@16
  0002c	85 c0		 test	 eax, eax
  0002e	7c 18		 jl	 SHORT $LN4@operator

; 663  : 		{
; 664  : 			m_dt = varDest.date;

  00030	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00033	f2 0f 10 45 f4	 movsd	 xmm0, QWORD PTR _varDest$1[ebp+8]
  00038	f2 0f 11 02	 movsd	 QWORD PTR [edx], xmm0

; 665  : 			m_status = valid;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 666  : 		}
; 667  : 		else

  00046	eb 0a		 jmp	 SHORT $LN5@operator
$LN4@operator:

; 668  : 			m_status = invalid;

  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [ecx+8], 1
$LN5@operator:

; 669  : 	}
; 670  : 	else

  00052	eb 19		 jmp	 SHORT $LN3@operator
$LN2@operator:

; 671  : 	{
; 672  : 		m_dt = varSrc.date;

  00054	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00057	8b 45 08	 mov	 eax, DWORD PTR _varSrc$[ebp]
  0005a	f2 0f 10 40 08	 movsd	 xmm0, QWORD PTR [eax+8]
  0005f	f2 0f 11 02	 movsd	 QWORD PTR [edx], xmm0

; 673  : 		m_status = valid;

  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
$LN3@operator:

; 674  : 	}
; 675  : 
; 676  : 	return *this;

  0006d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 677  : }

  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 04 00	 ret	 4
??4COleDateTime@ATL@@QAEAAV01@ABUtagVARIANT@@@Z ENDP	; ATL::COleDateTime::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcomtime.h
;	COMDAT ?GetDayOfWeek@COleDateTime@ATL@@QBEHXZ
_TEXT	SEGMENT
$T1 = -36						; size = 4
tv74 = -32						; size = 4
tv83 = -28						; size = 4
_this$ = -24						; size = 4
_st$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?GetDayOfWeek@COleDateTime@ATL@@QBEHXZ PROC		; ATL::COleDateTime::GetDayOfWeek, COMDAT
; _this$ = ecx

; 645  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 646  : 	SYSTEMTIME st = {0};

  00013	33 c0		 xor	 eax, eax
  00015	89 45 ec	 mov	 DWORD PTR _st$[ebp], eax
  00018	89 45 f0	 mov	 DWORD PTR _st$[ebp+4], eax
  0001b	89 45 f4	 mov	 DWORD PTR _st$[ebp+8], eax
  0001e	89 45 f8	 mov	 DWORD PTR _st$[ebp+12], eax

; 594  : 	return m_status;

  00021	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00027	89 55 dc	 mov	 DWORD PTR $T1[ebp], edx

; 599  : 	return GetStatus() == valid && ::VariantTimeToSystemTime(m_dt, &sysTime) == TRUE;

  0002a	83 7d dc 00	 cmp	 DWORD PTR $T1[ebp], 0
  0002e	75 27		 jne	 SHORT $LN7@GetDayOfWe
  00030	8d 45 ec	 lea	 eax, DWORD PTR _st$[ebp]
  00033	50		 push	 eax
  00034	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 ec 08	 sub	 esp, 8
  0003a	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  0003e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantTimeToSystemTime@12
  00049	83 f8 01	 cmp	 eax, 1
  0004c	75 09		 jne	 SHORT $LN7@GetDayOfWe
  0004e	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv83[ebp], 1
  00055	eb 07		 jmp	 SHORT $LN8@GetDayOfWe
$LN7@GetDayOfWe:
  00057	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN8@GetDayOfWe:

; 647  : 	return GetAsSystemTime(st) ? st.wDayOfWeek + 1 : error;

  0005e	0f b6 55 e4	 movzx	 edx, BYTE PTR tv83[ebp]
  00062	85 d2		 test	 edx, edx
  00064	74 0c		 je	 SHORT $LN3@GetDayOfWe
  00066	0f b7 45 f0	 movzx	 eax, WORD PTR _st$[ebp+4]
  0006a	83 c0 01	 add	 eax, 1
  0006d	89 45 e0	 mov	 DWORD PTR tv74[ebp], eax
  00070	eb 07		 jmp	 SHORT $LN4@GetDayOfWe
$LN3@GetDayOfWe:
  00072	c7 45 e0 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
$LN4@GetDayOfWe:
  00079	8b 45 e0	 mov	 eax, DWORD PTR tv74[ebp]

; 648  : }

  0007c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007f	33 cd		 xor	 ecx, ebp
  00081	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
?GetDayOfWeek@COleDateTime@ATL@@QBEHXZ ENDP		; ATL::COleDateTime::GetDayOfWeek
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcomtime.h
;	COMDAT ?GetSecond@COleDateTime@ATL@@QBEHXZ
_TEXT	SEGMENT
$T1 = -36						; size = 4
tv73 = -32						; size = 4
tv82 = -28						; size = 4
_this$ = -24						; size = 4
_st$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?GetSecond@COleDateTime@ATL@@QBEHXZ PROC		; ATL::COleDateTime::GetSecond, COMDAT
; _this$ = ecx

; 639  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 640  : 	SYSTEMTIME st = {0};

  00013	33 c0		 xor	 eax, eax
  00015	89 45 ec	 mov	 DWORD PTR _st$[ebp], eax
  00018	89 45 f0	 mov	 DWORD PTR _st$[ebp+4], eax
  0001b	89 45 f4	 mov	 DWORD PTR _st$[ebp+8], eax
  0001e	89 45 f8	 mov	 DWORD PTR _st$[ebp+12], eax

; 594  : 	return m_status;

  00021	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00027	89 55 dc	 mov	 DWORD PTR $T1[ebp], edx

; 599  : 	return GetStatus() == valid && ::VariantTimeToSystemTime(m_dt, &sysTime) == TRUE;

  0002a	83 7d dc 00	 cmp	 DWORD PTR $T1[ebp], 0
  0002e	75 27		 jne	 SHORT $LN7@GetSecond
  00030	8d 45 ec	 lea	 eax, DWORD PTR _st$[ebp]
  00033	50		 push	 eax
  00034	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 ec 08	 sub	 esp, 8
  0003a	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  0003e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantTimeToSystemTime@12
  00049	83 f8 01	 cmp	 eax, 1
  0004c	75 09		 jne	 SHORT $LN7@GetSecond
  0004e	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv82[ebp], 1
  00055	eb 07		 jmp	 SHORT $LN8@GetSecond
$LN7@GetSecond:
  00057	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN8@GetSecond:

; 641  : 	return GetAsSystemTime(st) ? st.wSecond : error;

  0005e	0f b6 55 e4	 movzx	 edx, BYTE PTR tv82[ebp]
  00062	85 d2		 test	 edx, edx
  00064	74 09		 je	 SHORT $LN3@GetSecond
  00066	0f b7 45 f8	 movzx	 eax, WORD PTR _st$[ebp+12]
  0006a	89 45 e0	 mov	 DWORD PTR tv73[ebp], eax
  0006d	eb 07		 jmp	 SHORT $LN4@GetSecond
$LN3@GetSecond:
  0006f	c7 45 e0 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
$LN4@GetSecond:
  00076	8b 45 e0	 mov	 eax, DWORD PTR tv73[ebp]

; 642  : }

  00079	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007c	33 cd		 xor	 ecx, ebp
  0007e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?GetSecond@COleDateTime@ATL@@QBEHXZ ENDP		; ATL::COleDateTime::GetSecond
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcomtime.h
;	COMDAT ?GetMinute@COleDateTime@ATL@@QBEHXZ
_TEXT	SEGMENT
$T1 = -36						; size = 4
tv73 = -32						; size = 4
tv82 = -28						; size = 4
_this$ = -24						; size = 4
_st$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?GetMinute@COleDateTime@ATL@@QBEHXZ PROC		; ATL::COleDateTime::GetMinute, COMDAT
; _this$ = ecx

; 633  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 634  : 	SYSTEMTIME st = {0};

  00013	33 c0		 xor	 eax, eax
  00015	89 45 ec	 mov	 DWORD PTR _st$[ebp], eax
  00018	89 45 f0	 mov	 DWORD PTR _st$[ebp+4], eax
  0001b	89 45 f4	 mov	 DWORD PTR _st$[ebp+8], eax
  0001e	89 45 f8	 mov	 DWORD PTR _st$[ebp+12], eax

; 594  : 	return m_status;

  00021	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00027	89 55 dc	 mov	 DWORD PTR $T1[ebp], edx

; 599  : 	return GetStatus() == valid && ::VariantTimeToSystemTime(m_dt, &sysTime) == TRUE;

  0002a	83 7d dc 00	 cmp	 DWORD PTR $T1[ebp], 0
  0002e	75 27		 jne	 SHORT $LN7@GetMinute
  00030	8d 45 ec	 lea	 eax, DWORD PTR _st$[ebp]
  00033	50		 push	 eax
  00034	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 ec 08	 sub	 esp, 8
  0003a	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  0003e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantTimeToSystemTime@12
  00049	83 f8 01	 cmp	 eax, 1
  0004c	75 09		 jne	 SHORT $LN7@GetMinute
  0004e	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv82[ebp], 1
  00055	eb 07		 jmp	 SHORT $LN8@GetMinute
$LN7@GetMinute:
  00057	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN8@GetMinute:

; 635  : 	return GetAsSystemTime(st) ? st.wMinute : error;

  0005e	0f b6 55 e4	 movzx	 edx, BYTE PTR tv82[ebp]
  00062	85 d2		 test	 edx, edx
  00064	74 09		 je	 SHORT $LN3@GetMinute
  00066	0f b7 45 f6	 movzx	 eax, WORD PTR _st$[ebp+10]
  0006a	89 45 e0	 mov	 DWORD PTR tv73[ebp], eax
  0006d	eb 07		 jmp	 SHORT $LN4@GetMinute
$LN3@GetMinute:
  0006f	c7 45 e0 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
$LN4@GetMinute:
  00076	8b 45 e0	 mov	 eax, DWORD PTR tv73[ebp]

; 636  : }

  00079	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007c	33 cd		 xor	 ecx, ebp
  0007e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?GetMinute@COleDateTime@ATL@@QBEHXZ ENDP		; ATL::COleDateTime::GetMinute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcomtime.h
;	COMDAT ?GetHour@COleDateTime@ATL@@QBEHXZ
_TEXT	SEGMENT
$T1 = -36						; size = 4
tv73 = -32						; size = 4
tv82 = -28						; size = 4
_this$ = -24						; size = 4
_st$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?GetHour@COleDateTime@ATL@@QBEHXZ PROC			; ATL::COleDateTime::GetHour, COMDAT
; _this$ = ecx

; 627  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 628  : 	SYSTEMTIME st = {0};

  00013	33 c0		 xor	 eax, eax
  00015	89 45 ec	 mov	 DWORD PTR _st$[ebp], eax
  00018	89 45 f0	 mov	 DWORD PTR _st$[ebp+4], eax
  0001b	89 45 f4	 mov	 DWORD PTR _st$[ebp+8], eax
  0001e	89 45 f8	 mov	 DWORD PTR _st$[ebp+12], eax

; 594  : 	return m_status;

  00021	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00027	89 55 dc	 mov	 DWORD PTR $T1[ebp], edx

; 599  : 	return GetStatus() == valid && ::VariantTimeToSystemTime(m_dt, &sysTime) == TRUE;

  0002a	83 7d dc 00	 cmp	 DWORD PTR $T1[ebp], 0
  0002e	75 27		 jne	 SHORT $LN7@GetHour
  00030	8d 45 ec	 lea	 eax, DWORD PTR _st$[ebp]
  00033	50		 push	 eax
  00034	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 ec 08	 sub	 esp, 8
  0003a	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  0003e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantTimeToSystemTime@12
  00049	83 f8 01	 cmp	 eax, 1
  0004c	75 09		 jne	 SHORT $LN7@GetHour
  0004e	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv82[ebp], 1
  00055	eb 07		 jmp	 SHORT $LN8@GetHour
$LN7@GetHour:
  00057	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN8@GetHour:

; 629  : 	return GetAsSystemTime(st) ? st.wHour : error;

  0005e	0f b6 55 e4	 movzx	 edx, BYTE PTR tv82[ebp]
  00062	85 d2		 test	 edx, edx
  00064	74 09		 je	 SHORT $LN3@GetHour
  00066	0f b7 45 f4	 movzx	 eax, WORD PTR _st$[ebp+8]
  0006a	89 45 e0	 mov	 DWORD PTR tv73[ebp], eax
  0006d	eb 07		 jmp	 SHORT $LN4@GetHour
$LN3@GetHour:
  0006f	c7 45 e0 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
$LN4@GetHour:
  00076	8b 45 e0	 mov	 eax, DWORD PTR tv73[ebp]

; 630  : }

  00079	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007c	33 cd		 xor	 ecx, ebp
  0007e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?GetHour@COleDateTime@ATL@@QBEHXZ ENDP			; ATL::COleDateTime::GetHour
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcomtime.h
;	COMDAT ?GetDay@COleDateTime@ATL@@QBEHXZ
_TEXT	SEGMENT
$T1 = -36						; size = 4
tv73 = -32						; size = 4
tv82 = -28						; size = 4
_this$ = -24						; size = 4
_st$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?GetDay@COleDateTime@ATL@@QBEHXZ PROC			; ATL::COleDateTime::GetDay, COMDAT
; _this$ = ecx

; 621  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 622  : 	SYSTEMTIME st = {0};

  00013	33 c0		 xor	 eax, eax
  00015	89 45 ec	 mov	 DWORD PTR _st$[ebp], eax
  00018	89 45 f0	 mov	 DWORD PTR _st$[ebp+4], eax
  0001b	89 45 f4	 mov	 DWORD PTR _st$[ebp+8], eax
  0001e	89 45 f8	 mov	 DWORD PTR _st$[ebp+12], eax

; 594  : 	return m_status;

  00021	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00027	89 55 dc	 mov	 DWORD PTR $T1[ebp], edx

; 599  : 	return GetStatus() == valid && ::VariantTimeToSystemTime(m_dt, &sysTime) == TRUE;

  0002a	83 7d dc 00	 cmp	 DWORD PTR $T1[ebp], 0
  0002e	75 27		 jne	 SHORT $LN7@GetDay
  00030	8d 45 ec	 lea	 eax, DWORD PTR _st$[ebp]
  00033	50		 push	 eax
  00034	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 ec 08	 sub	 esp, 8
  0003a	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  0003e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantTimeToSystemTime@12
  00049	83 f8 01	 cmp	 eax, 1
  0004c	75 09		 jne	 SHORT $LN7@GetDay
  0004e	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv82[ebp], 1
  00055	eb 07		 jmp	 SHORT $LN8@GetDay
$LN7@GetDay:
  00057	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN8@GetDay:

; 623  : 	return GetAsSystemTime(st) ? st.wDay : error;

  0005e	0f b6 55 e4	 movzx	 edx, BYTE PTR tv82[ebp]
  00062	85 d2		 test	 edx, edx
  00064	74 09		 je	 SHORT $LN3@GetDay
  00066	0f b7 45 f2	 movzx	 eax, WORD PTR _st$[ebp+6]
  0006a	89 45 e0	 mov	 DWORD PTR tv73[ebp], eax
  0006d	eb 07		 jmp	 SHORT $LN4@GetDay
$LN3@GetDay:
  0006f	c7 45 e0 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
$LN4@GetDay:
  00076	8b 45 e0	 mov	 eax, DWORD PTR tv73[ebp]

; 624  : }

  00079	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007c	33 cd		 xor	 ecx, ebp
  0007e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?GetDay@COleDateTime@ATL@@QBEHXZ ENDP			; ATL::COleDateTime::GetDay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcomtime.h
;	COMDAT ?GetMonth@COleDateTime@ATL@@QBEHXZ
_TEXT	SEGMENT
$T1 = -36						; size = 4
tv73 = -32						; size = 4
tv82 = -28						; size = 4
_this$ = -24						; size = 4
_st$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?GetMonth@COleDateTime@ATL@@QBEHXZ PROC			; ATL::COleDateTime::GetMonth, COMDAT
; _this$ = ecx

; 615  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 616  : 	SYSTEMTIME st = {0};

  00013	33 c0		 xor	 eax, eax
  00015	89 45 ec	 mov	 DWORD PTR _st$[ebp], eax
  00018	89 45 f0	 mov	 DWORD PTR _st$[ebp+4], eax
  0001b	89 45 f4	 mov	 DWORD PTR _st$[ebp+8], eax
  0001e	89 45 f8	 mov	 DWORD PTR _st$[ebp+12], eax

; 594  : 	return m_status;

  00021	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00027	89 55 dc	 mov	 DWORD PTR $T1[ebp], edx

; 599  : 	return GetStatus() == valid && ::VariantTimeToSystemTime(m_dt, &sysTime) == TRUE;

  0002a	83 7d dc 00	 cmp	 DWORD PTR $T1[ebp], 0
  0002e	75 27		 jne	 SHORT $LN7@GetMonth
  00030	8d 45 ec	 lea	 eax, DWORD PTR _st$[ebp]
  00033	50		 push	 eax
  00034	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 ec 08	 sub	 esp, 8
  0003a	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  0003e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantTimeToSystemTime@12
  00049	83 f8 01	 cmp	 eax, 1
  0004c	75 09		 jne	 SHORT $LN7@GetMonth
  0004e	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv82[ebp], 1
  00055	eb 07		 jmp	 SHORT $LN8@GetMonth
$LN7@GetMonth:
  00057	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN8@GetMonth:

; 617  : 	return GetAsSystemTime(st) ? st.wMonth : error;

  0005e	0f b6 55 e4	 movzx	 edx, BYTE PTR tv82[ebp]
  00062	85 d2		 test	 edx, edx
  00064	74 09		 je	 SHORT $LN3@GetMonth
  00066	0f b7 45 ee	 movzx	 eax, WORD PTR _st$[ebp+2]
  0006a	89 45 e0	 mov	 DWORD PTR tv73[ebp], eax
  0006d	eb 07		 jmp	 SHORT $LN4@GetMonth
$LN3@GetMonth:
  0006f	c7 45 e0 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
$LN4@GetMonth:
  00076	8b 45 e0	 mov	 eax, DWORD PTR tv73[ebp]

; 618  : }

  00079	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007c	33 cd		 xor	 ecx, ebp
  0007e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?GetMonth@COleDateTime@ATL@@QBEHXZ ENDP			; ATL::COleDateTime::GetMonth
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcomtime.h
;	COMDAT ?GetYear@COleDateTime@ATL@@QBEHXZ
_TEXT	SEGMENT
$T1 = -36						; size = 4
tv73 = -32						; size = 4
tv82 = -28						; size = 4
_this$ = -24						; size = 4
_st$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?GetYear@COleDateTime@ATL@@QBEHXZ PROC			; ATL::COleDateTime::GetYear, COMDAT
; _this$ = ecx

; 609  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 610  : 	SYSTEMTIME st = {0};

  00013	33 c0		 xor	 eax, eax
  00015	89 45 ec	 mov	 DWORD PTR _st$[ebp], eax
  00018	89 45 f0	 mov	 DWORD PTR _st$[ebp+4], eax
  0001b	89 45 f4	 mov	 DWORD PTR _st$[ebp+8], eax
  0001e	89 45 f8	 mov	 DWORD PTR _st$[ebp+12], eax

; 594  : 	return m_status;

  00021	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00027	89 55 dc	 mov	 DWORD PTR $T1[ebp], edx

; 599  : 	return GetStatus() == valid && ::VariantTimeToSystemTime(m_dt, &sysTime) == TRUE;

  0002a	83 7d dc 00	 cmp	 DWORD PTR $T1[ebp], 0
  0002e	75 27		 jne	 SHORT $LN7@GetYear
  00030	8d 45 ec	 lea	 eax, DWORD PTR _st$[ebp]
  00033	50		 push	 eax
  00034	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 ec 08	 sub	 esp, 8
  0003a	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  0003e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantTimeToSystemTime@12
  00049	83 f8 01	 cmp	 eax, 1
  0004c	75 09		 jne	 SHORT $LN7@GetYear
  0004e	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv82[ebp], 1
  00055	eb 07		 jmp	 SHORT $LN8@GetYear
$LN7@GetYear:
  00057	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN8@GetYear:

; 611  : 	return GetAsSystemTime(st) ? st.wYear : error;

  0005e	0f b6 55 e4	 movzx	 edx, BYTE PTR tv82[ebp]
  00062	85 d2		 test	 edx, edx
  00064	74 09		 je	 SHORT $LN3@GetYear
  00066	0f b7 45 ec	 movzx	 eax, WORD PTR _st$[ebp]
  0006a	89 45 e0	 mov	 DWORD PTR tv73[ebp], eax
  0006d	eb 07		 jmp	 SHORT $LN4@GetYear
$LN3@GetYear:
  0006f	c7 45 e0 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
$LN4@GetYear:
  00076	8b 45 e0	 mov	 eax, DWORD PTR tv73[ebp]

; 612  : }

  00079	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007c	33 cd		 xor	 ecx, ebp
  0007e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?GetYear@COleDateTime@ATL@@QBEHXZ ENDP			; ATL::COleDateTime::GetYear
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcomtime.h
;	COMDAT ?GetAsSystemTime@COleDateTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_sysTime$ = 8						; size = 4
?GetAsSystemTime@COleDateTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z PROC ; ATL::COleDateTime::GetAsSystemTime, COMDAT
; _this$ = ecx

; 598  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 594  : 	return m_status;

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0000f	89 4d f4	 mov	 DWORD PTR $T1[ebp], ecx

; 599  : 	return GetStatus() == valid && ::VariantTimeToSystemTime(m_dt, &sysTime) == TRUE;

  00012	83 7d f4 00	 cmp	 DWORD PTR $T1[ebp], 0
  00016	75 27		 jne	 SHORT $LN3@GetAsSyste
  00018	8b 55 08	 mov	 edx, DWORD PTR _sysTime$[ebp]
  0001b	52		 push	 edx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	83 ec 08	 sub	 esp, 8
  00022	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00026	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VariantTimeToSystemTime@12
  00031	83 f8 01	 cmp	 eax, 1
  00034	75 09		 jne	 SHORT $LN3@GetAsSyste
  00036	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv72[ebp], 1
  0003d	eb 07		 jmp	 SHORT $LN4@GetAsSyste
$LN3@GetAsSyste:
  0003f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN4@GetAsSyste:
  00046	8a 45 f8	 mov	 al, BYTE PTR tv72[ebp]

; 600  : }

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?GetAsSystemTime@COleDateTime@ATL@@QBE_NAAU_SYSTEMTIME@@@Z ENDP ; ATL::COleDateTime::GetAsSystemTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcomtime.h
;	COMDAT ?GetStatus@COleDateTime@ATL@@QBE?AW4DateTimeStatus@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetStatus@COleDateTime@ATL@@QBE?AW4DateTimeStatus@12@XZ PROC ; ATL::COleDateTime::GetStatus, COMDAT
; _this$ = ecx

; 593  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 594  : 	return m_status;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 595  : }

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetStatus@COleDateTime@ATL@@QBE?AW4DateTimeStatus@12@XZ ENDP ; ATL::COleDateTime::GetStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcomtime.h
;	COMDAT ??0COleDateTime@ATL@@QAE@ABUtagVARIANT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_varSrc$ = 8						; size = 4
??0COleDateTime@ATL@@QAE@ABUtagVARIANT@@@Z PROC		; ATL::COleDateTime::COleDateTime, COMDAT
; _this$ = ecx

; 533  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 532  : 	m_dt( 0 ), m_status(valid)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	0f 57 c0	 xorps	 xmm0, xmm0
  0000d	f2 0f 11 00	 movsd	 QWORD PTR [eax], xmm0
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 534  : 	*this = varSrc;

  0001b	8b 55 08	 mov	 edx, DWORD PTR _varSrc$[ebp]
  0001e	52		 push	 edx
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ??4COleDateTime@ATL@@QAEAAV01@ABUtagVARIANT@@@Z ; ATL::COleDateTime::operator=

; 535  : }

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??0COleDateTime@ATL@@QAE@ABUtagVARIANT@@@Z ENDP		; ATL::COleDateTime::COleDateTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 230  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 231  :         #pragma warning(push)
; 232  :         #pragma warning(disable : 4995 4996 6386)
; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00003	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  00006	d1 e0		 shl	 eax, 1
  00008	50		 push	 eax
  00009	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  0000c	51		 push	 ecx
  0000d	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 _memcpy
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH

; 234  :         #pragma warning(pop)
; 235  :     }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
_TEXT	SEGMENT
_ple$ = -20						; size = 4
_ptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ PROC		; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 421  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 392  : 		m_dwLastError = GetLastError();

  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0002b	89 45 ec	 mov	 DWORD PTR _ple$[ebp], eax

; 422  : 		CPreserveLastError ple;

  0002e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 423  : 		va_list ptr; va_start(ptr, pszFmt);

  00035	8d 45 18	 lea	 eax, DWORD PTR _pszFmt$[ebp+4]
  00038	89 45 f0	 mov	 DWORD PTR _ptr$[ebp], eax

; 424  : 		ATL::CTrace::TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _ptr$[ebp]
  0003e	51		 push	 ecx
  0003f	8b 55 14	 mov	 edx, DWORD PTR _pszFmt$[ebp]
  00042	52		 push	 edx
  00043	8b 45 10	 mov	 eax, DWORD PTR _nLevel$[ebp]
  00046	50		 push	 eax
  00047	8b 4d 0c	 mov	 ecx, DWORD PTR _dwCategory$[ebp]
  0004a	51		 push	 ecx
  0004b	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0004e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00051	50		 push	 eax
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	8b 11		 mov	 edx, DWORD PTR [ecx]
  00057	52		 push	 edx
  00058	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z ; ATL::CTrace::TraceV
  0005d	83 c4 18	 add	 esp, 24			; 00000018H

; 425  : 		va_end(ptr);

  00060	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _ptr$[ebp], 0

; 426  : 	}

  00067	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 397  : 		SetLastError(m_dwLastError);

  0006e	8b 45 ec	 mov	 eax, DWORD PTR _ple$[ebp]
  00071	50		 push	 eax
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetLastError@4

; 426  : 	}

  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR _ple$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CPreserveLastError@ATL@@QAE@XZ ; ATL::CPreserveLastError::~CPreserveLastError
__ehhandler$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 411  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _nLineNo$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 412  : 	}

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??1CPreserveLastError@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPreserveLastError@ATL@@QAE@XZ PROC			; ATL::CPreserveLastError::~CPreserveLastError, COMDAT
; _this$ = ecx

; 396  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 397  : 		SetLastError(m_dwLastError);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetLastError@4

; 398  : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??1CPreserveLastError@ATL@@QAE@XZ ENDP			; ATL::CPreserveLastError::~CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0CPreserveLastError@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPreserveLastError@ATL@@QAE@XZ PROC			; ATL::CPreserveLastError::CPreserveLastError, COMDAT
; _this$ = ecx

; 390  : 	CPreserveLastError()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 391  : 	{
; 392  : 		m_dwLastError = GetLastError();

  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	89 01		 mov	 DWORD PTR [ecx], eax

; 393  : 	}

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??0CPreserveLastError@ATL@@QAE@XZ ENDP			; ATL::CPreserveLastError::CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_p$1 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d f8	 mov	 DWORD PTR _p$1[ebp], ecx

; 267  : 		free(p);

  00011	8b 55 f8	 mov	 edx, DWORD PTR _p$1[ebp]
  00014	52		 push	 edx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0001b	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_i64Result$1 = -24					; size = 8
_this$ = -16						; size = 4
_nBytes$ = -12						; size = 4
$T2 = -8						; size = 4
tv87 = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 455  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 456  : 		size_t nBytes=0;

  00009	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nBytes$[ebp], 0

; 136  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00010	b9 01 00 00 00	 mov	 ecx, 1
  00015	8b 45 08	 mov	 eax, DWORD PTR _nElements$[ebp]
  00018	f7 e1		 mul	 ecx
  0001a	89 45 e8	 mov	 DWORD PTR _i64Result$1[ebp], eax
  0001d	89 55 ec	 mov	 DWORD PTR _i64Result$1[ebp+4], edx

; 137  : 	if(i64Result>UINT_MAX)

  00020	83 7d ec 00	 cmp	 DWORD PTR _i64Result$1[ebp+4], 0
  00024	77 06		 ja	 SHORT $LN17@Allocate
  00026	83 7d e8 ff	 cmp	 DWORD PTR _i64Result$1[ebp], -1
  0002a	76 31		 jbe	 SHORT $LN5@Allocate
$LN17@Allocate:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0002c	ba 16 02 00 00	 mov	 edx, 534		; 00000216H
  00031	85 d2		 test	 edx, edx
  00033	7f 09		 jg	 SHORT $LN9@Allocate
  00035	c7 45 fc 16 02
	00 00		 mov	 DWORD PTR tv87[ebp], 534 ; 00000216H
  0003c	eb 17		 jmp	 SHORT $LN7@Allocate
$LN9@Allocate:
  0003e	b8 16 02 00 00	 mov	 eax, 534		; 00000216H
  00043	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00048	0d 00 00 07 00	 or	 eax, 458752		; 00070000H
  0004d	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  00052	89 45 fc	 mov	 DWORD PTR tv87[ebp], eax
$LN7@Allocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 139  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00055	8b 4d fc	 mov	 ecx, DWORD PTR tv87[ebp]
  00058	89 4d f8	 mov	 DWORD PTR $T2[ebp], ecx
  0005b	eb 0d		 jmp	 SHORT $LN4@Allocate
$LN5@Allocate:

; 140  : 	}
; 141  : 	*piResult=static_cast<unsigned int>(i64Result);

  0005d	8b 55 e8	 mov	 edx, DWORD PTR _i64Result$1[ebp]
  00060	89 55 f4	 mov	 DWORD PTR _nBytes$[ebp], edx

; 142  : 	return S_OK;

  00063	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
$LN4@Allocate:

; 457  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))

  0006a	83 7d f8 00	 cmp	 DWORD PTR $T2[ebp], 0
  0006e	7d 04		 jge	 SHORT $LN2@Allocate

; 458  : 		{
; 459  : 			return false;

  00070	32 c0		 xor	 al, al
  00072	eb 0c		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 460  : 		}
; 461  : 		return this->AllocateBytes(nBytes);

  00074	8b 45 f4	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00077	50		 push	 eax
  00078	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:

; 462  : 	}

  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 434  : 	CHeapPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		m_pData(NULL)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 435  : 	{
; 436  : 	}

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free, COMDAT
; _this$ = ecx

; 407  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d f8	 mov	 DWORD PTR _p$[ebp], ecx

; 267  : 		free(p);

  00011	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  00014	52		 push	 edx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0001b	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 410  : 	}

  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 381  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 382  : 		ATLASSERT(m_pData == NULL);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000d	74 27		 je	 SHORT $LN5@AllocateBy
  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00019	6a 00		 push	 0
  0001b	68 7e 01 00 00	 push	 382			; 0000017eH
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00025	6a 02		 push	 2
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0002d	83 c4 18	 add	 esp, 24			; 00000018H
  00030	83 f8 01	 cmp	 eax, 1
  00033	75 01		 jne	 SHORT $LN5@AllocateBy
  00035	cc		 int	 3
$LN5@AllocateBy:

; 262  : 		return malloc(nBytes);

  00036	8b 55 08	 mov	 edx, DWORD PTR _nBytes$[ebp]
  00039	52		 push	 edx
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00040	83 c4 04	 add	 esp, 4

; 383  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	89 01		 mov	 DWORD PTR [ecx], eax

; 384  : 		if (m_pData == NULL)

  00048	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0004e	75 04		 jne	 SHORT $LN2@AllocateBy

; 385  : 			return false;

  00050	32 c0		 xor	 al, al
  00052	eb 02		 jmp	 SHORT $LN1@AllocateBy
$LN2@AllocateBy:

; 386  : 
; 387  : 		return true;

  00054	b0 01		 mov	 al, 1
$LN1@AllocateBy:

; 388  : 	}

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *, COMDAT
; _this$ = ecx

; 363  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 364  : 		return m_pData;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]

; 365  : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 349  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d f8	 mov	 DWORD PTR _p$[ebp], ecx

; 267  : 		free(p);

  00011	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  00014	52		 push	 edx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0001b	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 350  : 		Free();
; 351  : 	}

  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 336  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		m_pData(NULL)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 337  : 	}

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_p$1 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d f8	 mov	 DWORD PTR _p$1[ebp], ecx

; 267  : 		free(p);

  00011	8b 55 f8	 mov	 edx, DWORD PTR _p$1[ebp]
  00014	52		 push	 edx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0001b	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_i64Result$1 = -24					; size = 8
_this$ = -16						; size = 4
_nBytes$ = -12						; size = 4
$T2 = -8						; size = 4
tv87 = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 455  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 456  : 		size_t nBytes=0;

  00009	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nBytes$[ebp], 0

; 136  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00010	b9 02 00 00 00	 mov	 ecx, 2
  00015	8b 45 08	 mov	 eax, DWORD PTR _nElements$[ebp]
  00018	f7 e1		 mul	 ecx
  0001a	89 45 e8	 mov	 DWORD PTR _i64Result$1[ebp], eax
  0001d	89 55 ec	 mov	 DWORD PTR _i64Result$1[ebp+4], edx

; 137  : 	if(i64Result>UINT_MAX)

  00020	83 7d ec 00	 cmp	 DWORD PTR _i64Result$1[ebp+4], 0
  00024	77 06		 ja	 SHORT $LN17@Allocate
  00026	83 7d e8 ff	 cmp	 DWORD PTR _i64Result$1[ebp], -1
  0002a	76 31		 jbe	 SHORT $LN5@Allocate
$LN17@Allocate:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0002c	ba 16 02 00 00	 mov	 edx, 534		; 00000216H
  00031	85 d2		 test	 edx, edx
  00033	7f 09		 jg	 SHORT $LN9@Allocate
  00035	c7 45 fc 16 02
	00 00		 mov	 DWORD PTR tv87[ebp], 534 ; 00000216H
  0003c	eb 17		 jmp	 SHORT $LN7@Allocate
$LN9@Allocate:
  0003e	b8 16 02 00 00	 mov	 eax, 534		; 00000216H
  00043	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00048	0d 00 00 07 00	 or	 eax, 458752		; 00070000H
  0004d	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  00052	89 45 fc	 mov	 DWORD PTR tv87[ebp], eax
$LN7@Allocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 139  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00055	8b 4d fc	 mov	 ecx, DWORD PTR tv87[ebp]
  00058	89 4d f8	 mov	 DWORD PTR $T2[ebp], ecx
  0005b	eb 0d		 jmp	 SHORT $LN4@Allocate
$LN5@Allocate:

; 140  : 	}
; 141  : 	*piResult=static_cast<unsigned int>(i64Result);

  0005d	8b 55 e8	 mov	 edx, DWORD PTR _i64Result$1[ebp]
  00060	89 55 f4	 mov	 DWORD PTR _nBytes$[ebp], edx

; 142  : 	return S_OK;

  00063	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
$LN4@Allocate:

; 457  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))

  0006a	83 7d f8 00	 cmp	 DWORD PTR $T2[ebp], 0
  0006e	7d 04		 jge	 SHORT $LN2@Allocate

; 458  : 		{
; 459  : 			return false;

  00070	32 c0		 xor	 al, al
  00072	eb 0c		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 460  : 		}
; 461  : 		return this->AllocateBytes(nBytes);

  00074	8b 45 f4	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00077	50		 push	 eax
  00078	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:

; 462  : 	}

  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 434  : 	CHeapPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		m_pData(NULL)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 435  : 	{
; 436  : 	}

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free, COMDAT
; _this$ = ecx

; 407  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d f8	 mov	 DWORD PTR _p$[ebp], ecx

; 267  : 		free(p);

  00011	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  00014	52		 push	 edx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0001b	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 410  : 	}

  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 381  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 382  : 		ATLASSERT(m_pData == NULL);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000d	74 27		 je	 SHORT $LN5@AllocateBy
  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00019	6a 00		 push	 0
  0001b	68 7e 01 00 00	 push	 382			; 0000017eH
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00025	6a 02		 push	 2
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0002d	83 c4 18	 add	 esp, 24			; 00000018H
  00030	83 f8 01	 cmp	 eax, 1
  00033	75 01		 jne	 SHORT $LN5@AllocateBy
  00035	cc		 int	 3
$LN5@AllocateBy:

; 262  : 		return malloc(nBytes);

  00036	8b 55 08	 mov	 edx, DWORD PTR _nBytes$[ebp]
  00039	52		 push	 edx
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00040	83 c4 04	 add	 esp, 4

; 383  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	89 01		 mov	 DWORD PTR [ecx], eax

; 384  : 		if (m_pData == NULL)

  00048	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0004e	75 04		 jne	 SHORT $LN2@AllocateBy

; 385  : 			return false;

  00050	32 c0		 xor	 al, al
  00052	eb 02		 jmp	 SHORT $LN1@AllocateBy
$LN2@AllocateBy:

; 386  : 
; 387  : 		return true;

  00054	b0 01		 mov	 al, 1
$LN1@AllocateBy:

; 388  : 	}

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *, COMDAT
; _this$ = ecx

; 363  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 364  : 		return m_pData;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]

; 365  : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 349  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d f8	 mov	 DWORD PTR _p$[ebp], ecx

; 267  : 		free(p);

  00011	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  00014	52		 push	 edx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0001b	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 350  : 		Free();
; 351  : 	}

  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 336  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		m_pData(NULL)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 337  : 	}

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z
_TEXT	SEGMENT
_buffer$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 330  : 		if (pszCategory == nullptr)

  00013	83 7d 08 00	 cmp	 DWORD PTR _pszCategory$[ebp], 0
  00017	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  00019	e9 a9 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  0001e	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00025	72 2d		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  00027	33 c0		 xor	 eax, eax
  00029	75 27		 jne	 SHORT $LN5@RegisterCa
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00035	6a 00		 push	 0
  00037	68 51 01 00 00	 push	 337			; 00000151H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00041	6a 02		 push	 2
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00049	83 c4 18	 add	 esp, 24			; 00000018H
  0004c	83 f8 01	 cmp	 eax, 1
  0004f	75 01		 jne	 SHORT $LN5@RegisterCa
  00051	cc		 int	 3
$LN5@RegisterCa:

; 338  : 			return;

  00052	eb 73		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  00054	69 15 00 00 00
	00 04 01 00 00	 imul	 edx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  0005e	8b 45 0c	 mov	 eax, DWORD PTR _nCategory$[ebp]
  00061	89 82 00 00 00
	00		 mov	 DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[edx], eax

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);
; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	

  00067	68 00 01 00 00	 push	 256			; 00000100H
  0006c	6a 00		 push	 0
  0006e	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 _memset
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);

  0007d	8b 55 08	 mov	 edx, DWORD PTR _pszCategory$[ebp]
  00080	52		 push	 edx
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  00086	6a 7f		 push	 127			; 0000007fH
  00088	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 _swprintf_s
  00094	83 c4 10	 add	 esp, 16			; 00000010H

; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);

  00097	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  0009d	51		 push	 ecx
  0009e	6a 7f		 push	 127			; 0000007fH
  000a0	69 15 00 00 00
	00 04 01 00 00	 imul	 edx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  000aa	81 c2 04 00 00
	00		 add	 edx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  000b0	52		 push	 edx
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000b7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000bf	83 c0 01	 add	 eax, 1
  000c2	a3 00 00 00 00	 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  000c7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ca	33 cd		 xor	 ecx, ebp
  000cc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
_TEXT	SEGMENT
_p$2 = -96						; size = 4
_p$3 = -92						; size = 4
$T4 = -88						; size = 4
_p$5 = -84						; size = 4
_p$6 = -80						; size = 4
$T7 = -76						; size = 4
$T8 = -72						; size = 4
$T9 = -68						; size = 4
_p$10 = -64						; size = 4
_p$11 = -60						; size = 4
_p$12 = -56						; size = 4
$T13 = -52						; size = 4
$T14 = -48						; size = 4
_p$15 = -44						; size = 4
tv236 = -40						; size = 4
__Result$16 = -36					; size = 4
tv202 = -32						; size = 4
__Result$17 = -28					; size = 4
_cchNeeded$ = -24					; size = 4
_wszBuf$ = -20						; size = 4
_szBuf$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
_dwCategory$ = 16					; size = 4
_nLevel$ = 20						; size = 4
_pszFmt$ = 24						; size = 4
_args$ = 28						; size = 4
?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 238  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 54	 sub	 esp, 84			; 00000054H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h

; 1659 :         int const _Result = __stdio_common_vsprintf(

  00025	8b 45 1c	 mov	 eax, DWORD PTR _args$[ebp]
  00028	50		 push	 eax
  00029	6a 00		 push	 0
  0002b	8b 4d 18	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  0002e	51		 push	 ecx
  0002f	6a 00		 push	 0
  00031	6a 00		 push	 0
  00033	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00038	8b 10		 mov	 edx, DWORD PTR [eax]
  0003a	83 ca 02	 or	 edx, 2
  0003d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00040	50		 push	 eax
  00041	52		 push	 edx
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00048	83 c4 1c	 add	 esp, 28			; 0000001cH
  0004b	89 45 e4	 mov	 DWORD PTR __Result$17[ebp], eax

; 1660 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1661 :             NULL, 0, _Format, _Locale, _ArgList);
; 1662 : 
; 1663 :         return _Result < 0 ? -1 : _Result;

  0004e	83 7d e4 00	 cmp	 DWORD PTR __Result$17[ebp], 0
  00052	7d 09		 jge	 SHORT $LN14@TraceV
  00054	c7 45 e0 ff ff
	ff ff		 mov	 DWORD PTR tv202[ebp], -1
  0005b	eb 06		 jmp	 SHORT $LN10@TraceV
$LN14@TraceV:
  0005d	8b 4d e4	 mov	 ecx, DWORD PTR __Result$17[ebp]
  00060	89 4d e0	 mov	 DWORD PTR tv202[ebp], ecx
$LN10@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 239  : 		int cchNeeded = _vscprintf(pszFmt, args);

  00063	8b 55 e0	 mov	 edx, DWORD PTR tv202[ebp]
  00066	89 55 e8	 mov	 DWORD PTR _cchNeeded$[ebp], edx

; 240  : 		if (cchNeeded < 0)

  00069	83 7d e8 00	 cmp	 DWORD PTR _cchNeeded$[ebp], 0
  0006d	7d 05		 jge	 SHORT $LN2@TraceV

; 241  : 		{
; 242  : 			return;

  0006f	e9 20 02 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 335  : 		m_pData(NULL)

  00074	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _szBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 245  : 		CHeapPtr<char> szBuf;

  0007b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 246  : 		if (!szBuf.Allocate(cchNeeded + 1))

  00082	8b 45 e8	 mov	 eax, DWORD PTR _cchNeeded$[ebp]
  00085	83 c0 01	 add	 eax, 1
  00088	50		 push	 eax
  00089	8d 4d f0	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  0008c	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
  00091	0f b6 c8	 movzx	 ecx, al
  00094	85 c9		 test	 ecx, ecx
  00096	75 26		 jne	 SHORT $LN3@TraceV

; 248  : 			return;

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  0009f	8b 55 f0	 mov	 edx, DWORD PTR _szBuf$[ebp]
  000a2	89 55 d4	 mov	 DWORD PTR _p$15[ebp], edx

; 267  : 		free(p);

  000a5	8b 45 d4	 mov	 eax, DWORD PTR _p$15[ebp]
  000a8	50		 push	 eax
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  000af	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  000b2	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _szBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 248  : 			return;

  000b9	e9 d6 01 00 00	 jmp	 $LN1@TraceV
$LN3@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  000be	8b 4d f0	 mov	 ecx, DWORD PTR _szBuf$[ebp]
  000c1	89 4d d0	 mov	 DWORD PTR $T14[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 251  : 		szBuf[0] = '\0';

  000c4	ba 01 00 00 00	 mov	 edx, 1
  000c9	6b c2 00	 imul	 eax, edx, 0
  000cc	8b 4d d0	 mov	 ecx, DWORD PTR $T14[ebp]
  000cf	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  000d3	8b 55 f0	 mov	 edx, DWORD PTR _szBuf$[ebp]
  000d6	89 55 cc	 mov	 DWORD PTR $T13[ebp], edx
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  000d9	8b 45 1c	 mov	 eax, DWORD PTR _args$[ebp]
  000dc	50		 push	 eax
  000dd	6a 00		 push	 0
  000df	8b 4d 18	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  000e2	51		 push	 ecx
  000e3	8b 55 e8	 mov	 edx, DWORD PTR _cchNeeded$[ebp]
  000e6	52		 push	 edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 253  : 		if (_vsnprintf_s(szBuf, cchNeeded + 1, cchNeeded, pszFmt, args) == -1)

  000e7	8b 45 e8	 mov	 eax, DWORD PTR _cchNeeded$[ebp]
  000ea	83 c0 01	 add	 eax, 1
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  000ed	50		 push	 eax
  000ee	8b 4d cc	 mov	 ecx, DWORD PTR $T13[ebp]
  000f1	51		 push	 ecx
  000f2	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  000f7	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000fa	52		 push	 edx
  000fb	8b 00		 mov	 eax, DWORD PTR [eax]
  000fd	50		 push	 eax
  000fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsnprintf_s
  00104	83 c4 20	 add	 esp, 32			; 00000020H
  00107	89 45 dc	 mov	 DWORD PTR __Result$16[ebp], eax

; 1586 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1587 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1588 : 
; 1589 :         return _Result < 0 ? -1 : _Result;

  0010a	83 7d dc 00	 cmp	 DWORD PTR __Result$16[ebp], 0
  0010e	7d 09		 jge	 SHORT $LN47@TraceV
  00110	c7 45 d8 ff ff
	ff ff		 mov	 DWORD PTR tv236[ebp], -1
  00117	eb 06		 jmp	 SHORT $LN43@TraceV
$LN47@TraceV:
  00119	8b 4d dc	 mov	 ecx, DWORD PTR __Result$16[ebp]
  0011c	89 4d d8	 mov	 DWORD PTR tv236[ebp], ecx
$LN43@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 253  : 		if (_vsnprintf_s(szBuf, cchNeeded + 1, cchNeeded, pszFmt, args) == -1)

  0011f	83 7d d8 ff	 cmp	 DWORD PTR tv236[ebp], -1
  00123	75 26		 jne	 SHORT $LN4@TraceV

; 255  : 			return;

  00125	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  0012c	8b 55 f0	 mov	 edx, DWORD PTR _szBuf$[ebp]
  0012f	89 55 c8	 mov	 DWORD PTR _p$12[ebp], edx

; 267  : 		free(p);

  00132	8b 45 c8	 mov	 eax, DWORD PTR _p$12[ebp]
  00135	50		 push	 eax
  00136	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0013c	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0013f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _szBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 255  : 			return;

  00146	e9 49 01 00 00	 jmp	 $LN1@TraceV
$LN4@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 335  : 		m_pData(NULL)

  0014b	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 258  : 		CHeapPtr<wchar_t> wszBuf;

  00152	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 259  : 		if (!wszBuf.Allocate(cchNeeded + 1))

  00156	8b 4d e8	 mov	 ecx, DWORD PTR _cchNeeded$[ebp]
  00159	83 c1 01	 add	 ecx, 1
  0015c	51		 push	 ecx
  0015d	8d 4d ec	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00160	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  00165	0f b6 d0	 movzx	 edx, al
  00168	85 d2		 test	 edx, edx
  0016a	75 44		 jne	 SHORT $LN5@TraceV

; 261  : 			return;

  0016c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  00170	8b 45 ec	 mov	 eax, DWORD PTR _wszBuf$[ebp]
  00173	89 45 c4	 mov	 DWORD PTR _p$11[ebp], eax

; 267  : 		free(p);

  00176	8b 4d c4	 mov	 ecx, DWORD PTR _p$11[ebp]
  00179	51		 push	 ecx
  0017a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00180	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  00183	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 261  : 			return;

  0018a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  00191	8b 55 f0	 mov	 edx, DWORD PTR _szBuf$[ebp]
  00194	89 55 c0	 mov	 DWORD PTR _p$10[ebp], edx

; 267  : 		free(p);

  00197	8b 45 c0	 mov	 eax, DWORD PTR _p$10[ebp]
  0019a	50		 push	 eax
  0019b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  001a1	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  001a4	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _szBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 261  : 			return;

  001ab	e9 e4 00 00 00	 jmp	 $LN1@TraceV
$LN5@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  001b0	8b 4d ec	 mov	 ecx, DWORD PTR _wszBuf$[ebp]
  001b3	89 4d bc	 mov	 DWORD PTR $T9[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 264  : 		wszBuf[0] = '\0';

  001b6	ba 02 00 00 00	 mov	 edx, 2
  001bb	6b c2 00	 imul	 eax, edx, 0
  001be	33 c9		 xor	 ecx, ecx
  001c0	8b 55 bc	 mov	 edx, DWORD PTR $T9[ebp]
  001c3	66 89 0c 02	 mov	 WORD PTR [edx+eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  001c7	8b 45 ec	 mov	 eax, DWORD PTR _wszBuf$[ebp]
  001ca	89 45 b8	 mov	 DWORD PTR $T8[ebp], eax
  001cd	8b 4d f0	 mov	 ecx, DWORD PTR _szBuf$[ebp]
  001d0	89 4d b4	 mov	 DWORD PTR $T7[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 266  : 		if (::MultiByteToWideChar(CP_ACP, 0, szBuf, -1, wszBuf, cchNeeded + 1) == 0)

  001d3	8b 55 e8	 mov	 edx, DWORD PTR _cchNeeded$[ebp]
  001d6	83 c2 01	 add	 edx, 1
  001d9	52		 push	 edx
  001da	8b 45 b8	 mov	 eax, DWORD PTR $T8[ebp]
  001dd	50		 push	 eax
  001de	6a ff		 push	 -1
  001e0	8b 4d b4	 mov	 ecx, DWORD PTR $T7[ebp]
  001e3	51		 push	 ecx
  001e4	6a 00		 push	 0
  001e6	6a 00		 push	 0
  001e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  001ee	85 c0		 test	 eax, eax
  001f0	75 41		 jne	 SHORT $LN6@TraceV

; 268  : 			return;

  001f2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  001f6	8b 55 ec	 mov	 edx, DWORD PTR _wszBuf$[ebp]
  001f9	89 55 b0	 mov	 DWORD PTR _p$6[ebp], edx

; 267  : 		free(p);

  001fc	8b 45 b0	 mov	 eax, DWORD PTR _p$6[ebp]
  001ff	50		 push	 eax
  00200	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00206	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  00209	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 268  : 			return;

  00210	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  00217	8b 4d f0	 mov	 ecx, DWORD PTR _szBuf$[ebp]
  0021a	89 4d ac	 mov	 DWORD PTR _p$5[ebp], ecx

; 267  : 		free(p);

  0021d	8b 55 ac	 mov	 edx, DWORD PTR _p$5[ebp]
  00220	52		 push	 edx
  00221	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00227	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0022a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _szBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 268  : 			return;

  00231	eb 61		 jmp	 SHORT $LN1@TraceV
$LN6@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  00233	8b 45 ec	 mov	 eax, DWORD PTR _wszBuf$[ebp]
  00236	89 45 a8	 mov	 DWORD PTR $T4[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 271  : 		TraceV(pszFileName, nLine, dwCategory, nLevel, wszBuf);

  00239	8b 4d a8	 mov	 ecx, DWORD PTR $T4[ebp]
  0023c	51		 push	 ecx
  0023d	8b 55 14	 mov	 edx, DWORD PTR _nLevel$[ebp]
  00240	52		 push	 edx
  00241	8b 45 10	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  00244	50		 push	 eax
  00245	8b 4d 0c	 mov	 ecx, DWORD PTR _nLine$[ebp]
  00248	51		 push	 ecx
  00249	8b 55 08	 mov	 edx, DWORD PTR _pszFileName$[ebp]
  0024c	52		 push	 edx
  0024d	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z ; ATL::CTrace::TraceV
  00252	83 c4 14	 add	 esp, 20			; 00000014H

; 272  : 	}

  00255	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  00259	8b 45 ec	 mov	 eax, DWORD PTR _wszBuf$[ebp]
  0025c	89 45 a4	 mov	 DWORD PTR _p$3[ebp], eax

; 267  : 		free(p);

  0025f	8b 4d a4	 mov	 ecx, DWORD PTR _p$3[ebp]
  00262	51		 push	 ecx
  00263	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00269	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0026c	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 272  : 	}

  00273	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  0027a	8b 55 f0	 mov	 edx, DWORD PTR _szBuf$[ebp]
  0027d	89 55 a0	 mov	 DWORD PTR _p$2[ebp], edx

; 267  : 		free(p);

  00280	8b 45 a0	 mov	 eax, DWORD PTR _p$2[ebp]
  00283	50		 push	 eax
  00284	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0028a	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0028d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _szBuf$[ebp], 0
$LN1@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 272  : 	}

  00294	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00297	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0029e	59		 pop	 ecx
  0029f	8b e5		 mov	 esp, ebp
  002a1	5d		 pop	 ebp
  002a2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$0:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$1:
  00008	8d 4d ec	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
__ehhandler$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z
_TEXT	SEGMENT
_p$1 = -2636						; size = 4
$T2 = -2632						; size = 4
_p$3 = -2628						; size = 4
_p$4 = -2624						; size = 4
$T5 = -2620						; size = 4
$T6 = -2616						; size = 4
_p$7 = -2612						; size = 4
tv88 = -2608						; size = 4
tv246 = -2604						; size = 4
_chCount$ = -2600					; size = 4
_pwszCategoryName$ = -2596				; size = 4
tv249 = -2590						; size = 2
_categoryLength$ = -2588				; size = 4
tv243 = -2584						; size = 4
_i$8 = -2580						; size = 4
_wszBuf$ = -2576					; size = 4
_wszCategory$ = -2572					; size = 2048
_fileName$ = -524					; size = 520
__$ArrayPad$ = -4					; size = 4
_pszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
_dwCategory$ = 16					; size = 4
_nLevel$ = 20						; size = 4
_pwszMessage$ = 24					; size = 4
?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 150  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 4c 0a 00
	00		 sub	 esp, 2636		; 00000a4cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 151  : 		if (CTrace::m_nLevel == CTrace::DisableTracing || CTrace::m_nLevel < nLevel || (CTrace::m_nCategory & dwCategory) == 0)

  00013	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?m_nLevel@CTrace@ATL@@1IA, -1 ; ATL::CTrace::m_nLevel
  0001a	74 15		 je	 SHORT $LN3@TraceV
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLevel@CTrace@ATL@@1IA ; ATL::CTrace::m_nLevel
  00021	3b 45 14	 cmp	 eax, DWORD PTR _nLevel$[ebp]
  00024	72 0b		 jb	 SHORT $LN3@TraceV
  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nCategory
  0002c	23 4d 10	 and	 ecx, DWORD PTR _dwCategory$[ebp]
  0002f	75 05		 jne	 SHORT $LN2@TraceV
$LN3@TraceV:

; 152  : 		{
; 153  : 			return;

  00031	e9 db 02 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 154  : 		}
; 155  : 
; 156  : 		wchar_t wszCategory[TraceBufferSize] = {'\0'};

  00036	68 00 08 00 00	 push	 2048			; 00000800H
  0003b	6a 00		 push	 0
  0003d	8d 95 f4 f5 ff
	ff		 lea	 edx, DWORD PTR _wszCategory$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 _memset
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH

; 157  : 		int categoryLength = 0;

  0004c	c7 85 e4 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _categoryLength$[ebp], 0

; 133  : 		for(unsigned int i = 0; i < m_nLastCategory; i++) 

  00056	c7 85 ec f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$8[ebp], 0
  00060	eb 0f		 jmp	 SHORT $LN16@TraceV
$LN14@TraceV:
  00062	8b 85 ec f5 ff
	ff		 mov	 eax, DWORD PTR _i$8[ebp]
  00068	83 c0 01	 add	 eax, 1
  0006b	89 85 ec f5 ff
	ff		 mov	 DWORD PTR _i$8[ebp], eax
$LN16@TraceV:
  00071	8b 8d ec f5 ff
	ff		 mov	 ecx, DWORD PTR _i$8[ebp]
  00077	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  0007d	73 2f		 jae	 SHORT $LN15@TraceV

; 134  : 		{
; 135  : 			if (m_nMap[i].nCategory == nCategory)

  0007f	69 95 ec f5 ff
	ff 04 01 00 00	 imul	 edx, DWORD PTR _i$8[ebp], 260
  00089	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[edx]
  0008f	3b 45 10	 cmp	 eax, DWORD PTR _dwCategory$[ebp]
  00092	75 18		 jne	 SHORT $LN17@TraceV

; 136  : 			{
; 137  : 				return m_nMap[i].categryName;

  00094	69 8d ec f5 ff
	ff 04 01 00 00	 imul	 ecx, DWORD PTR _i$8[ebp], 260
  0009e	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  000a4	89 8d dc f5 ff
	ff		 mov	 DWORD PTR _pwszCategoryName$[ebp], ecx
  000aa	eb 0c		 jmp	 SHORT $LN13@TraceV
$LN17@TraceV:

; 138  : 			}
; 139  : 		}

  000ac	eb b4		 jmp	 SHORT $LN14@TraceV
$LN15@TraceV:

; 140  : 
; 141  : 		return nullptr;

  000ae	c7 85 dc f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _pwszCategoryName$[ebp], 0
$LN13@TraceV:

; 158  : 		const wchar_t *const pwszCategoryName = GetCategoryName(dwCategory);
; 159  : 		if (pwszCategoryName != nullptr)

  000b8	83 bd dc f5 ff
	ff 00		 cmp	 DWORD PTR _pwszCategoryName$[ebp], 0
  000bf	74 36		 je	 SHORT $LN4@TraceV

; 160  : 		{
; 161  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%ls - ", pwszCategoryName)) == -1)

  000c1	8b 95 dc f5 ff
	ff		 mov	 edx, DWORD PTR _pwszCategoryName$[ebp]
  000c7	52		 push	 edx
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
  000cd	68 00 04 00 00	 push	 1024			; 00000400H
  000d2	8d 85 f4 f5 ff
	ff		 lea	 eax, DWORD PTR _wszCategory$[ebp]
  000d8	50		 push	 eax
  000d9	e8 00 00 00 00	 call	 _swprintf_s
  000de	83 c4 10	 add	 esp, 16			; 00000010H
  000e1	89 85 e4 f5 ff
	ff		 mov	 DWORD PTR _categoryLength$[ebp], eax
  000e7	83 bd e4 f5 ff
	ff ff		 cmp	 DWORD PTR _categoryLength$[ebp], -1
  000ee	75 05		 jne	 SHORT $LN6@TraceV

; 162  : 			{
; 163  : 				return;

  000f0	e9 1c 02 00 00	 jmp	 $LN1@TraceV
$LN6@TraceV:

; 164  : 			}
; 165  : 		}
; 166  : 		else

  000f5	eb 31		 jmp	 SHORT $LN5@TraceV
$LN4@TraceV:

; 167  : 		{
; 168  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%u - ", dwCategory)) == -1)

  000f7	8b 4d 10	 mov	 ecx, DWORD PTR _dwCategory$[ebp]
  000fa	51		 push	 ecx
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
  00100	68 00 04 00 00	 push	 1024			; 00000400H
  00105	8d 95 f4 f5 ff
	ff		 lea	 edx, DWORD PTR _wszCategory$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 _swprintf_s
  00111	83 c4 10	 add	 esp, 16			; 00000010H
  00114	89 85 e4 f5 ff
	ff		 mov	 DWORD PTR _categoryLength$[ebp], eax
  0011a	83 bd e4 f5 ff
	ff ff		 cmp	 DWORD PTR _categoryLength$[ebp], -1
  00121	75 05		 jne	 SHORT $LN5@TraceV

; 169  : 			{
; 170  : 				return;

  00123	e9 e9 01 00 00	 jmp	 $LN1@TraceV
$LN5@TraceV:

; 171  : 			}
; 172  : 		}
; 173  : 
; 174  : 		int chCount = (int)wcslen(pwszMessage) + categoryLength + 1;

  00128	8b 45 18	 mov	 eax, DWORD PTR _pwszMessage$[ebp]
  0012b	89 85 e8 f5 ff
	ff		 mov	 DWORD PTR tv243[ebp], eax
  00131	8b 8d e8 f5 ff
	ff		 mov	 ecx, DWORD PTR tv243[ebp]
  00137	83 c1 02	 add	 ecx, 2
  0013a	89 8d d4 f5 ff
	ff		 mov	 DWORD PTR tv246[ebp], ecx
$LL81@TraceV:
  00140	8b 95 e8 f5 ff
	ff		 mov	 edx, DWORD PTR tv243[ebp]
  00146	66 8b 02	 mov	 ax, WORD PTR [edx]
  00149	66 89 85 e2 f5
	ff ff		 mov	 WORD PTR tv249[ebp], ax
  00150	83 85 e8 f5 ff
	ff 02		 add	 DWORD PTR tv243[ebp], 2
  00157	66 83 bd e2 f5
	ff ff 00	 cmp	 WORD PTR tv249[ebp], 0
  0015f	75 df		 jne	 SHORT $LL81@TraceV
  00161	8b 8d e8 f5 ff
	ff		 mov	 ecx, DWORD PTR tv243[ebp]
  00167	2b 8d d4 f5 ff
	ff		 sub	 ecx, DWORD PTR tv246[ebp]
  0016d	d1 f9		 sar	 ecx, 1
  0016f	89 8d d0 f5 ff
	ff		 mov	 DWORD PTR tv88[ebp], ecx
  00175	8b 95 e4 f5 ff
	ff		 mov	 edx, DWORD PTR _categoryLength$[ebp]
  0017b	8b 85 d0 f5 ff
	ff		 mov	 eax, DWORD PTR tv88[ebp]
  00181	8d 4c 10 01	 lea	 ecx, DWORD PTR [eax+edx+1]
  00185	89 8d d8 f5 ff
	ff		 mov	 DWORD PTR _chCount$[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 335  : 		m_pData(NULL)

  0018b	c7 85 f0 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 176  : 		if (!wszBuf.Allocate(chCount))

  00195	8b 95 d8 f5 ff
	ff		 mov	 edx, DWORD PTR _chCount$[ebp]
  0019b	52		 push	 edx
  0019c	8d 8d f0 f5 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  001a2	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  001a7	0f b6 c0	 movzx	 eax, al
  001aa	85 c0		 test	 eax, eax
  001ac	75 2b		 jne	 SHORT $LN8@TraceV
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  001ae	8b 8d f0 f5 ff
	ff		 mov	 ecx, DWORD PTR _wszBuf$[ebp]
  001b4	89 8d cc f5 ff
	ff		 mov	 DWORD PTR _p$7[ebp], ecx

; 267  : 		free(p);

  001ba	8b 95 cc f5 ff
	ff		 mov	 edx, DWORD PTR _p$7[ebp]
  001c0	52		 push	 edx
  001c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  001c7	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  001ca	c7 85 f0 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 178  : 			return;

  001d4	e9 38 01 00 00	 jmp	 $LN1@TraceV
$LN8@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  001d9	8b 85 f0 f5 ff
	ff		 mov	 eax, DWORD PTR _wszBuf$[ebp]
  001df	89 85 c8 f5 ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 181  : 		wszBuf[0] = '\0';

  001e5	b9 02 00 00 00	 mov	 ecx, 2
  001ea	6b d1 00	 imul	 edx, ecx, 0
  001ed	33 c0		 xor	 eax, eax
  001ef	8b 8d c8 f5 ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
  001f5	66 89 04 11	 mov	 WORD PTR [ecx+edx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  001f9	8b 95 f0 f5 ff
	ff		 mov	 edx, DWORD PTR _wszBuf$[ebp]
  001ff	89 95 c4 f5 ff
	ff		 mov	 DWORD PTR $T5[ebp], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 183  : 		if (swprintf_s(wszBuf, chCount, L"%ls%ls", wszCategory, pwszMessage) == -1)

  00205	8b 45 18	 mov	 eax, DWORD PTR _pwszMessage$[ebp]
  00208	50		 push	 eax
  00209	8d 8d f4 f5 ff
	ff		 lea	 ecx, DWORD PTR _wszCategory$[ebp]
  0020f	51		 push	 ecx
  00210	68 00 00 00 00	 push	 OFFSET ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
  00215	8b 95 d8 f5 ff
	ff		 mov	 edx, DWORD PTR _chCount$[ebp]
  0021b	52		 push	 edx
  0021c	8b 85 c4 f5 ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  00222	50		 push	 eax
  00223	e8 00 00 00 00	 call	 _swprintf_s
  00228	83 c4 14	 add	 esp, 20			; 00000014H
  0022b	83 f8 ff	 cmp	 eax, -1
  0022e	75 2b		 jne	 SHORT $LN9@TraceV
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  00230	8b 8d f0 f5 ff
	ff		 mov	 ecx, DWORD PTR _wszBuf$[ebp]
  00236	89 8d c0 f5 ff
	ff		 mov	 DWORD PTR _p$4[ebp], ecx

; 267  : 		free(p);

  0023c	8b 95 c0 f5 ff
	ff		 mov	 edx, DWORD PTR _p$4[ebp]
  00242	52		 push	 edx
  00243	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00249	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0024c	c7 85 f0 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 185  : 			return;

  00256	e9 b6 00 00 00	 jmp	 $LN1@TraceV
$LN9@TraceV:

; 186  : 		}
; 187  : 
; 188  : 		wchar_t fileName[_MAX_PATH] = {'\0'};	

  0025b	68 08 02 00 00	 push	 520			; 00000208H
  00260	6a 00		 push	 0
  00262	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _fileName$[ebp]
  00268	50		 push	 eax
  00269	e8 00 00 00 00	 call	 _memset
  0026e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 189  : #if _MSC_VER < 1900
; 190  : 		if (swprintf_s(fileName, _MAX_PATH, L"%S", pszFileName) == -1)
; 191  : #else
; 192  : 		if (swprintf_s(fileName, _MAX_PATH, L"%hs", pszFileName) == -1)

  00271	8b 4d 08	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  00274	51		 push	 ecx
  00275	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  0027a	68 04 01 00 00	 push	 260			; 00000104H
  0027f	8d 95 f4 fd ff
	ff		 lea	 edx, DWORD PTR _fileName$[ebp]
  00285	52		 push	 edx
  00286	e8 00 00 00 00	 call	 _swprintf_s
  0028b	83 c4 10	 add	 esp, 16			; 00000010H
  0028e	83 f8 ff	 cmp	 eax, -1
  00291	75 28		 jne	 SHORT $LN10@TraceV
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  00293	8b 85 f0 f5 ff
	ff		 mov	 eax, DWORD PTR _wszBuf$[ebp]
  00299	89 85 bc f5 ff
	ff		 mov	 DWORD PTR _p$3[ebp], eax

; 267  : 		free(p);

  0029f	8b 8d bc f5 ff
	ff		 mov	 ecx, DWORD PTR _p$3[ebp]
  002a5	51		 push	 ecx
  002a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  002ac	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  002af	c7 85 f0 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 195  : 			return;

  002b9	eb 56		 jmp	 SHORT $LN1@TraceV
$LN10@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  002bb	8b 95 f0 f5 ff
	ff		 mov	 edx, DWORD PTR _wszBuf$[ebp]
  002c1	89 95 b8 f5 ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 198  : 		_CrtDbgReportW(_CRT_WARN, fileName, nLine, nullptr, L"%ls", static_cast<const wchar_t*>(wszBuf));

  002c7	8b 85 b8 f5 ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  002cd	50		 push	 eax
  002ce	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  002d3	6a 00		 push	 0
  002d5	8b 4d 0c	 mov	 ecx, DWORD PTR _nLine$[ebp]
  002d8	51		 push	 ecx
  002d9	8d 95 f4 fd ff
	ff		 lea	 edx, DWORD PTR _fileName$[ebp]
  002df	52		 push	 edx
  002e0	6a 00		 push	 0
  002e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  002e8	83 c4 18	 add	 esp, 24			; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  002eb	8b 85 f0 f5 ff
	ff		 mov	 eax, DWORD PTR _wszBuf$[ebp]
  002f1	89 85 b4 f5 ff
	ff		 mov	 DWORD PTR _p$1[ebp], eax

; 267  : 		free(p);

  002f7	8b 8d b4 f5 ff
	ff		 mov	 ecx, DWORD PTR _p$1[ebp]
  002fd	51		 push	 ecx
  002fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00304	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  00307	c7 85 f0 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _wszBuf$[ebp], 0
$LN1@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 199  : 	}

  00311	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00314	33 cd		 xor	 ecx, ebp
  00316	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0031b	8b e5		 mov	 esp, ebp
  0031d	5d		 pop	 ebp
  0031e	c3		 ret	 0
?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?GetCategoryName@CTrace@ATL@@CAPA_WI@Z
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_nCategory$ = 8						; size = 4
?GetCategoryName@CTrace@ATL@@CAPA_WI@Z PROC		; ATL::CTrace::GetCategoryName, COMDAT

; 132  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 133  : 		for(unsigned int i = 0; i < m_nLastCategory; i++) 

  00004	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0000b	eb 09		 jmp	 SHORT $LN4@GetCategor
$LN2@GetCategor:
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  00010	83 c0 01	 add	 eax, 1
  00013	89 45 fc	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@GetCategor:
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _i$1[ebp]
  00019	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  0001f	73 22		 jae	 SHORT $LN3@GetCategor

; 134  : 		{
; 135  : 			if (m_nMap[i].nCategory == nCategory)

  00021	69 55 fc 04 01
	00 00		 imul	 edx, DWORD PTR _i$1[ebp], 260
  00028	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[edx]
  0002e	3b 45 08	 cmp	 eax, DWORD PTR _nCategory$[ebp]
  00031	75 0e		 jne	 SHORT $LN5@GetCategor

; 136  : 			{
; 137  : 				return m_nMap[i].categryName;

  00033	69 45 fc 04 01
	00 00		 imul	 eax, DWORD PTR _i$1[ebp], 260
  0003a	05 04 00 00 00	 add	 eax, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  0003f	eb 04		 jmp	 SHORT $LN1@GetCategor
$LN5@GetCategor:

; 138  : 			}
; 139  : 		}

  00041	eb ca		 jmp	 SHORT $LN2@GetCategor
$LN3@GetCategor:

; 140  : 
; 141  : 		return nullptr;

  00043	33 c0		 xor	 eax, eax
$LN1@GetCategor:

; 142  : 	}

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
?GetCategoryName@CTrace@ATL@@CAPA_WI@Z ENDP		; ATL::CTrace::GetCategoryName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 20 00 00	 push	 8192			; 00002000H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PGMFNIFA@atlTraceException@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ PROC	; ATL::CTraceCategoryEx<8192,0>::operator unsigned int, COMDAT
; _this$ = ecx

; 79   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  00007	b8 00 20 00 00	 mov	 eax, 8192		; 00002000H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??B?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAEIXZ ENDP	; ATL::CTraceCategoryEx<8192,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 20 00 00	 push	 8192			; 00002000H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC			; ATL::_AtlGetConversionACP, COMDAT

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 99   : #ifdef _CONVERSION_DONT_USE_THREAD_LOCALE
; 100  : 	return CP_ACP;
; 101  : #else
; 102  : 	return CP_THREAD_ACP;

  00003	b8 03 00 00 00	 mov	 eax, 3

; 103  : #endif
; 104  : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CCRTAllocator@ATL@@SAXPAX@Z PROC			; ATL::CCRTAllocator::Free, COMDAT

; 266  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 267  : 		free(p);

  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0000d	83 c4 04	 add	 esp, 4

; 268  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Free@CCRTAllocator@ATL@@SAXPAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z PROC		; ATL::CCRTAllocator::Allocate, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  : 		return malloc(nBytes);

  00003	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00006	50		 push	 eax
  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  0000d	83 c4 04	 add	 esp, 4

; 263  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@I@ATL@@YAJPAIII@Z
_TEXT	SEGMENT
_i64Result$ = -12					; size = 8
tv75 = -4						; size = 4
_piResult$ = 8						; size = 4
_iLeft$ = 12						; size = 4
_iRight$ = 16						; size = 4
??$AtlMultiply@I@ATL@@YAJPAIII@Z PROC			; ATL::AtlMultiply<unsigned int>, COMDAT

; 135  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 136  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00006	8b 45 0c	 mov	 eax, DWORD PTR _iLeft$[ebp]
  00009	f7 65 10	 mul	 DWORD PTR _iRight$[ebp]
  0000c	89 45 f4	 mov	 DWORD PTR _i64Result$[ebp], eax
  0000f	89 55 f8	 mov	 DWORD PTR _i64Result$[ebp+4], edx

; 137  : 	if(i64Result>UINT_MAX)

  00012	83 7d f8 00	 cmp	 DWORD PTR _i64Result$[ebp+4], 0
  00016	77 06		 ja	 SHORT $LN8@AtlMultipl
  00018	83 7d f4 ff	 cmp	 DWORD PTR _i64Result$[ebp], -1
  0001c	76 31		 jbe	 SHORT $LN2@AtlMultipl
$LN8@AtlMultipl:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0001e	b8 16 02 00 00	 mov	 eax, 534		; 00000216H
  00023	85 c0		 test	 eax, eax
  00025	7f 09		 jg	 SHORT $LN6@AtlMultipl
  00027	c7 45 fc 16 02
	00 00		 mov	 DWORD PTR tv75[ebp], 534 ; 00000216H
  0002e	eb 1a		 jmp	 SHORT $LN4@AtlMultipl
$LN6@AtlMultipl:
  00030	b9 16 02 00 00	 mov	 ecx, 534		; 00000216H
  00035	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0003b	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  00041	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  00047	89 4d fc	 mov	 DWORD PTR tv75[ebp], ecx
$LN4@AtlMultipl:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 139  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0004a	8b 45 fc	 mov	 eax, DWORD PTR tv75[ebp]
  0004d	eb 0a		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 140  : 	}
; 141  : 	*piResult=static_cast<unsigned int>(i64Result);

  0004f	8b 55 f4	 mov	 edx, DWORD PTR _i64Result$[ebp]
  00052	8b 45 08	 mov	 eax, DWORD PTR _piResult$[ebp]
  00055	89 10		 mov	 DWORD PTR [eax], edx

; 142  : 	return S_OK;

  00057	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 143  : }

  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$AtlMultiply@I@ATL@@YAJPAIII@Z ENDP			; ATL::AtlMultiply<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlexcept.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlexcept.h
;	COMDAT ?AtlThrowLastWin32@ATL@@YGXXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_dwError$ = -4						; size = 4
?AtlThrowLastWin32@ATL@@YGXXZ PROC			; ATL::AtlThrowLastWin32, COMDAT

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 85   : 	DWORD dwError = ::GetLastError();

  00006	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0000c	89 45 fc	 mov	 DWORD PTR _dwError$[ebp], eax
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0000f	83 7d fc 00	 cmp	 DWORD PTR _dwError$[ebp], 0
  00013	7f 08		 jg	 SHORT $LN5@AtlThrowLa
  00015	8b 45 fc	 mov	 eax, DWORD PTR _dwError$[ebp]
  00018	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
  0001b	eb 18		 jmp	 SHORT $LN3@AtlThrowLa
$LN5@AtlThrowLa:
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _dwError$[ebp]
  00020	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00026	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  0002c	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  00032	89 4d f8	 mov	 DWORD PTR tv72[ebp], ecx
$LN3@AtlThrowLa:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlexcept.h

; 86   : 	AtlThrow( HRESULT_FROM_WIN32( dwError ) );

  00035	8b 55 f8	 mov	 edx, DWORD PTR tv72[ebp]
  00038	52		 push	 edx
  00039	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@AtlThrowLa:

; 87   : }

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?AtlThrowLastWin32@ATL@@YGXXZ ENDP			; ATL::AtlThrowLastWin32
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlexcept.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlexcept.h
;	COMDAT ?AtlThrowImpl@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_hr$ = 8						; size = 4
?AtlThrowImpl@ATL@@YGXJ@Z PROC				; ATL::AtlThrowImpl, COMDAT

; 65   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  00006	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], OFFSET ??_C@_0HD@OEBHCJKM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0000d	c7 45 fc 42 00
	00 00		 mov	 DWORD PTR $T1[ebp+4], 66 ; 00000042H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlexcept.h

; 66   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

  00014	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@IAAKIJDJ@AtlThrow?3?5hr?5?$DN?50x?$CFx?6@
  0001d	6a 00		 push	 0
  0001f	68 00 20 00 00	 push	 8192			; 00002000H
  00024	8d 4d f8	 lea	 ecx, DWORD PTR $T1[ebp]
  00027	51		 push	 ecx
  00028	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
  0002d	83 c4 14	 add	 esp, 20			; 00000014H

; 67   : #ifdef _AFX
; 68   : 	if( hr == E_OUTOFMEMORY )

  00030	81 7d 08 0e 00
	07 80		 cmp	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH
  00037	75 07		 jne	 SHORT $LN2@AtlThrowIm

; 69   : 	{
; 70   : 		AfxThrowMemoryException();

  00039	e8 00 00 00 00	 call	 ?AfxThrowMemoryException@@YGXXZ ; AfxThrowMemoryException

; 71   : 	}
; 72   : 	else

  0003e	eb 09		 jmp	 SHORT $LN4@AtlThrowIm
$LN2@AtlThrowIm:

; 73   : 	{
; 74   : 		AfxThrowOleException( hr );

  00040	8b 55 08	 mov	 edx, DWORD PTR _hr$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?AfxThrowOleException@@YGXJ@Z ; AfxThrowOleException
$LN4@AtlThrowIm:

; 75   : 	}
; 76   : #else
; 77   : 	throw CAtlException( hr );
; 78   : #endif
; 79   : };

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?AtlThrowImpl@ATL@@YGXJ@Z ENDP				; ATL::AtlThrowImpl
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_msg$ = -36						; size = 28
_bResult$ = -8						; size = 4
_bQuit$ = -4						; size = 4
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00006	6a 01		 push	 1
  00008	6a 12		 push	 18			; 00000012H
  0000a	6a 12		 push	 18			; 00000012H
  0000c	6a 00		 push	 0
  0000e	8d 45 dc	 lea	 eax, DWORD PTR _msg$[ebp]
  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  00018	89 45 fc	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001b	6a 00		 push	 0
  0001d	6a 00		 push	 0
  0001f	8b 4d 0c	 mov	 ecx, DWORD PTR _nLine$[ebp]
  00022	51		 push	 ecx
  00023	8b 55 08	 mov	 edx, DWORD PTR _lpszFileName$[ebp]
  00026	52		 push	 edx
  00027	6a 02		 push	 2
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  0002f	83 c4 14	 add	 esp, 20			; 00000014H
  00032	89 45 f8	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00035	83 7d fc 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  00039	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003b	8b 45 e4	 mov	 eax, DWORD PTR _msg$[ebp+8]
  0003e	50		 push	 eax
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00045	8b 45 f8	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vscprintf
_TEXT	SEGMENT
tv78 = -8						; size = 4
__Result$1 = -4						; size = 4
__Format$ = 8						; size = 4
__ArgList$ = 12						; size = 4
__vscprintf PROC					; COMDAT

; 1675 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1659 :         int const _Result = __stdio_common_vsprintf(

  00006	8b 45 0c	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Format$[ebp]
  0000f	51		 push	 ecx
  00010	6a 00		 push	 0
  00012	6a 00		 push	 0
  00014	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	83 ca 02	 or	 edx, 2
  0001e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00021	50		 push	 eax
  00022	52		 push	 edx
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00029	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002c	89 45 fc	 mov	 DWORD PTR __Result$1[ebp], eax

; 1660 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1661 :             NULL, 0, _Format, _Locale, _ArgList);
; 1662 : 
; 1663 :         return _Result < 0 ? -1 : _Result;

  0002f	83 7d fc 00	 cmp	 DWORD PTR __Result$1[ebp], 0
  00033	7d 09		 jge	 SHORT $LN5@vscprintf
  00035	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv78[ebp], -1
  0003c	eb 06		 jmp	 SHORT $LN3@vscprintf
$LN5@vscprintf:
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR __Result$1[ebp]
  00041	89 4d f8	 mov	 DWORD PTR tv78[ebp], ecx
$LN3@vscprintf:

; 1676 :         return _vscprintf_l(_Format, NULL, _ArgList);

  00044	8b 45 f8	 mov	 eax, DWORD PTR tv78[ebp]

; 1677 :     }

  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
__vscprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vscprintf_l
_TEXT	SEGMENT
tv74 = -8						; size = 4
__Result$ = -4						; size = 4
__Format$ = 8						; size = 4
__Locale$ = 12						; size = 4
__ArgList$ = 16						; size = 4
__vscprintf_l PROC					; COMDAT

; 1658 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1659 :         int const _Result = __stdio_common_vsprintf(

  00006	8b 45 10	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Locale$[ebp]
  0000d	51		 push	 ecx
  0000e	8b 55 08	 mov	 edx, DWORD PTR __Format$[ebp]
  00011	52		 push	 edx
  00012	6a 00		 push	 0
  00014	6a 00		 push	 0
  00016	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001d	83 c9 02	 or	 ecx, 2
  00020	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00023	52		 push	 edx
  00024	51		 push	 ecx
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  0002b	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002e	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1660 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1661 :             NULL, 0, _Format, _Locale, _ArgList);
; 1662 : 
; 1663 :         return _Result < 0 ? -1 : _Result;

  00031	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00035	7d 09		 jge	 SHORT $LN3@vscprintf_
  00037	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  0003e	eb 06		 jmp	 SHORT $LN4@vscprintf_
$LN3@vscprintf_:
  00040	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00043	89 45 f8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vscprintf_:
  00046	8b 45 f8	 mov	 eax, DWORD PTR tv74[ebp]

; 1664 :     }

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
__vscprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s
_TEXT	SEGMENT
tv81 = -8						; size = 4
__Result$1 = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_s PROC					; COMDAT

; 1605 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  00006	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR __Format$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 10	 mov	 edx, DWORD PTR __MaxCount$[ebp]
  00013	52		 push	 edx
  00014	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00021	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00024	52		 push	 edx
  00025	8b 00		 mov	 eax, DWORD PTR [eax]
  00027	50		 push	 eax
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsnprintf_s
  0002e	83 c4 20	 add	 esp, 32			; 00000020H
  00031	89 45 fc	 mov	 DWORD PTR __Result$1[ebp], eax

; 1586 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1587 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1588 : 
; 1589 :         return _Result < 0 ? -1 : _Result;

  00034	83 7d fc 00	 cmp	 DWORD PTR __Result$1[ebp], 0
  00038	7d 09		 jge	 SHORT $LN5@vsnprintf_
  0003a	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv81[ebp], -1
  00041	eb 06		 jmp	 SHORT $LN3@vsnprintf_
$LN5@vsnprintf_:
  00043	8b 4d fc	 mov	 ecx, DWORD PTR __Result$1[ebp]
  00046	89 4d f8	 mov	 DWORD PTR tv81[ebp], ecx
$LN3@vsnprintf_:

; 1606 :         return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);

  00049	8b 45 f8	 mov	 eax, DWORD PTR tv81[ebp]

; 1607 :     }

  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
__vsnprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s_l
_TEXT	SEGMENT
tv74 = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__Locale$ = 24						; size = 4
__ArgList$ = 28						; size = 4
__vsnprintf_s_l PROC					; COMDAT

; 1584 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  00006	8b 45 1c	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 18	 mov	 ecx, DWORD PTR __Locale$[ebp]
  0000d	51		 push	 ecx
  0000e	8b 55 14	 mov	 edx, DWORD PTR __Format$[ebp]
  00011	52		 push	 edx
  00012	8b 45 10	 mov	 eax, DWORD PTR __MaxCount$[ebp]
  00015	50		 push	 eax
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR __BufferCount$[ebp]
  00019	51		 push	 ecx
  0001a	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00023	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00026	51		 push	 ecx
  00027	8b 10		 mov	 edx, DWORD PTR [eax]
  00029	52		 push	 edx
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsnprintf_s
  00030	83 c4 20	 add	 esp, 32			; 00000020H
  00033	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1586 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1587 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1588 : 
; 1589 :         return _Result < 0 ? -1 : _Result;

  00036	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003a	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003c	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00043	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00045	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00048	89 45 f8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004b	8b 45 f8	 mov	 eax, DWORD PTR tv74[ebp]

; 1590 :     }

  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
__vsnprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT _swprintf_s
_TEXT	SEGMENT
__Result$ = -20						; size = 4
__Format$ = -16						; size = 4
__ArgList$ = -12					; size = 4
tv80 = -8						; size = 4
__Result$1 = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf_s PROC					; COMDAT

; 1538 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 1539 :             int _Result;
; 1540 :             va_list _ArgList;
; 1541 :             __crt_va_start(_ArgList, _Format);

  00006	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00009	89 45 f4	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0000c	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR __Format$[ebp], ecx

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  00012	8b 55 f4	 mov	 edx, DWORD PTR __ArgList$[ebp]
  00015	52		 push	 edx
  00016	6a 00		 push	 0
  00018	8b 45 f0	 mov	 eax, DWORD PTR __Format$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR __BufferCount$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00023	52		 push	 edx
  00024	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00029	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002c	51		 push	 ecx
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	52		 push	 edx
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s
  00036	83 c4 1c	 add	 esp, 28			; 0000001cH
  00039	89 45 fc	 mov	 DWORD PTR __Result$1[ebp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  0003c	83 7d fc 00	 cmp	 DWORD PTR __Result$1[ebp], 0
  00040	7d 09		 jge	 SHORT $LN5@swprintf_s
  00042	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv80[ebp], -1
  00049	eb 06		 jmp	 SHORT $LN3@swprintf_s
$LN5@swprintf_s:
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Result$1[ebp]
  0004e	89 45 f8	 mov	 DWORD PTR tv80[ebp], eax
$LN3@swprintf_s:

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  00051	8b 4d f8	 mov	 ecx, DWORD PTR tv80[ebp]
  00054	89 4d ec	 mov	 DWORD PTR __Result$[ebp], ecx

; 1543 :             __crt_va_end(_ArgList);

  00057	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1544 :             return _Result;

  0005e	8b 45 ec	 mov	 eax, DWORD PTR __Result$[ebp]

; 1545 :         }

  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
_swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT __vswprintf_s_l
_TEXT	SEGMENT
tv73 = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_s_l PROC					; COMDAT

; 1264 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  00006	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  0000d	51		 push	 ecx
  0000e	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00011	52		 push	 edx
  00012	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00015	50		 push	 eax
  00016	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001f	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00022	52		 push	 edx
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
  00025	50		 push	 eax
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s
  0002c	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002f	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  00032	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00036	7d 09		 jge	 SHORT $LN3@vswprintf_
  00038	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
  0003f	eb 06		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00041	8b 4d fc	 mov	 ecx, DWORD PTR __Result$[ebp]
  00044	89 4d f8	 mov	 DWORD PTR tv73[ebp], ecx
$LN4@vswprintf_:
  00047	8b 45 f8	 mov	 eax, DWORD PTR tv73[ebp]

; 1270 :     }

  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
__vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00008	7f 08		 jg	 SHORT $LN3@HRESULT_FR
  0000a	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  0000d	89 45 fc	 mov	 DWORD PTR tv68[ebp], eax
  00010	eb 18		 jmp	 SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  00015	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0001b	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  00021	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  00027	89 4d fc	 mov	 DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR tv68[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\databaseaide.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
$LN2@vector:
  00004	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  0000d	83 e9 01	 sub	 ecx, 1
  00010	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00013	83 7d fc 00	 cmp	 DWORD PTR tv66[ebp], 0
  00017	76 11		 jbe	 SHORT $LN1@vector
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  0001c	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001f	8b 55 08	 mov	 edx, DWORD PTR ___t$[ebp]
  00022	03 55 0c	 add	 edx, DWORD PTR ___s$[ebp]
  00025	89 55 08	 mov	 DWORD PTR ___t$[ebp], edx
  00028	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
