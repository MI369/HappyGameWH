; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\内核引擎\AttemperEngine.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?IID_ITraceServiceManager@@3U_GUID@@B DD 08bfc36dbH	; IID_ITraceServiceManager
	DW	05ba2H
	DW	042baH
	DB	081H
	DB	0b0H
	DB	087H
	DB	0b0H
	DB	01cH
	DB	09eH
	DB	0afH
	DB	0feH
?IID_IAsynchronismEngine@@3U_GUID@@B DD 0c7a13074H	; IID_IAsynchronismEngine
	DW	075c5H
	DW	04b8eH
	DB	0b5H
	DB	04bH
	DB	0eeH
	DB	0eH
	DB	0ecH
	DB	0feH
	DB	0b9H
	DB	0ebH
?IID_IAsynchronismEngineSink@@3U_GUID@@B DD 02edf5c9eH	; IID_IAsynchronismEngineSink
	DW	02cacH
	DW	0461dH
	DB	0a7H
	DB	082H
	DB	02eH
	DB	02fH
	DB	0e1H
	DB	091H
	DB	080H
	DB	0f8H
?IID_IDataBase@@3U_GUID@@B DD 0a2e38a78H		; IID_IDataBase
	DW	01e4fH
	DW	04de4H
	DB	0a5H
	DB	0d1H
	DB	0b9H
	DB	019H
	DB	09bH
	DB	0ceH
	DB	041H
	DB	0aeH
?IID_IDataBaseEngine@@3U_GUID@@B DD 047b5a119H		; IID_IDataBaseEngine
	DW	01676H
	DW	049a3H
	DB	0beH
	DB	0aeH
	DB	0caH
	DB	027H
	DB	0ebH
	DB	059H
	DB	097H
	DB	022H
?IID_IUDPNetworkEngine@@3U_GUID@@B DD 08d138a9bH	; IID_IUDPNetworkEngine
	DW	0a97dH
	DW	04d51H
	DB	09dH
	DB	06cH
	DB	0d8H
	DB	06eH
	DB	0a1H
	DB	084H
	DB	045H
	DB	02eH
?IID_ITCPNetworkEngine@@3U_GUID@@B DD 07747f683H	; IID_ITCPNetworkEngine
	DW	0c0daH
	DW	04588H
	DB	089H
	DB	0ccH
	DB	015H
	DB	093H
	DB	0acH
	DB	0c0H
	DB	044H
	DB	0c8H
?IID_ITCPSocketService@@3U_GUID@@B DD 0709a4449H	; IID_ITCPSocketService
	DW	0ad77H
	DW	04b3dH
	DB	0b4H
	DB	0d6H
	DB	08dH
	DB	0bH
	DB	028H
	DB	065H
	DB	0ecH
	DB	0aeH
?IID_IWEBSocketService@@3U_GUID@@B DD 091052ff2H	; IID_IWEBSocketService
	DW	0eb29H
	DW	040b9H
	DB	0b2H
	DB	0a2H
	DB	08aH
	DB	0a2H
	DB	098H
	DB	036H
	DB	02cH
	DB	084H
?IID_ITimerEngine@@3U_GUID@@B DD 0496401aeH		; IID_ITimerEngine
	DW	06fb0H
	DW	04e9fH
	DB	090H
	DB	098H
	DB	044H
	DB	09dH
	DB	09cH
	DB	0b2H
	DB	0bdH
	DB	097H
?IID_ITimerEngineEvent@@3U_GUID@@B DD 0eb78a125H	; IID_ITimerEngineEvent
	DW	062fcH
	DW	04811H
	DB	0b6H
	DB	0f2H
	DB	059H
	DB	026H
	DB	088H
	DB	04H
	DB	0c3H
	DB	02H
?IID_IDataBaseEngineEvent@@3U_GUID@@B DD 0c29c7131H	; IID_IDataBaseEngineEvent
	DW	0e84bH
	DW	04553H
	DB	0a8H
	DB	038H
	DB	012H
	DB	0eeH
	DB	07H
	DB	0ddH
	DB	0eH
	DB	0a3H
?IID_ITCPSocketEvent@@3U_GUID@@B DD 06f5bdb91H		; IID_ITCPSocketEvent
	DW	0f72aH
	DW	0425dH
	DB	087H
	DB	03H
	DB	039H
	DB	0bcH
	DB	0f7H
	DB	01eH
	DB	0bH
	DB	03H
?IID_ITCPNetworkEngineEvent@@3U_GUID@@B DD 0b7e6da53H	; IID_ITCPNetworkEngineEvent
	DW	0fca5H
	DW	04d90H
	DB	085H
	DB	048H
	DB	0feH
	DB	05H
	DB	0f6H
	DB	0b4H
	DB	0c0H
	DB	0efH
?IID_IAttemperEngine@@3U_GUID@@B DD 0b070b2cH		; IID_IAttemperEngine
	DW	09d72H
	DW	042d2H
	DB	0a5H
	DB	070H
	DB	0baH
	DB	02cH
	DB	0bfH
	DB	06fH
	DB	0bbH
	DB	01cH
?IID_IAttemperEngineSink@@3U_GUID@@B DD 0831b9001H	; IID_IAttemperEngineSink
	DW	04450H
	DW	045ddH
	DB	091H
	DB	037H
	DB	0dH
	DB	026H
	DB	016H
	DB	0e3H
	DB	075H
	DB	032H
?IID_IUnknownEx@@3U_GUID@@B DD 05feec21eH		; IID_IUnknownEx
	DW	0dbf3H
	DW	046f0H
	DB	09fH
	DB	057H
	DB	0d1H
	DB	0cdH
	DB	071H
	DB	01cH
	DB	046H
	DB	0deH
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPA_WPB_W@Z			; std::_Maklocwcs
PUBLIC	?InterfaceVersionCompare@@YA_NKK@Z		; InterfaceVersionCompare
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??0CAttemperEngine@@QAE@XZ			; CAttemperEngine::CAttemperEngine
PUBLIC	??1CAttemperEngine@@UAE@XZ			; CAttemperEngine::~CAttemperEngine
PUBLIC	?Release@CAttemperEngine@@UAEXXZ		; CAttemperEngine::Release
PUBLIC	?QueryInterface@CAttemperEngine@@UAEPAXABU_GUID@@K@Z ; CAttemperEngine::QueryInterface
PUBLIC	?StartService@CAttemperEngine@@UAE_NXZ		; CAttemperEngine::StartService
PUBLIC	?ConcludeService@CAttemperEngine@@UAE_NXZ	; CAttemperEngine::ConcludeService
PUBLIC	?SetNetworkEngine@CAttemperEngine@@UAE_NPAUIUnknownEx@@@Z ; CAttemperEngine::SetNetworkEngine
PUBLIC	?SetAttemperEngineSink@CAttemperEngine@@UAE_NPAUIUnknownEx@@@Z ; CAttemperEngine::SetAttemperEngineSink
PUBLIC	?OnEventCustom@CAttemperEngine@@UAE_NGPAXG@Z	; CAttemperEngine::OnEventCustom
PUBLIC	?OnEventControl@CAttemperEngine@@UAE_NGPAXG@Z	; CAttemperEngine::OnEventControl
PUBLIC	?OnEventTimer@CAttemperEngine@@UAE_NKI@Z	; CAttemperEngine::OnEventTimer
PUBLIC	?OnEventDataBaseResult@CAttemperEngine@@UAE_NGKPAXG@Z ; CAttemperEngine::OnEventDataBaseResult
PUBLIC	?OnEventTCPSocketLink@CAttemperEngine@@UAE_NGH@Z ; CAttemperEngine::OnEventTCPSocketLink
PUBLIC	?OnEventTCPSocketShut@CAttemperEngine@@UAE_NGE@Z ; CAttemperEngine::OnEventTCPSocketShut
PUBLIC	?OnEventTCPSocketRead@CAttemperEngine@@UAE_NGUTCP_Command@@PAXG@Z ; CAttemperEngine::OnEventTCPSocketRead
PUBLIC	?OnEventTCPNetworkForeground@CAttemperEngine@@UAE_NK_N@Z ; CAttemperEngine::OnEventTCPNetworkForeground
PUBLIC	?OnEventTCPNetworkBind@CAttemperEngine@@UAE_NKK@Z ; CAttemperEngine::OnEventTCPNetworkBind
PUBLIC	?OnEventTCPNetworkShut@CAttemperEngine@@UAE_NKKK@Z ; CAttemperEngine::OnEventTCPNetworkShut
PUBLIC	?OnEventTCPNetworkRead@CAttemperEngine@@UAE_NKUTCP_Command@@PAXG@Z ; CAttemperEngine::OnEventTCPNetworkRead
PUBLIC	?OnAsynchronismEngineStart@CAttemperEngine@@UAE_NXZ ; CAttemperEngine::OnAsynchronismEngineStart
PUBLIC	?OnAsynchronismEngineConclude@CAttemperEngine@@UAE_NXZ ; CAttemperEngine::OnAsynchronismEngineConclude
PUBLIC	?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z ; CAttemperEngine::OnAsynchronismEngineData
PUBLIC	??_GCAttemperEngine@@UAEPAXI@Z			; CAttemperEngine::`scalar deleting destructor'
PUBLIC	_CreateAttemperEngine
PUBLIC	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z	; std::_Maklocstr<char>
PUBLIC	?Release@CAttemperEngine@@W3AEXXZ		; [thunk]:CAttemperEngine::Release`adjustor{4}'
PUBLIC	?QueryInterface@CAttemperEngine@@W3AEPAXABU_GUID@@K@Z ; [thunk]:CAttemperEngine::QueryInterface`adjustor{4}'
PUBLIC	?Release@CAttemperEngine@@W7AEXXZ		; [thunk]:CAttemperEngine::Release`adjustor{8}'
PUBLIC	?QueryInterface@CAttemperEngine@@W7AEPAXABU_GUID@@K@Z ; [thunk]:CAttemperEngine::QueryInterface`adjustor{8}'
PUBLIC	?Release@CAttemperEngine@@WM@AEXXZ		; [thunk]:CAttemperEngine::Release`adjustor{12}'
PUBLIC	?QueryInterface@CAttemperEngine@@WM@AEPAXABU_GUID@@K@Z ; [thunk]:CAttemperEngine::QueryInterface`adjustor{12}'
PUBLIC	?Release@CAttemperEngine@@WBA@AEXXZ		; [thunk]:CAttemperEngine::Release`adjustor{16}'
PUBLIC	?QueryInterface@CAttemperEngine@@WBA@AEPAXABU_GUID@@K@Z ; [thunk]:CAttemperEngine::QueryInterface`adjustor{16}'
PUBLIC	?Release@CAttemperEngine@@WBE@AEXXZ		; [thunk]:CAttemperEngine::Release`adjustor{20}'
PUBLIC	?QueryInterface@CAttemperEngine@@WBE@AEPAXABU_GUID@@K@Z ; [thunk]:CAttemperEngine::QueryInterface`adjustor{20}'
PUBLIC	??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_7IUnknownEx@@6B@				; IUnknownEx::`vftable'
PUBLIC	??_7IServiceModule@@6B@				; IServiceModule::`vftable'
PUBLIC	??_7IAsynchronismEngineSink@@6B@		; IAsynchronismEngineSink::`vftable'
PUBLIC	??_7ITimerEngineEvent@@6B@			; ITimerEngineEvent::`vftable'
PUBLIC	??_7IDataBaseEngineEvent@@6B@			; IDataBaseEngineEvent::`vftable'
PUBLIC	??_7ITCPSocketEvent@@6B@			; ITCPSocketEvent::`vftable'
PUBLIC	??_7ITCPNetworkEngineEvent@@6B@			; ITCPNetworkEngineEvent::`vftable'
PUBLIC	??_7IAttemperEngine@@6B@			; IAttemperEngine::`vftable'
PUBLIC	??_7CAttemperEngine@@6BIAttemperEngine@@@	; CAttemperEngine::`vftable'
PUBLIC	??_7CAttemperEngine@@6BIAsynchronismEngineSink@@@ ; CAttemperEngine::`vftable'
PUBLIC	??_7CAttemperEngine@@6BIDataBaseEngineEvent@@@	; CAttemperEngine::`vftable'
PUBLIC	??_7CAttemperEngine@@6BITimerEngineEvent@@@	; CAttemperEngine::`vftable'
PUBLIC	??_7CAttemperEngine@@6BITCPSocketEvent@@@	; CAttemperEngine::`vftable'
PUBLIC	??_7CAttemperEngine@@6BITCPNetworkEngineEvent@@@ ; CAttemperEngine::`vftable'
PUBLIC	??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	__TI2PAD
PUBLIC	__CTA2PAD
PUBLIC	??_R0PAD@8					; char * `RTTI Type Descriptor'
PUBLIC	__CT??_R0PAD@84
PUBLIC	??_R0PAX@8					; void * `RTTI Type Descriptor'
PUBLIC	__CT??_R0PAX@84
PUBLIC	??_C@_08HBOFLKLL@?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_C@_0N@DLOPLLLM@?$LN?S?$LP?Z?$LC?i?Q?$KP?J?$KH?$LA?$NM@ ; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_R4IUnknownEx@@6B@				; IUnknownEx::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIUnknownEx@@@8				; IUnknownEx `RTTI Type Descriptor'
PUBLIC	??_R3IUnknownEx@@8				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknownEx@@8				; IUnknownEx::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IServiceModule@@6B@			; IServiceModule::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIServiceModule@@@8			; IServiceModule `RTTI Type Descriptor'
PUBLIC	??_R3IServiceModule@@8				; IServiceModule::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IServiceModule@@8				; IServiceModule::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IServiceModule@@8			; IServiceModule::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IAsynchronismEngineSink@@6B@		; IAsynchronismEngineSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIAsynchronismEngineSink@@@8		; IAsynchronismEngineSink `RTTI Type Descriptor'
PUBLIC	??_R3IAsynchronismEngineSink@@8			; IAsynchronismEngineSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAsynchronismEngineSink@@8			; IAsynchronismEngineSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IAsynchronismEngineSink@@8	; IAsynchronismEngineSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ITimerEngineEvent@@6B@			; ITimerEngineEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUITimerEngineEvent@@@8			; ITimerEngineEvent `RTTI Type Descriptor'
PUBLIC	??_R3ITimerEngineEvent@@8			; ITimerEngineEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ITimerEngineEvent@@8			; ITimerEngineEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ITimerEngineEvent@@8		; ITimerEngineEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IDataBaseEngineEvent@@6B@			; IDataBaseEngineEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIDataBaseEngineEvent@@@8		; IDataBaseEngineEvent `RTTI Type Descriptor'
PUBLIC	??_R3IDataBaseEngineEvent@@8			; IDataBaseEngineEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDataBaseEngineEvent@@8			; IDataBaseEngineEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IDataBaseEngineEvent@@8		; IDataBaseEngineEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ITCPSocketEvent@@6B@			; ITCPSocketEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUITCPSocketEvent@@@8			; ITCPSocketEvent `RTTI Type Descriptor'
PUBLIC	??_R3ITCPSocketEvent@@8				; ITCPSocketEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ITCPSocketEvent@@8				; ITCPSocketEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ITCPSocketEvent@@8		; ITCPSocketEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ITCPNetworkEngineEvent@@6B@		; ITCPNetworkEngineEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUITCPNetworkEngineEvent@@@8		; ITCPNetworkEngineEvent `RTTI Type Descriptor'
PUBLIC	??_R3ITCPNetworkEngineEvent@@8			; ITCPNetworkEngineEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ITCPNetworkEngineEvent@@8			; ITCPNetworkEngineEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ITCPNetworkEngineEvent@@8		; ITCPNetworkEngineEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IAttemperEngine@@6B@			; IAttemperEngine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIAttemperEngine@@@8			; IAttemperEngine `RTTI Type Descriptor'
PUBLIC	??_R3IAttemperEngine@@8				; IAttemperEngine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAttemperEngine@@8				; IAttemperEngine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IAttemperEngine@@8		; IAttemperEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CAttemperEngine@@6BIAttemperEngine@@@	; CAttemperEngine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAttemperEngine@@@8			; CAttemperEngine `RTTI Type Descriptor'
PUBLIC	??_R3CAttemperEngine@@8				; CAttemperEngine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAttemperEngine@@8				; CAttemperEngine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAttemperEngine@@8		; CAttemperEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EC@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@IAsynchronismEngineSink@@8		; IAsynchronismEngineSink::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@IDataBaseEngineEvent@@8		; IDataBaseEngineEvent::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R17?0A@EC@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R1M@?0A@EA@ITimerEngineEvent@@8		; ITimerEngineEvent::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R1M@?0A@EC@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (12,-1,0,66)'
PUBLIC	??_R1BA@?0A@EA@ITCPSocketEvent@@8		; ITCPSocketEvent::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R1BA@?0A@EC@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (16,-1,0,66)'
PUBLIC	??_R1BE@?0A@EA@ITCPNetworkEngineEvent@@8	; ITCPNetworkEngineEvent::`RTTI Base Class Descriptor at (20,-1,0,64)'
PUBLIC	??_R1BE@?0A@EC@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (20,-1,0,66)'
PUBLIC	??_R4CAttemperEngine@@6BIAsynchronismEngineSink@@@ ; CAttemperEngine::`RTTI Complete Object Locator'
PUBLIC	??_R4CAttemperEngine@@6BIDataBaseEngineEvent@@@	; CAttemperEngine::`RTTI Complete Object Locator'
PUBLIC	??_R4CAttemperEngine@@6BITimerEngineEvent@@@	; CAttemperEngine::`RTTI Complete Object Locator'
PUBLIC	??_R4CAttemperEngine@@6BITCPSocketEvent@@@	; CAttemperEngine::`RTTI Complete Object Locator'
PUBLIC	??_R4CAttemperEngine@@6BITCPNetworkEngineEvent@@@ ; CAttemperEngine::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp___calloc_dbg:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	??0CCriticalSection@@QAE@XZ:PROC		; CCriticalSection::CCriticalSection
EXTRN	??1CCriticalSection@@UAE@XZ:PROC		; CCriticalSection::~CCriticalSection
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	__Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_??0CWHDataLocker@@QAE@AAVCCriticalSection@@_N@Z:PROC
EXTRN	__imp_??1CWHDataLocker@@UAE@XZ:PROC
EXTRN	??0CAsynchronismEngine@@QAE@XZ:PROC		; CAsynchronismEngine::CAsynchronismEngine
EXTRN	??1CAsynchronismEngine@@UAE@XZ:PROC		; CAsynchronismEngine::~CAsynchronismEngine
EXTRN	??_ECAttemperEngine@@UAEPAXI@Z:PROC		; CAttemperEngine::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R4CAttemperEngine@@6BITCPNetworkEngineEvent@@@
rdata$r	SEGMENT
??_R4CAttemperEngine@@6BITCPNetworkEngineEvent@@@ DD 00H ; CAttemperEngine::`RTTI Complete Object Locator'
	DD	014H
	DD	00H
	DD	FLAT:??_R0?AVCAttemperEngine@@@8
	DD	FLAT:??_R3CAttemperEngine@@8
rdata$r	ENDS
;	COMDAT ??_R4CAttemperEngine@@6BITCPSocketEvent@@@
rdata$r	SEGMENT
??_R4CAttemperEngine@@6BITCPSocketEvent@@@ DD 00H	; CAttemperEngine::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCAttemperEngine@@@8
	DD	FLAT:??_R3CAttemperEngine@@8
rdata$r	ENDS
;	COMDAT ??_R4CAttemperEngine@@6BITimerEngineEvent@@@
rdata$r	SEGMENT
??_R4CAttemperEngine@@6BITimerEngineEvent@@@ DD 00H	; CAttemperEngine::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCAttemperEngine@@@8
	DD	FLAT:??_R3CAttemperEngine@@8
rdata$r	ENDS
;	COMDAT ??_R4CAttemperEngine@@6BIDataBaseEngineEvent@@@
rdata$r	SEGMENT
??_R4CAttemperEngine@@6BIDataBaseEngineEvent@@@ DD 00H	; CAttemperEngine::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCAttemperEngine@@@8
	DD	FLAT:??_R3CAttemperEngine@@8
rdata$r	ENDS
;	COMDAT ??_R4CAttemperEngine@@6BIAsynchronismEngineSink@@@
rdata$r	SEGMENT
??_R4CAttemperEngine@@6BIAsynchronismEngineSink@@@ DD 00H ; CAttemperEngine::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCAttemperEngine@@@8
	DD	FLAT:??_R3CAttemperEngine@@8
rdata$r	ENDS
;	COMDAT ??_R1BE@?0A@EC@IUnknownEx@@8
rdata$r	SEGMENT
??_R1BE@?0A@EC@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (20,-1,0,66)'
	DD	00H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R1BE@?0A@EA@ITCPNetworkEngineEvent@@8
rdata$r	SEGMENT
??_R1BE@?0A@EA@ITCPNetworkEngineEvent@@8 DD FLAT:??_R0?AUITCPNetworkEngineEvent@@@8 ; ITCPNetworkEngineEvent::`RTTI Base Class Descriptor at (20,-1,0,64)'
	DD	01H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ITCPNetworkEngineEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EC@IUnknownEx@@8
rdata$r	SEGMENT
??_R1BA@?0A@EC@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (16,-1,0,66)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@ITCPSocketEvent@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@ITCPSocketEvent@@8 DD FLAT:??_R0?AUITCPSocketEvent@@@8 ; ITCPSocketEvent::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	01H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ITCPSocketEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EC@IUnknownEx@@8
rdata$r	SEGMENT
??_R1M@?0A@EC@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (12,-1,0,66)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EA@ITimerEngineEvent@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@ITimerEngineEvent@@8 DD FLAT:??_R0?AUITimerEngineEvent@@@8 ; ITimerEngineEvent::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	01H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ITimerEngineEvent@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknownEx@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@IDataBaseEngineEvent@@8
rdata$r	SEGMENT
??_R17?0A@EA@IDataBaseEngineEvent@@8 DD FLAT:??_R0?AUIDataBaseEngineEvent@@@8 ; IDataBaseEngineEvent::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDataBaseEngineEvent@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknownEx@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@IAsynchronismEngineSink@@8
rdata$r	SEGMENT
??_R13?0A@EA@IAsynchronismEngineSink@@8 DD FLAT:??_R0?AUIAsynchronismEngineSink@@@8 ; IAsynchronismEngineSink::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAsynchronismEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknownEx@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAttemperEngine@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAttemperEngine@@8 DD FLAT:??_R0?AVCAttemperEngine@@@8 ; CAttemperEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAttemperEngine@@8
rdata$r	ENDS
;	COMDAT ??_R2CAttemperEngine@@8
rdata$r	SEGMENT
??_R2CAttemperEngine@@8 DD FLAT:??_R1A@?0A@EA@CAttemperEngine@@8 ; CAttemperEngine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAttemperEngine@@8
	DD	FLAT:??_R1A@?0A@EA@IServiceModule@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknownEx@@8
	DD	FLAT:??_R13?0A@EA@IAsynchronismEngineSink@@8
	DD	FLAT:??_R13?0A@EC@IUnknownEx@@8
	DD	FLAT:??_R17?0A@EA@IDataBaseEngineEvent@@8
	DD	FLAT:??_R17?0A@EC@IUnknownEx@@8
	DD	FLAT:??_R1M@?0A@EA@ITimerEngineEvent@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknownEx@@8
	DD	FLAT:??_R1BA@?0A@EA@ITCPSocketEvent@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknownEx@@8
	DD	FLAT:??_R1BE@?0A@EA@ITCPNetworkEngineEvent@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3CAttemperEngine@@8
rdata$r	SEGMENT
??_R3CAttemperEngine@@8 DD 00H				; CAttemperEngine::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0eH
	DD	FLAT:??_R2CAttemperEngine@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAttemperEngine@@@8
data$r	SEGMENT
??_R0?AVCAttemperEngine@@@8 DD FLAT:??_7type_info@@6B@	; CAttemperEngine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAttemperEngine@@', 00H
data$r	ENDS
;	COMDAT ??_R4CAttemperEngine@@6BIAttemperEngine@@@
rdata$r	SEGMENT
??_R4CAttemperEngine@@6BIAttemperEngine@@@ DD 00H	; CAttemperEngine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAttemperEngine@@@8
	DD	FLAT:??_R3CAttemperEngine@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IAttemperEngine@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAttemperEngine@@8 DD FLAT:??_R0?AUIAttemperEngine@@@8 ; IAttemperEngine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAttemperEngine@@8
rdata$r	ENDS
;	COMDAT ??_R2IAttemperEngine@@8
rdata$r	SEGMENT
??_R2IAttemperEngine@@8 DD FLAT:??_R1A@?0A@EA@IAttemperEngine@@8 ; IAttemperEngine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IServiceModule@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3IAttemperEngine@@8
rdata$r	SEGMENT
??_R3IAttemperEngine@@8 DD 00H				; IAttemperEngine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IAttemperEngine@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAttemperEngine@@@8
data$r	SEGMENT
??_R0?AUIAttemperEngine@@@8 DD FLAT:??_7type_info@@6B@	; IAttemperEngine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAttemperEngine@@', 00H
data$r	ENDS
;	COMDAT ??_R4IAttemperEngine@@6B@
rdata$r	SEGMENT
??_R4IAttemperEngine@@6B@ DD 00H			; IAttemperEngine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIAttemperEngine@@@8
	DD	FLAT:??_R3IAttemperEngine@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ITCPNetworkEngineEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ITCPNetworkEngineEvent@@8 DD FLAT:??_R0?AUITCPNetworkEngineEvent@@@8 ; ITCPNetworkEngineEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ITCPNetworkEngineEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2ITCPNetworkEngineEvent@@8
rdata$r	SEGMENT
??_R2ITCPNetworkEngineEvent@@8 DD FLAT:??_R1A@?0A@EA@ITCPNetworkEngineEvent@@8 ; ITCPNetworkEngineEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3ITCPNetworkEngineEvent@@8
rdata$r	SEGMENT
??_R3ITCPNetworkEngineEvent@@8 DD 00H			; ITCPNetworkEngineEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ITCPNetworkEngineEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUITCPNetworkEngineEvent@@@8
data$r	SEGMENT
??_R0?AUITCPNetworkEngineEvent@@@8 DD FLAT:??_7type_info@@6B@ ; ITCPNetworkEngineEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUITCPNetworkEngineEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4ITCPNetworkEngineEvent@@6B@
rdata$r	SEGMENT
??_R4ITCPNetworkEngineEvent@@6B@ DD 00H			; ITCPNetworkEngineEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUITCPNetworkEngineEvent@@@8
	DD	FLAT:??_R3ITCPNetworkEngineEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ITCPSocketEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ITCPSocketEvent@@8 DD FLAT:??_R0?AUITCPSocketEvent@@@8 ; ITCPSocketEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ITCPSocketEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2ITCPSocketEvent@@8
rdata$r	SEGMENT
??_R2ITCPSocketEvent@@8 DD FLAT:??_R1A@?0A@EA@ITCPSocketEvent@@8 ; ITCPSocketEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3ITCPSocketEvent@@8
rdata$r	SEGMENT
??_R3ITCPSocketEvent@@8 DD 00H				; ITCPSocketEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ITCPSocketEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUITCPSocketEvent@@@8
data$r	SEGMENT
??_R0?AUITCPSocketEvent@@@8 DD FLAT:??_7type_info@@6B@	; ITCPSocketEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUITCPSocketEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4ITCPSocketEvent@@6B@
rdata$r	SEGMENT
??_R4ITCPSocketEvent@@6B@ DD 00H			; ITCPSocketEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUITCPSocketEvent@@@8
	DD	FLAT:??_R3ITCPSocketEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IDataBaseEngineEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDataBaseEngineEvent@@8 DD FLAT:??_R0?AUIDataBaseEngineEvent@@@8 ; IDataBaseEngineEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDataBaseEngineEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2IDataBaseEngineEvent@@8
rdata$r	SEGMENT
??_R2IDataBaseEngineEvent@@8 DD FLAT:??_R1A@?0A@EA@IDataBaseEngineEvent@@8 ; IDataBaseEngineEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3IDataBaseEngineEvent@@8
rdata$r	SEGMENT
??_R3IDataBaseEngineEvent@@8 DD 00H			; IDataBaseEngineEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IDataBaseEngineEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIDataBaseEngineEvent@@@8
data$r	SEGMENT
??_R0?AUIDataBaseEngineEvent@@@8 DD FLAT:??_7type_info@@6B@ ; IDataBaseEngineEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIDataBaseEngineEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4IDataBaseEngineEvent@@6B@
rdata$r	SEGMENT
??_R4IDataBaseEngineEvent@@6B@ DD 00H			; IDataBaseEngineEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIDataBaseEngineEvent@@@8
	DD	FLAT:??_R3IDataBaseEngineEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ITimerEngineEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ITimerEngineEvent@@8 DD FLAT:??_R0?AUITimerEngineEvent@@@8 ; ITimerEngineEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ITimerEngineEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2ITimerEngineEvent@@8
rdata$r	SEGMENT
??_R2ITimerEngineEvent@@8 DD FLAT:??_R1A@?0A@EA@ITimerEngineEvent@@8 ; ITimerEngineEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3ITimerEngineEvent@@8
rdata$r	SEGMENT
??_R3ITimerEngineEvent@@8 DD 00H			; ITimerEngineEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ITimerEngineEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUITimerEngineEvent@@@8
data$r	SEGMENT
??_R0?AUITimerEngineEvent@@@8 DD FLAT:??_7type_info@@6B@ ; ITimerEngineEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUITimerEngineEvent@@', 00H
data$r	ENDS
;	COMDAT ??_R4ITimerEngineEvent@@6B@
rdata$r	SEGMENT
??_R4ITimerEngineEvent@@6B@ DD 00H			; ITimerEngineEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUITimerEngineEvent@@@8
	DD	FLAT:??_R3ITimerEngineEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IAsynchronismEngineSink@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAsynchronismEngineSink@@8 DD FLAT:??_R0?AUIAsynchronismEngineSink@@@8 ; IAsynchronismEngineSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAsynchronismEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R2IAsynchronismEngineSink@@8
rdata$r	SEGMENT
??_R2IAsynchronismEngineSink@@8 DD FLAT:??_R1A@?0A@EA@IAsynchronismEngineSink@@8 ; IAsynchronismEngineSink::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3IAsynchronismEngineSink@@8
rdata$r	SEGMENT
??_R3IAsynchronismEngineSink@@8 DD 00H			; IAsynchronismEngineSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IAsynchronismEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAsynchronismEngineSink@@@8
data$r	SEGMENT
??_R0?AUIAsynchronismEngineSink@@@8 DD FLAT:??_7type_info@@6B@ ; IAsynchronismEngineSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAsynchronismEngineSink@@', 00H
data$r	ENDS
;	COMDAT ??_R4IAsynchronismEngineSink@@6B@
rdata$r	SEGMENT
??_R4IAsynchronismEngineSink@@6B@ DD 00H		; IAsynchronismEngineSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIAsynchronismEngineSink@@@8
	DD	FLAT:??_R3IAsynchronismEngineSink@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IServiceModule@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IServiceModule@@8 DD FLAT:??_R0?AUIServiceModule@@@8 ; IServiceModule::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IServiceModule@@8
rdata$r	ENDS
;	COMDAT ??_R2IServiceModule@@8
rdata$r	SEGMENT
??_R2IServiceModule@@8 DD FLAT:??_R1A@?0A@EA@IServiceModule@@8 ; IServiceModule::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3IServiceModule@@8
rdata$r	SEGMENT
??_R3IServiceModule@@8 DD 00H				; IServiceModule::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IServiceModule@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIServiceModule@@@8
data$r	SEGMENT
??_R0?AUIServiceModule@@@8 DD FLAT:??_7type_info@@6B@	; IServiceModule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIServiceModule@@', 00H
data$r	ENDS
;	COMDAT ??_R4IServiceModule@@6B@
rdata$r	SEGMENT
??_R4IServiceModule@@6B@ DD 00H				; IServiceModule::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIServiceModule@@@8
	DD	FLAT:??_R3IServiceModule@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknownEx@@8
rdata$r	SEGMENT
??_R2IUnknownEx@@8 DD FLAT:??_R1A@?0A@EA@IUnknownEx@@8	; IUnknownEx::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknownEx@@8
rdata$r	SEGMENT
??_R3IUnknownEx@@8 DD 00H				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknownEx@@@8
data$r	SEGMENT
??_R0?AUIUnknownEx@@@8 DD FLAT:??_7type_info@@6B@	; IUnknownEx `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknownEx@@', 00H
data$r	ENDS
;	COMDAT ??_R4IUnknownEx@@6B@
rdata$r	SEGMENT
??_R4IUnknownEx@@6B@ DD 00H				; IUnknownEx::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIUnknownEx@@@8
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DLOPLLLM@?$LN?S?$LP?Z?$LC?i?Q?$KP?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_0N@DLOPLLLM@?$LN?S?$LP?Z?$LC?i?Q?$KP?J?$KH?$LA?$NM@ DB 0bdH, 0d3H, 0bfH
	DB	0daH, 0b2H, 0e9H, 0d1H, 0afH, 0caH, 0a7H, 0b0H, 0dcH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HBOFLKLL@?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@
CONST	SEGMENT
??_C@_08HBOFLKLL@?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@ DB 0b4H, 0b4H, 0bdH, 0a8H
	DB	0caH, 0a7H, 0b0H, 0dcH, 00H			; `string'
CONST	ENDS
;	COMDAT __CT??_R0PAX@84
xdata$x	SEGMENT
__CT??_R0PAX@84 DD 01H
	DD	FLAT:??_R0PAX@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PAX@8
data$r	SEGMENT
??_R0PAX@8 DD	FLAT:??_7type_info@@6B@			; void * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAX', 00H
data$r	ENDS
;	COMDAT __CT??_R0PAD@84
xdata$x	SEGMENT
__CT??_R0PAD@84 DD 01H
	DD	FLAT:??_R0PAD@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PAD@8
data$r	SEGMENT
??_R0PAD@8 DD	FLAT:??_7type_info@@6B@			; char * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAD', 00H
data$r	ENDS
;	COMDAT __CTA2PAD
xdata$x	SEGMENT
__CTA2PAD DD	02H
	DD	FLAT:__CT??_R0PAD@84
	DD	FLAT:__CT??_R0PAX@84
xdata$x	ENDS
;	COMDAT __TI2PAD
xdata$x	SEGMENT
__TI2PAD DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2PAD
xdata$x	ENDS
;	COMDAT ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0c4H, 0daH, 0baH, 0cbH, 0d2H, 0fdH, 0c7H, 0e6H, '\a'
	DB	'ttemperengine.cpp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CAttemperEngine@@6BITCPNetworkEngineEvent@@@
CONST	SEGMENT
??_7CAttemperEngine@@6BITCPNetworkEngineEvent@@@ DD FLAT:??_R4CAttemperEngine@@6BITCPNetworkEngineEvent@@@ ; CAttemperEngine::`vftable'
	DD	FLAT:?Release@CAttemperEngine@@WBE@AEXXZ
	DD	FLAT:?QueryInterface@CAttemperEngine@@WBE@AEPAXABU_GUID@@K@Z
	DD	FLAT:?OnEventTCPNetworkBind@CAttemperEngine@@UAE_NKK@Z
	DD	FLAT:?OnEventTCPNetworkShut@CAttemperEngine@@UAE_NKKK@Z
	DD	FLAT:?OnEventTCPNetworkRead@CAttemperEngine@@UAE_NKUTCP_Command@@PAXG@Z
	DD	FLAT:?OnEventTCPNetworkForeground@CAttemperEngine@@UAE_NK_N@Z
CONST	ENDS
;	COMDAT ??_7CAttemperEngine@@6BITCPSocketEvent@@@
CONST	SEGMENT
??_7CAttemperEngine@@6BITCPSocketEvent@@@ DD FLAT:??_R4CAttemperEngine@@6BITCPSocketEvent@@@ ; CAttemperEngine::`vftable'
	DD	FLAT:?Release@CAttemperEngine@@WBA@AEXXZ
	DD	FLAT:?QueryInterface@CAttemperEngine@@WBA@AEPAXABU_GUID@@K@Z
	DD	FLAT:?OnEventTCPSocketLink@CAttemperEngine@@UAE_NGH@Z
	DD	FLAT:?OnEventTCPSocketShut@CAttemperEngine@@UAE_NGE@Z
	DD	FLAT:?OnEventTCPSocketRead@CAttemperEngine@@UAE_NGUTCP_Command@@PAXG@Z
CONST	ENDS
;	COMDAT ??_7CAttemperEngine@@6BITimerEngineEvent@@@
CONST	SEGMENT
??_7CAttemperEngine@@6BITimerEngineEvent@@@ DD FLAT:??_R4CAttemperEngine@@6BITimerEngineEvent@@@ ; CAttemperEngine::`vftable'
	DD	FLAT:?Release@CAttemperEngine@@WM@AEXXZ
	DD	FLAT:?QueryInterface@CAttemperEngine@@WM@AEPAXABU_GUID@@K@Z
	DD	FLAT:?OnEventTimer@CAttemperEngine@@UAE_NKI@Z
CONST	ENDS
;	COMDAT ??_7CAttemperEngine@@6BIDataBaseEngineEvent@@@
CONST	SEGMENT
??_7CAttemperEngine@@6BIDataBaseEngineEvent@@@ DD FLAT:??_R4CAttemperEngine@@6BIDataBaseEngineEvent@@@ ; CAttemperEngine::`vftable'
	DD	FLAT:?Release@CAttemperEngine@@W7AEXXZ
	DD	FLAT:?QueryInterface@CAttemperEngine@@W7AEPAXABU_GUID@@K@Z
	DD	FLAT:?OnEventDataBaseResult@CAttemperEngine@@UAE_NGKPAXG@Z
CONST	ENDS
;	COMDAT ??_7CAttemperEngine@@6BIAsynchronismEngineSink@@@
CONST	SEGMENT
??_7CAttemperEngine@@6BIAsynchronismEngineSink@@@ DD FLAT:??_R4CAttemperEngine@@6BIAsynchronismEngineSink@@@ ; CAttemperEngine::`vftable'
	DD	FLAT:?Release@CAttemperEngine@@W3AEXXZ
	DD	FLAT:?QueryInterface@CAttemperEngine@@W3AEPAXABU_GUID@@K@Z
	DD	FLAT:?OnAsynchronismEngineStart@CAttemperEngine@@UAE_NXZ
	DD	FLAT:?OnAsynchronismEngineConclude@CAttemperEngine@@UAE_NXZ
	DD	FLAT:?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z
CONST	ENDS
;	COMDAT ??_7CAttemperEngine@@6BIAttemperEngine@@@
CONST	SEGMENT
??_7CAttemperEngine@@6BIAttemperEngine@@@ DD FLAT:??_R4CAttemperEngine@@6BIAttemperEngine@@@ ; CAttemperEngine::`vftable'
	DD	FLAT:?Release@CAttemperEngine@@UAEXXZ
	DD	FLAT:?QueryInterface@CAttemperEngine@@UAEPAXABU_GUID@@K@Z
	DD	FLAT:?StartService@CAttemperEngine@@UAE_NXZ
	DD	FLAT:?ConcludeService@CAttemperEngine@@UAE_NXZ
	DD	FLAT:?SetNetworkEngine@CAttemperEngine@@UAE_NPAUIUnknownEx@@@Z
	DD	FLAT:?SetAttemperEngineSink@CAttemperEngine@@UAE_NPAUIUnknownEx@@@Z
	DD	FLAT:?OnEventCustom@CAttemperEngine@@UAE_NGPAXG@Z
	DD	FLAT:?OnEventControl@CAttemperEngine@@UAE_NGPAXG@Z
	DD	FLAT:??_ECAttemperEngine@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7IAttemperEngine@@6B@
CONST	SEGMENT
??_7IAttemperEngine@@6B@ DD FLAT:??_R4IAttemperEngine@@6B@ ; IAttemperEngine::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ITCPNetworkEngineEvent@@6B@
CONST	SEGMENT
??_7ITCPNetworkEngineEvent@@6B@ DD FLAT:??_R4ITCPNetworkEngineEvent@@6B@ ; ITCPNetworkEngineEvent::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ITCPSocketEvent@@6B@
CONST	SEGMENT
??_7ITCPSocketEvent@@6B@ DD FLAT:??_R4ITCPSocketEvent@@6B@ ; ITCPSocketEvent::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7IDataBaseEngineEvent@@6B@
CONST	SEGMENT
??_7IDataBaseEngineEvent@@6B@ DD FLAT:??_R4IDataBaseEngineEvent@@6B@ ; IDataBaseEngineEvent::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ITimerEngineEvent@@6B@
CONST	SEGMENT
??_7ITimerEngineEvent@@6B@ DD FLAT:??_R4ITimerEngineEvent@@6B@ ; ITimerEngineEvent::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7IAsynchronismEngineSink@@6B@
CONST	SEGMENT
??_7IAsynchronismEngineSink@@6B@ DD FLAT:??_R4IAsynchronismEngineSink@@6B@ ; IAsynchronismEngineSink::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7IServiceModule@@6B@
CONST	SEGMENT
??_7IServiceModule@@6B@ DD FLAT:??_R4IServiceModule@@6B@ ; IServiceModule::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7IUnknownEx@@6B@
CONST	SEGMENT
??_7IUnknownEx@@6B@ DD FLAT:??_R4IUnknownEx@@6B@	; IUnknownEx::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocnum', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocale', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$_CreateAttemperEngine$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$_CreateAttemperEngine$2
__catchsym$_CreateAttemperEngine$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$_CreateAttemperEngine$0
__ehfuncinfo$_CreateAttemperEngine DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$_CreateAttemperEngine
	DD	02H
	DD	FLAT:__tryblocktable$_CreateAttemperEngine
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$_CreateAttemperEngine DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$_CreateAttemperEngine$5
	DD	03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$_CreateAttemperEngine$6
__unwindtable$_CreateAttemperEngine DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$_CreateAttemperEngine$4
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z$2
__catchsym$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z$0
__unwindtable$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z
	DD	02H
	DD	FLAT:__tryblocktable$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnEventTCPNetworkRead@CAttemperEngine@@UAE_NKUTCP_Command@@PAXG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEventTCPNetworkRead@CAttemperEngine@@UAE_NKUTCP_Command@@PAXG@Z$0
__ehfuncinfo$?OnEventTCPNetworkRead@CAttemperEngine@@UAE_NKUTCP_Command@@PAXG@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnEventTCPNetworkRead@CAttemperEngine@@UAE_NKUTCP_Command@@PAXG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnEventTCPNetworkShut@CAttemperEngine@@UAE_NKKK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEventTCPNetworkShut@CAttemperEngine@@UAE_NKKK@Z$0
__ehfuncinfo$?OnEventTCPNetworkShut@CAttemperEngine@@UAE_NKKK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnEventTCPNetworkShut@CAttemperEngine@@UAE_NKKK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnEventTCPNetworkBind@CAttemperEngine@@UAE_NKK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEventTCPNetworkBind@CAttemperEngine@@UAE_NKK@Z$0
__ehfuncinfo$?OnEventTCPNetworkBind@CAttemperEngine@@UAE_NKK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnEventTCPNetworkBind@CAttemperEngine@@UAE_NKK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnEventTCPNetworkForeground@CAttemperEngine@@UAE_NK_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEventTCPNetworkForeground@CAttemperEngine@@UAE_NK_N@Z$0
__ehfuncinfo$?OnEventTCPNetworkForeground@CAttemperEngine@@UAE_NK_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnEventTCPNetworkForeground@CAttemperEngine@@UAE_NK_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnEventTCPSocketRead@CAttemperEngine@@UAE_NGUTCP_Command@@PAXG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEventTCPSocketRead@CAttemperEngine@@UAE_NGUTCP_Command@@PAXG@Z$0
__ehfuncinfo$?OnEventTCPSocketRead@CAttemperEngine@@UAE_NGUTCP_Command@@PAXG@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnEventTCPSocketRead@CAttemperEngine@@UAE_NGUTCP_Command@@PAXG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnEventTCPSocketShut@CAttemperEngine@@UAE_NGE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEventTCPSocketShut@CAttemperEngine@@UAE_NGE@Z$0
__ehfuncinfo$?OnEventTCPSocketShut@CAttemperEngine@@UAE_NGE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnEventTCPSocketShut@CAttemperEngine@@UAE_NGE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnEventTCPSocketLink@CAttemperEngine@@UAE_NGH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEventTCPSocketLink@CAttemperEngine@@UAE_NGH@Z$0
__ehfuncinfo$?OnEventTCPSocketLink@CAttemperEngine@@UAE_NGH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnEventTCPSocketLink@CAttemperEngine@@UAE_NGH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnEventDataBaseResult@CAttemperEngine@@UAE_NGKPAXG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEventDataBaseResult@CAttemperEngine@@UAE_NGKPAXG@Z$0
__ehfuncinfo$?OnEventDataBaseResult@CAttemperEngine@@UAE_NGKPAXG@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnEventDataBaseResult@CAttemperEngine@@UAE_NGKPAXG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnEventTimer@CAttemperEngine@@UAE_NKI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEventTimer@CAttemperEngine@@UAE_NKI@Z$0
__ehfuncinfo$?OnEventTimer@CAttemperEngine@@UAE_NKI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnEventTimer@CAttemperEngine@@UAE_NKI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnEventControl@CAttemperEngine@@UAE_NGPAXG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnEventControl@CAttemperEngine@@UAE_NGPAXG@Z$0
__ehfuncinfo$?OnEventControl@CAttemperEngine@@UAE_NGPAXG@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnEventControl@CAttemperEngine@@UAE_NGPAXG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CAttemperEngine@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CAttemperEngine@@QAE@XZ$0
__ehfuncinfo$??0CAttemperEngine@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CAttemperEngine@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odsp
;	COMDAT ?QueryInterface@CAttemperEngine@@WBE@AEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
?QueryInterface@CAttemperEngine@@WBE@AEPAXABU_GUID@@K@Z PROC ; [thunk]:CAttemperEngine::QueryInterface`adjustor{20}', COMDAT
  00000	83 e9 14	 sub	 ecx, 20			; 00000014H
  00003	e9 00 00 00 00	 jmp	 ?QueryInterface@CAttemperEngine@@UAEPAXABU_GUID@@K@Z ; CAttemperEngine::QueryInterface
?QueryInterface@CAttemperEngine@@WBE@AEPAXABU_GUID@@K@Z ENDP ; [thunk]:CAttemperEngine::QueryInterface`adjustor{20}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?Release@CAttemperEngine@@WBE@AEXXZ
_TEXT	SEGMENT
?Release@CAttemperEngine@@WBE@AEXXZ PROC		; [thunk]:CAttemperEngine::Release`adjustor{20}', COMDAT
  00000	83 e9 14	 sub	 ecx, 20			; 00000014H
  00003	e9 00 00 00 00	 jmp	 ?Release@CAttemperEngine@@UAEXXZ ; CAttemperEngine::Release
?Release@CAttemperEngine@@WBE@AEXXZ ENDP		; [thunk]:CAttemperEngine::Release`adjustor{20}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?QueryInterface@CAttemperEngine@@WBA@AEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
?QueryInterface@CAttemperEngine@@WBA@AEPAXABU_GUID@@K@Z PROC ; [thunk]:CAttemperEngine::QueryInterface`adjustor{16}', COMDAT
  00000	83 e9 10	 sub	 ecx, 16			; 00000010H
  00003	e9 00 00 00 00	 jmp	 ?QueryInterface@CAttemperEngine@@UAEPAXABU_GUID@@K@Z ; CAttemperEngine::QueryInterface
?QueryInterface@CAttemperEngine@@WBA@AEPAXABU_GUID@@K@Z ENDP ; [thunk]:CAttemperEngine::QueryInterface`adjustor{16}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?Release@CAttemperEngine@@WBA@AEXXZ
_TEXT	SEGMENT
?Release@CAttemperEngine@@WBA@AEXXZ PROC		; [thunk]:CAttemperEngine::Release`adjustor{16}', COMDAT
  00000	83 e9 10	 sub	 ecx, 16			; 00000010H
  00003	e9 00 00 00 00	 jmp	 ?Release@CAttemperEngine@@UAEXXZ ; CAttemperEngine::Release
?Release@CAttemperEngine@@WBA@AEXXZ ENDP		; [thunk]:CAttemperEngine::Release`adjustor{16}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?QueryInterface@CAttemperEngine@@WM@AEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
?QueryInterface@CAttemperEngine@@WM@AEPAXABU_GUID@@K@Z PROC ; [thunk]:CAttemperEngine::QueryInterface`adjustor{12}', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ?QueryInterface@CAttemperEngine@@UAEPAXABU_GUID@@K@Z ; CAttemperEngine::QueryInterface
?QueryInterface@CAttemperEngine@@WM@AEPAXABU_GUID@@K@Z ENDP ; [thunk]:CAttemperEngine::QueryInterface`adjustor{12}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?Release@CAttemperEngine@@WM@AEXXZ
_TEXT	SEGMENT
?Release@CAttemperEngine@@WM@AEXXZ PROC			; [thunk]:CAttemperEngine::Release`adjustor{12}', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ?Release@CAttemperEngine@@UAEXXZ ; CAttemperEngine::Release
?Release@CAttemperEngine@@WM@AEXXZ ENDP			; [thunk]:CAttemperEngine::Release`adjustor{12}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?QueryInterface@CAttemperEngine@@W7AEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
?QueryInterface@CAttemperEngine@@W7AEPAXABU_GUID@@K@Z PROC ; [thunk]:CAttemperEngine::QueryInterface`adjustor{8}', COMDAT
  00000	83 e9 08	 sub	 ecx, 8
  00003	e9 00 00 00 00	 jmp	 ?QueryInterface@CAttemperEngine@@UAEPAXABU_GUID@@K@Z ; CAttemperEngine::QueryInterface
?QueryInterface@CAttemperEngine@@W7AEPAXABU_GUID@@K@Z ENDP ; [thunk]:CAttemperEngine::QueryInterface`adjustor{8}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?Release@CAttemperEngine@@W7AEXXZ
_TEXT	SEGMENT
?Release@CAttemperEngine@@W7AEXXZ PROC			; [thunk]:CAttemperEngine::Release`adjustor{8}', COMDAT
  00000	83 e9 08	 sub	 ecx, 8
  00003	e9 00 00 00 00	 jmp	 ?Release@CAttemperEngine@@UAEXXZ ; CAttemperEngine::Release
?Release@CAttemperEngine@@W7AEXXZ ENDP			; [thunk]:CAttemperEngine::Release`adjustor{8}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?QueryInterface@CAttemperEngine@@W3AEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
?QueryInterface@CAttemperEngine@@W3AEPAXABU_GUID@@K@Z PROC ; [thunk]:CAttemperEngine::QueryInterface`adjustor{4}', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ?QueryInterface@CAttemperEngine@@UAEPAXABU_GUID@@K@Z ; CAttemperEngine::QueryInterface
?QueryInterface@CAttemperEngine@@W3AEPAXABU_GUID@@K@Z ENDP ; [thunk]:CAttemperEngine::QueryInterface`adjustor{4}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?Release@CAttemperEngine@@W3AEXXZ
_TEXT	SEGMENT
?Release@CAttemperEngine@@W3AEXXZ PROC			; [thunk]:CAttemperEngine::Release`adjustor{4}', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ?Release@CAttemperEngine@@UAEXXZ ; CAttemperEngine::Release
?Release@CAttemperEngine@@W3AEXXZ ENDP			; [thunk]:CAttemperEngine::Release`adjustor{4}'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
tv66 = -28						; size = 4
tv86 = -24						; size = 4
__Ptrdest$ = -20					; size = 4
__Ptrnext$1 = -16					; size = 4
__Count$ = -12						; size = 4
tv83 = -8						; size = 4
tv89 = -1						; size = 1
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 664  : 	{	// convert C string to _Elem sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH

; 665  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  00006	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR tv83[ebp], eax
  0000c	8b 4d f8	 mov	 ecx, DWORD PTR tv83[ebp]
  0000f	83 c1 01	 add	 ecx, 1
  00012	89 4d e8	 mov	 DWORD PTR tv86[ebp], ecx
$LL7@Maklocstr:
  00015	8b 55 f8	 mov	 edx, DWORD PTR tv83[ebp]
  00018	8a 02		 mov	 al, BYTE PTR [edx]
  0001a	88 45 ff	 mov	 BYTE PTR tv89[ebp], al
  0001d	83 45 f8 01	 add	 DWORD PTR tv83[ebp], 1
  00021	80 7d ff 00	 cmp	 BYTE PTR tv89[ebp], 0
  00025	75 ee		 jne	 SHORT $LL7@Maklocstr
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv83[ebp]
  0002a	2b 4d e8	 sub	 ecx, DWORD PTR tv86[ebp]
  0002d	89 4d e4	 mov	 DWORD PTR tv66[ebp], ecx
  00030	8b 55 e4	 mov	 edx, DWORD PTR tv66[ebp]
  00033	83 c2 01	 add	 edx, 1
  00036	89 55 f4	 mov	 DWORD PTR __Count$[ebp], edx

; 666  : 
; 667  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  00039	68 9c 02 00 00	 push	 668			; 0000029cH
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	6a 02		 push	 2
  00045	6a 01		 push	 1
  00047	8b 45 f4	 mov	 eax, DWORD PTR __Count$[ebp]
  0004a	50		 push	 eax
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00051	83 c4 14	 add	 esp, 20			; 00000014H
  00054	89 45 ec	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 668  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 669  : 
; 670  : 	if (!_Ptrdest)

  00057	83 7d ec 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  0005b	75 05		 jne	 SHORT $LN5@Maklocstr

; 671  : 		_Xbad_alloc();

  0005d	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 672  : 
; 673  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00062	8b 4d ec	 mov	 ecx, DWORD PTR __Ptrdest$[ebp]
  00065	89 4d f0	 mov	 DWORD PTR __Ptrnext$1[ebp], ecx
  00068	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  0006a	8b 55 f4	 mov	 edx, DWORD PTR __Count$[ebp]
  0006d	83 ea 01	 sub	 edx, 1
  00070	89 55 f4	 mov	 DWORD PTR __Count$[ebp], edx
  00073	8b 45 f0	 mov	 eax, DWORD PTR __Ptrnext$1[ebp]
  00076	83 c0 01	 add	 eax, 1
  00079	89 45 f0	 mov	 DWORD PTR __Ptrnext$1[ebp], eax
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0007f	83 c1 01	 add	 ecx, 1
  00082	89 4d 08	 mov	 DWORD PTR __Ptr$[ebp], ecx
$LN4@Maklocstr:
  00085	83 7d f4 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00089	76 0c		 jbe	 SHORT $LN3@Maklocstr

; 674  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  0008b	8b 55 f0	 mov	 edx, DWORD PTR __Ptrnext$1[ebp]
  0008e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00091	8a 08		 mov	 cl, BYTE PTR [eax]
  00093	88 0a		 mov	 BYTE PTR [edx], cl
  00095	eb d3		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 675  : 
; 676  : 	return (_Ptrdest);

  00097	8b 45 ec	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN6@Maklocstr:

; 677  : 	}

  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT _CreateAttemperEngine
_TEXT	SEGMENT
tv129 = -68						; size = 4
$T2 = -64						; size = 4
$T3 = -60						; size = 4
tv150 = -56						; size = 4
$T4 = -52						; size = 4
$T5 = -48						; size = 4
tv151 = -44						; size = 4
tv153 = -40						; size = 4
_pObject$6 = -36					; size = 4
tv75 = -32						; size = 4
$T7 = -28						; size = 4
$T8 = -24						; size = 4
_pAttemperEngine$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_Guid$ = 8						; size = 4
_dwInterfaceVer$ = 12					; size = 4
_CreateAttemperEngine PROC				; COMDAT

; 530  : DECLARE_CREATE_MODULE(AttemperEngine);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$_CreateAttemperEngine
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 34	 sub	 esp, 52			; 00000034H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pAttemperEngine$[ebp], 0
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0003a	68 b0 80 00 00	 push	 32944			; 000080b0H
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00044	83 c4 04	 add	 esp, 4
  00047	89 45 d8	 mov	 DWORD PTR tv153[ebp], eax
  0004a	8b 45 d8	 mov	 eax, DWORD PTR tv153[ebp]
  0004d	89 45 e4	 mov	 DWORD PTR $T7[ebp], eax
  00050	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00054	83 7d e4 00	 cmp	 DWORD PTR $T7[ebp], 0
  00058	74 13		 je	 SHORT $LN7@CreateAtte
  0005a	8b 4d e4	 mov	 ecx, DWORD PTR $T7[ebp]
  0005d	e8 00 00 00 00	 call	 ??0CAttemperEngine@@QAE@XZ ; CAttemperEngine::CAttemperEngine
  00062	89 45 d4	 mov	 DWORD PTR tv151[ebp], eax
  00065	8b 4d d4	 mov	 ecx, DWORD PTR tv151[ebp]
  00068	89 4d e0	 mov	 DWORD PTR tv75[ebp], ecx
  0006b	eb 07		 jmp	 SHORT $LN8@CreateAtte
$LN7@CreateAtte:
  0006d	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN8@CreateAtte:
  00074	8b 55 e0	 mov	 edx, DWORD PTR tv75[ebp]
  00077	89 55 d0	 mov	 DWORD PTR $T5[ebp], edx
  0007a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  0007e	8b 45 d0	 mov	 eax, DWORD PTR $T5[ebp]
  00081	89 45 ec	 mov	 DWORD PTR _pAttemperEngine$[ebp], eax
  00084	83 7d ec 00	 cmp	 DWORD PTR _pAttemperEngine$[ebp], 0
  00088	75 15		 jne	 SHORT $LN3@CreateAtte
  0008a	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR $T4[ebp], OFFSET ??_C@_08HBOFLKLL@?$LE?$LE?$LN?$KI?J?$KH?$LA?$NM@
  00091	68 00 00 00 00	 push	 OFFSET __TI2PAD
  00096	8d 4d cc	 lea	 ecx, DWORD PTR $T4[ebp]
  00099	51		 push	 ecx
  0009a	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@CreateAtte:
  0009f	8b 55 0c	 mov	 edx, DWORD PTR _dwInterfaceVer$[ebp]
  000a2	52		 push	 edx
  000a3	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  000a6	50		 push	 eax
  000a7	8b 4d ec	 mov	 ecx, DWORD PTR _pAttemperEngine$[ebp]
  000aa	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ac	8b 4d ec	 mov	 ecx, DWORD PTR _pAttemperEngine$[ebp]
  000af	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b2	ff d0		 call	 eax
  000b4	89 45 c8	 mov	 DWORD PTR tv150[ebp], eax
  000b7	8b 4d c8	 mov	 ecx, DWORD PTR tv150[ebp]
  000ba	89 4d dc	 mov	 DWORD PTR _pObject$6[ebp], ecx
  000bd	83 7d dc 00	 cmp	 DWORD PTR _pObject$6[ebp], 0
  000c1	75 15		 jne	 SHORT $LN4@CreateAtte
  000c3	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR $T3[ebp], OFFSET ??_C@_0N@DLOPLLLM@?$LN?S?$LP?Z?$LC?i?Q?$KP?J?$KH?$LA?$NM@
  000ca	68 00 00 00 00	 push	 OFFSET __TI2PAD
  000cf	8d 55 c4	 lea	 edx, DWORD PTR $T3[ebp]
  000d2	52		 push	 edx
  000d3	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN4@CreateAtte:
  000d8	8b 45 dc	 mov	 eax, DWORD PTR _pObject$6[ebp]
  000db	e9 83 00 00 00	 jmp	 $LN6@CreateAtte
__catch$_CreateAttemperEngine$0:
  000e0	b8 00 00 00 00	 mov	 eax, $LN18@CreateAtte
  000e5	c3		 ret	 0
  000e6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ed	eb 07		 jmp	 SHORT __tryend$_CreateAttemperEngine$1
$LN18@CreateAtte:
  000ef	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$_CreateAttemperEngine$1:
  000f6	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 3
  000fd	8b 45 ec	 mov	 eax, DWORD PTR _pAttemperEngine$[ebp]
  00100	89 45 c0	 mov	 DWORD PTR $T2[ebp], eax
  00103	8b 4d c0	 mov	 ecx, DWORD PTR $T2[ebp]
  00106	89 4d e8	 mov	 DWORD PTR $T8[ebp], ecx
  00109	83 7d e8 00	 cmp	 DWORD PTR $T8[ebp], 0
  0010d	74 14		 je	 SHORT $LN9@CreateAtte
  0010f	6a 01		 push	 1
  00111	8b 55 e8	 mov	 edx, DWORD PTR $T8[ebp]
  00114	8b 02		 mov	 eax, DWORD PTR [edx]
  00116	8b 4d e8	 mov	 ecx, DWORD PTR $T8[ebp]
  00119	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0011c	ff d2		 call	 edx
  0011e	89 45 bc	 mov	 DWORD PTR tv129[ebp], eax
  00121	eb 07		 jmp	 SHORT $LN10@CreateAtte
$LN9@CreateAtte:
  00123	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN10@CreateAtte:
  0012a	eb 1e		 jmp	 SHORT $LN14@CreateAtte
__catch$_CreateAttemperEngine$2:
  0012c	33 c0		 xor	 eax, eax
  0012e	75 14		 jne	 SHORT $LN11@CreateAtte
  00130	68 12 02 00 00	 push	 530			; 00000212H
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0013a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0013f	85 c0		 test	 eax, eax
  00141	74 01		 je	 SHORT $LN11@CreateAtte
  00143	cc		 int	 3
$LN11@CreateAtte:
  00144	b8 00 00 00 00	 mov	 eax, $LN20@CreateAtte
  00149	c3		 ret	 0
$LN14@CreateAtte:
  0014a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00151	eb 07		 jmp	 SHORT __tryend$_CreateAttemperEngine$3
$LN20@CreateAtte:
  00153	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$_CreateAttemperEngine$3:
  0015a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _pAttemperEngine$[ebp], 0
  00161	33 c0		 xor	 eax, eax
$LN6@CreateAtte:
  00163	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00166	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016d	59		 pop	 ecx
  0016e	5f		 pop	 edi
  0016f	5e		 pop	 esi
  00170	5b		 pop	 ebx
  00171	8b e5		 mov	 esp, ebp
  00173	5d		 pop	 ebp
  00174	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_CreateAttemperEngine$4:
  00000	68 b0 80 00 00	 push	 32944			; 000080b0H
  00005	8b 45 e4	 mov	 eax, DWORD PTR $T7[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
__ehhandler$_CreateAttemperEngine:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$_CreateAttemperEngine
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
_CreateAttemperEngine ENDP
; Function compile flags: /Odtp
;	COMDAT ??_GCAttemperEngine@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCAttemperEngine@@UAEPAXI@Z PROC			; CAttemperEngine::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CAttemperEngine@@UAE@XZ ; CAttemperEngine::~CAttemperEngine
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 11		 je	 SHORT $LN2@scalar
  00017	68 b0 80 00 00	 push	 32944			; 000080b0H
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00025	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
??_GCAttemperEngine@@UAEPAXI@Z ENDP			; CAttemperEngine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z
_TEXT	SEGMENT
_pConnectEvent$2 = -64					; size = 4
_pCloseEvent$3 = -60					; size = 4
_pControlEvent$4 = -56					; size = 4
_pTimerEvent$5 = -52					; size = 4
_pCloseEvent$6 = -48					; size = 4
_pAcceptEvent$7 = -44					; size = 4
_pDataBaseEvent$8 = -40					; size = 4
tv81 = -36						; size = 4
_pReadEvent$9 = -32					; size = 4
_pReadEvent$10 = -28					; size = 4
_this$ = -24						; size = 4
tv442 = -20						; size = 1
tv437 = -19						; size = 1
_bSuccess$11 = -18					; size = 1
_bSuccess$12 = -17					; size = 1
__$EHRec$ = -16						; size = 16
_wIdentifier$ = 8					; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z PROC ; CAttemperEngine::OnAsynchronismEngineData, COMDAT
; _this$ = ecx

; 355  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 30	 sub	 esp, 48			; 00000030H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 356  :     // 效验参数
; 357  :     ASSERT(m_pITCPNetworkEngine != NULL);

  0002f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	83 b8 a4 40 00
	00 00		 cmp	 DWORD PTR [eax+16548], 0
  00039	75 14		 jne	 SHORT $LN29@OnAsynchro
  0003b	68 65 01 00 00	 push	 357			; 00000165H
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00045	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0004a	85 c0		 test	 eax, eax
  0004c	74 01		 je	 SHORT $LN29@OnAsynchro
  0004e	cc		 int	 3
$LN29@OnAsynchro:

; 358  :     ASSERT(m_pIAttemperEngineSink != NULL);

  0004f	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00052	83 ba a8 40 00
	00 00		 cmp	 DWORD PTR [edx+16552], 0
  00059	75 14		 jne	 SHORT $LN30@OnAsynchro
  0005b	68 66 01 00 00	 push	 358			; 00000166H
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00065	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0006a	85 c0		 test	 eax, eax
  0006c	74 01		 je	 SHORT $LN30@OnAsynchro
  0006e	cc		 int	 3
$LN30@OnAsynchro:

; 359  : 
; 360  :     // 内核事件
; 361  :     switch (wIdentifier)

  0006f	0f b7 4d 08	 movzx	 ecx, WORD PTR _wIdentifier$[ebp]
  00073	89 4d dc	 mov	 DWORD PTR tv81[ebp], ecx
  00076	8b 55 dc	 mov	 edx, DWORD PTR tv81[ebp]
  00079	83 ea 01	 sub	 edx, 1
  0007c	89 55 dc	 mov	 DWORD PTR tv81[ebp], edx
  0007f	83 7d dc 08	 cmp	 DWORD PTR tv81[ebp], 8
  00083	0f 87 07 05 00
	00		 ja	 $LN2@OnAsynchro
  00089	8b 45 dc	 mov	 eax, DWORD PTR tv81[ebp]
  0008c	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN90@OnAsynchro[eax*4]
$LN4@OnAsynchro:

; 362  :     {
; 363  :         case EVENT_TIMER:				// 时间事件
; 364  :         {
; 365  :             // 大小断言
; 366  :             ASSERT(wDataSize == sizeof(NTY_TimerEvent));

  00093	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00097	83 f9 08	 cmp	 ecx, 8
  0009a	74 14		 je	 SHORT $LN31@OnAsynchro
  0009c	68 6e 01 00 00	 push	 366			; 0000016eH
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000a6	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000ab	85 c0		 test	 eax, eax
  000ad	74 01		 je	 SHORT $LN31@OnAsynchro
  000af	cc		 int	 3
$LN31@OnAsynchro:

; 367  :             if (wDataSize != sizeof(NTY_TimerEvent))

  000b0	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000b4	83 f8 08	 cmp	 eax, 8
  000b7	74 07		 je	 SHORT $LN5@OnAsynchro

; 368  :                 return false;

  000b9	32 c0		 xor	 al, al
  000bb	e9 f7 04 00 00	 jmp	 $LN1@OnAsynchro
$LN5@OnAsynchro:

; 369  : 
; 370  :             // 处理消息
; 371  :             NTY_TimerEvent * pTimerEvent = (NTY_TimerEvent *)pData;

  000c0	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  000c3	89 4d cc	 mov	 DWORD PTR _pTimerEvent$5[ebp], ecx

; 372  :             m_pIAttemperEngineSink->OnEventTimer(pTimerEvent->dwTimerID, pTimerEvent->dwBindParameter);

  000c6	8b 55 cc	 mov	 edx, DWORD PTR _pTimerEvent$5[ebp]
  000c9	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000cc	50		 push	 eax
  000cd	8b 4d cc	 mov	 ecx, DWORD PTR _pTimerEvent$5[ebp]
  000d0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d2	52		 push	 edx
  000d3	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d6	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d9	8b 91 a8 40 00
	00		 mov	 edx, DWORD PTR [ecx+16552]
  000df	8b 12		 mov	 edx, DWORD PTR [edx]
  000e1	8b 88 a8 40 00
	00		 mov	 ecx, DWORD PTR [eax+16552]
  000e7	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  000ea	ff d0		 call	 eax

; 373  : 
; 374  :             return true;

  000ec	b0 01		 mov	 al, 1
  000ee	e9 c4 04 00 00	 jmp	 $LN1@OnAsynchro
$LN6@OnAsynchro:

; 375  :         }
; 376  :         case EVENT_CONTROL:				// 控制消息
; 377  :         {
; 378  :             // 大小断言
; 379  :             ASSERT(wDataSize >= sizeof(NTY_ControlEvent));

  000f3	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000f7	83 f9 02	 cmp	 ecx, 2
  000fa	73 14		 jae	 SHORT $LN32@OnAsynchro
  000fc	68 7b 01 00 00	 push	 379			; 0000017bH
  00101	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00106	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0010b	85 c0		 test	 eax, eax
  0010d	74 01		 je	 SHORT $LN32@OnAsynchro
  0010f	cc		 int	 3
$LN32@OnAsynchro:

; 380  :             if (wDataSize < sizeof(NTY_ControlEvent))

  00110	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00114	83 f8 02	 cmp	 eax, 2
  00117	73 07		 jae	 SHORT $LN7@OnAsynchro

; 381  :                 return false;

  00119	32 c0		 xor	 al, al
  0011b	e9 97 04 00 00	 jmp	 $LN1@OnAsynchro
$LN7@OnAsynchro:

; 382  : 
; 383  :             // 处理消息
; 384  :             NTY_ControlEvent * pControlEvent = (NTY_ControlEvent *)pData;

  00120	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00123	89 4d c8	 mov	 DWORD PTR _pControlEvent$4[ebp], ecx

; 385  :             m_pIAttemperEngineSink->OnEventControl(pControlEvent->wControlID, pControlEvent + 1, wDataSize - sizeof(NTY_ControlEvent));

  00126	0f b7 55 10	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  0012a	83 ea 02	 sub	 edx, 2
  0012d	52		 push	 edx
  0012e	8b 45 c8	 mov	 eax, DWORD PTR _pControlEvent$4[ebp]
  00131	83 c0 02	 add	 eax, 2
  00134	50		 push	 eax
  00135	8b 4d c8	 mov	 ecx, DWORD PTR _pControlEvent$4[ebp]
  00138	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0013b	52		 push	 edx
  0013c	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0013f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	8b 91 a8 40 00
	00		 mov	 edx, DWORD PTR [ecx+16552]
  00148	8b 12		 mov	 edx, DWORD PTR [edx]
  0014a	8b 88 a8 40 00
	00		 mov	 ecx, DWORD PTR [eax+16552]
  00150	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00153	ff d0		 call	 eax

; 386  : 
; 387  :             return true;

  00155	b0 01		 mov	 al, 1
  00157	e9 5b 04 00 00	 jmp	 $LN1@OnAsynchro
$LN8@OnAsynchro:

; 388  :         }
; 389  :         case EVENT_DATABASE:			// 数据库事件
; 390  :         {
; 391  :             // 大小断言
; 392  :             ASSERT(wDataSize >= sizeof(NTY_DataBaseEvent));

  0015c	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00160	83 f9 08	 cmp	 ecx, 8
  00163	73 14		 jae	 SHORT $LN33@OnAsynchro
  00165	68 88 01 00 00	 push	 392			; 00000188H
  0016a	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0016f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00174	85 c0		 test	 eax, eax
  00176	74 01		 je	 SHORT $LN33@OnAsynchro
  00178	cc		 int	 3
$LN33@OnAsynchro:

; 393  :             if (wDataSize < sizeof(NTY_DataBaseEvent))

  00179	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0017d	83 f8 08	 cmp	 eax, 8
  00180	73 07		 jae	 SHORT $LN9@OnAsynchro

; 394  :                 return false;

  00182	32 c0		 xor	 al, al
  00184	e9 2e 04 00 00	 jmp	 $LN1@OnAsynchro
$LN9@OnAsynchro:

; 395  : 
; 396  :             // 处理消息
; 397  :             NTY_DataBaseEvent * pDataBaseEvent = (NTY_DataBaseEvent *)pData;

  00189	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  0018c	89 4d d8	 mov	 DWORD PTR _pDataBaseEvent$8[ebp], ecx

; 398  :             m_pIAttemperEngineSink->OnEventDataBase(pDataBaseEvent->wRequestID, pDataBaseEvent->dwContextID, pDataBaseEvent + 1, wDataSize - sizeof(NTY_DataBaseEvent));

  0018f	0f b7 55 10	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  00193	83 ea 08	 sub	 edx, 8
  00196	52		 push	 edx
  00197	8b 45 d8	 mov	 eax, DWORD PTR _pDataBaseEvent$8[ebp]
  0019a	83 c0 08	 add	 eax, 8
  0019d	50		 push	 eax
  0019e	8b 4d d8	 mov	 ecx, DWORD PTR _pDataBaseEvent$8[ebp]
  001a1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001a4	52		 push	 edx
  001a5	8b 45 d8	 mov	 eax, DWORD PTR _pDataBaseEvent$8[ebp]
  001a8	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  001ab	51		 push	 ecx
  001ac	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  001af	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  001b2	8b 88 a8 40 00
	00		 mov	 ecx, DWORD PTR [eax+16552]
  001b8	8b 01		 mov	 eax, DWORD PTR [ecx]
  001ba	8b 8a a8 40 00
	00		 mov	 ecx, DWORD PTR [edx+16552]
  001c0	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  001c3	ff d2		 call	 edx

; 399  : 
; 400  :             return true;

  001c5	b0 01		 mov	 al, 1
  001c7	e9 eb 03 00 00	 jmp	 $LN1@OnAsynchro
$LN10@OnAsynchro:

; 401  :         }
; 402  :         case EVENT_TCP_SOCKET_READ:		// 读取事件
; 403  :         {
; 404  :             // 变量定义
; 405  :             NTY_TCPSocketReadEvent * pReadEvent = (NTY_TCPSocketReadEvent *)pData;

  001cc	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  001cf	89 45 e0	 mov	 DWORD PTR _pReadEvent$9[ebp], eax

; 406  : 
; 407  :             // 大小断言
; 408  :             ASSERT(wDataSize >= sizeof(NTY_TCPSocketReadEvent));

  001d2	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  001d6	83 f9 08	 cmp	 ecx, 8
  001d9	73 14		 jae	 SHORT $LN34@OnAsynchro
  001db	68 98 01 00 00	 push	 408			; 00000198H
  001e0	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  001e5	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  001ea	85 c0		 test	 eax, eax
  001ec	74 01		 je	 SHORT $LN34@OnAsynchro
  001ee	cc		 int	 3
$LN34@OnAsynchro:

; 409  :             ASSERT(wDataSize == (sizeof(NTY_TCPSocketReadEvent) + pReadEvent->wDataSize));

  001ef	8b 45 e0	 mov	 eax, DWORD PTR _pReadEvent$9[ebp]
  001f2	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  001f5	83 c1 08	 add	 ecx, 8
  001f8	0f b7 55 10	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  001fc	3b d1		 cmp	 edx, ecx
  001fe	74 14		 je	 SHORT $LN35@OnAsynchro
  00200	68 99 01 00 00	 push	 409			; 00000199H
  00205	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0020a	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0020f	85 c0		 test	 eax, eax
  00211	74 01		 je	 SHORT $LN35@OnAsynchro
  00213	cc		 int	 3
$LN35@OnAsynchro:

; 410  : 
; 411  :             // 大小效验
; 412  :             if (wDataSize < sizeof(NTY_TCPSocketReadEvent))

  00214	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00218	83 f9 08	 cmp	 ecx, 8
  0021b	73 07		 jae	 SHORT $LN11@OnAsynchro

; 413  :                 return false;

  0021d	32 c0		 xor	 al, al
  0021f	e9 93 03 00 00	 jmp	 $LN1@OnAsynchro
$LN11@OnAsynchro:

; 414  :             if (wDataSize != (sizeof(NTY_TCPSocketReadEvent) + pReadEvent->wDataSize))

  00224	8b 55 e0	 mov	 edx, DWORD PTR _pReadEvent$9[ebp]
  00227	0f b7 02	 movzx	 eax, WORD PTR [edx]
  0022a	83 c0 08	 add	 eax, 8
  0022d	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00231	3b c8		 cmp	 ecx, eax
  00233	74 07		 je	 SHORT $LN12@OnAsynchro

; 415  :                 return false;

  00235	32 c0		 xor	 al, al
  00237	e9 7b 03 00 00	 jmp	 $LN1@OnAsynchro
$LN12@OnAsynchro:

; 416  : 
; 417  :             // 处理消息
; 418  :             m_pIAttemperEngineSink->OnEventTCPSocketRead(pReadEvent->wServiceID, pReadEvent->Command, pReadEvent + 1, pReadEvent->wDataSize);

  0023c	8b 55 e0	 mov	 edx, DWORD PTR _pReadEvent$9[ebp]
  0023f	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00242	50		 push	 eax
  00243	8b 4d e0	 mov	 ecx, DWORD PTR _pReadEvent$9[ebp]
  00246	83 c1 08	 add	 ecx, 8
  00249	51		 push	 ecx
  0024a	8b 55 e0	 mov	 edx, DWORD PTR _pReadEvent$9[ebp]
  0024d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00250	50		 push	 eax
  00251	8b 4d e0	 mov	 ecx, DWORD PTR _pReadEvent$9[ebp]
  00254	0f b7 51 02	 movzx	 edx, WORD PTR [ecx+2]
  00258	52		 push	 edx
  00259	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0025c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0025f	8b 91 a8 40 00
	00		 mov	 edx, DWORD PTR [ecx+16552]
  00265	8b 12		 mov	 edx, DWORD PTR [edx]
  00267	8b 88 a8 40 00
	00		 mov	 ecx, DWORD PTR [eax+16552]
  0026d	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00270	ff d0		 call	 eax

; 419  : 
; 420  :             return true;

  00272	b0 01		 mov	 al, 1
  00274	e9 3e 03 00 00	 jmp	 $LN1@OnAsynchro
$LN13@OnAsynchro:

; 421  :         }
; 422  :         case EVENT_TCP_SOCKET_SHUT:	// 关闭事件
; 423  :         {
; 424  :             // 大小断言
; 425  :             ASSERT(wDataSize == sizeof(NTY_TCPSocketShutEvent));

  00279	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0027d	83 f9 04	 cmp	 ecx, 4
  00280	74 14		 je	 SHORT $LN36@OnAsynchro
  00282	68 a9 01 00 00	 push	 425			; 000001a9H
  00287	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0028c	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00291	85 c0		 test	 eax, eax
  00293	74 01		 je	 SHORT $LN36@OnAsynchro
  00295	cc		 int	 3
$LN36@OnAsynchro:

; 426  :             if (wDataSize != sizeof(NTY_TCPSocketShutEvent))

  00296	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0029a	83 f8 04	 cmp	 eax, 4
  0029d	74 07		 je	 SHORT $LN14@OnAsynchro

; 427  :                 return false;

  0029f	32 c0		 xor	 al, al
  002a1	e9 11 03 00 00	 jmp	 $LN1@OnAsynchro
$LN14@OnAsynchro:

; 428  : 
; 429  :             // 处理消息
; 430  :             NTY_TCPSocketShutEvent * pCloseEvent = (NTY_TCPSocketShutEvent *)pData;

  002a6	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  002a9	89 4d c4	 mov	 DWORD PTR _pCloseEvent$3[ebp], ecx

; 431  :             m_pIAttemperEngineSink->OnEventTCPSocketShut(pCloseEvent->wServiceID, pCloseEvent->cbShutReason);

  002ac	8b 55 c4	 mov	 edx, DWORD PTR _pCloseEvent$3[ebp]
  002af	0f b6 42 02	 movzx	 eax, BYTE PTR [edx+2]
  002b3	50		 push	 eax
  002b4	8b 4d c4	 mov	 ecx, DWORD PTR _pCloseEvent$3[ebp]
  002b7	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  002ba	52		 push	 edx
  002bb	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  002be	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  002c1	8b 91 a8 40 00
	00		 mov	 edx, DWORD PTR [ecx+16552]
  002c7	8b 12		 mov	 edx, DWORD PTR [edx]
  002c9	8b 88 a8 40 00
	00		 mov	 ecx, DWORD PTR [eax+16552]
  002cf	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  002d2	ff d0		 call	 eax

; 432  : 
; 433  :             return true;

  002d4	b0 01		 mov	 al, 1
  002d6	e9 dc 02 00 00	 jmp	 $LN1@OnAsynchro
$LN15@OnAsynchro:

; 434  :         }
; 435  :         case EVENT_TCP_SOCKET_LINK:	// 连接事件
; 436  :         {
; 437  :             // 大小断言
; 438  :             ASSERT(wDataSize == sizeof(NTY_TCPSocketLinkEvent));

  002db	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  002df	83 f9 08	 cmp	 ecx, 8
  002e2	74 14		 je	 SHORT $LN37@OnAsynchro
  002e4	68 b6 01 00 00	 push	 438			; 000001b6H
  002e9	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  002ee	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  002f3	85 c0		 test	 eax, eax
  002f5	74 01		 je	 SHORT $LN37@OnAsynchro
  002f7	cc		 int	 3
$LN37@OnAsynchro:

; 439  :             if (wDataSize != sizeof(NTY_TCPSocketLinkEvent))

  002f8	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  002fc	83 f8 08	 cmp	 eax, 8
  002ff	74 07		 je	 SHORT $LN16@OnAsynchro

; 440  :                 return false;

  00301	32 c0		 xor	 al, al
  00303	e9 af 02 00 00	 jmp	 $LN1@OnAsynchro
$LN16@OnAsynchro:

; 441  : 
; 442  :             // 处理消息
; 443  :             NTY_TCPSocketLinkEvent * pConnectEvent = (NTY_TCPSocketLinkEvent *)pData;

  00308	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  0030b	89 4d c0	 mov	 DWORD PTR _pConnectEvent$2[ebp], ecx

; 444  :             m_pIAttemperEngineSink->OnEventTCPSocketLink(pConnectEvent->wServiceID, pConnectEvent->nErrorCode);

  0030e	8b 55 c0	 mov	 edx, DWORD PTR _pConnectEvent$2[ebp]
  00311	8b 02		 mov	 eax, DWORD PTR [edx]
  00313	50		 push	 eax
  00314	8b 4d c0	 mov	 ecx, DWORD PTR _pConnectEvent$2[ebp]
  00317	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  0031b	52		 push	 edx
  0031c	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0031f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00322	8b 91 a8 40 00
	00		 mov	 edx, DWORD PTR [ecx+16552]
  00328	8b 12		 mov	 edx, DWORD PTR [edx]
  0032a	8b 88 a8 40 00
	00		 mov	 ecx, DWORD PTR [eax+16552]
  00330	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00333	ff d0		 call	 eax

; 445  : 
; 446  :             return true;

  00335	b0 01		 mov	 al, 1
  00337	e9 7b 02 00 00	 jmp	 $LN1@OnAsynchro
$LN17@OnAsynchro:

; 447  :         }
; 448  :         case EVENT_TCP_NETWORK_ACCEPT:	// 应答事件
; 449  :         {
; 450  :             // 大小断言
; 451  :             ASSERT(wDataSize == sizeof(NTY_TCPNetworkAcceptEvent));

  0033c	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00340	83 f9 08	 cmp	 ecx, 8
  00343	74 14		 je	 SHORT $LN38@OnAsynchro
  00345	68 c3 01 00 00	 push	 451			; 000001c3H
  0034a	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0034f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00354	85 c0		 test	 eax, eax
  00356	74 01		 je	 SHORT $LN38@OnAsynchro
  00358	cc		 int	 3
$LN38@OnAsynchro:

; 452  :             if (wDataSize != sizeof(NTY_TCPNetworkAcceptEvent))

  00359	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0035d	83 f8 08	 cmp	 eax, 8
  00360	74 07		 je	 SHORT $LN18@OnAsynchro

; 453  :                 return false;

  00362	32 c0		 xor	 al, al
  00364	e9 4e 02 00 00	 jmp	 $LN1@OnAsynchro
$LN18@OnAsynchro:

; 454  : 
; 455  :             // 变量定义
; 456  :             bool bSuccess = false;

  00369	c6 45 ef 00	 mov	 BYTE PTR _bSuccess$12[ebp], 0

; 457  :             NTY_TCPNetworkAcceptEvent * pAcceptEvent = (NTY_TCPNetworkAcceptEvent *)pData;

  0036d	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00370	89 4d d4	 mov	 DWORD PTR _pAcceptEvent$7[ebp], ecx

; 458  : 
; 459  :             // 处理消息
; 460  :             try

  00373	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 461  :             {
; 462  :                 bSuccess = m_pIAttemperEngineSink->OnEventTCPNetworkBind(pAcceptEvent->dwClientAddr, pAcceptEvent->dwSocketID);

  0037a	8b 55 d4	 mov	 edx, DWORD PTR _pAcceptEvent$7[ebp]
  0037d	8b 02		 mov	 eax, DWORD PTR [edx]
  0037f	50		 push	 eax
  00380	8b 4d d4	 mov	 ecx, DWORD PTR _pAcceptEvent$7[ebp]
  00383	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00386	52		 push	 edx
  00387	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0038a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0038d	8b 91 a8 40 00
	00		 mov	 edx, DWORD PTR [ecx+16552]
  00393	8b 12		 mov	 edx, DWORD PTR [edx]
  00395	8b 88 a8 40 00
	00		 mov	 ecx, DWORD PTR [eax+16552]
  0039b	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  0039e	ff d0		 call	 eax
  003a0	88 45 ed	 mov	 BYTE PTR tv437[ebp], al
  003a3	8a 4d ed	 mov	 cl, BYTE PTR tv437[ebp]
  003a6	88 4d ef	 mov	 BYTE PTR _bSuccess$12[ebp], cl

; 463  :             }

  003a9	eb 06		 jmp	 SHORT $LN42@OnAsynchro
__catch$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z$0:

; 464  :             catch (...) {}

  003ab	b8 00 00 00 00	 mov	 eax, $LN47@OnAsynchro
  003b0	c3		 ret	 0
$LN42@OnAsynchro:
  003b1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  003b8	eb 07		 jmp	 SHORT __tryend$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z$1
$LN47@OnAsynchro:
  003ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z$1:

; 465  : 
; 466  :             // 失败处理
; 467  :             if (bSuccess == false) m_pITCPNetworkEngine->CloseSocket(pAcceptEvent->dwSocketID);

  003c1	0f b6 55 ef	 movzx	 edx, BYTE PTR _bSuccess$12[ebp]
  003c5	85 d2		 test	 edx, edx
  003c7	75 1f		 jne	 SHORT $LN20@OnAsynchro
  003c9	8b 45 d4	 mov	 eax, DWORD PTR _pAcceptEvent$7[ebp]
  003cc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003ce	51		 push	 ecx
  003cf	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  003d2	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  003d5	8b 88 a4 40 00
	00		 mov	 ecx, DWORD PTR [eax+16548]
  003db	8b 01		 mov	 eax, DWORD PTR [ecx]
  003dd	8b 8a a4 40 00
	00		 mov	 ecx, DWORD PTR [edx+16548]
  003e3	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  003e6	ff d2		 call	 edx
$LN20@OnAsynchro:

; 468  : 
; 469  :             return true;

  003e8	b0 01		 mov	 al, 1
  003ea	e9 c8 01 00 00	 jmp	 $LN1@OnAsynchro
$LN21@OnAsynchro:

; 470  :         }
; 471  :         case EVENT_TCP_NETWORK_READ:	// 读取事件
; 472  :         {
; 473  :             // 效验大小
; 474  :             NTY_TCPNetworkReadEvent * pReadEvent = (NTY_TCPNetworkReadEvent *)pData;

  003ef	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  003f2	89 45 e4	 mov	 DWORD PTR _pReadEvent$10[ebp], eax

; 475  : 
; 476  :             // 大小断言
; 477  :             ASSERT(wDataSize >= sizeof(NTY_TCPNetworkReadEvent));

  003f5	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  003f9	83 f9 0c	 cmp	 ecx, 12			; 0000000cH
  003fc	73 14		 jae	 SHORT $LN39@OnAsynchro
  003fe	68 dd 01 00 00	 push	 477			; 000001ddH
  00403	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00408	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0040d	85 c0		 test	 eax, eax
  0040f	74 01		 je	 SHORT $LN39@OnAsynchro
  00411	cc		 int	 3
$LN39@OnAsynchro:

; 478  :             ASSERT(wDataSize == (sizeof(NTY_TCPNetworkReadEvent) + pReadEvent->wDataSize));

  00412	8b 45 e4	 mov	 eax, DWORD PTR _pReadEvent$10[ebp]
  00415	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00418	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0041b	0f b7 55 10	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  0041f	3b d1		 cmp	 edx, ecx
  00421	74 14		 je	 SHORT $LN40@OnAsynchro
  00423	68 de 01 00 00	 push	 478			; 000001deH
  00428	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0042d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00432	85 c0		 test	 eax, eax
  00434	74 01		 je	 SHORT $LN40@OnAsynchro
  00436	cc		 int	 3
$LN40@OnAsynchro:

; 479  : 
; 480  :             // 大小效验
; 481  :             if (wDataSize < sizeof(NTY_TCPNetworkReadEvent))

  00437	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  0043b	83 f9 0c	 cmp	 ecx, 12			; 0000000cH
  0043e	73 27		 jae	 SHORT $LN22@OnAsynchro

; 482  :             {
; 483  :                 m_pITCPNetworkEngine->CloseSocket(pReadEvent->dwSocketID);

  00440	8b 55 e4	 mov	 edx, DWORD PTR _pReadEvent$10[ebp]
  00443	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00446	50		 push	 eax
  00447	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0044a	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0044d	8b 82 a4 40 00
	00		 mov	 eax, DWORD PTR [edx+16548]
  00453	8b 10		 mov	 edx, DWORD PTR [eax]
  00455	8b 89 a4 40 00
	00		 mov	 ecx, DWORD PTR [ecx+16548]
  0045b	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  0045e	ff d0		 call	 eax

; 484  :                 return false;

  00460	32 c0		 xor	 al, al
  00462	e9 50 01 00 00	 jmp	 $LN1@OnAsynchro
$LN22@OnAsynchro:

; 485  :             }
; 486  : 
; 487  :             // 大小效验
; 488  :             if (wDataSize != (sizeof(NTY_TCPNetworkReadEvent) + pReadEvent->wDataSize))

  00467	8b 4d e4	 mov	 ecx, DWORD PTR _pReadEvent$10[ebp]
  0046a	0f b7 11	 movzx	 edx, WORD PTR [ecx]
  0046d	83 c2 0c	 add	 edx, 12			; 0000000cH
  00470	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00474	3b c2		 cmp	 eax, edx
  00476	74 27		 je	 SHORT $LN23@OnAsynchro

; 489  :             {
; 490  :                 m_pITCPNetworkEngine->CloseSocket(pReadEvent->dwSocketID);

  00478	8b 4d e4	 mov	 ecx, DWORD PTR _pReadEvent$10[ebp]
  0047b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0047e	52		 push	 edx
  0047f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00482	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00485	8b 91 a4 40 00
	00		 mov	 edx, DWORD PTR [ecx+16548]
  0048b	8b 12		 mov	 edx, DWORD PTR [edx]
  0048d	8b 88 a4 40 00
	00		 mov	 ecx, DWORD PTR [eax+16548]
  00493	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00496	ff d0		 call	 eax

; 491  :                 return false;

  00498	32 c0		 xor	 al, al
  0049a	e9 18 01 00 00	 jmp	 $LN1@OnAsynchro
$LN23@OnAsynchro:

; 492  :             }
; 493  : 
; 494  :             // 处理消息
; 495  :             bool bSuccess = false;

  0049f	c6 45 ee 00	 mov	 BYTE PTR _bSuccess$11[ebp], 0

; 496  :             try

  004a3	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 2

; 497  :             {
; 498  :                 bSuccess = m_pIAttemperEngineSink->OnEventTCPNetworkRead(pReadEvent->Command, pReadEvent + 1, pReadEvent->wDataSize, pReadEvent->dwSocketID);

  004aa	8b 4d e4	 mov	 ecx, DWORD PTR _pReadEvent$10[ebp]
  004ad	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  004b0	52		 push	 edx
  004b1	8b 45 e4	 mov	 eax, DWORD PTR _pReadEvent$10[ebp]
  004b4	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  004b7	51		 push	 ecx
  004b8	8b 55 e4	 mov	 edx, DWORD PTR _pReadEvent$10[ebp]
  004bb	83 c2 0c	 add	 edx, 12			; 0000000cH
  004be	52		 push	 edx
  004bf	8b 45 e4	 mov	 eax, DWORD PTR _pReadEvent$10[ebp]
  004c2	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  004c5	51		 push	 ecx
  004c6	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  004c9	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  004cc	8b 88 a8 40 00
	00		 mov	 ecx, DWORD PTR [eax+16552]
  004d2	8b 01		 mov	 eax, DWORD PTR [ecx]
  004d4	8b 8a a8 40 00
	00		 mov	 ecx, DWORD PTR [edx+16552]
  004da	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  004dd	ff d2		 call	 edx
  004df	88 45 ec	 mov	 BYTE PTR tv442[ebp], al
  004e2	8a 45 ec	 mov	 al, BYTE PTR tv442[ebp]
  004e5	88 45 ee	 mov	 BYTE PTR _bSuccess$11[ebp], al

; 499  :             }

  004e8	eb 06		 jmp	 SHORT $LN44@OnAsynchro
__catch$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z$2:

; 500  :             catch (...) {}

  004ea	b8 00 00 00 00	 mov	 eax, $LN49@OnAsynchro
  004ef	c3		 ret	 0
$LN44@OnAsynchro:
  004f0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  004f7	eb 07		 jmp	 SHORT __tryend$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z$3
$LN49@OnAsynchro:
  004f9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z$3:

; 501  : 
; 502  :             // 失败处理
; 503  :             if (bSuccess == false) 

  00500	0f b6 4d ee	 movzx	 ecx, BYTE PTR _bSuccess$11[ebp]
  00504	85 c9		 test	 ecx, ecx
  00506	75 20		 jne	 SHORT $LN25@OnAsynchro

; 504  : 				m_pITCPNetworkEngine->CloseSocket(pReadEvent->dwSocketID);

  00508	8b 55 e4	 mov	 edx, DWORD PTR _pReadEvent$10[ebp]
  0050b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0050e	50		 push	 eax
  0050f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00512	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00515	8b 82 a4 40 00
	00		 mov	 eax, DWORD PTR [edx+16548]
  0051b	8b 10		 mov	 edx, DWORD PTR [eax]
  0051d	8b 89 a4 40 00
	00		 mov	 ecx, DWORD PTR [ecx+16548]
  00523	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00526	ff d0		 call	 eax
$LN25@OnAsynchro:

; 505  : 
; 506  :             return true;

  00528	b0 01		 mov	 al, 1
  0052a	e9 88 00 00 00	 jmp	 $LN1@OnAsynchro
$LN26@OnAsynchro:

; 507  :         }
; 508  :         case EVENT_TCP_NETWORK_SHUT:	// 关闭事件
; 509  :         {
; 510  :             // 大小断言
; 511  :             ASSERT(wDataSize == sizeof(NTY_TCPNetworkShutEvent));

  0052f	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00533	83 f9 0c	 cmp	 ecx, 12			; 0000000cH
  00536	74 14		 je	 SHORT $LN41@OnAsynchro
  00538	68 ff 01 00 00	 push	 511			; 000001ffH
  0053d	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00542	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00547	85 c0		 test	 eax, eax
  00549	74 01		 je	 SHORT $LN41@OnAsynchro
  0054b	cc		 int	 3
$LN41@OnAsynchro:

; 512  :             if (wDataSize != sizeof(NTY_TCPNetworkShutEvent))

  0054c	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00550	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00553	74 04		 je	 SHORT $LN27@OnAsynchro

; 513  :                 return false;

  00555	32 c0		 xor	 al, al
  00557	eb 5e		 jmp	 SHORT $LN1@OnAsynchro
$LN27@OnAsynchro:

; 514  : 
; 515  :             // 处理消息
; 516  :             NTY_TCPNetworkShutEvent * pCloseEvent = (NTY_TCPNetworkShutEvent *)pData;

  00559	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  0055c	89 4d d0	 mov	 DWORD PTR _pCloseEvent$6[ebp], ecx

; 517  :             m_pIAttemperEngineSink->OnEventTCPNetworkShut(pCloseEvent->dwClientAddr, pCloseEvent->dwActiveTime, pCloseEvent->dwSocketID);

  0055f	8b 55 d0	 mov	 edx, DWORD PTR _pCloseEvent$6[ebp]
  00562	8b 02		 mov	 eax, DWORD PTR [edx]
  00564	50		 push	 eax
  00565	8b 4d d0	 mov	 ecx, DWORD PTR _pCloseEvent$6[ebp]
  00568	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0056b	52		 push	 edx
  0056c	8b 45 d0	 mov	 eax, DWORD PTR _pCloseEvent$6[ebp]
  0056f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00572	51		 push	 ecx
  00573	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00576	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00579	8b 88 a8 40 00
	00		 mov	 ecx, DWORD PTR [eax+16552]
  0057f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00581	8b 8a a8 40 00
	00		 mov	 ecx, DWORD PTR [edx+16552]
  00587	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  0058a	ff d2		 call	 edx

; 518  : 
; 519  :             return true;

  0058c	b0 01		 mov	 al, 1
  0058e	eb 27		 jmp	 SHORT $LN1@OnAsynchro
$LN2@OnAsynchro:

; 520  :         }
; 521  :     }
; 522  : 
; 523  :     // 其他事件
; 524  :     return m_pIAttemperEngineSink->OnEventAttemperData(wIdentifier, pData, wDataSize);

  00590	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  00594	50		 push	 eax
  00595	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  00598	51		 push	 ecx
  00599	0f b7 55 08	 movzx	 edx, WORD PTR _wIdentifier$[ebp]
  0059d	52		 push	 edx
  0059e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  005a1	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  005a4	8b 91 a8 40 00
	00		 mov	 edx, DWORD PTR [ecx+16552]
  005aa	8b 12		 mov	 edx, DWORD PTR [edx]
  005ac	8b 88 a8 40 00
	00		 mov	 ecx, DWORD PTR [eax+16552]
  005b2	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  005b5	ff d0		 call	 eax
$LN1@OnAsynchro:

; 525  : }

  005b7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  005ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  005c1	59		 pop	 ecx
  005c2	5f		 pop	 edi
  005c3	5e		 pop	 esi
  005c4	5b		 pop	 ebx
  005c5	8b e5		 mov	 esp, ebp
  005c7	5d		 pop	 ebp
  005c8	c2 0c 00	 ret	 12			; 0000000cH
  005cb	90		 npad	 1
$LN90@OnAsynchro:
  005cc	00 00 00 00	 DD	 $LN4@OnAsynchro
  005d0	00 00 00 00	 DD	 $LN6@OnAsynchro
  005d4	00 00 00 00	 DD	 $LN8@OnAsynchro
  005d8	00 00 00 00	 DD	 $LN10@OnAsynchro
  005dc	00 00 00 00	 DD	 $LN13@OnAsynchro
  005e0	00 00 00 00	 DD	 $LN15@OnAsynchro
  005e4	00 00 00 00	 DD	 $LN17@OnAsynchro
  005e8	00 00 00 00	 DD	 $LN21@OnAsynchro
  005ec	00 00 00 00	 DD	 $LN26@OnAsynchro
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnAsynchronismEngineData@CAttemperEngine@@UAE_NGPAXG@Z ENDP ; CAttemperEngine::OnAsynchronismEngineData
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?OnAsynchronismEngineConclude@CAttemperEngine@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnAsynchronismEngineConclude@CAttemperEngine@@UAE_NXZ PROC ; CAttemperEngine::OnAsynchronismEngineConclude, COMDAT
; _this$ = ecx

; 337  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 338  :     // 效验参数
; 339  :     ASSERT(m_pIAttemperEngineSink != NULL);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 a8 40 00
	00 00		 cmp	 DWORD PTR [eax+16552], 0
  00011	75 14		 jne	 SHORT $LN5@OnAsynchro
  00013	68 53 01 00 00	 push	 339			; 00000153H
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00022	85 c0		 test	 eax, eax
  00024	74 01		 je	 SHORT $LN5@OnAsynchro
  00026	cc		 int	 3
$LN5@OnAsynchro:

; 340  :     if (m_pIAttemperEngineSink == NULL)

  00027	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	83 ba a8 40 00
	00 00		 cmp	 DWORD PTR [edx+16552], 0
  00031	75 04		 jne	 SHORT $LN2@OnAsynchro

; 341  :         return false;

  00033	32 c0		 xor	 al, al
  00035	eb 5a		 jmp	 SHORT $LN1@OnAsynchro
$LN2@OnAsynchro:

; 342  : 
; 343  :     // 停止通知
; 344  :     if (m_pIAttemperEngineSink->OnAttemperEngineConclude(QUERY_ME_INTERFACE(IUnknownEx)) == false)

  00037	68 00 01 01 06	 push	 100729088		; 06010100H
  0003c	68 00 00 00 00	 push	 OFFSET ?IID_IUnknownEx@@3U_GUID@@B
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	83 e9 04	 sub	 ecx, 4
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0004d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00050	ff d0		 call	 eax
  00052	50		 push	 eax
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	8b 91 a8 40 00
	00		 mov	 edx, DWORD PTR [ecx+16552]
  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 12		 mov	 edx, DWORD PTR [edx]
  00061	8b 88 a8 40 00
	00		 mov	 ecx, DWORD PTR [eax+16552]
  00067	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0006a	ff d0		 call	 eax
  0006c	0f b6 c8	 movzx	 ecx, al
  0006f	85 c9		 test	 ecx, ecx
  00071	75 1c		 jne	 SHORT $LN3@OnAsynchro

; 345  :     {
; 346  :         ASSERT(FALSE);

  00073	33 d2		 xor	 edx, edx
  00075	75 14		 jne	 SHORT $LN6@OnAsynchro
  00077	68 5a 01 00 00	 push	 346			; 0000015aH
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00081	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00086	85 c0		 test	 eax, eax
  00088	74 01		 je	 SHORT $LN6@OnAsynchro
  0008a	cc		 int	 3
$LN6@OnAsynchro:

; 347  :         return false;

  0008b	32 c0		 xor	 al, al
  0008d	eb 02		 jmp	 SHORT $LN1@OnAsynchro
$LN3@OnAsynchro:

; 348  :     }
; 349  : 
; 350  :     return true;

  0008f	b0 01		 mov	 al, 1
$LN1@OnAsynchro:

; 351  : }

  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
?OnAsynchronismEngineConclude@CAttemperEngine@@UAE_NXZ ENDP ; CAttemperEngine::OnAsynchronismEngineConclude
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?OnAsynchronismEngineStart@CAttemperEngine@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnAsynchronismEngineStart@CAttemperEngine@@UAE_NXZ PROC ; CAttemperEngine::OnAsynchronismEngineStart, COMDAT
; _this$ = ecx

; 319  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 320  :     // 效验参数
; 321  :     ASSERT(m_pIAttemperEngineSink != NULL);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 a8 40 00
	00 00		 cmp	 DWORD PTR [eax+16552], 0
  00011	75 14		 jne	 SHORT $LN5@OnAsynchro
  00013	68 41 01 00 00	 push	 321			; 00000141H
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00022	85 c0		 test	 eax, eax
  00024	74 01		 je	 SHORT $LN5@OnAsynchro
  00026	cc		 int	 3
$LN5@OnAsynchro:

; 322  :     if (m_pIAttemperEngineSink == NULL)

  00027	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	83 ba a8 40 00
	00 00		 cmp	 DWORD PTR [edx+16552], 0
  00031	75 04		 jne	 SHORT $LN2@OnAsynchro

; 323  :         return false;

  00033	32 c0		 xor	 al, al
  00035	eb 5a		 jmp	 SHORT $LN1@OnAsynchro
$LN2@OnAsynchro:

; 324  : 
; 325  :     // 启动通知
; 326  :     if (m_pIAttemperEngineSink->OnAttemperEngineStart(QUERY_ME_INTERFACE(IUnknownEx)) == false)

  00037	68 00 01 01 06	 push	 100729088		; 06010100H
  0003c	68 00 00 00 00	 push	 OFFSET ?IID_IUnknownEx@@3U_GUID@@B
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	83 e9 04	 sub	 ecx, 4
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0004d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00050	ff d0		 call	 eax
  00052	50		 push	 eax
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	8b 91 a8 40 00
	00		 mov	 edx, DWORD PTR [ecx+16552]
  0005c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	8b 12		 mov	 edx, DWORD PTR [edx]
  00061	8b 88 a8 40 00
	00		 mov	 ecx, DWORD PTR [eax+16552]
  00067	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0006a	ff d0		 call	 eax
  0006c	0f b6 c8	 movzx	 ecx, al
  0006f	85 c9		 test	 ecx, ecx
  00071	75 1c		 jne	 SHORT $LN3@OnAsynchro

; 327  :     {
; 328  :         ASSERT(FALSE);

  00073	33 d2		 xor	 edx, edx
  00075	75 14		 jne	 SHORT $LN6@OnAsynchro
  00077	68 48 01 00 00	 push	 328			; 00000148H
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00081	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00086	85 c0		 test	 eax, eax
  00088	74 01		 je	 SHORT $LN6@OnAsynchro
  0008a	cc		 int	 3
$LN6@OnAsynchro:

; 329  :         return false;

  0008b	32 c0		 xor	 al, al
  0008d	eb 02		 jmp	 SHORT $LN1@OnAsynchro
$LN3@OnAsynchro:

; 330  :     }
; 331  : 
; 332  :     return true;

  0008f	b0 01		 mov	 al, 1
$LN1@OnAsynchro:

; 333  : }

  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
?OnAsynchronismEngineStart@CAttemperEngine@@UAE_NXZ ENDP ; CAttemperEngine::OnAsynchronismEngineStart
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?OnEventTCPNetworkRead@CAttemperEngine@@UAE_NKUTCP_Command@@PAXG@Z
_TEXT	SEGMENT
_ThreadLock$ = -36					; size = 12
_pReadEvent$ = -24					; size = 4
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_dwSocketID$ = 8					; size = 4
_Command$ = 12						; size = 4
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?OnEventTCPNetworkRead@CAttemperEngine@@UAE_NKUTCP_Command@@PAXG@Z PROC ; CAttemperEngine::OnEventTCPNetworkRead, COMDAT
; _this$ = ecx

; 277  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnEventTCPNetworkRead@CAttemperEngine@@UAE_NKUTCP_Command@@PAXG@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 278  :     // 效验参数
; 279  :     ASSERT((wDataSize + sizeof(NTY_TCPNetworkReadEvent)) <= MAX_ASYNCHRONISM_DATA);

  00028	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0002c	83 c0 0c	 add	 eax, 12			; 0000000cH
  0002f	3d 00 40 00 00	 cmp	 eax, 16384		; 00004000H
  00034	76 14		 jbe	 SHORT $LN5@OnEventTCP
  00036	68 17 01 00 00	 push	 279			; 00000117H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00040	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00045	85 c0		 test	 eax, eax
  00047	74 01		 je	 SHORT $LN5@OnEventTCP
  00049	cc		 int	 3
$LN5@OnEventTCP:

; 280  :     if ((wDataSize + sizeof(NTY_TCPNetworkReadEvent)) > MAX_ASYNCHRONISM_DATA)

  0004a	0f b7 55 14	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  0004e	83 c2 0c	 add	 edx, 12			; 0000000cH
  00051	81 fa 00 40 00
	00		 cmp	 edx, 16384		; 00004000H
  00057	76 07		 jbe	 SHORT $LN2@OnEventTCP

; 281  :         return false;

  00059	32 c0		 xor	 al, al
  0005b	e9 b8 00 00 00	 jmp	 $LN1@OnEventTCP
$LN2@OnEventTCP:

; 282  : 
; 283  :     // 缓冲锁定
; 284  :     CWHDataLocker ThreadLock(m_CriticalLocker);

  00060	6a 01		 push	 1
  00062	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00065	83 c0 04	 add	 eax, 4
  00068	50		 push	 eax
  00069	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHDataLocker@@QAE@AAVCCriticalSection@@_N@Z
  00072	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 285  :     NTY_TCPNetworkReadEvent * pReadEvent = (NTY_TCPNetworkReadEvent *)m_cbBuffer;

  00079	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	81 c1 9c 40 00
	00		 add	 ecx, 16540		; 0000409cH
  00082	89 4d e8	 mov	 DWORD PTR _pReadEvent$[ebp], ecx

; 286  : 
; 287  :     // 构造数据
; 288  :     pReadEvent->Command = Command;

  00085	8b 55 e8	 mov	 edx, DWORD PTR _pReadEvent$[ebp]
  00088	8b 45 0c	 mov	 eax, DWORD PTR _Command$[ebp]
  0008b	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 289  :     pReadEvent->wDataSize = wDataSize;

  0008e	8b 4d e8	 mov	 ecx, DWORD PTR _pReadEvent$[ebp]
  00091	66 8b 55 14	 mov	 dx, WORD PTR _wDataSize$[ebp]
  00095	66 89 11	 mov	 WORD PTR [ecx], dx

; 290  :     pReadEvent->dwSocketID = dwSocketID;

  00098	8b 45 e8	 mov	 eax, DWORD PTR _pReadEvent$[ebp]
  0009b	8b 4d 08	 mov	 ecx, DWORD PTR _dwSocketID$[ebp]
  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 291  : 
; 292  :     // 附加数据
; 293  :     if (wDataSize > 0)

  000a1	0f b7 55 14	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  000a5	85 d2		 test	 edx, edx
  000a7	7e 34		 jle	 SHORT $LN3@OnEventTCP

; 294  :     {
; 295  :         ASSERT(pData != NULL);

  000a9	83 7d 10 00	 cmp	 DWORD PTR _pData$[ebp], 0
  000ad	75 14		 jne	 SHORT $LN6@OnEventTCP
  000af	68 27 01 00 00	 push	 295			; 00000127H
  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000b9	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000be	85 c0		 test	 eax, eax
  000c0	74 01		 je	 SHORT $LN6@OnEventTCP
  000c2	cc		 int	 3
$LN6@OnEventTCP:

; 296  :         CopyMemory(m_cbBuffer + sizeof(NTY_TCPNetworkReadEvent), pData, wDataSize);

  000c3	0f b7 4d 14	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000c7	51		 push	 ecx
  000c8	8b 55 10	 mov	 edx, DWORD PTR _pData$[ebp]
  000cb	52		 push	 edx
  000cc	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	05 a8 40 00 00	 add	 eax, 16552		; 000040a8H
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 _memcpy
  000da	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@OnEventTCP:

; 297  :     }
; 298  : 
; 299  :     // 投递数据
; 300  :     return m_AsynchronismEngine.PostAsynchronismData(EVENT_TCP_NETWORK_READ, m_cbBuffer, sizeof(NTY_TCPNetworkReadEvent) + wDataSize);

  000dd	0f b7 4d 14	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000e1	83 c1 0c	 add	 ecx, 12			; 0000000cH
  000e4	51		 push	 ecx
  000e5	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000e8	81 c2 9c 40 00
	00		 add	 edx, 16540		; 0000409cH
  000ee	52		 push	 edx
  000ef	6a 08		 push	 8
  000f1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	83 c1 28	 add	 ecx, 40			; 00000028H
  000f7	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000fa	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  000fd	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00100	ff d0		 call	 eax
  00102	88 45 f3	 mov	 BYTE PTR $T2[ebp], al
  00105	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0010c	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  0010f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
  00115	8a 45 f3	 mov	 al, BYTE PTR $T2[ebp]
$LN1@OnEventTCP:

; 301  : }

  00118	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0011b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00122	59		 pop	 ecx
  00123	8b e5		 mov	 esp, ebp
  00125	5d		 pop	 ebp
  00126	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnEventTCPNetworkRead@CAttemperEngine@@UAE_NKUTCP_Command@@PAXG@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
__ehhandler$?OnEventTCPNetworkRead@CAttemperEngine@@UAE_NKUTCP_Command@@PAXG@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnEventTCPNetworkRead@CAttemperEngine@@UAE_NKUTCP_Command@@PAXG@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnEventTCPNetworkRead@CAttemperEngine@@UAE_NKUTCP_Command@@PAXG@Z ENDP ; CAttemperEngine::OnEventTCPNetworkRead
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?OnEventTCPNetworkShut@CAttemperEngine@@UAE_NKKK@Z
_TEXT	SEGMENT
_ThreadLock$ = -36					; size = 12
_pCloseEvent$ = -24					; size = 4
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_dwSocketID$ = 8					; size = 4
_dwClientAddr$ = 12					; size = 4
_dwActiveTime$ = 16					; size = 4
?OnEventTCPNetworkShut@CAttemperEngine@@UAE_NKKK@Z PROC	; CAttemperEngine::OnEventTCPNetworkShut, COMDAT
; _this$ = ecx

; 261  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnEventTCPNetworkShut@CAttemperEngine@@UAE_NKKK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 262  :     // 缓冲锁定
; 263  :     CWHDataLocker ThreadLock(m_CriticalLocker);

  00028	6a 01		 push	 1
  0002a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c0 04	 add	 eax, 4
  00030	50		 push	 eax
  00031	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHDataLocker@@QAE@AAVCCriticalSection@@_N@Z
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 264  :     NTY_TCPNetworkShutEvent * pCloseEvent = (NTY_TCPNetworkShutEvent *)m_cbBuffer;

  00041	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	81 c1 9c 40 00
	00		 add	 ecx, 16540		; 0000409cH
  0004a	89 4d e8	 mov	 DWORD PTR _pCloseEvent$[ebp], ecx

; 265  : 
; 266  :     // 构造数据
; 267  :     pCloseEvent->dwSocketID = dwSocketID;

  0004d	8b 55 e8	 mov	 edx, DWORD PTR _pCloseEvent$[ebp]
  00050	8b 45 08	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00053	89 02		 mov	 DWORD PTR [edx], eax

; 268  :     pCloseEvent->dwClientAddr = dwClientAddr;

  00055	8b 4d e8	 mov	 ecx, DWORD PTR _pCloseEvent$[ebp]
  00058	8b 55 0c	 mov	 edx, DWORD PTR _dwClientAddr$[ebp]
  0005b	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 269  :     pCloseEvent->dwActiveTime = dwActiveTime;

  0005e	8b 45 e8	 mov	 eax, DWORD PTR _pCloseEvent$[ebp]
  00061	8b 4d 10	 mov	 ecx, DWORD PTR _dwActiveTime$[ebp]
  00064	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 270  : 
; 271  :     // 投递数据
; 272  :     return m_AsynchronismEngine.PostAsynchronismData(EVENT_TCP_NETWORK_SHUT, m_cbBuffer, sizeof(NTY_TCPNetworkShutEvent));

  00067	6a 0c		 push	 12			; 0000000cH
  00069	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006c	81 c2 9c 40 00
	00		 add	 edx, 16540		; 0000409cH
  00072	52		 push	 edx
  00073	6a 09		 push	 9
  00075	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	83 c1 28	 add	 ecx, 40			; 00000028H
  0007b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00081	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00084	ff d0		 call	 eax
  00086	88 45 f3	 mov	 BYTE PTR $T2[ebp], al
  00089	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00090	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
  00099	8a 45 f3	 mov	 al, BYTE PTR $T2[ebp]

; 273  : }

  0009c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a6	59		 pop	 ecx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnEventTCPNetworkShut@CAttemperEngine@@UAE_NKKK@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
__ehhandler$?OnEventTCPNetworkShut@CAttemperEngine@@UAE_NKKK@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnEventTCPNetworkShut@CAttemperEngine@@UAE_NKKK@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnEventTCPNetworkShut@CAttemperEngine@@UAE_NKKK@Z ENDP	; CAttemperEngine::OnEventTCPNetworkShut
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?OnEventTCPNetworkBind@CAttemperEngine@@UAE_NKK@Z
_TEXT	SEGMENT
_ThreadLock$ = -36					; size = 12
_pAcceptEvent$ = -24					; size = 4
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_dwSocketID$ = 8					; size = 4
_dwClientAddr$ = 12					; size = 4
?OnEventTCPNetworkBind@CAttemperEngine@@UAE_NKK@Z PROC	; CAttemperEngine::OnEventTCPNetworkBind, COMDAT
; _this$ = ecx

; 246  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnEventTCPNetworkBind@CAttemperEngine@@UAE_NKK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 247  :     // 缓冲锁定
; 248  :     CWHDataLocker ThreadLock(m_CriticalLocker);

  00028	6a 01		 push	 1
  0002a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c0 04	 add	 eax, 4
  00030	50		 push	 eax
  00031	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHDataLocker@@QAE@AAVCCriticalSection@@_N@Z
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 249  :     NTY_TCPNetworkAcceptEvent * pAcceptEvent = (NTY_TCPNetworkAcceptEvent *)m_cbBuffer;

  00041	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	81 c1 9c 40 00
	00		 add	 ecx, 16540		; 0000409cH
  0004a	89 4d e8	 mov	 DWORD PTR _pAcceptEvent$[ebp], ecx

; 250  : 
; 251  :     // 构造数据
; 252  :     pAcceptEvent->dwSocketID = dwSocketID;

  0004d	8b 55 e8	 mov	 edx, DWORD PTR _pAcceptEvent$[ebp]
  00050	8b 45 08	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00053	89 02		 mov	 DWORD PTR [edx], eax

; 253  :     pAcceptEvent->dwClientAddr = dwClientAddr;

  00055	8b 4d e8	 mov	 ecx, DWORD PTR _pAcceptEvent$[ebp]
  00058	8b 55 0c	 mov	 edx, DWORD PTR _dwClientAddr$[ebp]
  0005b	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 254  : 
; 255  :     // 投递数据
; 256  :     return m_AsynchronismEngine.PostAsynchronismData(EVENT_TCP_NETWORK_ACCEPT, m_cbBuffer, sizeof(NTY_TCPNetworkAcceptEvent));

  0005e	6a 08		 push	 8
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	05 9c 40 00 00	 add	 eax, 16540		; 0000409cH
  00068	50		 push	 eax
  00069	6a 07		 push	 7
  0006b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	83 c1 28	 add	 ecx, 40			; 00000028H
  00071	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00074	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00077	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0007a	ff d2		 call	 edx
  0007c	88 45 f3	 mov	 BYTE PTR $T2[ebp], al
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00086	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
  0008f	8a 45 f3	 mov	 al, BYTE PTR $T2[ebp]

; 257  : }

  00092	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00095	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009c	59		 pop	 ecx
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnEventTCPNetworkBind@CAttemperEngine@@UAE_NKK@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
__ehhandler$?OnEventTCPNetworkBind@CAttemperEngine@@UAE_NKK@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnEventTCPNetworkBind@CAttemperEngine@@UAE_NKK@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnEventTCPNetworkBind@CAttemperEngine@@UAE_NKK@Z ENDP	; CAttemperEngine::OnEventTCPNetworkBind
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?OnEventTCPNetworkForeground@CAttemperEngine@@UAE_NK_N@Z
_TEXT	SEGMENT
_ThreadLock$ = -36					; size = 12
_pSocketForegroundEvent$ = -24				; size = 4
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_dwSocketID$ = 8					; size = 4
_foreground$ = 12					; size = 1
?OnEventTCPNetworkForeground@CAttemperEngine@@UAE_NK_N@Z PROC ; CAttemperEngine::OnEventTCPNetworkForeground, COMDAT
; _this$ = ecx

; 305  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnEventTCPNetworkForeground@CAttemperEngine@@UAE_NK_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 306  : 	//缓冲锁定
; 307  : 	CWHDataLocker ThreadLock(m_CriticalLocker);

  00028	6a 01		 push	 1
  0002a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c0 04	 add	 eax, 4
  00030	50		 push	 eax
  00031	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHDataLocker@@QAE@AAVCCriticalSection@@_N@Z
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 308  : 
; 309  : 	//投递消息
; 310  : 	NTY_TCPNetworkForegroundEvent * pSocketForegroundEvent = (NTY_TCPNetworkForegroundEvent *)m_cbBuffer;

  00041	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	81 c1 9c 40 00
	00		 add	 ecx, 16540		; 0000409cH
  0004a	89 4d e8	 mov	 DWORD PTR _pSocketForegroundEvent$[ebp], ecx

; 311  : 	pSocketForegroundEvent->dwSocketID = dwSocketID;

  0004d	8b 55 e8	 mov	 edx, DWORD PTR _pSocketForegroundEvent$[ebp]
  00050	8b 45 08	 mov	 eax, DWORD PTR _dwSocketID$[ebp]
  00053	89 02		 mov	 DWORD PTR [edx], eax

; 312  : 	pSocketForegroundEvent->bForeground = foreground;

  00055	8b 4d e8	 mov	 ecx, DWORD PTR _pSocketForegroundEvent$[ebp]
  00058	8a 55 0c	 mov	 dl, BYTE PTR _foreground$[ebp]
  0005b	88 51 04	 mov	 BYTE PTR [ecx+4], dl

; 313  : 	// 投递数据
; 314  : 	return m_AsynchronismEngine.PostAsynchronismData(EVENT_TCP_NETWORK_FOREGROUND, m_cbBuffer, sizeof(NTY_TCPNetworkForegroundEvent));

  0005e	6a 08		 push	 8
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	05 9c 40 00 00	 add	 eax, 16540		; 0000409cH
  00068	50		 push	 eax
  00069	6a 0a		 push	 10			; 0000000aH
  0006b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	83 c1 28	 add	 ecx, 40			; 00000028H
  00071	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00074	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00077	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0007a	ff d2		 call	 edx
  0007c	88 45 f3	 mov	 BYTE PTR $T2[ebp], al
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00086	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
  0008f	8a 45 f3	 mov	 al, BYTE PTR $T2[ebp]

; 315  : }

  00092	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00095	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009c	59		 pop	 ecx
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnEventTCPNetworkForeground@CAttemperEngine@@UAE_NK_N@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
__ehhandler$?OnEventTCPNetworkForeground@CAttemperEngine@@UAE_NK_N@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnEventTCPNetworkForeground@CAttemperEngine@@UAE_NK_N@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnEventTCPNetworkForeground@CAttemperEngine@@UAE_NK_N@Z ENDP ; CAttemperEngine::OnEventTCPNetworkForeground
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?OnEventTCPSocketRead@CAttemperEngine@@UAE_NGUTCP_Command@@PAXG@Z
_TEXT	SEGMENT
_ThreadLock$ = -36					; size = 12
_pReadEvent$ = -24					; size = 4
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_wServiceID$ = 8					; size = 2
_Command$ = 12						; size = 4
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?OnEventTCPSocketRead@CAttemperEngine@@UAE_NGUTCP_Command@@PAXG@Z PROC ; CAttemperEngine::OnEventTCPSocketRead, COMDAT
; _this$ = ecx

; 218  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnEventTCPSocketRead@CAttemperEngine@@UAE_NGUTCP_Command@@PAXG@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 219  :     // 效验参数
; 220  :     ASSERT((wDataSize + sizeof(NTY_TCPSocketReadEvent)) <= MAX_ASYNCHRONISM_DATA);

  00028	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0002c	83 c0 08	 add	 eax, 8
  0002f	3d 00 40 00 00	 cmp	 eax, 16384		; 00004000H
  00034	76 14		 jbe	 SHORT $LN5@OnEventTCP
  00036	68 dc 00 00 00	 push	 220			; 000000dcH
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00040	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00045	85 c0		 test	 eax, eax
  00047	74 01		 je	 SHORT $LN5@OnEventTCP
  00049	cc		 int	 3
$LN5@OnEventTCP:

; 221  :     if ((wDataSize + sizeof(NTY_TCPSocketReadEvent)) > MAX_ASYNCHRONISM_DATA)

  0004a	0f b7 55 14	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  0004e	83 c2 08	 add	 edx, 8
  00051	81 fa 00 40 00
	00		 cmp	 edx, 16384		; 00004000H
  00057	76 07		 jbe	 SHORT $LN2@OnEventTCP

; 222  :         return false;

  00059	32 c0		 xor	 al, al
  0005b	e9 ba 00 00 00	 jmp	 $LN1@OnEventTCP
$LN2@OnEventTCP:

; 223  : 
; 224  :     // 缓冲锁定
; 225  :     CWHDataLocker ThreadLock(m_CriticalLocker);

  00060	6a 01		 push	 1
  00062	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00065	83 c0 08	 add	 eax, 8
  00068	50		 push	 eax
  00069	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHDataLocker@@QAE@AAVCCriticalSection@@_N@Z
  00072	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 226  :     NTY_TCPSocketReadEvent * pReadEvent = (NTY_TCPSocketReadEvent *)m_cbBuffer;

  00079	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	81 c1 a0 40 00
	00		 add	 ecx, 16544		; 000040a0H
  00082	89 4d e8	 mov	 DWORD PTR _pReadEvent$[ebp], ecx

; 227  : 
; 228  :     // 构造数据
; 229  :     pReadEvent->Command = Command;

  00085	8b 55 e8	 mov	 edx, DWORD PTR _pReadEvent$[ebp]
  00088	8b 45 0c	 mov	 eax, DWORD PTR _Command$[ebp]
  0008b	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 230  :     pReadEvent->wDataSize = wDataSize;

  0008e	8b 4d e8	 mov	 ecx, DWORD PTR _pReadEvent$[ebp]
  00091	66 8b 55 14	 mov	 dx, WORD PTR _wDataSize$[ebp]
  00095	66 89 11	 mov	 WORD PTR [ecx], dx

; 231  :     pReadEvent->wServiceID = wServiceID;

  00098	8b 45 e8	 mov	 eax, DWORD PTR _pReadEvent$[ebp]
  0009b	66 8b 4d 08	 mov	 cx, WORD PTR _wServiceID$[ebp]
  0009f	66 89 48 02	 mov	 WORD PTR [eax+2], cx

; 232  : 
; 233  :     // 附加数据
; 234  :     if (wDataSize > 0)

  000a3	0f b7 55 14	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  000a7	85 d2		 test	 edx, edx
  000a9	7e 34		 jle	 SHORT $LN3@OnEventTCP

; 235  :     {
; 236  :         ASSERT(pData != NULL);

  000ab	83 7d 10 00	 cmp	 DWORD PTR _pData$[ebp], 0
  000af	75 14		 jne	 SHORT $LN6@OnEventTCP
  000b1	68 ec 00 00 00	 push	 236			; 000000ecH
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000bb	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000c0	85 c0		 test	 eax, eax
  000c2	74 01		 je	 SHORT $LN6@OnEventTCP
  000c4	cc		 int	 3
$LN6@OnEventTCP:

; 237  :         CopyMemory(m_cbBuffer + sizeof(NTY_TCPSocketReadEvent), pData, wDataSize);

  000c5	0f b7 4d 14	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000c9	51		 push	 ecx
  000ca	8b 55 10	 mov	 edx, DWORD PTR _pData$[ebp]
  000cd	52		 push	 edx
  000ce	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	05 a8 40 00 00	 add	 eax, 16552		; 000040a8H
  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 _memcpy
  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@OnEventTCP:

; 238  :     }
; 239  : 
; 240  :     // 投递数据
; 241  :     return m_AsynchronismEngine.PostAsynchronismData(EVENT_TCP_SOCKET_READ, m_cbBuffer, sizeof(NTY_TCPSocketReadEvent) + wDataSize);

  000df	0f b7 4d 14	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000e3	83 c1 08	 add	 ecx, 8
  000e6	51		 push	 ecx
  000e7	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ea	81 c2 a0 40 00
	00		 add	 edx, 16544		; 000040a0H
  000f0	52		 push	 edx
  000f1	6a 04		 push	 4
  000f3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	83 c1 2c	 add	 ecx, 44			; 0000002cH
  000f9	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000fc	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  000ff	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00102	ff d0		 call	 eax
  00104	88 45 f3	 mov	 BYTE PTR $T2[ebp], al
  00107	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0010e	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00111	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
  00117	8a 45 f3	 mov	 al, BYTE PTR $T2[ebp]
$LN1@OnEventTCP:

; 242  : }

  0011a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0011d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00124	59		 pop	 ecx
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnEventTCPSocketRead@CAttemperEngine@@UAE_NGUTCP_Command@@PAXG@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
__ehhandler$?OnEventTCPSocketRead@CAttemperEngine@@UAE_NGUTCP_Command@@PAXG@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnEventTCPSocketRead@CAttemperEngine@@UAE_NGUTCP_Command@@PAXG@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnEventTCPSocketRead@CAttemperEngine@@UAE_NGUTCP_Command@@PAXG@Z ENDP ; CAttemperEngine::OnEventTCPSocketRead
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?OnEventTCPSocketShut@CAttemperEngine@@UAE_NGE@Z
_TEXT	SEGMENT
_ThreadLock$ = -36					; size = 12
_pCloseEvent$ = -24					; size = 4
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_wServiceID$ = 8					; size = 2
_cbShutReason$ = 12					; size = 1
?OnEventTCPSocketShut@CAttemperEngine@@UAE_NGE@Z PROC	; CAttemperEngine::OnEventTCPSocketShut, COMDAT
; _this$ = ecx

; 203  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnEventTCPSocketShut@CAttemperEngine@@UAE_NGE@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 204  :     // 缓冲锁定
; 205  :     CWHDataLocker ThreadLock(m_CriticalLocker);

  00028	6a 01		 push	 1
  0002a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c0 08	 add	 eax, 8
  00030	50		 push	 eax
  00031	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHDataLocker@@QAE@AAVCCriticalSection@@_N@Z
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 206  :     NTY_TCPSocketShutEvent * pCloseEvent = (NTY_TCPSocketShutEvent *)m_cbBuffer;

  00041	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	81 c1 a0 40 00
	00		 add	 ecx, 16544		; 000040a0H
  0004a	89 4d e8	 mov	 DWORD PTR _pCloseEvent$[ebp], ecx

; 207  : 
; 208  :     // 构造数据
; 209  :     pCloseEvent->wServiceID = wServiceID;

  0004d	8b 55 e8	 mov	 edx, DWORD PTR _pCloseEvent$[ebp]
  00050	66 8b 45 08	 mov	 ax, WORD PTR _wServiceID$[ebp]
  00054	66 89 02	 mov	 WORD PTR [edx], ax

; 210  :     pCloseEvent->cbShutReason = cbShutReason;

  00057	8b 4d e8	 mov	 ecx, DWORD PTR _pCloseEvent$[ebp]
  0005a	8a 55 0c	 mov	 dl, BYTE PTR _cbShutReason$[ebp]
  0005d	88 51 02	 mov	 BYTE PTR [ecx+2], dl

; 211  : 
; 212  :     // 投递数据
; 213  :     return m_AsynchronismEngine.PostAsynchronismData(EVENT_TCP_SOCKET_SHUT, m_cbBuffer, sizeof(NTY_TCPSocketShutEvent));

  00060	6a 04		 push	 4
  00062	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00065	05 a0 40 00 00	 add	 eax, 16544		; 000040a0H
  0006a	50		 push	 eax
  0006b	6a 05		 push	 5
  0006d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00073	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00076	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00079	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0007c	ff d2		 call	 edx
  0007e	88 45 f3	 mov	 BYTE PTR $T2[ebp], al
  00081	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00088	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
  00091	8a 45 f3	 mov	 al, BYTE PTR $T2[ebp]

; 214  : }

  00094	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00097	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009e	59		 pop	 ecx
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnEventTCPSocketShut@CAttemperEngine@@UAE_NGE@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
__ehhandler$?OnEventTCPSocketShut@CAttemperEngine@@UAE_NGE@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnEventTCPSocketShut@CAttemperEngine@@UAE_NGE@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnEventTCPSocketShut@CAttemperEngine@@UAE_NGE@Z ENDP	; CAttemperEngine::OnEventTCPSocketShut
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?OnEventTCPSocketLink@CAttemperEngine@@UAE_NGH@Z
_TEXT	SEGMENT
_ThreadLock$ = -36					; size = 12
_pConnectEvent$ = -24					; size = 4
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_wServiceID$ = 8					; size = 2
_nErrorCode$ = 12					; size = 4
?OnEventTCPSocketLink@CAttemperEngine@@UAE_NGH@Z PROC	; CAttemperEngine::OnEventTCPSocketLink, COMDAT
; _this$ = ecx

; 188  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnEventTCPSocketLink@CAttemperEngine@@UAE_NGH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 189  :     // 缓冲锁定
; 190  :     CWHDataLocker ThreadLock(m_CriticalLocker);

  00028	6a 01		 push	 1
  0002a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c0 08	 add	 eax, 8
  00030	50		 push	 eax
  00031	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHDataLocker@@QAE@AAVCCriticalSection@@_N@Z
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 191  :     NTY_TCPSocketLinkEvent * pConnectEvent = (NTY_TCPSocketLinkEvent *)m_cbBuffer;

  00041	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	81 c1 a0 40 00
	00		 add	 ecx, 16544		; 000040a0H
  0004a	89 4d e8	 mov	 DWORD PTR _pConnectEvent$[ebp], ecx

; 192  : 
; 193  :     // 构造数据
; 194  :     pConnectEvent->wServiceID = wServiceID;

  0004d	8b 55 e8	 mov	 edx, DWORD PTR _pConnectEvent$[ebp]
  00050	66 8b 45 08	 mov	 ax, WORD PTR _wServiceID$[ebp]
  00054	66 89 42 04	 mov	 WORD PTR [edx+4], ax

; 195  :     pConnectEvent->nErrorCode = nErrorCode;

  00058	8b 4d e8	 mov	 ecx, DWORD PTR _pConnectEvent$[ebp]
  0005b	8b 55 0c	 mov	 edx, DWORD PTR _nErrorCode$[ebp]
  0005e	89 11		 mov	 DWORD PTR [ecx], edx

; 196  : 
; 197  :     // 投递数据
; 198  :     return m_AsynchronismEngine.PostAsynchronismData(EVENT_TCP_SOCKET_LINK, m_cbBuffer, sizeof(NTY_TCPSocketLinkEvent));

  00060	6a 08		 push	 8
  00062	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00065	05 a0 40 00 00	 add	 eax, 16544		; 000040a0H
  0006a	50		 push	 eax
  0006b	6a 06		 push	 6
  0006d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00073	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00076	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00079	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0007c	ff d2		 call	 edx
  0007e	88 45 f3	 mov	 BYTE PTR $T2[ebp], al
  00081	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00088	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
  00091	8a 45 f3	 mov	 al, BYTE PTR $T2[ebp]

; 199  : }

  00094	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00097	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009e	59		 pop	 ecx
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnEventTCPSocketLink@CAttemperEngine@@UAE_NGH@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
__ehhandler$?OnEventTCPSocketLink@CAttemperEngine@@UAE_NGH@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnEventTCPSocketLink@CAttemperEngine@@UAE_NGH@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnEventTCPSocketLink@CAttemperEngine@@UAE_NGH@Z ENDP	; CAttemperEngine::OnEventTCPSocketLink
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?OnEventDataBaseResult@CAttemperEngine@@UAE_NGKPAXG@Z
_TEXT	SEGMENT
_ThreadLock$ = -36					; size = 12
_pDataBaseEvent$ = -24					; size = 4
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_wRequestID$ = 8					; size = 2
_dwContextID$ = 12					; size = 4
_pData$ = 16						; size = 4
_wDataSize$ = 20					; size = 2
?OnEventDataBaseResult@CAttemperEngine@@UAE_NGKPAXG@Z PROC ; CAttemperEngine::OnEventDataBaseResult, COMDAT
; _this$ = ecx

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnEventDataBaseResult@CAttemperEngine@@UAE_NGKPAXG@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 162  :     // 效验参数
; 163  :     ASSERT((wDataSize + sizeof(NTY_DataBaseEvent)) <= MAX_ASYNCHRONISM_DATA);

  00028	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0002c	83 c0 08	 add	 eax, 8
  0002f	3d 00 40 00 00	 cmp	 eax, 16384		; 00004000H
  00034	76 14		 jbe	 SHORT $LN5@OnEventDat
  00036	68 a3 00 00 00	 push	 163			; 000000a3H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00040	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00045	85 c0		 test	 eax, eax
  00047	74 01		 je	 SHORT $LN5@OnEventDat
  00049	cc		 int	 3
$LN5@OnEventDat:

; 164  :     if ((wDataSize + sizeof(NTY_DataBaseEvent)) > MAX_ASYNCHRONISM_DATA)

  0004a	0f b7 55 14	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  0004e	83 c2 08	 add	 edx, 8
  00051	81 fa 00 40 00
	00		 cmp	 edx, 16384		; 00004000H
  00057	76 07		 jbe	 SHORT $LN2@OnEventDat

; 165  :         return false;

  00059	32 c0		 xor	 al, al
  0005b	e9 af 00 00 00	 jmp	 $LN1@OnEventDat
$LN2@OnEventDat:

; 166  : 
; 167  :     // 缓冲锁定
; 168  :     CWHDataLocker ThreadLock(m_CriticalLocker);

  00060	6a 01		 push	 1
  00062	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00065	83 c0 10	 add	 eax, 16			; 00000010H
  00068	50		 push	 eax
  00069	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHDataLocker@@QAE@AAVCCriticalSection@@_N@Z
  00072	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 169  :     NTY_DataBaseEvent * pDataBaseEvent = (NTY_DataBaseEvent *)m_cbBuffer;

  00079	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	81 c1 a8 40 00
	00		 add	 ecx, 16552		; 000040a8H
  00082	89 4d e8	 mov	 DWORD PTR _pDataBaseEvent$[ebp], ecx

; 170  : 
; 171  :     // 构造数据
; 172  :     pDataBaseEvent->wRequestID = wRequestID;

  00085	8b 55 e8	 mov	 edx, DWORD PTR _pDataBaseEvent$[ebp]
  00088	66 8b 45 08	 mov	 ax, WORD PTR _wRequestID$[ebp]
  0008c	66 89 02	 mov	 WORD PTR [edx], ax

; 173  :     pDataBaseEvent->dwContextID = dwContextID;

  0008f	8b 4d e8	 mov	 ecx, DWORD PTR _pDataBaseEvent$[ebp]
  00092	8b 55 0c	 mov	 edx, DWORD PTR _dwContextID$[ebp]
  00095	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 174  : 
; 175  :     // 附加数据
; 176  :     if (wDataSize > 0)

  00098	0f b7 45 14	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0009c	85 c0		 test	 eax, eax
  0009e	7e 35		 jle	 SHORT $LN3@OnEventDat

; 177  :     {
; 178  :         ASSERT(pData != NULL);

  000a0	83 7d 10 00	 cmp	 DWORD PTR _pData$[ebp], 0
  000a4	75 14		 jne	 SHORT $LN6@OnEventDat
  000a6	68 b2 00 00 00	 push	 178			; 000000b2H
  000ab	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000b0	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000b5	85 c0		 test	 eax, eax
  000b7	74 01		 je	 SHORT $LN6@OnEventDat
  000b9	cc		 int	 3
$LN6@OnEventDat:

; 179  :         CopyMemory(m_cbBuffer + sizeof(NTY_DataBaseEvent), pData, wDataSize);

  000ba	0f b7 55 14	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  000be	52		 push	 edx
  000bf	8b 45 10	 mov	 eax, DWORD PTR _pData$[ebp]
  000c2	50		 push	 eax
  000c3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	81 c1 b0 40 00
	00		 add	 ecx, 16560		; 000040b0H
  000cc	51		 push	 ecx
  000cd	e8 00 00 00 00	 call	 _memcpy
  000d2	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@OnEventDat:

; 180  :     }
; 181  : 
; 182  :     // 投递数据
; 183  :     return m_AsynchronismEngine.PostAsynchronismData(EVENT_DATABASE, m_cbBuffer, sizeof(NTY_DataBaseEvent) + wDataSize);

  000d5	0f b7 55 14	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  000d9	83 c2 08	 add	 edx, 8
  000dc	52		 push	 edx
  000dd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e0	05 a8 40 00 00	 add	 eax, 16552		; 000040a8H
  000e5	50		 push	 eax
  000e6	6a 03		 push	 3
  000e8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	83 c1 34	 add	 ecx, 52			; 00000034H
  000ee	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000f1	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  000f4	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  000f7	ff d2		 call	 edx
  000f9	88 45 f3	 mov	 BYTE PTR $T2[ebp], al
  000fc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00103	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00106	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
  0010c	8a 45 f3	 mov	 al, BYTE PTR $T2[ebp]
$LN1@OnEventDat:

; 184  : }

  0010f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00112	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00119	59		 pop	 ecx
  0011a	8b e5		 mov	 esp, ebp
  0011c	5d		 pop	 ebp
  0011d	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnEventDataBaseResult@CAttemperEngine@@UAE_NGKPAXG@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
__ehhandler$?OnEventDataBaseResult@CAttemperEngine@@UAE_NGKPAXG@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnEventDataBaseResult@CAttemperEngine@@UAE_NGKPAXG@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnEventDataBaseResult@CAttemperEngine@@UAE_NGKPAXG@Z ENDP ; CAttemperEngine::OnEventDataBaseResult
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?OnEventTimer@CAttemperEngine@@UAE_NKI@Z
_TEXT	SEGMENT
_ThreadLock$ = -36					; size = 12
_pTimerEvent$ = -24					; size = 4
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_dwTimerID$ = 8						; size = 4
_dwBindParameter$ = 12					; size = 4
?OnEventTimer@CAttemperEngine@@UAE_NKI@Z PROC		; CAttemperEngine::OnEventTimer, COMDAT
; _this$ = ecx

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnEventTimer@CAttemperEngine@@UAE_NKI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 147  :     // 缓冲锁定
; 148  :     CWHDataLocker ThreadLock(m_CriticalLocker);

  00028	6a 01		 push	 1
  0002a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c0 0c	 add	 eax, 12			; 0000000cH
  00030	50		 push	 eax
  00031	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHDataLocker@@QAE@AAVCCriticalSection@@_N@Z
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 149  :     NTY_TimerEvent * pTimerEvent = (NTY_TimerEvent *)m_cbBuffer;

  00041	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	81 c1 a4 40 00
	00		 add	 ecx, 16548		; 000040a4H
  0004a	89 4d e8	 mov	 DWORD PTR _pTimerEvent$[ebp], ecx

; 150  : 
; 151  :     // 构造数据
; 152  :     pTimerEvent->dwTimerID = dwTimerID;

  0004d	8b 55 e8	 mov	 edx, DWORD PTR _pTimerEvent$[ebp]
  00050	8b 45 08	 mov	 eax, DWORD PTR _dwTimerID$[ebp]
  00053	89 02		 mov	 DWORD PTR [edx], eax

; 153  :     pTimerEvent->dwBindParameter = dwBindParameter;

  00055	8b 4d e8	 mov	 ecx, DWORD PTR _pTimerEvent$[ebp]
  00058	8b 55 0c	 mov	 edx, DWORD PTR _dwBindParameter$[ebp]
  0005b	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 154  : 
; 155  :     // 投递数据
; 156  :     return m_AsynchronismEngine.PostAsynchronismData(EVENT_TIMER, m_cbBuffer, sizeof(NTY_TimerEvent));

  0005e	6a 08		 push	 8
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	05 a4 40 00 00	 add	 eax, 16548		; 000040a4H
  00068	50		 push	 eax
  00069	6a 01		 push	 1
  0006b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	83 c1 30	 add	 ecx, 48			; 00000030H
  00071	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00074	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00077	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0007a	ff d2		 call	 edx
  0007c	88 45 f3	 mov	 BYTE PTR $T2[ebp], al
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00086	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
  0008f	8a 45 f3	 mov	 al, BYTE PTR $T2[ebp]

; 157  : }

  00092	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00095	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009c	59		 pop	 ecx
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnEventTimer@CAttemperEngine@@UAE_NKI@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
__ehhandler$?OnEventTimer@CAttemperEngine@@UAE_NKI@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnEventTimer@CAttemperEngine@@UAE_NKI@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnEventTimer@CAttemperEngine@@UAE_NKI@Z ENDP		; CAttemperEngine::OnEventTimer
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?OnEventControl@CAttemperEngine@@UAE_NGPAXG@Z
_TEXT	SEGMENT
_ThreadLock$ = -36					; size = 12
_pControlEvent$ = -24					; size = 4
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_wControlID$ = 8					; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnEventControl@CAttemperEngine@@UAE_NGPAXG@Z PROC	; CAttemperEngine::OnEventControl, COMDAT
; _this$ = ecx

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnEventControl@CAttemperEngine@@UAE_NGPAXG@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 121  :     // 效验参数
; 122  :     ASSERT((wDataSize + sizeof(NTY_ControlEvent)) <= MAX_ASYNCHRONISM_DATA);

  00028	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  0002c	83 c0 02	 add	 eax, 2
  0002f	3d 00 40 00 00	 cmp	 eax, 16384		; 00004000H
  00034	76 11		 jbe	 SHORT $LN5@OnEventCon
  00036	6a 7a		 push	 122			; 0000007aH
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003d	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00042	85 c0		 test	 eax, eax
  00044	74 01		 je	 SHORT $LN5@OnEventCon
  00046	cc		 int	 3
$LN5@OnEventCon:

; 123  :     if ((wDataSize + sizeof(NTY_ControlEvent)) > MAX_ASYNCHRONISM_DATA)

  00047	0f b7 55 10	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  0004b	83 c2 02	 add	 edx, 2
  0004e	81 fa 00 40 00
	00		 cmp	 edx, 16384		; 00004000H
  00054	76 07		 jbe	 SHORT $LN2@OnEventCon

; 124  :         return false;

  00056	32 c0		 xor	 al, al
  00058	e9 a7 00 00 00	 jmp	 $LN1@OnEventCon
$LN2@OnEventCon:

; 125  : 
; 126  :     // 缓冲锁定
; 127  :     CWHDataLocker ThreadLock(m_CriticalLocker);

  0005d	6a 01		 push	 1
  0005f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00062	83 c0 18	 add	 eax, 24			; 00000018H
  00065	50		 push	 eax
  00066	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHDataLocker@@QAE@AAVCCriticalSection@@_N@Z
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 128  :     NTY_ControlEvent * pControlEvent = (NTY_ControlEvent *)m_cbBuffer;

  00076	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	81 c1 b0 40 00
	00		 add	 ecx, 16560		; 000040b0H
  0007f	89 4d e8	 mov	 DWORD PTR _pControlEvent$[ebp], ecx

; 129  : 
; 130  :     // 构造数据
; 131  :     pControlEvent->wControlID = wControlID;

  00082	8b 55 e8	 mov	 edx, DWORD PTR _pControlEvent$[ebp]
  00085	66 8b 45 08	 mov	 ax, WORD PTR _wControlID$[ebp]
  00089	66 89 02	 mov	 WORD PTR [edx], ax

; 132  : 
; 133  :     // 附加数据
; 134  :     if (wDataSize > 0)

  0008c	0f b7 4d 10	 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  00090	85 c9		 test	 ecx, ecx
  00092	7e 35		 jle	 SHORT $LN3@OnEventCon

; 135  :     {
; 136  :         ASSERT(pData != NULL);

  00094	83 7d 0c 00	 cmp	 DWORD PTR _pData$[ebp], 0
  00098	75 14		 jne	 SHORT $LN6@OnEventCon
  0009a	68 88 00 00 00	 push	 136			; 00000088H
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  000a4	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  000a9	85 c0		 test	 eax, eax
  000ab	74 01		 je	 SHORT $LN6@OnEventCon
  000ad	cc		 int	 3
$LN6@OnEventCon:

; 137  :         CopyMemory(m_cbBuffer + sizeof(NTY_ControlEvent), pData, wDataSize);

  000ae	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000b2	50		 push	 eax
  000b3	8b 4d 0c	 mov	 ecx, DWORD PTR _pData$[ebp]
  000b6	51		 push	 ecx
  000b7	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ba	81 c2 b2 40 00
	00		 add	 edx, 16562		; 000040b2H
  000c0	52		 push	 edx
  000c1	e8 00 00 00 00	 call	 _memcpy
  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@OnEventCon:

; 138  :     }
; 139  : 
; 140  :     // 投递数据
; 141  :     return m_AsynchronismEngine.PostAsynchronismData(EVENT_CONTROL, m_cbBuffer, sizeof(NTY_ControlEvent) + wDataSize);

  000c9	0f b7 45 10	 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000cd	83 c0 02	 add	 eax, 2
  000d0	50		 push	 eax
  000d1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	81 c1 b0 40 00
	00		 add	 ecx, 16560		; 000040b0H
  000da	51		 push	 ecx
  000db	6a 02		 push	 2
  000dd	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	83 c1 3c	 add	 ecx, 60			; 0000003cH
  000e3	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000e6	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000e9	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  000ec	ff d2		 call	 edx
  000ee	88 45 f3	 mov	 BYTE PTR $T2[ebp], al
  000f1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f8	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  000fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
  00101	8a 45 f3	 mov	 al, BYTE PTR $T2[ebp]
$LN1@OnEventCon:

; 142  : }

  00104	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00107	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010e	59		 pop	 ecx
  0010f	8b e5		 mov	 esp, ebp
  00111	5d		 pop	 ebp
  00112	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnEventControl@CAttemperEngine@@UAE_NGPAXG@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
__ehhandler$?OnEventControl@CAttemperEngine@@UAE_NGPAXG@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnEventControl@CAttemperEngine@@UAE_NGPAXG@Z
  0001f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnEventControl@CAttemperEngine@@UAE_NGPAXG@Z ENDP	; CAttemperEngine::OnEventControl
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?OnEventCustom@CAttemperEngine@@UAE_NGPAXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_wRequestID$ = 8					; size = 2
_pData$ = 12						; size = 4
_wDataSize$ = 16					; size = 2
?OnEventCustom@CAttemperEngine@@UAE_NGPAXG@Z PROC	; CAttemperEngine::OnEventCustom, COMDAT
; _this$ = ecx

; 108  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 109  :     // 效验参数
; 110  :     ASSERT((wRequestID&EVENT_MASK_CUSTOM) == wRequestID);

  00007	0f b7 45 08	 movzx	 eax, WORD PTR _wRequestID$[ebp]
  0000b	25 00 ff 00 00	 and	 eax, 65280		; 0000ff00H
  00010	0f b7 4d 08	 movzx	 ecx, WORD PTR _wRequestID$[ebp]
  00014	3b c1		 cmp	 eax, ecx
  00016	74 11		 je	 SHORT $LN4@OnEventCus
  00018	6a 6e		 push	 110			; 0000006eH
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0001f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00024	85 c0		 test	 eax, eax
  00026	74 01		 je	 SHORT $LN4@OnEventCus
  00028	cc		 int	 3
$LN4@OnEventCus:

; 111  :     if ((wRequestID&EVENT_MASK_CUSTOM) != wRequestID)

  00029	0f b7 45 08	 movzx	 eax, WORD PTR _wRequestID$[ebp]
  0002d	25 00 ff 00 00	 and	 eax, 65280		; 0000ff00H
  00032	0f b7 4d 08	 movzx	 ecx, WORD PTR _wRequestID$[ebp]
  00036	3b c1		 cmp	 eax, ecx
  00038	74 04		 je	 SHORT $LN2@OnEventCus

; 112  :         return false;

  0003a	32 c0		 xor	 al, al
  0003c	eb 1f		 jmp	 SHORT $LN1@OnEventCus
$LN2@OnEventCus:

; 113  : 
; 114  :     // 投递数据
; 115  :     return m_AsynchronismEngine.PostAsynchronismData(wRequestID, pData, wDataSize);

  0003e	0f b7 55 10	 movzx	 edx, WORD PTR _wDataSize$[ebp]
  00042	52		 push	 edx
  00043	8b 45 0c	 mov	 eax, DWORD PTR _pData$[ebp]
  00046	50		 push	 eax
  00047	0f b7 4d 08	 movzx	 ecx, WORD PTR _wRequestID$[ebp]
  0004b	51		 push	 ecx
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00058	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0005b	ff d2		 call	 edx
$LN1@OnEventCus:

; 116  : }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 0c 00	 ret	 12			; 0000000cH
?OnEventCustom@CAttemperEngine@@UAE_NGPAXG@Z ENDP	; CAttemperEngine::OnEventCustom
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?SetAttemperEngineSink@CAttemperEngine@@UAE_NPAUIUnknownEx@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv86 = -8						; size = 4
tv71 = -4						; size = 4
_pIUnknownEx$ = 8					; size = 4
?SetAttemperEngineSink@CAttemperEngine@@UAE_NPAUIUnknownEx@@@Z PROC ; CAttemperEngine::SetAttemperEngineSink, COMDAT
; _this$ = ecx

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 92   :     // 查询接口
; 93   :     ASSERT(QUERY_OBJECT_PTR_INTERFACE(pIUnknownEx, IAttemperEngineSink) != NULL);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pIUnknownEx$[ebp], 0
  0000d	75 09		 jne	 SHORT $LN4@SetAttempe
  0000f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
  00016	eb 1a		 jmp	 SHORT $LN5@SetAttempe
$LN4@SetAttempe:
  00018	68 00 01 01 06	 push	 100729088		; 06010100H
  0001d	68 00 00 00 00	 push	 OFFSET ?IID_IAttemperEngineSink@@3U_GUID@@B
  00022	8b 45 08	 mov	 eax, DWORD PTR _pIUnknownEx$[ebp]
  00025	8b 10		 mov	 edx, DWORD PTR [eax]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pIUnknownEx$[ebp]
  0002a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002d	ff d0		 call	 eax
  0002f	89 45 fc	 mov	 DWORD PTR tv71[ebp], eax
$LN5@SetAttempe:
  00032	83 7d fc 00	 cmp	 DWORD PTR tv71[ebp], 0
  00036	75 11		 jne	 SHORT $LN6@SetAttempe
  00038	6a 5d		 push	 93			; 0000005dH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0003f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00044	85 c0		 test	 eax, eax
  00046	74 01		 je	 SHORT $LN6@SetAttempe
  00048	cc		 int	 3
$LN6@SetAttempe:

; 94   :     m_pIAttemperEngineSink = QUERY_OBJECT_PTR_INTERFACE(pIUnknownEx, IAttemperEngineSink);

  00049	83 7d 08 00	 cmp	 DWORD PTR _pIUnknownEx$[ebp], 0
  0004d	75 09		 jne	 SHORT $LN7@SetAttempe
  0004f	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv86[ebp], 0
  00056	eb 1a		 jmp	 SHORT $LN8@SetAttempe
$LN7@SetAttempe:
  00058	68 00 01 01 06	 push	 100729088		; 06010100H
  0005d	68 00 00 00 00	 push	 OFFSET ?IID_IAttemperEngineSink@@3U_GUID@@B
  00062	8b 55 08	 mov	 edx, DWORD PTR _pIUnknownEx$[ebp]
  00065	8b 02		 mov	 eax, DWORD PTR [edx]
  00067	8b 4d 08	 mov	 ecx, DWORD PTR _pIUnknownEx$[ebp]
  0006a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0006d	ff d2		 call	 edx
  0006f	89 45 f8	 mov	 DWORD PTR tv86[ebp], eax
$LN8@SetAttempe:
  00072	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00075	8b 4d f8	 mov	 ecx, DWORD PTR tv86[ebp]
  00078	89 88 ac 40 00
	00		 mov	 DWORD PTR [eax+16556], ecx

; 95   : 
; 96   :     // 结果判断
; 97   :     if (m_pIAttemperEngineSink == NULL)

  0007e	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00081	83 ba ac 40 00
	00 00		 cmp	 DWORD PTR [edx+16556], 0
  00088	75 19		 jne	 SHORT $LN2@SetAttempe

; 98   :     {
; 99   :         ASSERT(FALSE);

  0008a	33 c0		 xor	 eax, eax
  0008c	75 11		 jne	 SHORT $LN9@SetAttempe
  0008e	6a 63		 push	 99			; 00000063H
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00095	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0009a	85 c0		 test	 eax, eax
  0009c	74 01		 je	 SHORT $LN9@SetAttempe
  0009e	cc		 int	 3
$LN9@SetAttempe:

; 100  :         return false;

  0009f	32 c0		 xor	 al, al
  000a1	eb 02		 jmp	 SHORT $LN1@SetAttempe
$LN2@SetAttempe:

; 101  :     }
; 102  : 
; 103  :     return true;

  000a3	b0 01		 mov	 al, 1
$LN1@SetAttempe:

; 104  : }

  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c2 04 00	 ret	 4
?SetAttemperEngineSink@CAttemperEngine@@UAE_NPAUIUnknownEx@@@Z ENDP ; CAttemperEngine::SetAttemperEngineSink
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?SetNetworkEngine@CAttemperEngine@@UAE_NPAUIUnknownEx@@@Z
_TEXT	SEGMENT
tv87 = -12						; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_pIUnknownEx$ = 8					; size = 4
?SetNetworkEngine@CAttemperEngine@@UAE_NPAUIUnknownEx@@@Z PROC ; CAttemperEngine::SetNetworkEngine, COMDAT
; _this$ = ecx

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 73   :     // 设置接口
; 74   :     if (pIUnknownEx != NULL)

  00009	83 7d 08 00	 cmp	 DWORD PTR _pIUnknownEx$[ebp], 0
  0000d	0f 84 87 00 00
	00		 je	 $LN2@SetNetwork

; 75   :     {
; 76   :         // 查询接口
; 77   :         ASSERT(QUERY_OBJECT_PTR_INTERFACE(pIUnknownEx, ITCPNetworkEngine) != NULL);

  00013	83 7d 08 00	 cmp	 DWORD PTR _pIUnknownEx$[ebp], 0
  00017	75 09		 jne	 SHORT $LN6@SetNetwork
  00019	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
  00020	eb 1a		 jmp	 SHORT $LN7@SetNetwork
$LN6@SetNetwork:
  00022	68 00 01 01 06	 push	 100729088		; 06010100H
  00027	68 00 00 00 00	 push	 OFFSET ?IID_ITCPNetworkEngine@@3U_GUID@@B
  0002c	8b 45 08	 mov	 eax, DWORD PTR _pIUnknownEx$[ebp]
  0002f	8b 10		 mov	 edx, DWORD PTR [eax]
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _pIUnknownEx$[ebp]
  00034	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00037	ff d0		 call	 eax
  00039	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
$LN7@SetNetwork:
  0003c	83 7d f8 00	 cmp	 DWORD PTR tv72[ebp], 0
  00040	75 11		 jne	 SHORT $LN8@SetNetwork
  00042	6a 4d		 push	 77			; 0000004dH
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00049	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0004e	85 c0		 test	 eax, eax
  00050	74 01		 je	 SHORT $LN8@SetNetwork
  00052	cc		 int	 3
$LN8@SetNetwork:

; 78   :         m_pITCPNetworkEngine = QUERY_OBJECT_PTR_INTERFACE(pIUnknownEx, ITCPNetworkEngine);

  00053	83 7d 08 00	 cmp	 DWORD PTR _pIUnknownEx$[ebp], 0
  00057	75 09		 jne	 SHORT $LN9@SetNetwork
  00059	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
  00060	eb 1a		 jmp	 SHORT $LN10@SetNetwork
$LN9@SetNetwork:
  00062	68 00 01 01 06	 push	 100729088		; 06010100H
  00067	68 00 00 00 00	 push	 OFFSET ?IID_ITCPNetworkEngine@@3U_GUID@@B
  0006c	8b 55 08	 mov	 edx, DWORD PTR _pIUnknownEx$[ebp]
  0006f	8b 02		 mov	 eax, DWORD PTR [edx]
  00071	8b 4d 08	 mov	 ecx, DWORD PTR _pIUnknownEx$[ebp]
  00074	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00077	ff d2		 call	 edx
  00079	89 45 f4	 mov	 DWORD PTR tv87[ebp], eax
$LN10@SetNetwork:
  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR tv87[ebp]
  00082	89 88 a8 40 00
	00		 mov	 DWORD PTR [eax+16552], ecx

; 79   : 
; 80   :         // 成功判断
; 81   :         if (m_pITCPNetworkEngine == NULL)

  00088	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008b	83 ba a8 40 00
	00 00		 cmp	 DWORD PTR [edx+16552], 0
  00092	75 04		 jne	 SHORT $LN4@SetNetwork

; 82   :             return false;

  00094	32 c0		 xor	 al, al
  00096	eb 11		 jmp	 SHORT $LN1@SetNetwork
$LN4@SetNetwork:

; 83   :     }

  00098	eb 0d		 jmp	 SHORT $LN3@SetNetwork
$LN2@SetNetwork:

; 84   :     else m_pITCPNetworkEngine = NULL;

  0009a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	c7 80 a8 40 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+16552], 0
$LN3@SetNetwork:

; 85   : 
; 86   :     return true;

  000a7	b0 01		 mov	 al, 1
$LN1@SetNetwork:

; 87   : }

  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c2 04 00	 ret	 4
?SetNetworkEngine@CAttemperEngine@@UAE_NPAUIUnknownEx@@@Z ENDP ; CAttemperEngine::SetNetworkEngine
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?ConcludeService@CAttemperEngine@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ConcludeService@CAttemperEngine@@UAE_NXZ PROC		; CAttemperEngine::ConcludeService, COMDAT
; _this$ = ecx

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 64   :     // 异步引擎
; 65   :     m_AsynchronismEngine.ConcludeService();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00010	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  00013	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00016	ff d0		 call	 eax

; 66   : 
; 67   :     return true;

  00018	b0 01		 mov	 al, 1

; 68   : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?ConcludeService@CAttemperEngine@@UAE_NXZ ENDP		; CAttemperEngine::ConcludeService
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?StartService@CAttemperEngine@@UAE_NXZ
_TEXT	SEGMENT
_pIAsynchronismEngineSink$ = -8				; size = 4
_this$ = -4						; size = 4
?StartService@CAttemperEngine@@UAE_NXZ PROC		; CAttemperEngine::StartService, COMDAT
; _this$ = ecx

; 40   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 41   :     // 效验参数
; 42   :     ASSERT((m_pITCPNetworkEngine != NULL) && (m_pIAttemperEngineSink != NULL));

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 b8 a8 40 00
	00 00		 cmp	 DWORD PTR [eax+16552], 0
  00013	74 0c		 je	 SHORT $LN7@StartServi
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	83 b9 ac 40 00
	00 00		 cmp	 DWORD PTR [ecx+16556], 0
  0001f	75 11		 jne	 SHORT $LN8@StartServi
$LN7@StartServi:
  00021	6a 2a		 push	 42			; 0000002aH
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00028	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0002d	85 c0		 test	 eax, eax
  0002f	74 01		 je	 SHORT $LN8@StartServi
  00031	cc		 int	 3
$LN8@StartServi:

; 43   :     if ((m_pITCPNetworkEngine == NULL) || (m_pIAttemperEngineSink == NULL))

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	83 b8 a8 40 00
	00 00		 cmp	 DWORD PTR [eax+16552], 0
  0003c	74 0c		 je	 SHORT $LN3@StartServi
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	83 b9 ac 40 00
	00 00		 cmp	 DWORD PTR [ecx+16556], 0
  00048	75 04		 jne	 SHORT $LN2@StartServi
$LN3@StartServi:

; 44   :         return false;

  0004a	32 c0		 xor	 al, al
  0004c	eb 6d		 jmp	 SHORT $LN1@StartServi
$LN2@StartServi:

; 45   : 
; 46   :     // 注册对象
; 47   :     IUnknownEx * pIAsynchronismEngineSink = QUERY_ME_INTERFACE(IUnknownEx);

  0004e	68 00 01 01 06	 push	 100729088		; 06010100H
  00053	68 00 00 00 00	 push	 OFFSET ?IID_IUnknownEx@@3U_GUID@@B
  00058	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005b	8b 02		 mov	 eax, DWORD PTR [edx]
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00063	ff d2		 call	 edx
  00065	89 45 f8	 mov	 DWORD PTR _pIAsynchronismEngineSink$[ebp], eax

; 48   :     if (m_AsynchronismEngine.SetAsynchronismSink(pIAsynchronismEngineSink) == false)

  00068	8b 45 f8	 mov	 eax, DWORD PTR _pIAsynchronismEngineSink$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00072	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00075	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00078	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  0007b	ff d2		 call	 edx
  0007d	0f b6 c0	 movzx	 eax, al
  00080	85 c0		 test	 eax, eax
  00082	75 19		 jne	 SHORT $LN4@StartServi

; 49   :     {
; 50   :         ASSERT(FALSE);

  00084	33 c9		 xor	 ecx, ecx
  00086	75 11		 jne	 SHORT $LN9@StartServi
  00088	6a 32		 push	 50			; 00000032H
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@ODJMJEDM@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  0008f	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00094	85 c0		 test	 eax, eax
  00096	74 01		 je	 SHORT $LN9@StartServi
  00098	cc		 int	 3
$LN9@StartServi:

; 51   :         return false;

  00099	32 c0		 xor	 al, al
  0009b	eb 1e		 jmp	 SHORT $LN1@StartServi
$LN4@StartServi:

; 52   :     }
; 53   : 
; 54   :     // 异步引擎
; 55   :     if (m_AsynchronismEngine.StartService() == false)

  0009d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	83 c1 3c	 add	 ecx, 60			; 0000003cH
  000a3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a6	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  000a9	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000ac	ff d0		 call	 eax
  000ae	0f b6 c8	 movzx	 ecx, al
  000b1	85 c9		 test	 ecx, ecx
  000b3	75 04		 jne	 SHORT $LN5@StartServi

; 56   :         return false;

  000b5	32 c0		 xor	 al, al
  000b7	eb 02		 jmp	 SHORT $LN1@StartServi
$LN5@StartServi:

; 57   : 
; 58   :     return true;

  000b9	b0 01		 mov	 al, 1
$LN1@StartServi:

; 59   : }

  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c3		 ret	 0
?StartService@CAttemperEngine@@UAE_NXZ ENDP		; CAttemperEngine::StartService
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?QueryInterface@CAttemperEngine@@UAEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
tv336 = -108						; size = 4
tv319 = -104						; size = 4
tv302 = -100						; size = 4
tv285 = -96						; size = 4
tv268 = -92						; size = 4
tv251 = -88						; size = 4
tv218 = -84						; size = 4
tv324 = -80						; size = 4
tv335 = -76						; size = 4
tv188 = -72						; size = 4
tv307 = -68						; size = 4
tv318 = -64						; size = 4
tv172 = -60						; size = 4
tv290 = -56						; size = 4
tv301 = -52						; size = 4
tv156 = -48						; size = 4
tv273 = -44						; size = 4
tv284 = -40						; size = 4
tv140 = -36						; size = 4
tv256 = -32						; size = 4
tv267 = -28						; size = 4
tv92 = -24						; size = 4
tv239 = -20						; size = 4
tv250 = -16						; size = 4
tv212 = -12						; size = 4
tv220 = -8						; size = 4
_this$ = -4						; size = 4
_Guid$ = 8						; size = 4
_dwQueryVer$ = 12					; size = 4
?QueryInterface@CAttemperEngine@@UAEPAXABU_GUID@@K@Z PROC ; CAttemperEngine::QueryInterface, COMDAT
; _this$ = ecx

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00009	6a 10		 push	 16			; 00000010H
  0000b	68 00 00 00 00	 push	 OFFSET ?IID_IAttemperEngine@@3U_GUID@@B
  00010	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memcmp
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	89 45 ac	 mov	 DWORD PTR tv218[ebp], eax
  0001f	83 7d ac 00	 cmp	 DWORD PTR tv218[ebp], 0
  00023	75 09		 jne	 SHORT $LN26@QueryInter
  00025	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv220[ebp], 1
  0002c	eb 07		 jmp	 SHORT $LN24@QueryInter
$LN26@QueryInter:
  0002e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv220[ebp], 0
$LN24@QueryInter:

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  00035	83 7d f8 00	 cmp	 DWORD PTR tv220[ebp], 0
  00039	74 09		 je	 SHORT $LN22@QueryInter
  0003b	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv212[ebp], 1
  00042	eb 07		 jmp	 SHORT $LN20@QueryInter
$LN22@QueryInter:
  00044	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv212[ebp], 0
$LN20@QueryInter:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp

; 28   :     QUERYINTERFACE(IAttemperEngine, Guid, dwQueryVer);

  0004b	0f b6 4d f4	 movzx	 ecx, BYTE PTR tv212[ebp]
  0004f	85 c9		 test	 ecx, ecx
  00051	74 20		 je	 SHORT $LN2@QueryInter
  00053	68 00 01 01 06	 push	 100729088		; 06010100H
  00058	8b 55 0c	 mov	 edx, DWORD PTR _dwQueryVer$[ebp]
  0005b	52		 push	 edx
  0005c	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00061	83 c4 08	 add	 esp, 8
  00064	0f b6 c0	 movzx	 eax, al
  00067	85 c0		 test	 eax, eax
  00069	74 08		 je	 SHORT $LN2@QueryInter
  0006b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	e9 f0 02 00 00	 jmp	 $LN1@QueryInter
$LN2@QueryInter:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00073	6a 10		 push	 16			; 00000010H
  00075	68 00 00 00 00	 push	 OFFSET ?IID_ITCPSocketEvent@@3U_GUID@@B
  0007a	8b 4d 08	 mov	 ecx, DWORD PTR _Guid$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 _memcmp
  00083	83 c4 0c	 add	 esp, 12			; 0000000cH
  00086	89 45 a8	 mov	 DWORD PTR tv251[ebp], eax
  00089	83 7d a8 00	 cmp	 DWORD PTR tv251[ebp], 0
  0008d	75 09		 jne	 SHORT $LN56@QueryInter
  0008f	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv250[ebp], 1
  00096	eb 07		 jmp	 SHORT $LN54@QueryInter
$LN56@QueryInter:
  00098	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv250[ebp], 0
$LN54@QueryInter:

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  0009f	83 7d f0 00	 cmp	 DWORD PTR tv250[ebp], 0
  000a3	74 09		 je	 SHORT $LN52@QueryInter
  000a5	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv239[ebp], 1
  000ac	eb 07		 jmp	 SHORT $LN50@QueryInter
$LN52@QueryInter:
  000ae	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv239[ebp], 0
$LN50@QueryInter:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp

; 29   :     QUERYINTERFACE(ITCPSocketEvent, Guid, dwQueryVer);

  000b5	0f b6 55 ec	 movzx	 edx, BYTE PTR tv239[ebp]
  000b9	85 d2		 test	 edx, edx
  000bb	74 38		 je	 SHORT $LN3@QueryInter
  000bd	68 00 01 01 06	 push	 100729088		; 06010100H
  000c2	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  000cb	83 c4 08	 add	 esp, 8
  000ce	0f b6 c8	 movzx	 ecx, al
  000d1	85 c9		 test	 ecx, ecx
  000d3	74 20		 je	 SHORT $LN3@QueryInter
  000d5	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  000d9	74 0b		 je	 SHORT $LN10@QueryInter
  000db	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000de	83 c2 10	 add	 edx, 16			; 00000010H
  000e1	89 55 e8	 mov	 DWORD PTR tv92[ebp], edx
  000e4	eb 07		 jmp	 SHORT $LN11@QueryInter
$LN10@QueryInter:
  000e6	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv92[ebp], 0
$LN11@QueryInter:
  000ed	8b 45 e8	 mov	 eax, DWORD PTR tv92[ebp]
  000f0	e9 6e 02 00 00	 jmp	 $LN1@QueryInter
$LN3@QueryInter:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  000f5	6a 10		 push	 16			; 00000010H
  000f7	68 00 00 00 00	 push	 OFFSET ?IID_ITimerEngineEvent@@3U_GUID@@B
  000fc	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  000ff	50		 push	 eax
  00100	e8 00 00 00 00	 call	 _memcmp
  00105	83 c4 0c	 add	 esp, 12			; 0000000cH
  00108	89 45 a4	 mov	 DWORD PTR tv268[ebp], eax
  0010b	83 7d a4 00	 cmp	 DWORD PTR tv268[ebp], 0
  0010f	75 09		 jne	 SHORT $LN86@QueryInter
  00111	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv267[ebp], 1
  00118	eb 07		 jmp	 SHORT $LN84@QueryInter
$LN86@QueryInter:
  0011a	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv267[ebp], 0
$LN84@QueryInter:

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  00121	83 7d e4 00	 cmp	 DWORD PTR tv267[ebp], 0
  00125	74 09		 je	 SHORT $LN82@QueryInter
  00127	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR tv256[ebp], 1
  0012e	eb 07		 jmp	 SHORT $LN80@QueryInter
$LN82@QueryInter:
  00130	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR tv256[ebp], 0
$LN80@QueryInter:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp

; 30   :     QUERYINTERFACE(ITimerEngineEvent, Guid, dwQueryVer);

  00137	0f b6 4d e0	 movzx	 ecx, BYTE PTR tv256[ebp]
  0013b	85 c9		 test	 ecx, ecx
  0013d	74 38		 je	 SHORT $LN4@QueryInter
  0013f	68 00 01 01 06	 push	 100729088		; 06010100H
  00144	8b 55 0c	 mov	 edx, DWORD PTR _dwQueryVer$[ebp]
  00147	52		 push	 edx
  00148	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  0014d	83 c4 08	 add	 esp, 8
  00150	0f b6 c0	 movzx	 eax, al
  00153	85 c0		 test	 eax, eax
  00155	74 20		 je	 SHORT $LN4@QueryInter
  00157	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0015b	74 0b		 je	 SHORT $LN12@QueryInter
  0015d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00163	89 4d dc	 mov	 DWORD PTR tv140[ebp], ecx
  00166	eb 07		 jmp	 SHORT $LN13@QueryInter
$LN12@QueryInter:
  00168	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN13@QueryInter:
  0016f	8b 45 dc	 mov	 eax, DWORD PTR tv140[ebp]
  00172	e9 ec 01 00 00	 jmp	 $LN1@QueryInter
$LN4@QueryInter:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00177	6a 10		 push	 16			; 00000010H
  00179	68 00 00 00 00	 push	 OFFSET ?IID_IDataBaseEngineEvent@@3U_GUID@@B
  0017e	8b 55 08	 mov	 edx, DWORD PTR _Guid$[ebp]
  00181	52		 push	 edx
  00182	e8 00 00 00 00	 call	 _memcmp
  00187	83 c4 0c	 add	 esp, 12			; 0000000cH
  0018a	89 45 a0	 mov	 DWORD PTR tv285[ebp], eax
  0018d	83 7d a0 00	 cmp	 DWORD PTR tv285[ebp], 0
  00191	75 09		 jne	 SHORT $LN116@QueryInter
  00193	c7 45 d8 01 00
	00 00		 mov	 DWORD PTR tv284[ebp], 1
  0019a	eb 07		 jmp	 SHORT $LN114@QueryInter
$LN116@QueryInter:
  0019c	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR tv284[ebp], 0
$LN114@QueryInter:

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  001a3	83 7d d8 00	 cmp	 DWORD PTR tv284[ebp], 0
  001a7	74 09		 je	 SHORT $LN112@QueryInter
  001a9	c7 45 d4 01 00
	00 00		 mov	 DWORD PTR tv273[ebp], 1
  001b0	eb 07		 jmp	 SHORT $LN110@QueryInter
$LN112@QueryInter:
  001b2	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR tv273[ebp], 0
$LN110@QueryInter:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp

; 31   :     QUERYINTERFACE(IDataBaseEngineEvent, Guid, dwQueryVer);

  001b9	0f b6 45 d4	 movzx	 eax, BYTE PTR tv273[ebp]
  001bd	85 c0		 test	 eax, eax
  001bf	74 38		 je	 SHORT $LN5@QueryInter
  001c1	68 00 01 01 06	 push	 100729088		; 06010100H
  001c6	8b 4d 0c	 mov	 ecx, DWORD PTR _dwQueryVer$[ebp]
  001c9	51		 push	 ecx
  001ca	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  001cf	83 c4 08	 add	 esp, 8
  001d2	0f b6 d0	 movzx	 edx, al
  001d5	85 d2		 test	 edx, edx
  001d7	74 20		 je	 SHORT $LN5@QueryInter
  001d9	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  001dd	74 0b		 je	 SHORT $LN14@QueryInter
  001df	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001e2	83 c0 08	 add	 eax, 8
  001e5	89 45 d0	 mov	 DWORD PTR tv156[ebp], eax
  001e8	eb 07		 jmp	 SHORT $LN15@QueryInter
$LN14@QueryInter:
  001ea	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR tv156[ebp], 0
$LN15@QueryInter:
  001f1	8b 45 d0	 mov	 eax, DWORD PTR tv156[ebp]
  001f4	e9 6a 01 00 00	 jmp	 $LN1@QueryInter
$LN5@QueryInter:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  001f9	6a 10		 push	 16			; 00000010H
  001fb	68 00 00 00 00	 push	 OFFSET ?IID_ITCPNetworkEngineEvent@@3U_GUID@@B
  00200	8b 4d 08	 mov	 ecx, DWORD PTR _Guid$[ebp]
  00203	51		 push	 ecx
  00204	e8 00 00 00 00	 call	 _memcmp
  00209	83 c4 0c	 add	 esp, 12			; 0000000cH
  0020c	89 45 9c	 mov	 DWORD PTR tv302[ebp], eax
  0020f	83 7d 9c 00	 cmp	 DWORD PTR tv302[ebp], 0
  00213	75 09		 jne	 SHORT $LN146@QueryInter
  00215	c7 45 cc 01 00
	00 00		 mov	 DWORD PTR tv301[ebp], 1
  0021c	eb 07		 jmp	 SHORT $LN144@QueryInter
$LN146@QueryInter:
  0021e	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR tv301[ebp], 0
$LN144@QueryInter:

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  00225	83 7d cc 00	 cmp	 DWORD PTR tv301[ebp], 0
  00229	74 09		 je	 SHORT $LN142@QueryInter
  0022b	c7 45 c8 01 00
	00 00		 mov	 DWORD PTR tv290[ebp], 1
  00232	eb 07		 jmp	 SHORT $LN140@QueryInter
$LN142@QueryInter:
  00234	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR tv290[ebp], 0
$LN140@QueryInter:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp

; 32   :     QUERYINTERFACE(ITCPNetworkEngineEvent, Guid, dwQueryVer);

  0023b	0f b6 55 c8	 movzx	 edx, BYTE PTR tv290[ebp]
  0023f	85 d2		 test	 edx, edx
  00241	74 38		 je	 SHORT $LN6@QueryInter
  00243	68 00 01 01 06	 push	 100729088		; 06010100H
  00248	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  0024b	50		 push	 eax
  0024c	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00251	83 c4 08	 add	 esp, 8
  00254	0f b6 c8	 movzx	 ecx, al
  00257	85 c9		 test	 ecx, ecx
  00259	74 20		 je	 SHORT $LN6@QueryInter
  0025b	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  0025f	74 0b		 je	 SHORT $LN16@QueryInter
  00261	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00264	83 c2 14	 add	 edx, 20			; 00000014H
  00267	89 55 c4	 mov	 DWORD PTR tv172[ebp], edx
  0026a	eb 07		 jmp	 SHORT $LN17@QueryInter
$LN16@QueryInter:
  0026c	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR tv172[ebp], 0
$LN17@QueryInter:
  00273	8b 45 c4	 mov	 eax, DWORD PTR tv172[ebp]
  00276	e9 e8 00 00 00	 jmp	 $LN1@QueryInter
$LN6@QueryInter:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  0027b	6a 10		 push	 16			; 00000010H
  0027d	68 00 00 00 00	 push	 OFFSET ?IID_IAsynchronismEngineSink@@3U_GUID@@B
  00282	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 _memcmp
  0028b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0028e	89 45 98	 mov	 DWORD PTR tv319[ebp], eax
  00291	83 7d 98 00	 cmp	 DWORD PTR tv319[ebp], 0
  00295	75 09		 jne	 SHORT $LN176@QueryInter
  00297	c7 45 c0 01 00
	00 00		 mov	 DWORD PTR tv318[ebp], 1
  0029e	eb 07		 jmp	 SHORT $LN174@QueryInter
$LN176@QueryInter:
  002a0	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR tv318[ebp], 0
$LN174@QueryInter:

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  002a7	83 7d c0 00	 cmp	 DWORD PTR tv318[ebp], 0
  002ab	74 09		 je	 SHORT $LN172@QueryInter
  002ad	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv307[ebp], 1
  002b4	eb 07		 jmp	 SHORT $LN170@QueryInter
$LN172@QueryInter:
  002b6	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv307[ebp], 0
$LN170@QueryInter:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp

; 33   :     QUERYINTERFACE(IAsynchronismEngineSink, Guid, dwQueryVer);

  002bd	0f b6 4d bc	 movzx	 ecx, BYTE PTR tv307[ebp]
  002c1	85 c9		 test	 ecx, ecx
  002c3	74 35		 je	 SHORT $LN7@QueryInter
  002c5	68 00 01 01 06	 push	 100729088		; 06010100H
  002ca	8b 55 0c	 mov	 edx, DWORD PTR _dwQueryVer$[ebp]
  002cd	52		 push	 edx
  002ce	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  002d3	83 c4 08	 add	 esp, 8
  002d6	0f b6 c0	 movzx	 eax, al
  002d9	85 c0		 test	 eax, eax
  002db	74 1d		 je	 SHORT $LN7@QueryInter
  002dd	83 7d fc 00	 cmp	 DWORD PTR _this$[ebp], 0
  002e1	74 0b		 je	 SHORT $LN18@QueryInter
  002e3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e6	83 c1 04	 add	 ecx, 4
  002e9	89 4d b8	 mov	 DWORD PTR tv188[ebp], ecx
  002ec	eb 07		 jmp	 SHORT $LN19@QueryInter
$LN18@QueryInter:
  002ee	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv188[ebp], 0
$LN19@QueryInter:
  002f5	8b 45 b8	 mov	 eax, DWORD PTR tv188[ebp]
  002f8	eb 69		 jmp	 SHORT $LN1@QueryInter
$LN7@QueryInter:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  002fa	6a 10		 push	 16			; 00000010H
  002fc	68 00 00 00 00	 push	 OFFSET ?IID_IUnknownEx@@3U_GUID@@B
  00301	8b 55 08	 mov	 edx, DWORD PTR _Guid$[ebp]
  00304	52		 push	 edx
  00305	e8 00 00 00 00	 call	 _memcmp
  0030a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0030d	89 45 94	 mov	 DWORD PTR tv336[ebp], eax
  00310	83 7d 94 00	 cmp	 DWORD PTR tv336[ebp], 0
  00314	75 09		 jne	 SHORT $LN206@QueryInter
  00316	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR tv335[ebp], 1
  0031d	eb 07		 jmp	 SHORT $LN204@QueryInter
$LN206@QueryInter:
  0031f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv335[ebp], 0
$LN204@QueryInter:

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  00326	83 7d b4 00	 cmp	 DWORD PTR tv335[ebp], 0
  0032a	74 09		 je	 SHORT $LN202@QueryInter
  0032c	c7 45 b0 01 00
	00 00		 mov	 DWORD PTR tv324[ebp], 1
  00333	eb 07		 jmp	 SHORT $LN200@QueryInter
$LN202@QueryInter:
  00335	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv324[ebp], 0
$LN200@QueryInter:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp

; 34   :     QUERYINTERFACE_IUNKNOWNEX(IAttemperEngine, Guid, dwQueryVer);

  0033c	0f b6 45 b0	 movzx	 eax, BYTE PTR tv324[ebp]
  00340	85 c0		 test	 eax, eax
  00342	74 1d		 je	 SHORT $LN8@QueryInter
  00344	68 00 01 01 06	 push	 100729088		; 06010100H
  00349	8b 4d 0c	 mov	 ecx, DWORD PTR _dwQueryVer$[ebp]
  0034c	51		 push	 ecx
  0034d	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00352	83 c4 08	 add	 esp, 8
  00355	0f b6 d0	 movzx	 edx, al
  00358	85 d2		 test	 edx, edx
  0035a	74 05		 je	 SHORT $LN8@QueryInter
  0035c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0035f	eb 02		 jmp	 SHORT $LN1@QueryInter
$LN8@QueryInter:

; 35   :     return NULL;

  00361	33 c0		 xor	 eax, eax
$LN1@QueryInter:

; 36   : }

  00363	8b e5		 mov	 esp, ebp
  00365	5d		 pop	 ebp
  00366	c2 08 00	 ret	 8
?QueryInterface@CAttemperEngine@@UAEPAXABU_GUID@@K@Z ENDP ; CAttemperEngine::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.h
;	COMDAT ?Release@CAttemperEngine@@UAEXXZ
_TEXT	SEGMENT
tv70 = -16						; size = 4
$T1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -4						; size = 4
?Release@CAttemperEngine@@UAEXXZ PROC			; CAttemperEngine::Release, COMDAT
; _this$ = ecx

; 40   :     virtual VOID Release() { delete this; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  0000f	8b 4d f4	 mov	 ecx, DWORD PTR $T1[ebp]
  00012	89 4d fc	 mov	 DWORD PTR $T2[ebp], ecx
  00015	83 7d fc 00	 cmp	 DWORD PTR $T2[ebp], 0
  00019	74 14		 je	 SHORT $LN3@Release
  0001b	6a 01		 push	 1
  0001d	8b 55 fc	 mov	 edx, DWORD PTR $T2[ebp]
  00020	8b 02		 mov	 eax, DWORD PTR [edx]
  00022	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]
  00025	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00028	ff d2		 call	 edx
  0002a	89 45 f0	 mov	 DWORD PTR tv70[ebp], eax
  0002d	eb 07		 jmp	 SHORT $LN1@Release
$LN3@Release:
  0002f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN1@Release:
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?Release@CAttemperEngine@@UAEXXZ ENDP			; CAttemperEngine::Release
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ??1CAttemperEngine@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAttemperEngine@@UAE@XZ PROC				; CAttemperEngine::~CAttemperEngine, COMDAT
; _this$ = ecx

; 22   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAttemperEngine@@6BIAttemperEngine@@@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_7CAttemperEngine@@6BIAsynchronismEngineSink@@@
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], OFFSET ??_7CAttemperEngine@@6BIDataBaseEngineEvent@@@
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CAttemperEngine@@6BITimerEngineEvent@@@
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], OFFSET ??_7CAttemperEngine@@6BITCPSocketEvent@@@
  00038	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], OFFSET ??_7CAttemperEngine@@6BITCPNetworkEngineEvent@@@

; 23   : }

  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00048	e8 00 00 00 00	 call	 ??1CAsynchronismEngine@@UAE@XZ ; CAsynchronismEngine::~CAsynchronismEngine
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	83 c1 18	 add	 ecx, 24			; 00000018H
  00053	e8 00 00 00 00	 call	 ??1CCriticalSection@@UAE@XZ ; CCriticalSection::~CCriticalSection
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
??1CAttemperEngine@@UAE@XZ ENDP				; CAttemperEngine::~CAttemperEngine
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ??0CAttemperEngine@@QAE@XZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
_this$ = -32						; size = 4
_this$ = -28						; size = 4
_this$ = -24						; size = 4
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CAttemperEngine@@QAE@XZ PROC				; CAttemperEngine::CAttemperEngine, COMDAT
; _this$ = ecx

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CAttemperEngine@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00031	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IServiceModule@@6B@
  0003a	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7IAttemperEngine@@6B@
  00043	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00046	83 c0 04	 add	 eax, 4
  00049	89 45 ec	 mov	 DWORD PTR _this$[ebp], eax
  0004c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IUnknownEx@@6B@
  00055	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00058	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7IAsynchronismEngineSink@@6B@
  0005e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00061	83 c0 08	 add	 eax, 8
  00064	89 45 e8	 mov	 DWORD PTR _this$[ebp], eax
  00067	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IUnknownEx@@6B@
  00070	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00073	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7IDataBaseEngineEvent@@6B@
  00079	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	83 c0 0c	 add	 eax, 12			; 0000000cH
  0007f	89 45 e4	 mov	 DWORD PTR _this$[ebp], eax
  00082	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IUnknownEx@@6B@
  0008b	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  0008e	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7ITimerEngineEvent@@6B@
  00094	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00097	83 c0 10	 add	 eax, 16			; 00000010H
  0009a	89 45 e0	 mov	 DWORD PTR _this$[ebp], eax
  0009d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IUnknownEx@@6B@
  000a6	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  000a9	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7ITCPSocketEvent@@6B@
  000af	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000b2	83 c0 14	 add	 eax, 20			; 00000014H
  000b5	89 45 dc	 mov	 DWORD PTR _this$[ebp], eax
  000b8	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IUnknownEx@@6B@
  000c1	8b 55 dc	 mov	 edx, DWORD PTR _this$[ebp]
  000c4	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7ITCPNetworkEngineEvent@@6B@
  000ca	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000cd	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAttemperEngine@@6BIAttemperEngine@@@
  000d3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_7CAttemperEngine@@6BIAsynchronismEngineSink@@@
  000dd	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000e0	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], OFFSET ??_7CAttemperEngine@@6BIDataBaseEngineEvent@@@
  000e7	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000ea	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CAttemperEngine@@6BITimerEngineEvent@@@
  000f1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], OFFSET ??_7CAttemperEngine@@6BITCPSocketEvent@@@
  000fb	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000fe	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], OFFSET ??_7CAttemperEngine@@6BITCPNetworkEngineEvent@@@
  00105	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00108	83 c1 18	 add	 ecx, 24			; 00000018H
  0010b	e8 00 00 00 00	 call	 ??0CCriticalSection@@QAE@XZ ; CCriticalSection::CCriticalSection
  00110	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00117	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011a	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0011d	e8 00 00 00 00	 call	 ??0CAsynchronismEngine@@QAE@XZ ; CAsynchronismEngine::CAsynchronismEngine

; 10   :     // 接口变量
; 11   :     m_pITCPNetworkEngine = NULL;

  00122	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00125	c7 80 a8 40 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+16552], 0

; 12   :     m_pIAttemperEngineSink = NULL;

  0012f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00132	c7 81 ac 40 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+16556], 0

; 13   : 
; 14   :     // 辅助变量
; 15   :     ZeroMemory(m_cbBuffer, sizeof(m_cbBuffer));

  0013c	68 00 40 00 00	 push	 16384			; 00004000H
  00141	6a 00		 push	 0
  00143	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00146	81 c2 b0 40 00
	00		 add	 edx, 16560		; 000040b0H
  0014c	52		 push	 edx
  0014d	e8 00 00 00 00	 call	 _memset
  00152	83 c4 0c	 add	 esp, 12			; 0000000cH

; 16   : 
; 17   :     return;
; 18   : }

  00155	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0015c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0015f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00162	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00169	59		 pop	 ecx
  0016a	8b e5		 mov	 esp, ebp
  0016c	5d		 pop	 ebp
  0016d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CAttemperEngine@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 18	 add	 ecx, 24			; 00000018H
  00006	e9 00 00 00 00	 jmp	 ??1CCriticalSection@@UAE@XZ ; CCriticalSection::~CCriticalSection
__ehhandler$??0CAttemperEngine@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CAttemperEngine@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CAttemperEngine@@QAE@XZ ENDP				; CAttemperEngine::CAttemperEngine
; Function compile flags: /Odtp
;	COMDAT ??0IAttemperEngine@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IAttemperEngine@@QAE@XZ PROC				; IAttemperEngine::IAttemperEngine, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IServiceModule@@6B@
  00019	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001c	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7IAttemperEngine@@6B@
  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??0IAttemperEngine@@QAE@XZ ENDP				; IAttemperEngine::IAttemperEngine
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ITCPNetworkEngineEvent@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ITCPNetworkEngineEvent@@QAE@XZ PROC			; ITCPNetworkEngineEvent::ITCPNetworkEngineEvent, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ITCPNetworkEngineEvent@@6B@
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??0ITCPNetworkEngineEvent@@QAE@XZ ENDP			; ITCPNetworkEngineEvent::ITCPNetworkEngineEvent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ITCPSocketEvent@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ITCPSocketEvent@@QAE@XZ PROC				; ITCPSocketEvent::ITCPSocketEvent, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ITCPSocketEvent@@6B@
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??0ITCPSocketEvent@@QAE@XZ ENDP				; ITCPSocketEvent::ITCPSocketEvent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0IDataBaseEngineEvent@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IDataBaseEngineEvent@@QAE@XZ PROC			; IDataBaseEngineEvent::IDataBaseEngineEvent, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IDataBaseEngineEvent@@6B@
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??0IDataBaseEngineEvent@@QAE@XZ ENDP			; IDataBaseEngineEvent::IDataBaseEngineEvent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ITimerEngineEvent@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ITimerEngineEvent@@QAE@XZ PROC			; ITimerEngineEvent::ITimerEngineEvent, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ITimerEngineEvent@@6B@
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??0ITimerEngineEvent@@QAE@XZ ENDP			; ITimerEngineEvent::ITimerEngineEvent
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0IAsynchronismEngineSink@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IAsynchronismEngineSink@@QAE@XZ PROC			; IAsynchronismEngineSink::IAsynchronismEngineSink, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IAsynchronismEngineSink@@6B@
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??0IAsynchronismEngineSink@@QAE@XZ ENDP			; IAsynchronismEngineSink::IAsynchronismEngineSink
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0IServiceModule@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IServiceModule@@QAE@XZ PROC				; IServiceModule::IServiceModule, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IServiceModule@@6B@
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??0IServiceModule@@QAE@XZ ENDP				; IServiceModule::IServiceModule
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
_this$ = -52						; size = 4
$T1 = -48						; size = 44
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00015	8d 45 d0	 lea	 eax, DWORD PTR $T1[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00022	8b 7d cc	 mov	 edi, DWORD PTR _this$[ebp]
  00025	83 c7 18	 add	 edi, 24			; 00000018H
  00028	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002d	8b f0		 mov	 esi, eax
  0002f	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00031	b9 01 00 00 00	 mov	 ecx, 1
  00036	85 c9		 test	 ecx, ecx
  00038	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00052	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00061	83 c4 04	 add	 esp, 4
  00064	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  0006f	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00074	83 c4 04	 add	 esp, 4
  00077	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  0007a	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 224  : 			}
; 225  : 		else

  0007d	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  0007f	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00082	83 c0 18	 add	 eax, 24			; 00000018H
  00085	50		 push	 eax
  00086	6a 00		 push	 0
  00088	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a0	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  000a3	83 c2 18	 add	 edx, 24			; 00000018H
  000a6	52		 push	 edx
  000a7	6a 00		 push	 0
  000a9	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bb	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c1	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  000c4	83 c2 18	 add	 edx, 24			; 00000018H
  000c7	52		 push	 edx
  000c8	6a 00		 push	 0
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000cf	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d7	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e2	33 cd		 xor	 ecx, ebp
  000e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
_this$ = -52						; size = 4
$T1 = -48						; size = 44
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00015	8d 45 d0	 lea	 eax, DWORD PTR $T1[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00022	8b 7d cc	 mov	 edi, DWORD PTR _this$[ebp]
  00025	83 c7 18	 add	 edi, 24			; 00000018H
  00028	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002d	8b f0		 mov	 esi, eax
  0002f	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00031	b9 01 00 00 00	 mov	 ecx, 1
  00036	85 c9		 test	 ecx, ecx
  00038	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00052	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00061	83 c4 04	 add	 esp, 4
  00064	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  0006f	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00074	83 c4 04	 add	 esp, 4
  00077	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  0007a	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 224  : 			}
; 225  : 		else

  0007d	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  0007f	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00082	83 c0 18	 add	 eax, 24			; 00000018H
  00085	50		 push	 eax
  00086	6a 00		 push	 0
  00088	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a0	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  000a3	83 c2 18	 add	 edx, 24			; 00000018H
  000a6	52		 push	 edx
  000a7	6a 00		 push	 0
  000a9	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bb	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c1	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  000c4	83 c2 18	 add	 edx, 24			; 00000018H
  000c7	52		 push	 edx
  000c8	6a 00		 push	 0
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000cf	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d7	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e2	33 cd		 xor	 ecx, ebp
  000e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?InterfaceVersionCompare@@YA_NKK@Z
_TEXT	SEGMENT
_dwVersion$ = -40					; size = 4
_dwVersion$ = -36					; size = 4
_dwVersion$ = -32					; size = 4
_dwVersion$ = -28					; size = 4
_dwVersion$ = -24					; size = 4
_dwVersion$ = -20					; size = 4
_dwVersion$ = -16					; size = 4
_dwVersion$ = -12					; size = 4
$T1 = -8						; size = 1
$T2 = -7						; size = 1
$T3 = -6						; size = 1
$T4 = -5						; size = 1
$T5 = -4						; size = 1
$T6 = -3						; size = 1
$T7 = -2						; size = 1
$T8 = -1						; size = 1
_dwQueryVer$ = 8					; size = 4
_dwInterfaceVer$ = 12					; size = 4
?InterfaceVersionCompare@@YA_NKK@Z PROC			; InterfaceVersionCompare, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H

; 69   : 	if (GetSubVer(dwQueryVer)>GetSubVer(dwInterfaceVer)) return false;

  00006	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00009	89 45 f4	 mov	 DWORD PTR _dwVersion$[ebp], eax

; 57   : 	return ((BYTE *)&dwVersion)[1];

  0000c	b9 01 00 00 00	 mov	 ecx, 1
  00011	c1 e1 00	 shl	 ecx, 0
  00014	8a 54 0d f4	 mov	 dl, BYTE PTR _dwVersion$[ebp+ecx]
  00018	88 55 ff	 mov	 BYTE PTR $T8[ebp], dl

; 69   : 	if (GetSubVer(dwQueryVer)>GetSubVer(dwInterfaceVer)) return false;

  0001b	8b 45 0c	 mov	 eax, DWORD PTR _dwInterfaceVer$[ebp]
  0001e	89 45 f0	 mov	 DWORD PTR _dwVersion$[ebp], eax

; 57   : 	return ((BYTE *)&dwVersion)[1];

  00021	b9 01 00 00 00	 mov	 ecx, 1
  00026	c1 e1 00	 shl	 ecx, 0
  00029	8a 54 0d f0	 mov	 dl, BYTE PTR _dwVersion$[ebp+ecx]
  0002d	88 55 fe	 mov	 BYTE PTR $T7[ebp], dl

; 69   : 	if (GetSubVer(dwQueryVer)>GetSubVer(dwInterfaceVer)) return false;

  00030	0f b6 45 ff	 movzx	 eax, BYTE PTR $T8[ebp]
  00034	0f b6 4d fe	 movzx	 ecx, BYTE PTR $T7[ebp]
  00038	3b c1		 cmp	 eax, ecx
  0003a	7e 07		 jle	 SHORT $LN2@InterfaceV
  0003c	32 c0		 xor	 al, al
  0003e	e9 ae 00 00 00	 jmp	 $LN1@InterfaceV
$LN2@InterfaceV:

; 70   : 	if (GetMainVer(dwQueryVer)!=GetMainVer(dwInterfaceVer)) return false;

  00043	8b 55 08	 mov	 edx, DWORD PTR _dwQueryVer$[ebp]
  00046	89 55 ec	 mov	 DWORD PTR _dwVersion$[ebp], edx

; 51   : 	return ((BYTE *)&dwVersion)[2];

  00049	b8 01 00 00 00	 mov	 eax, 1
  0004e	d1 e0		 shl	 eax, 1
  00050	8a 4c 05 ec	 mov	 cl, BYTE PTR _dwVersion$[ebp+eax]
  00054	88 4d fd	 mov	 BYTE PTR $T6[ebp], cl

; 70   : 	if (GetMainVer(dwQueryVer)!=GetMainVer(dwInterfaceVer)) return false;

  00057	8b 55 0c	 mov	 edx, DWORD PTR _dwInterfaceVer$[ebp]
  0005a	89 55 e8	 mov	 DWORD PTR _dwVersion$[ebp], edx

; 51   : 	return ((BYTE *)&dwVersion)[2];

  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	d1 e0		 shl	 eax, 1
  00064	8a 4c 05 e8	 mov	 cl, BYTE PTR _dwVersion$[ebp+eax]
  00068	88 4d fc	 mov	 BYTE PTR $T5[ebp], cl

; 70   : 	if (GetMainVer(dwQueryVer)!=GetMainVer(dwInterfaceVer)) return false;

  0006b	0f b6 55 fd	 movzx	 edx, BYTE PTR $T6[ebp]
  0006f	0f b6 45 fc	 movzx	 eax, BYTE PTR $T5[ebp]
  00073	3b d0		 cmp	 edx, eax
  00075	74 04		 je	 SHORT $LN3@InterfaceV
  00077	32 c0		 xor	 al, al
  00079	eb 76		 jmp	 SHORT $LN1@InterfaceV
$LN3@InterfaceV:

; 71   : 	if (GetBuildVer(dwQueryVer)!=GetBuildVer(dwInterfaceVer)) return false;

  0007b	8b 4d 08	 mov	 ecx, DWORD PTR _dwQueryVer$[ebp]
  0007e	89 4d e4	 mov	 DWORD PTR _dwVersion$[ebp], ecx

; 63   : 	return ((BYTE *)&dwVersion)[0];

  00081	ba 01 00 00 00	 mov	 edx, 1
  00086	6b c2 00	 imul	 eax, edx, 0
  00089	8a 4c 05 e4	 mov	 cl, BYTE PTR _dwVersion$[ebp+eax]
  0008d	88 4d fb	 mov	 BYTE PTR $T4[ebp], cl

; 71   : 	if (GetBuildVer(dwQueryVer)!=GetBuildVer(dwInterfaceVer)) return false;

  00090	8b 55 0c	 mov	 edx, DWORD PTR _dwInterfaceVer$[ebp]
  00093	89 55 e0	 mov	 DWORD PTR _dwVersion$[ebp], edx

; 63   : 	return ((BYTE *)&dwVersion)[0];

  00096	b8 01 00 00 00	 mov	 eax, 1
  0009b	6b c8 00	 imul	 ecx, eax, 0
  0009e	8a 54 0d e0	 mov	 dl, BYTE PTR _dwVersion$[ebp+ecx]
  000a2	88 55 fa	 mov	 BYTE PTR $T3[ebp], dl

; 71   : 	if (GetBuildVer(dwQueryVer)!=GetBuildVer(dwInterfaceVer)) return false;

  000a5	0f b6 45 fb	 movzx	 eax, BYTE PTR $T4[ebp]
  000a9	0f b6 4d fa	 movzx	 ecx, BYTE PTR $T3[ebp]
  000ad	3b c1		 cmp	 eax, ecx
  000af	74 04		 je	 SHORT $LN4@InterfaceV
  000b1	32 c0		 xor	 al, al
  000b3	eb 3c		 jmp	 SHORT $LN1@InterfaceV
$LN4@InterfaceV:

; 72   : 	if (GetProductVer(dwQueryVer)!=GetProductVer(dwInterfaceVer)) return false;

  000b5	8b 55 08	 mov	 edx, DWORD PTR _dwQueryVer$[ebp]
  000b8	89 55 dc	 mov	 DWORD PTR _dwVersion$[ebp], edx

; 45   : 	return ((BYTE *)&dwVersion)[3];

  000bb	b8 01 00 00 00	 mov	 eax, 1
  000c0	6b c8 03	 imul	 ecx, eax, 3
  000c3	8a 54 0d dc	 mov	 dl, BYTE PTR _dwVersion$[ebp+ecx]
  000c7	88 55 f9	 mov	 BYTE PTR $T2[ebp], dl

; 72   : 	if (GetProductVer(dwQueryVer)!=GetProductVer(dwInterfaceVer)) return false;

  000ca	8b 45 0c	 mov	 eax, DWORD PTR _dwInterfaceVer$[ebp]
  000cd	89 45 d8	 mov	 DWORD PTR _dwVersion$[ebp], eax

; 45   : 	return ((BYTE *)&dwVersion)[3];

  000d0	b9 01 00 00 00	 mov	 ecx, 1
  000d5	6b d1 03	 imul	 edx, ecx, 3
  000d8	8a 44 15 d8	 mov	 al, BYTE PTR _dwVersion$[ebp+edx]
  000dc	88 45 f8	 mov	 BYTE PTR $T1[ebp], al

; 72   : 	if (GetProductVer(dwQueryVer)!=GetProductVer(dwInterfaceVer)) return false;

  000df	0f b6 4d f9	 movzx	 ecx, BYTE PTR $T2[ebp]
  000e3	0f b6 55 f8	 movzx	 edx, BYTE PTR $T1[ebp]
  000e7	3b ca		 cmp	 ecx, edx
  000e9	74 04		 je	 SHORT $LN5@InterfaceV
  000eb	32 c0		 xor	 al, al
  000ed	eb 02		 jmp	 SHORT $LN1@InterfaceV
$LN5@InterfaceV:

; 73   : 	return true;

  000ef	b0 01		 mov	 al, 1
$LN1@InterfaceV:

; 74   : };

  000f1	8b e5		 mov	 esp, ebp
  000f3	5d		 pop	 ebp
  000f4	c3		 ret	 0
?InterfaceVersionCompare@@YA_NKK@Z ENDP			; InterfaceVersionCompare
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetBuildVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetBuildVer@@YAEK@Z PROC				; GetBuildVer, COMDAT

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	return ((BYTE *)&dwVersion)[0];

  00003	b8 01 00 00 00	 mov	 eax, 1
  00008	6b c8 00	 imul	 ecx, eax, 0
  0000b	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 64   : }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetBuildVer@@YAEK@Z ENDP				; GetBuildVer
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetSubVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetSubVer@@YAEK@Z PROC					; GetSubVer, COMDAT

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return ((BYTE *)&dwVersion)[1];

  00003	b8 01 00 00 00	 mov	 eax, 1
  00008	c1 e0 00	 shl	 eax, 0
  0000b	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 58   : }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetSubVer@@YAEK@Z ENDP					; GetSubVer
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetMainVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetMainVer@@YAEK@Z PROC				; GetMainVer, COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : 	return ((BYTE *)&dwVersion)[2];

  00003	b8 01 00 00 00	 mov	 eax, 1
  00008	d1 e0		 shl	 eax, 1
  0000a	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 52   : }

  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?GetMainVer@@YAEK@Z ENDP				; GetMainVer
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetProductVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetProductVer@@YAEK@Z PROC				; GetProductVer, COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 45   : 	return ((BYTE *)&dwVersion)[3];

  00003	b8 01 00 00 00	 mov	 eax, 1
  00008	6b c8 03	 imul	 ecx, eax, 3
  0000b	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 46   : }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetProductVer@@YAEK@Z ENDP				; GetProductVer
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0IUnknownEx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknownEx@@QAE@XZ PROC				; IUnknownEx::IUnknownEx, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0IUnknownEx@@QAE@XZ ENDP				; IUnknownEx::IUnknownEx
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPA_WPB_W@Z
_TEXT	SEGMENT
tv66 = -24						; size = 4
tv86 = -20						; size = 4
__Count$ = -16						; size = 4
__Ptrdest$ = -12					; size = 4
tv79 = -8						; size = 4
tv89 = -2						; size = 2
__Ptr$ = 8						; size = 4
?_Maklocwcs@std@@YAPA_WPB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 97   : 	{	// copy NTWCS to allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 98   : 	const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  00006	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR tv79[ebp], eax
  0000c	8b 4d f8	 mov	 ecx, DWORD PTR tv79[ebp]
  0000f	83 c1 02	 add	 ecx, 2
  00012	89 4d ec	 mov	 DWORD PTR tv86[ebp], ecx
$LL6@Maklocwcs:
  00015	8b 55 f8	 mov	 edx, DWORD PTR tv79[ebp]
  00018	66 8b 02	 mov	 ax, WORD PTR [edx]
  0001b	66 89 45 fe	 mov	 WORD PTR tv89[ebp], ax
  0001f	83 45 f8 02	 add	 DWORD PTR tv79[ebp], 2
  00023	66 83 7d fe 00	 cmp	 WORD PTR tv89[ebp], 0
  00028	75 eb		 jne	 SHORT $LL6@Maklocwcs
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR tv79[ebp]
  0002d	2b 4d ec	 sub	 ecx, DWORD PTR tv86[ebp]
  00030	d1 f9		 sar	 ecx, 1
  00032	89 4d e8	 mov	 DWORD PTR tv66[ebp], ecx
  00035	8b 55 e8	 mov	 edx, DWORD PTR tv66[ebp]
  00038	83 c2 01	 add	 edx, 1
  0003b	89 55 f0	 mov	 DWORD PTR __Count$[ebp], edx

; 99   : 
; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

  0003e	6a 65		 push	 101			; 00000065H
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00045	6a 02		 push	 2
  00047	6a 02		 push	 2
  00049	8b 45 f0	 mov	 eax, DWORD PTR __Count$[ebp]
  0004c	50		 push	 eax
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00053	83 c4 14	 add	 esp, 20			; 00000014H
  00056	89 45 f4	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 101  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 102  : 
; 103  : 	if (!_Ptrdest)

  00059	83 7d f4 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  0005d	75 05		 jne	 SHORT $LN2@Maklocwcs

; 104  : 		_Xbad_alloc();

  0005f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h

; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00064	8b 4d f0	 mov	 ecx, DWORD PTR __Count$[ebp]
  00067	d1 e1		 shl	 ecx, 1
  00069	51		 push	 ecx
  0006a	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0006d	52		 push	 edx
  0006e	8b 45 f4	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 _memcpy
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum

; 106  : 	return (_Ptrdest);

  0007a	8b 45 f4	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN3@Maklocwcs:

; 107  : 	}

  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
?_Maklocwcs@std@@YAPA_WPB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Mbst2$ = -64						; size = 8
__Mbst1$ = -56						; size = 8
tv69 = -48						; size = 4
tv146 = -44						; size = 4
__Count1$ = -40						; size = 4
__Ptrdest$ = -36					; size = 4
__Ptr1$ = -32						; size = 4
__Ptrnext$ = -28					; size = 4
tv143 = -24						; size = 4
__Count$ = -20						; size = 4
__Bytes$ = -16						; size = 4
__Wchars$ = -12						; size = 4
__Wc$ = -8						; size = 2
tv149 = -1						; size = 1
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
__Cvt$ = 16						; size = 4
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z PROC	; std::_Maklocstr<wchar_t>, COMDAT

; 682  : 	{	// convert C string to wchar_t sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H

; 683  : 	size_t _Count, _Count1;
; 684  : 	size_t _Wchars;
; 685  : 	const char *_Ptr1;
; 686  : 	int _Bytes;
; 687  : 	wchar_t _Wc;
; 688  : 	mbstate_t _Mbst1 = {};

  00006	33 c0		 xor	 eax, eax
  00008	89 45 c8	 mov	 DWORD PTR __Mbst1$[ebp], eax
  0000b	89 45 cc	 mov	 DWORD PTR __Mbst1$[ebp+4], eax

; 689  : 
; 690  : 	_Count1 = _CSTD strlen(_Ptr) + 1;

  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00011	89 4d e8	 mov	 DWORD PTR tv143[ebp], ecx
  00014	8b 55 e8	 mov	 edx, DWORD PTR tv143[ebp]
  00017	83 c2 01	 add	 edx, 1
  0001a	89 55 d4	 mov	 DWORD PTR tv146[ebp], edx
$LL12@Maklocstr:
  0001d	8b 45 e8	 mov	 eax, DWORD PTR tv143[ebp]
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	88 4d ff	 mov	 BYTE PTR tv149[ebp], cl
  00025	83 45 e8 01	 add	 DWORD PTR tv143[ebp], 1
  00029	80 7d ff 00	 cmp	 BYTE PTR tv149[ebp], 0
  0002d	75 ee		 jne	 SHORT $LL12@Maklocstr
  0002f	8b 55 e8	 mov	 edx, DWORD PTR tv143[ebp]
  00032	2b 55 d4	 sub	 edx, DWORD PTR tv146[ebp]
  00035	89 55 d0	 mov	 DWORD PTR tv69[ebp], edx
  00038	8b 45 d0	 mov	 eax, DWORD PTR tv69[ebp]
  0003b	83 c0 01	 add	 eax, 1
  0003e	89 45 d8	 mov	 DWORD PTR __Count1$[ebp], eax

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00041	8b 4d d8	 mov	 ecx, DWORD PTR __Count1$[ebp]
  00044	89 4d ec	 mov	 DWORD PTR __Count$[ebp], ecx
  00047	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __Wchars$[ebp], 0
  0004e	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00051	89 55 e0	 mov	 DWORD PTR __Ptr1$[ebp], edx
  00054	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:

; 692  : 		_Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars)

  00056	8b 45 ec	 mov	 eax, DWORD PTR __Count$[ebp]
  00059	2b 45 f0	 sub	 eax, DWORD PTR __Bytes$[ebp]
  0005c	89 45 ec	 mov	 DWORD PTR __Count$[ebp], eax
  0005f	8b 4d e0	 mov	 ecx, DWORD PTR __Ptr1$[ebp]
  00062	03 4d f0	 add	 ecx, DWORD PTR __Bytes$[ebp]
  00065	89 4d e0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  00068	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  0006b	83 c2 01	 add	 edx, 1
  0006e	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
$LN4@Maklocstr:

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00071	83 7d ec 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00075	76 29		 jbe	 SHORT $LN3@Maklocstr

; 693  : 		if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0)

  00077	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  0007a	50		 push	 eax
  0007b	8d 4d c8	 lea	 ecx, DWORD PTR __Mbst1$[ebp]
  0007e	51		 push	 ecx
  0007f	8b 55 ec	 mov	 edx, DWORD PTR __Count$[ebp]
  00082	52		 push	 edx
  00083	8b 45 e0	 mov	 eax, DWORD PTR __Ptr1$[ebp]
  00086	50		 push	 eax
  00087	8d 4d f8	 lea	 ecx, DWORD PTR __Wc$[ebp]
  0008a	51		 push	 ecx
  0008b	e8 00 00 00 00	 call	 __Mbrtowc
  00090	83 c4 14	 add	 esp, 20			; 00000014H
  00093	89 45 f0	 mov	 DWORD PTR __Bytes$[ebp], eax
  00096	83 7d f0 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0009a	7f 02		 jg	 SHORT $LN8@Maklocstr

; 694  : 			break;

  0009c	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 695  : 	++_Wchars;	// count terminating nul

  0009e	eb b6		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:
  000a0	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  000a3	83 c2 01	 add	 edx, 1
  000a6	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx

; 696  : 
; 697  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Wchars, sizeof (wchar_t),

  000a9	68 ba 02 00 00	 push	 698			; 000002baH
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b3	6a 02		 push	 2
  000b5	6a 02		 push	 2
  000b7	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  000ba	50		 push	 eax
  000bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  000c1	83 c4 14	 add	 esp, 20			; 00000014H
  000c4	89 45 dc	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 698  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 699  : 
; 700  : 	if (!_Ptrdest)

  000c7	83 7d dc 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  000cb	75 05		 jne	 SHORT $LN9@Maklocstr

; 701  : 		_Xbad_alloc();

  000cd	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 702  : 	wchar_t *_Ptrnext = _Ptrdest;

  000d2	8b 4d dc	 mov	 ecx, DWORD PTR __Ptrdest$[ebp]
  000d5	89 4d e4	 mov	 DWORD PTR __Ptrnext$[ebp], ecx

; 703  : 	mbstate_t _Mbst2 = {};

  000d8	33 d2		 xor	 edx, edx
  000da	89 55 c0	 mov	 DWORD PTR __Mbst2$[ebp], edx
  000dd	89 55 c4	 mov	 DWORD PTR __Mbst2$[ebp+4], edx

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000e0	eb 24		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:

; 706  : 		_Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext)

  000e2	8b 45 ec	 mov	 eax, DWORD PTR __Count$[ebp]
  000e5	2b 45 f0	 sub	 eax, DWORD PTR __Bytes$[ebp]
  000e8	89 45 ec	 mov	 DWORD PTR __Count$[ebp], eax
  000eb	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000ee	03 4d f0	 add	 ecx, DWORD PTR __Bytes$[ebp]
  000f1	89 4d 08	 mov	 DWORD PTR __Ptr$[ebp], ecx
  000f4	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  000f7	83 ea 01	 sub	 edx, 1
  000fa	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
  000fd	8b 45 e4	 mov	 eax, DWORD PTR __Ptrnext$[ebp]
  00100	83 c0 02	 add	 eax, 2
  00103	89 45 e4	 mov	 DWORD PTR __Ptrnext$[ebp], eax
$LN7@Maklocstr:

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  00106	83 7d f4 00	 cmp	 DWORD PTR __Wchars$[ebp], 0
  0010a	76 29		 jbe	 SHORT $LN6@Maklocstr

; 707  : 		if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0)

  0010c	8b 4d 10	 mov	 ecx, DWORD PTR __Cvt$[ebp]
  0010f	51		 push	 ecx
  00110	8d 55 c0	 lea	 edx, DWORD PTR __Mbst2$[ebp]
  00113	52		 push	 edx
  00114	8b 45 d8	 mov	 eax, DWORD PTR __Count1$[ebp]
  00117	50		 push	 eax
  00118	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0011b	51		 push	 ecx
  0011c	8b 55 e4	 mov	 edx, DWORD PTR __Ptrnext$[ebp]
  0011f	52		 push	 edx
  00120	e8 00 00 00 00	 call	 __Mbrtowc
  00125	83 c4 14	 add	 esp, 20			; 00000014H
  00128	89 45 f0	 mov	 DWORD PTR __Bytes$[ebp], eax
  0012b	83 7d f0 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0012f	7f 02		 jg	 SHORT $LN10@Maklocstr

; 708  : 			break;

  00131	eb 02		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 709  : 	*_Ptrnext = L'\0';

  00133	eb ad		 jmp	 SHORT $LN5@Maklocstr
$LN6@Maklocstr:
  00135	33 c0		 xor	 eax, eax
  00137	8b 4d e4	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  0013a	66 89 01	 mov	 WORD PTR [ecx], ax

; 710  : 
; 711  : 	return (_Ptrdest);

  0013d	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN11@Maklocstr:

; 712  : 	}

  00140	8b e5		 mov	 esp, ebp
  00142	5d		 pop	 ebp
  00143	c3		 ret	 0
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 230  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 231  :         #pragma warning(push)
; 232  :         #pragma warning(disable : 4995 4996 6386)
; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00003	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  00006	d1 e0		 shl	 eax, 1
  00008	50		 push	 eax
  00009	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  0000c	51		 push	 ecx
  0000d	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 _memcpy
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH

; 234  :         #pragma warning(pop)
; 235  :     }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_msg$ = -36						; size = 28
_bResult$ = -8						; size = 4
_bQuit$ = -4						; size = 4
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00006	6a 01		 push	 1
  00008	6a 12		 push	 18			; 00000012H
  0000a	6a 12		 push	 18			; 00000012H
  0000c	6a 00		 push	 0
  0000e	8d 45 dc	 lea	 eax, DWORD PTR _msg$[ebp]
  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  00018	89 45 fc	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001b	6a 00		 push	 0
  0001d	6a 00		 push	 0
  0001f	8b 4d 0c	 mov	 ecx, DWORD PTR _nLine$[ebp]
  00022	51		 push	 ecx
  00023	8b 55 08	 mov	 edx, DWORD PTR _lpszFileName$[ebp]
  00026	52		 push	 edx
  00027	6a 02		 push	 2
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  0002f	83 c4 14	 add	 esp, 20			; 00000014H
  00032	89 45 f8	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00035	83 7d fc 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  00039	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003b	8b 45 e4	 mov	 eax, DWORD PTR _msg$[ebp+8]
  0003e	50		 push	 eax
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00045	8b 45 f8	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _==
_TEXT	SEGMENT
tv74 = -12						; size = 4
tv68 = -8						; size = 4
tv76 = -4						; size = 4
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==	PROC						; COMDAT

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00006	6a 10		 push	 16			; 00000010H
  00008	8b 45 0c	 mov	 eax, DWORD PTR _guidOther$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _guidOne$[ebp]
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 _memcmp
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH
  00018	89 45 f4	 mov	 DWORD PTR tv74[ebp], eax
  0001b	83 7d f4 00	 cmp	 DWORD PTR tv74[ebp], 0
  0001f	75 09		 jne	 SHORT $LN7@
  00021	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN5@
$LN7@:
  0002a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN5@:

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  00031	83 7d fc 00	 cmp	 DWORD PTR tv76[ebp], 0
  00035	74 09		 je	 SHORT $LN3@
  00037	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  0003e	eb 07		 jmp	 SHORT $LN4@
$LN3@:
  00040	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@:
  00047	8a 45 f8	 mov	 al, BYTE PTR tv68[ebp]

; 195  : }

  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
_==	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
tv68 = -8						; size = 4
tv70 = -4						; size = 4
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00006	6a 10		 push	 16			; 00000010H
  00008	8b 45 0c	 mov	 eax, DWORD PTR _rguid2$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _rguid1$[ebp]
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 _memcmp
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH
  00018	89 45 f8	 mov	 DWORD PTR tv68[ebp], eax
  0001b	83 7d f8 00	 cmp	 DWORD PTR tv68[ebp], 0
  0001f	75 09		 jne	 SHORT $LN3@IsEqualGUI
  00021	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv70[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
  0002a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN4@IsEqualGUI:
  00031	8b 45 fc	 mov	 eax, DWORD PTR tv70[ebp]

; 162  : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_IsEqualGUID ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\attemperengine.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
$LN2@vector:
  00004	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  0000d	83 e9 01	 sub	 ecx, 1
  00010	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00013	83 7d fc 00	 cmp	 DWORD PTR tv66[ebp], 0
  00017	76 11		 jbe	 SHORT $LN1@vector
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  0001c	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001f	8b 55 08	 mov	 edx, DWORD PTR ___t$[ebp]
  00022	03 55 0c	 add	 edx, DWORD PTR ___s$[ebp]
  00025	89 55 08	 mov	 DWORD PTR ___t$[ebp], edx
  00028	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
