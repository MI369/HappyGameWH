; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\内核引擎\TraceService.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	??_C@_0BC@PGMFNIFA@atlTraceException@		; `string'
PUBLIC	??_C@_0P@MBNHGHMI@atlTraceString@		; `string'
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT ??_C@_0P@MBNHGHMI@atlTraceString@
CONST	SEGMENT
??_C@_0P@MBNHGHMI@atlTraceString@ DB 'atlTraceString', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PGMFNIFA@atlTraceException@
CONST	SEGMENT
??_C@_0BC@PGMFNIFA@atlTraceException@ DB 'atlTraceException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
CONST	SEGMENT
?IID_ITraceService@@3U_GUID@@B DD 0e5f636c6H		; IID_ITraceService
	DW	0abb5H
	DW	04752H
	DB	0bbH
	DB	0c8H
	DB	0cdH
	DB	0b1H
	DB	076H
	DB	058H
	DB	0f5H
	DB	02dH
?IID_ITraceServiceManager@@3U_GUID@@B DD 08bfc36dbH	; IID_ITraceServiceManager
	DW	05ba2H
	DW	042baH
	DB	081H
	DB	0b0H
	DB	087H
	DB	0b0H
	DB	01cH
	DB	09eH
	DB	0afH
	DB	0feH
?IID_IAsynchronismEngine@@3U_GUID@@B DD 0c7a13074H	; IID_IAsynchronismEngine
	DW	075c5H
	DW	04b8eH
	DB	0b5H
	DB	04bH
	DB	0eeH
	DB	0eH
	DB	0ecH
	DB	0feH
	DB	0b9H
	DB	0ebH
?IID_IDataBase@@3U_GUID@@B DD 0a2e38a78H		; IID_IDataBase
	DW	01e4fH
	DW	04de4H
	DB	0a5H
	DB	0d1H
	DB	0b9H
	DB	019H
	DB	09bH
	DB	0ceH
	DB	041H
	DB	0aeH
?IID_IDataBaseEngine@@3U_GUID@@B DD 047b5a119H		; IID_IDataBaseEngine
	DW	01676H
	DW	049a3H
	DB	0beH
	DB	0aeH
	DB	0caH
	DB	027H
	DB	0ebH
	DB	059H
	DB	097H
	DB	022H
?IID_IUDPNetworkEngine@@3U_GUID@@B DD 08d138a9bH	; IID_IUDPNetworkEngine
	DW	0a97dH
	DW	04d51H
	DB	09dH
	DB	06cH
	DB	0d8H
	DB	06eH
	DB	0a1H
	DB	084H
	DB	045H
	DB	02eH
?IID_ITCPNetworkEngine@@3U_GUID@@B DD 07747f683H	; IID_ITCPNetworkEngine
	DW	0c0daH
	DW	04588H
	DB	089H
	DB	0ccH
	DB	015H
	DB	093H
	DB	0acH
	DB	0c0H
	DB	044H
	DB	0c8H
?IID_ITCPSocketService@@3U_GUID@@B DD 0709a4449H	; IID_ITCPSocketService
	DW	0ad77H
	DW	04b3dH
	DB	0b4H
	DB	0d6H
	DB	08dH
	DB	0bH
	DB	028H
	DB	065H
	DB	0ecH
	DB	0aeH
?IID_IWEBSocketService@@3U_GUID@@B DD 091052ff2H	; IID_IWEBSocketService
	DW	0eb29H
	DW	040b9H
	DB	0b2H
	DB	0a2H
	DB	08aH
	DB	0a2H
	DB	098H
	DB	036H
	DB	02cH
	DB	084H
?IID_ITimerEngine@@3U_GUID@@B DD 0496401aeH		; IID_ITimerEngine
	DW	06fb0H
	DW	04e9fH
	DB	090H
	DB	098H
	DB	044H
	DB	09dH
	DB	09cH
	DB	0b2H
	DB	0bdH
	DB	097H
?IID_IAttemperEngine@@3U_GUID@@B DD 0b070b2cH		; IID_IAttemperEngine
	DW	09d72H
	DW	042d2H
	DB	0a5H
	DB	070H
	DB	0baH
	DB	02cH
	DB	0bfH
	DB	06fH
	DB	0bbH
	DB	01cH
?IID_IUnknownEx@@3U_GUID@@B DD 05feec21eH		; IID_IUnknownEx
	DW	0dbf3H
	DW	046f0H
	DB	09fH
	DB	057H
	DB	0d1H
	DB	0cdH
	DB	071H
	DB	01cH
	DB	046H
	DB	0deH
CONST	ENDS
;	COMDAT ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__global_delete@@YAXPAX@Z			; __global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?__global_delete@@YAXPAXI@Z			; __global_delete
PUBLIC	?__global_array_delete@@YAXPAX@Z		; __global_array_delete
PUBLIC	?__global_array_delete@@YAXPAXI@Z		; __global_array_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	_swprintf_s
PUBLIC	__snprintf
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPBDI@Z		; ATL::CTrace::RegisterCategory
PUBLIC	??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPA_WPB_W@Z			; std::_Maklocwcs
PUBLIC	?InterfaceVersionCompare@@YA_NKK@Z		; InterfaceVersionCompare
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??0CTraceService@@IAE@XZ			; CTraceService::CTraceService
PUBLIC	?SetTraceService@CTraceService@@SA_NPAUIUnknownEx@@@Z ; CTraceService::SetTraceService
PUBLIC	?GetTraceService@CTraceService@@SAPAXABU_GUID@@K@Z ; CTraceService::GetTraceService
PUBLIC	?GetTraceServiceManager@CTraceService@@SAPAXABU_GUID@@K@Z ; CTraceService::GetTraceServiceManager
PUBLIC	?IsEnableTrace@CTraceService@@SA_NW4enTraceLevel@@@Z ; CTraceService::IsEnableTrace
PUBLIC	?EnableTrace@CTraceService@@SA_NW4enTraceLevel@@_N@Z ; CTraceService::EnableTrace
PUBLIC	?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z ; CTraceService::TraceString
PUBLIC	??4CTraceService@@QAEAAV0@ABV0@@Z		; CTraceService::operator=
PUBLIC	??4CTraceService@@QAEAAV0@$$QAV0@@Z		; CTraceService::operator=
PUBLIC	??0CTraceServiceControl@@QAE@XZ			; CTraceServiceControl::CTraceServiceControl
PUBLIC	??1CTraceServiceControl@@UAE@XZ			; CTraceServiceControl::~CTraceServiceControl
PUBLIC	?Release@CTraceServiceControl@@UAEXXZ		; CTraceServiceControl::Release
PUBLIC	?QueryInterface@CTraceServiceControl@@UAEPAXABU_GUID@@K@Z ; CTraceServiceControl::QueryInterface
PUBLIC	?TraceString@CTraceServiceControl@@UAE_NPBDW4enTraceLevel@@@Z ; CTraceServiceControl::TraceString
PUBLIC	?PreSubclassWindow@CTraceServiceControl@@MAEXXZ	; CTraceServiceControl::PreSubclassWindow
PUBLIC	?LoadMessage@CTraceServiceControl@@QAE_NPBD@Z	; CTraceServiceControl::LoadMessage
PUBLIC	?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z	; CTraceServiceControl::SaveMessage
PUBLIC	?SetParameter@CTraceServiceControl@@QAE_NJJ@Z	; CTraceServiceControl::SetParameter
PUBLIC	?InitializeService@CTraceServiceControl@@AAEXXZ	; CTraceServiceControl::InitializeService
PUBLIC	?GetTraceColor@CTraceServiceControl@@AAEKW4enTraceLevel@@@Z ; CTraceServiceControl::GetTraceColor
PUBLIC	?InsertString@CTraceServiceControl@@AAE_NPBDAAUCHARFORMAT2A@@@Z ; CTraceServiceControl::InsertString
PUBLIC	?LoadCallBack@CTraceServiceControl@@CGKKPAEJPAJ@Z ; CTraceServiceControl::LoadCallBack
PUBLIC	?SaveCallBack@CTraceServiceControl@@CGKKPAEJPAJ@Z ; CTraceServiceControl::SaveCallBack
PUBLIC	?OnClearAll@CTraceServiceControl@@IAEXXZ	; CTraceServiceControl::OnClearAll
PUBLIC	?OnSelectAll@CTraceServiceControl@@IAEXXZ	; CTraceServiceControl::OnSelectAll
PUBLIC	?OnCopyString@CTraceServiceControl@@IAEXXZ	; CTraceServiceControl::OnCopyString
PUBLIC	?OnSaveString@CTraceServiceControl@@IAEXXZ	; CTraceServiceControl::OnSaveString
PUBLIC	?OnDeleteString@CTraceServiceControl@@IAEXXZ	; CTraceServiceControl::OnDeleteString
PUBLIC	?OnCreate@CTraceServiceControl@@IAEHPAUtagCREATESTRUCTA@@@Z ; CTraceServiceControl::OnCreate
PUBLIC	?OnRButtonDown@CTraceServiceControl@@IAEXIVCPoint@@@Z ; CTraceServiceControl::OnRButtonDown
PUBLIC	?OnTraceServiceMessage@CTraceServiceControl@@IAEJIJ@Z ; CTraceServiceControl::OnTraceServiceMessage
PUBLIC	?GetThisMessageMap@CTraceServiceControl@@KGPBUAFX_MSGMAP@@XZ ; CTraceServiceControl::GetThisMessageMap
PUBLIC	?GetMessageMap@CTraceServiceControl@@MBEPBUAFX_MSGMAP@@XZ ; CTraceServiceControl::GetMessageMap
PUBLIC	??_GCTraceServiceControl@@UAEPAXI@Z		; CTraceServiceControl::`scalar deleting destructor'
PUBLIC	??_ECTraceServiceControl@@UAEPAXI@Z		; CTraceServiceControl::`vector deleting destructor'
PUBLIC	??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z	; std::_Maklocstr<char>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_7IUnknownEx@@6B@				; IUnknownEx::`vftable'
PUBLIC	??_7ITraceService@@6B@				; ITraceService::`vftable'
PUBLIC	??_7CTraceServiceControl@@6BCRichEditCtrl@@@	; CTraceServiceControl::`vftable'
PUBLIC	??_7CTraceServiceControl@@6BITraceService@@@	; CTraceServiceControl::`vftable'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6@			; `string'
PUBLIC	??_C@_0EJ@LEMFCIBH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ ; `string'
PUBLIC	??_C@_0BI@LJEDAMFG@?P?E?O?$KC?N?D?$LM?$PO?$CI?$CK?4RTF?$CJ?$HM?$CK?4RTF?$HM?$HM@ ; `string'
PUBLIC	??_C@_03HCCJIJCF@RTF@				; `string'
PUBLIC	??_C@_0CN@PMGALCLJ@?P?E?O?$KC?J?d?$LD?v?$LN?S?$LP?Z?I?h?V?C?J?$KH?$LA?$NM?$KD?$KM?O?$LF?M?$LD?T?K?P?P?P@ ; `string'
PUBLIC	??_C@_0BE@FLOLLKIF@?$LI?$LE?V?F?$CI?$CGC?$CJ?5?5?5?5?5Ctrl?$CLC@ ; `string'
PUBLIC	??_C@_0BE@KFPFMLHH@?H?$KL?Q?$KB?$CI?$CGA?$CJ?5?5?5?5?5Ctrl?$CLA@ ; `string'
PUBLIC	??_C@_08DBECOLPN@?I?$LO?$LD?$PN?$CI?$CGD?$CJ@	; `string'
PUBLIC	??_C@_08HIFFJPFE@?G?e?$LD?$PN?P?E?O?$KC@	; `string'
PUBLIC	??_C@_0M@MGJHDPBM@?$LB?$KD?$LE?f?P?E?O?$KC?4?4?4@ ; `string'
PUBLIC	??_C@_0CE@BMNGBAFE@?$KB?$LO?5?$CF04d?9?$CF02d?9?$CF02d?5?$CF02d?3?$CF02d?3?$CF02@ ; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_R4IUnknownEx@@6B@				; IUnknownEx::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUIUnknownEx@@@8				; IUnknownEx `RTTI Type Descriptor'
PUBLIC	??_R3IUnknownEx@@8				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknownEx@@8				; IUnknownEx::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ITraceService@@6B@				; ITraceService::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUITraceService@@@8			; ITraceService `RTTI Type Descriptor'
PUBLIC	??_R3ITraceService@@8				; ITraceService::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ITraceService@@8				; ITraceService::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ITraceService@@8			; ITraceService::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CTraceServiceControl@@6BCRichEditCtrl@@@	; CTraceServiceControl::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTraceServiceControl@@@8		; CTraceServiceControl `RTTI Type Descriptor'
PUBLIC	??_R3CTraceServiceControl@@8			; CTraceServiceControl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTraceServiceControl@@8			; CTraceServiceControl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTraceServiceControl@@8		; CTraceServiceControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CRichEditCtrl@@8			; CRichEditCtrl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCRichEditCtrl@@@8			; CRichEditCtrl `RTTI Type Descriptor'
PUBLIC	??_R3CRichEditCtrl@@8				; CRichEditCtrl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRichEditCtrl@@8				; CRichEditCtrl::`RTTI Base Class Array'
PUBLIC	??_R1IA@?0A@EA@ITraceService@@8			; ITraceService::`RTTI Base Class Descriptor at (128,-1,0,64)'
PUBLIC	??_R1IA@?0A@EA@IUnknownEx@@8			; IUnknownEx::`RTTI Base Class Descriptor at (128,-1,0,64)'
PUBLIC	??_R4CTraceServiceControl@@6BITraceService@@@	; CTraceServiceControl::`RTTI Complete Object Locator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__GetLocalTime@4:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp____stdio_common_vswprintf_s:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp___calloc_dbg:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:PROC
EXTRN	__imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z:PROC
EXTRN	??0CFile@@QAE@XZ:PROC				; CFile::CFile
EXTRN	?Open@CFile@@UAEHPBDIPAVCFileException@@@Z:PROC	; CFile::Open
EXTRN	??1CFile@@UAE@XZ:PROC				; CFile::~CFile
EXTRN	??0CMenu@@QAE@XZ:PROC				; CMenu::CMenu
EXTRN	?CreatePopupMenu@CMenu@@QAEHXZ:PROC		; CMenu::CreatePopupMenu
EXTRN	?TrackPopupMenu@CMenu@@QAEHIHHPAVCWnd@@PBUtagRECT@@@Z:PROC ; CMenu::TrackPopupMenu
EXTRN	?AppendMenuA@CMenu@@QAEHIIPBD@Z:PROC		; CMenu::AppendMenuA
EXTRN	?EnableMenuItem@CMenu@@QAEIII@Z:PROC		; CMenu::EnableMenuItem
EXTRN	??1CMenu@@UAE@XZ:PROC				; CMenu::~CMenu
EXTRN	?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CCmdTarget::OnCmdMsg
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:PROC		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:PROC ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:PROC		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z:PROC ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:PROC	; CWnd::CalcWindowRect
EXTRN	?PostMessageA@CWnd@@QAEHIIJ@Z:PROC		; CWnd::PostMessageA
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z:PROC	; CWnd::ClientToScreen
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:PROC ; CWnd::OnToolHitTest
EXTRN	?SetFocus@CWnd@@QAEPAV1@XZ:PROC			; CWnd::SetFocus
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:PROC ; CWnd::GetScrollBarCtrl
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:PROC			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
EXTRN	?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z:PROC ; CWnd::OnCreate
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:PROC ; CWnd::DoDataExchange
EXTRN	?BeginModalState@CWnd@@UAEXXZ:PROC		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:PROC		; CWnd::EndModalState
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:PROC ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:PROC		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcA
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:PROC		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnChildNotify
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?ResizeDynamicLayout@CWnd@@MAEXXZ:PROC		; CWnd::ResizeDynamicLayout
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:PROC		; CWnd::CheckAutoCenter
EXTRN	?AssertValid@CWnd@@UBEXXZ:PROC			; CWnd::AssertValid
EXTRN	?Dump@CWnd@@UBEXAAVCDumpContext@@@Z:PROC	; CWnd::Dump
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CWnd::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CWnd::GetOccDialogInfo
EXTRN	?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ:PROC ; CWnd::GetThisMessageMap
EXTRN	??0CFileDialog@@QAE@HPBD0K0PAVCWnd@@KH@Z:PROC	; CFileDialog::CFileDialog
EXTRN	??1CFileDialog@@UAE@XZ:PROC			; CFileDialog::~CFileDialog
EXTRN	?DoModal@CFileDialog@@UAEHXZ:PROC		; CFileDialog::DoModal
EXTRN	?GetPathName@CFileDialog@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:PROC ; CFileDialog::GetPathName
EXTRN	?GetRuntimeClass@CRichEditCtrl@@UBEPAUCRuntimeClass@@XZ:PROC ; CRichEditCtrl::GetRuntimeClass
EXTRN	??0CRichEditCtrl@@QAE@XZ:PROC			; CRichEditCtrl::CRichEditCtrl
EXTRN	?GetLineCount@CRichEditCtrl@@QBEHXZ:PROC	; CRichEditCtrl::GetLineCount
EXTRN	?GetSel@CRichEditCtrl@@QBEXAAU_charrange@@@Z:PROC ; CRichEditCtrl::GetSel
EXTRN	?SetSel@CRichEditCtrl@@QAEXJJ@Z:PROC		; CRichEditCtrl::SetSel
EXTRN	?GetSelectionType@CRichEditCtrl@@QBEGXZ:PROC	; CRichEditCtrl::GetSelectionType
EXTRN	?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z:PROC ; CRichEditCtrl::SetBackgroundColor
EXTRN	?SetSelectionCharFormat@CRichEditCtrl@@QAEHAAUCHARFORMAT2A@@@Z:PROC ; CRichEditCtrl::SetSelectionCharFormat
EXTRN	?GetTextLengthEx@CRichEditCtrl@@QBEJKI@Z:PROC	; CRichEditCtrl::GetTextLengthEx
EXTRN	?LineIndex@CRichEditCtrl@@QBEHH@Z:PROC		; CRichEditCtrl::LineIndex
EXTRN	?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z:PROC	; CRichEditCtrl::ReplaceSel
EXTRN	?StreamIn@CRichEditCtrl@@QAEJHAAU_editstream@@@Z:PROC ; CRichEditCtrl::StreamIn
EXTRN	?StreamOut@CRichEditCtrl@@QAEJHAAU_editstream@@@Z:PROC ; CRichEditCtrl::StreamOut
EXTRN	?Copy@CRichEditCtrl@@QAEXXZ:PROC		; CRichEditCtrl::Copy
EXTRN	??1CRichEditCtrl@@UAE@XZ:PROC			; CRichEditCtrl::~CRichEditCtrl
EXTRN	??0CCriticalSection@@QAE@XZ:PROC		; CCriticalSection::CCriticalSection
EXTRN	??1CCriticalSection@@UAE@XZ:PROC		; CCriticalSection::~CCriticalSection
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	__Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_??0CWHDataQueue@@QAE@XZ:PROC
EXTRN	__imp_??1CWHDataQueue@@UAE@XZ:PROC
EXTRN	__imp_?InsertData@CWHDataQueue@@QAE_NGPAXG@Z:PROC
EXTRN	__imp_?DistillData@CWHDataQueue@@QAE_NAAUtagDataHead@@PAXG@Z:PROC
EXTRN	__imp_??0CWHDataLocker@@QAE@AAVCCriticalSection@@_N@Z:PROC
EXTRN	__imp_??1CWHDataLocker@@UAE@XZ:PROC
EXTRN	?QueryInterface@CTraceServiceManager@@UAEPAXABU_GUID@@K@Z:PROC ; CTraceServiceManager::QueryInterface
EXTRN	?IsEnableTrace@CTraceServiceManager@@UAE_NW4enTraceLevel@@@Z:PROC ; CTraceServiceManager::IsEnableTrace
EXTRN	?EnableTrace@CTraceServiceManager@@UAE_NW4enTraceLevel@@_N@Z:PROC ; CTraceServiceManager::EnableTrace
EXTRN	?SetTraceService@CTraceServiceManager@@UAE_NPAUIUnknownEx@@@Z:PROC ; CTraceServiceManager::SetTraceService
EXTRN	?GetTraceService@CTraceServiceManager@@UAEPAXABU_GUID@@K@Z:PROC ; CTraceServiceManager::GetTraceService
EXTRN	?TraceString@CTraceServiceManager@@UAE_NPBDW4enTraceLevel@@@Z:PROC ; CTraceServiceManager::TraceString
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?g_TraceServiceManager@@3VCTraceServiceManager@@A:BYTE ; g_TraceServiceManager
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R4CTraceServiceControl@@6BITraceService@@@
rdata$r	SEGMENT
??_R4CTraceServiceControl@@6BITraceService@@@ DD 00H	; CTraceServiceControl::`RTTI Complete Object Locator'
	DD	080H
	DD	00H
	DD	FLAT:??_R0?AVCTraceServiceControl@@@8
	DD	FLAT:??_R3CTraceServiceControl@@8
rdata$r	ENDS
;	COMDAT ??_R1IA@?0A@EA@IUnknownEx@@8
rdata$r	SEGMENT
??_R1IA@?0A@EA@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (128,-1,0,64)'
	DD	00H
	DD	080H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R1IA@?0A@EA@ITraceService@@8
rdata$r	SEGMENT
??_R1IA@?0A@EA@ITraceService@@8 DD FLAT:??_R0?AUITraceService@@@8 ; ITraceService::`RTTI Base Class Descriptor at (128,-1,0,64)'
	DD	01H
	DD	080H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ITraceService@@8
rdata$r	ENDS
;	COMDAT ??_R2CRichEditCtrl@@8
rdata$r	SEGMENT
??_R2CRichEditCtrl@@8 DD FLAT:??_R1A@?0A@EA@CRichEditCtrl@@8 ; CRichEditCtrl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CRichEditCtrl@@8
rdata$r	SEGMENT
??_R3CRichEditCtrl@@8 DD 00H				; CRichEditCtrl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CRichEditCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRichEditCtrl@@@8
data$r	SEGMENT
??_R0?AVCRichEditCtrl@@@8 DD FLAT:??_7type_info@@6B@	; CRichEditCtrl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRichEditCtrl@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRichEditCtrl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRichEditCtrl@@8 DD FLAT:??_R0?AVCRichEditCtrl@@@8 ; CRichEditCtrl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRichEditCtrl@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTraceServiceControl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTraceServiceControl@@8 DD FLAT:??_R0?AVCTraceServiceControl@@@8 ; CTraceServiceControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTraceServiceControl@@8
rdata$r	ENDS
;	COMDAT ??_R2CTraceServiceControl@@8
rdata$r	SEGMENT
??_R2CTraceServiceControl@@8 DD FLAT:??_R1A@?0A@EA@CTraceServiceControl@@8 ; CTraceServiceControl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CRichEditCtrl@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
	DD	FLAT:??_R1IA@?0A@EA@ITraceService@@8
	DD	FLAT:??_R1IA@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3CTraceServiceControl@@8
rdata$r	SEGMENT
??_R3CTraceServiceControl@@8 DD 00H			; CTraceServiceControl::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	07H
	DD	FLAT:??_R2CTraceServiceControl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTraceServiceControl@@@8
data$r	SEGMENT
??_R0?AVCTraceServiceControl@@@8 DD FLAT:??_7type_info@@6B@ ; CTraceServiceControl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTraceServiceControl@@', 00H
data$r	ENDS
;	COMDAT ??_R4CTraceServiceControl@@6BCRichEditCtrl@@@
rdata$r	SEGMENT
??_R4CTraceServiceControl@@6BCRichEditCtrl@@@ DD 00H	; CTraceServiceControl::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTraceServiceControl@@@8
	DD	FLAT:??_R3CTraceServiceControl@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ITraceService@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ITraceService@@8 DD FLAT:??_R0?AUITraceService@@@8 ; ITraceService::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ITraceService@@8
rdata$r	ENDS
;	COMDAT ??_R2ITraceService@@8
rdata$r	SEGMENT
??_R2ITraceService@@8 DD FLAT:??_R1A@?0A@EA@ITraceService@@8 ; ITraceService::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R3ITraceService@@8
rdata$r	SEGMENT
??_R3ITraceService@@8 DD 00H				; ITraceService::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ITraceService@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUITraceService@@@8
data$r	SEGMENT
??_R0?AUITraceService@@@8 DD FLAT:??_7type_info@@6B@	; ITraceService `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUITraceService@@', 00H
data$r	ENDS
;	COMDAT ??_R4ITraceService@@6B@
rdata$r	SEGMENT
??_R4ITraceService@@6B@ DD 00H				; ITraceService::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUITraceService@@@8
	DD	FLAT:??_R3ITraceService@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknownEx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknownEx@@8 DD FLAT:??_R0?AUIUnknownEx@@@8 ; IUnknownEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknownEx@@8
rdata$r	SEGMENT
??_R2IUnknownEx@@8 DD FLAT:??_R1A@?0A@EA@IUnknownEx@@8	; IUnknownEx::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknownEx@@8
rdata$r	SEGMENT
??_R3IUnknownEx@@8 DD 00H				; IUnknownEx::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknownEx@@@8
data$r	SEGMENT
??_R0?AUIUnknownEx@@@8 DD FLAT:??_7type_info@@6B@	; IUnknownEx `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknownEx@@', 00H
data$r	ENDS
;	COMDAT ??_R4IUnknownEx@@6B@
rdata$r	SEGMENT
??_R4IUnknownEx@@6B@ DD 00H				; IUnknownEx::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIUnknownEx@@@8
	DD	FLAT:??_R3IUnknownEx@@8
rdata$r	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BMNGBAFE@?$KB?$LO?5?$CF04d?9?$CF02d?9?$CF02d?5?$CF02d?3?$CF02d?3?$CF02@
CONST	SEGMENT
??_C@_0CE@BMNGBAFE@?$KB?$LO?5?$CF04d?9?$CF02d?9?$CF02d?5?$CF02d?3?$CF02d?3?$CF02@ DB 0a1H
	DB	0beH, ' %04d-%02d-%02d %02d:%02d:%02d ', 0a1H, 0bfH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MGJHDPBM@?$LB?$KD?$LE?f?P?E?O?$KC?4?4?4@
CONST	SEGMENT
??_C@_0M@MGJHDPBM@?$LB?$KD?$LE?f?P?E?O?$KC?4?4?4@ DB 0b1H, 0a3H, 0b4H, 0e6H
	DB	0d0H, 0c5H, 0cfH, 0a2H, '...', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HIFFJPFE@?G?e?$LD?$PN?P?E?O?$KC@
CONST	SEGMENT
??_C@_08HIFFJPFE@?G?e?$LD?$PN?P?E?O?$KC@ DB 0c7H, 0e5H, 0b3H, 0fdH, 0d0H, 0c5H
	DB	0cfH, 0a2H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08DBECOLPN@?I?$LO?$LD?$PN?$CI?$CGD?$CJ@
CONST	SEGMENT
??_C@_08DBECOLPN@?I?$LO?$LD?$PN?$CI?$CGD?$CJ@ DB 0c9H, 0beH, 0b3H, 0fdH, '('
	DB	'&D)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KFPFMLHH@?H?$KL?Q?$KB?$CI?$CGA?$CJ?5?5?5?5?5Ctrl?$CLA@
CONST	SEGMENT
??_C@_0BE@KFPFMLHH@?H?$KL?Q?$KB?$CI?$CGA?$CJ?5?5?5?5?5Ctrl?$CLA@ DB 0c8H, 0abH
	DB	0d1H, 0a1H, '(&A)     Ctrl+A', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FLOLLKIF@?$LI?$LE?V?F?$CI?$CGC?$CJ?5?5?5?5?5Ctrl?$CLC@
CONST	SEGMENT
??_C@_0BE@FLOLLKIF@?$LI?$LE?V?F?$CI?$CGC?$CJ?5?5?5?5?5Ctrl?$CLC@ DB 0b8H, 0b4H
	DB	0d6H, 0c6H, '(&C)     Ctrl+C', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@PMGALCLJ@?P?E?O?$KC?J?d?$LD?v?$LN?S?$LP?Z?I?h?V?C?J?$KH?$LA?$NM?$KD?$KM?O?$LF?M?$LD?T?K?P?P?P@
CONST	SEGMENT
??_C@_0CN@PMGALCLJ@?P?E?O?$KC?J?d?$LD?v?$LN?S?$LP?Z?I?h?V?C?J?$KH?$LA?$NM?$KD?$KM?O?$LF?M?$LD?T?K?P?P?P@ DB 0d0H
	DB	0c5H, 0cfH, 0a2H, 0caH, 0e4H, 0b3H, 0f6H, 0bdH, 0d3H, 0bfH, 0daH
	DB	0c9H, 0e8H, 0d6H, 0c3H, 0caH, 0a7H, 0b0H, 0dcH, 0a3H, 0acH, 0cfH
	DB	0b5H, 0cdH, 0b3H, 0d4H, 0cbH, 0d0H, 0d0H, 0d0H, 0c5H, 0cfH, 0a2H
	DB	0bdH, 0abH, 0ceH, 0deH, 0b7H, 0a8H, 0cfH, 0d4H, 0caH, 0beH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03HCCJIJCF@RTF@
CONST	SEGMENT
??_C@_03HCCJIJCF@RTF@ DB 'RTF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LJEDAMFG@?P?E?O?$KC?N?D?$LM?$PO?$CI?$CK?4RTF?$CJ?$HM?$CK?4RTF?$HM?$HM@
CONST	SEGMENT
??_C@_0BI@LJEDAMFG@?P?E?O?$KC?N?D?$LM?$PO?$CI?$CK?4RTF?$CJ?$HM?$CK?4RTF?$HM?$HM@ DB 0d0H
	DB	0c5H, 0cfH, 0a2H, 0ceH, 0c4H, 0bcH, 0feH, '(*.RTF)|*.RTF||', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@LEMFCIBH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
CONST	SEGMENT
??_C@_0EJ@LEMFCIBH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@ DB 'g'
	DB	':\', 0cdH, 0f8H, 0baH, 0fcH, '\happygamewh\', 0b7H, 0feH, 0ceH
	DB	0f1H, 0b6H, 0cbH, '\', 0cfH, 0b5H, 0cdH, 0b3H, 0c4H, 0a3H, 0bfH
	DB	0e9H, '\', 0b7H, 0feH, 0ceH, 0f1H, 0c6H, 0f7H, 0d7H, 0e9H, 0bcH
	DB	0feH, '\', 0c4H, 0daH, 0baH, 0cbH, 0d2H, 0fdH, 0c7H, 0e6H, '\t'
	DB	'raceservice.cpp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ?messageMap@?1??GetThisMessageMap@CTraceServiceControl@@KGPBUAFX_MSGMAP@@XZ@4U3@B
CONST	SEGMENT
?messageMap@?1??GetThisMessageMap@CTraceServiceControl@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CWnd@@KGPBUAFX_MSGMAP@@XZ ; `CTraceServiceControl::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CTraceServiceControl@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
;	COMDAT ?_messageEntries@?1??GetThisMessageMap@CTraceServiceControl@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@?1??GetThisMessageMap@CTraceServiceControl@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 01H ; `CTraceServiceControl::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	0dH
	DD	FLAT:?OnCreate@CTraceServiceControl@@IAEHPAUtagCREATESTRUCTA@@@Z
	DD	0204H
	DD	00H
	DD	00H
	DD	00H
	DD	036H
	DD	FLAT:?OnRButtonDown@CTraceServiceControl@@IAEXIVCPoint@@@Z
	DD	0111H
	DD	00H
	DD	04c9H
	DD	04c9H
	DD	03aH
	DD	FLAT:?OnClearAll@CTraceServiceControl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	04caH
	DD	04caH
	DD	03aH
	DD	FLAT:?OnSelectAll@CTraceServiceControl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	04cbH
	DD	04cbH
	DD	03aH
	DD	FLAT:?OnCopyString@CTraceServiceControl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	04cdH
	DD	04cdH
	DD	03aH
	DD	FLAT:?OnSaveString@CTraceServiceControl@@IAEXXZ
	DD	0111H
	DD	00H
	DD	04ccH
	DD	04ccH
	DD	03aH
	DD	FLAT:?OnDeleteString@CTraceServiceControl@@IAEXXZ
	DD	0464H
	DD	00H
	DD	00H
	DD	00H
	DD	0eH
	DD	FLAT:?OnTraceServiceMessage@CTraceServiceControl@@IAEJIJ@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_7CTraceServiceControl@@6BITraceService@@@
CONST	SEGMENT
??_7CTraceServiceControl@@6BITraceService@@@ DD FLAT:??_R4CTraceServiceControl@@6BITraceService@@@ ; CTraceServiceControl::`vftable'
	DD	FLAT:?Release@CTraceServiceControl@@UAEXXZ
	DD	FLAT:?QueryInterface@CTraceServiceControl@@UAEPAXABU_GUID@@K@Z
	DD	FLAT:?TraceString@CTraceServiceControl@@UAE_NPBDW4enTraceLevel@@@Z
CONST	ENDS
;	COMDAT ??_7CTraceServiceControl@@6BCRichEditCtrl@@@
CONST	SEGMENT
??_7CTraceServiceControl@@6BCRichEditCtrl@@@ DD FLAT:??_R4CTraceServiceControl@@6BCRichEditCtrl@@@ ; CTraceServiceControl::`vftable'
	DD	FLAT:?GetRuntimeClass@CRichEditCtrl@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECTraceServiceControl@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CWnd@@UBEXXZ
	DD	FLAT:?Dump@CWnd@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CTraceServiceControl@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CTraceServiceControl@@MAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
CONST	ENDS
;	COMDAT ??_7ITraceService@@6B@
CONST	SEGMENT
??_7ITraceService@@6B@ DD FLAT:??_R4ITraceService@@6B@	; ITraceService::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7IUnknownEx@@6B@
CONST	SEGMENT
??_7IUnknownEx@@6B@ DD FLAT:??_R4IUnknownEx@@6B@	; IUnknownEx::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocnum', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\xlocale', 00H	; `string'
CONST	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$r	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
data$r	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$r	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ECTraceServiceControl@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnTraceServiceMessage@CTraceServiceControl@@IAEJIJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnTraceServiceMessage@CTraceServiceControl@@IAEJIJ@Z$0
__ehfuncinfo$?OnTraceServiceMessage@CTraceServiceControl@@IAEJIJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnTraceServiceMessage@CTraceServiceControl@@IAEJIJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnRButtonDown@CTraceServiceControl@@IAEXIVCPoint@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnRButtonDown@CTraceServiceControl@@IAEXIVCPoint@@@Z$0
__ehfuncinfo$?OnRButtonDown@CTraceServiceControl@@IAEXIVCPoint@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnRButtonDown@CTraceServiceControl@@IAEXIVCPoint@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z$3
__ehfuncinfo$?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadMessage@CTraceServiceControl@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMessage@CTraceServiceControl@@QAE_NPBD@Z$0
__ehfuncinfo$?LoadMessage@CTraceServiceControl@@QAE_NPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadMessage@CTraceServiceControl@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?TraceString@CTraceServiceControl@@UAE_NPBDW4enTraceLevel@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?TraceString@CTraceServiceControl@@UAE_NPBDW4enTraceLevel@@@Z$0
__ehfuncinfo$?TraceString@CTraceServiceControl@@UAE_NPBDW4enTraceLevel@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?TraceString@CTraceServiceControl@@UAE_NPBDW4enTraceLevel@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CTraceServiceControl@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CTraceServiceControl@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CTraceServiceControl@@QAE@XZ$1
__ehfuncinfo$??0CTraceServiceControl@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CTraceServiceControl@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
tv66 = -28						; size = 4
tv86 = -24						; size = 4
__Ptrdest$ = -20					; size = 4
__Ptrnext$1 = -16					; size = 4
__Count$ = -12						; size = 4
tv83 = -8						; size = 4
tv89 = -1						; size = 1
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 664  : 	{	// convert C string to _Elem sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH

; 665  : 	size_t _Count = _CSTD strlen(_Ptr) + 1;

  00006	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR tv83[ebp], eax
  0000c	8b 4d f8	 mov	 ecx, DWORD PTR tv83[ebp]
  0000f	83 c1 01	 add	 ecx, 1
  00012	89 4d e8	 mov	 DWORD PTR tv86[ebp], ecx
$LL7@Maklocstr:
  00015	8b 55 f8	 mov	 edx, DWORD PTR tv83[ebp]
  00018	8a 02		 mov	 al, BYTE PTR [edx]
  0001a	88 45 ff	 mov	 BYTE PTR tv89[ebp], al
  0001d	83 45 f8 01	 add	 DWORD PTR tv83[ebp], 1
  00021	80 7d ff 00	 cmp	 BYTE PTR tv89[ebp], 0
  00025	75 ee		 jne	 SHORT $LL7@Maklocstr
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv83[ebp]
  0002a	2b 4d e8	 sub	 ecx, DWORD PTR tv86[ebp]
  0002d	89 4d e4	 mov	 DWORD PTR tv66[ebp], ecx
  00030	8b 55 e4	 mov	 edx, DWORD PTR tv66[ebp]
  00033	83 c2 01	 add	 edx, 1
  00036	89 55 f4	 mov	 DWORD PTR __Count$[ebp], edx

; 666  : 
; 667  : 	_Elem *_Ptrdest = (_Elem *)_calloc_dbg(_Count, sizeof (_Elem),

  00039	68 9c 02 00 00	 push	 668			; 0000029cH
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00043	6a 02		 push	 2
  00045	6a 01		 push	 1
  00047	8b 45 f4	 mov	 eax, DWORD PTR __Count$[ebp]
  0004a	50		 push	 eax
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00051	83 c4 14	 add	 esp, 20			; 00000014H
  00054	89 45 ec	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 668  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 669  : 
; 670  : 	if (!_Ptrdest)

  00057	83 7d ec 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  0005b	75 05		 jne	 SHORT $LN5@Maklocstr

; 671  : 		_Xbad_alloc();

  0005d	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 672  : 
; 673  : 	for (_Elem *_Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr)

  00062	8b 4d ec	 mov	 ecx, DWORD PTR __Ptrdest$[ebp]
  00065	89 4d f0	 mov	 DWORD PTR __Ptrnext$1[ebp], ecx
  00068	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  0006a	8b 55 f4	 mov	 edx, DWORD PTR __Count$[ebp]
  0006d	83 ea 01	 sub	 edx, 1
  00070	89 55 f4	 mov	 DWORD PTR __Count$[ebp], edx
  00073	8b 45 f0	 mov	 eax, DWORD PTR __Ptrnext$1[ebp]
  00076	83 c0 01	 add	 eax, 1
  00079	89 45 f0	 mov	 DWORD PTR __Ptrnext$1[ebp], eax
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0007f	83 c1 01	 add	 ecx, 1
  00082	89 4d 08	 mov	 DWORD PTR __Ptr$[ebp], ecx
$LN4@Maklocstr:
  00085	83 7d f4 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00089	76 0c		 jbe	 SHORT $LN3@Maklocstr

; 674  : 		*_Ptrnext = (_Elem)(unsigned char)*_Ptr;

  0008b	8b 55 f0	 mov	 edx, DWORD PTR __Ptrnext$1[ebp]
  0008e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00091	8a 08		 mov	 cl, BYTE PTR [eax]
  00093	88 0a		 mov	 BYTE PTR [edx], cl
  00095	eb d3		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 675  : 
; 676  : 	return (_Ptrdest);

  00097	8b 45 ec	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN6@Maklocstr:

; 677  : 	}

  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ??_ECTraceServiceControl@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ECTraceServiceControl@@UAEPAXI@Z PROC		; CTraceServiceControl::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ECTraceServiceControl@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00029	83 e0 02	 and	 eax, 2
  0002c	74 47		 je	 SHORT $LN2@vector
  0002e	68 00 00 00 00	 push	 OFFSET ??1CTraceServiceControl@@UAE@XZ ; CTraceServiceControl::~CTraceServiceControl
  00033	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00039	52		 push	 edx
  0003a	68 d0 40 00 00	 push	 16592			; 000040d0H
  0003f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00048	8b 4d 08	 mov	 ecx, DWORD PTR ___flags$[ebp]
  0004b	83 e1 01	 and	 ecx, 1
  0004e	74 1d		 je	 SHORT $LN3@vector
  00050	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00053	69 42 fc d0 40
	00 00		 imul	 eax, DWORD PTR [edx-4], 16592
  0005a	83 c0 04	 add	 eax, 4
  0005d	50		 push	 eax
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 e9 04	 sub	 ecx, 4
  00064	51		 push	 ecx
  00065	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006a	83 c4 08	 add	 esp, 8
$LN3@vector:
  0006d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00070	83 e8 04	 sub	 eax, 4
  00073	eb 37		 jmp	 SHORT $LN8@vector
$LN2@vector:
  00075	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	e8 00 00 00 00	 call	 ??1CTraceServiceControl@@UAE@XZ ; CTraceServiceControl::~CTraceServiceControl
  0007d	8b 55 08	 mov	 edx, DWORD PTR ___flags$[ebp]
  00080	83 e2 01	 and	 edx, 1
  00083	74 24		 je	 SHORT $LN4@vector
  00085	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00088	83 e0 04	 and	 eax, 4
  0008b	75 0b		 jne	 SHORT $LN5@vector
  0008d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	51		 push	 ecx
  00091	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00096	eb 11		 jmp	 SHORT $LN4@vector
$LN5@vector:

  00098	68 d0 40 00 00	 push	 16592			; 000040d0H
  0009d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000a0	52		 push	 edx
  000a1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000a6	83 c4 08	 add	 esp, 8
$LN4@vector:
  000a9	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN8@vector:
  000ac	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000af	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b6	59		 pop	 ecx
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ECTraceServiceControl@@UAEPAXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ECTraceServiceControl@@UAEPAXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ECTraceServiceControl@@UAEPAXI@Z ENDP		; CTraceServiceControl::`vector deleting destructor'
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ??_GCTraceServiceControl@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCTraceServiceControl@@UAEPAXI@Z PROC		; CTraceServiceControl::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CTraceServiceControl@@UAE@XZ ; CTraceServiceControl::~CTraceServiceControl
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 24		 je	 SHORT $LN2@scalar
  00017	8b 4d 08	 mov	 ecx, DWORD PTR ___flags$[ebp]
  0001a	83 e1 04	 and	 ecx, 4
  0001d	75 0b		 jne	 SHORT $LN3@scalar
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  00028	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:

  0002a	68 d0 40 00 00	 push	 16592			; 000040d0H
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00038	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
??_GCTraceServiceControl@@UAEPAXI@Z ENDP		; CTraceServiceControl::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?GetMessageMap@CTraceServiceControl@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CTraceServiceControl@@MBEPBUAFX_MSGMAP@@XZ PROC ; CTraceServiceControl::GetMessageMap, COMDAT
; _this$ = ecx

; 40   : BEGIN_MESSAGE_MAP(CTraceServiceControl, CRichEditCtrl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	e8 00 00 00 00	 call	 ?GetThisMessageMap@CTraceServiceControl@@KGPBUAFX_MSGMAP@@XZ ; CTraceServiceControl::GetThisMessageMap
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?GetMessageMap@CTraceServiceControl@@MBEPBUAFX_MSGMAP@@XZ ENDP ; CTraceServiceControl::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?GetThisMessageMap@CTraceServiceControl@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CTraceServiceControl@@KGPBUAFX_MSGMAP@@XZ PROC ; CTraceServiceControl::GetThisMessageMap, COMDAT

; 40   : BEGIN_MESSAGE_MAP(CTraceServiceControl, CRichEditCtrl)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 41   : 
; 42   :     // 系统消息
; 43   :     ON_WM_CREATE()
; 44   :     ON_WM_RBUTTONDOWN()
; 45   : 
; 46   :     // 菜单消息
; 47   :     ON_COMMAND(IDM_CLEAR_ALL, OnClearAll)
; 48   :     ON_COMMAND(IDM_SELECT_ALL, OnSelectAll)
; 49   :     ON_COMMAND(IDM_COPY_STRING, OnCopyString)
; 50   :     ON_COMMAND(IDM_SAVE_STRING, OnSaveString)
; 51   :     ON_COMMAND(IDM_DELETE_STRING, OnDeleteString)
; 52   : 
; 53   :     // 自定消息
; 54   :     ON_MESSAGE(WM_TRACE_SERVICE_MESSAGE, OnTraceServiceMessage)
; 55   : 
; 56   : END_MESSAGE_MAP()

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CTraceServiceControl@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetThisMessageMap@CTraceServiceControl@@KGPBUAFX_MSGMAP@@XZ ENDP ; CTraceServiceControl::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?OnTraceServiceMessage@CTraceServiceControl@@IAEJIJ@Z
_TEXT	SEGMENT
_ThreadLock$ = -220					; size = 12
$T2 = -208						; size = 4
$T3 = -204						; size = 4
_pTraceInfo$ = -200					; size = 4
_lTextLength$4 = -196					; size = 4
_nLineCount$ = -192					; size = 4
_DataHead$ = -188					; size = 4
_this$ = -184						; size = 4
_CharFormat$ = -180					; size = 84
_SystemTime$ = -96					; size = 16
_szTimeBuffer$ = -80					; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_wParam$ = 8						; size = 4
_lParam$ = 12						; size = 4
?OnTraceServiceMessage@CTraceServiceControl@@IAEJIJ@Z PROC ; CTraceServiceControl::OnTraceServiceMessage, COMDAT
; _this$ = ecx

; 394  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnTraceServiceMessage@CTraceServiceControl@@IAEJIJ@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 8d 48 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 395  :     // 获取数据
; 396  :     tagDataHead DataHead;
; 397  :     CWHDataLocker ThreadLock(m_CriticalSection);

  00031	6a 01		 push	 1
  00033	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00039	05 ac 40 00 00	 add	 eax, 16556		; 000040acH
  0003e	50		 push	 eax
  0003f	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHDataLocker@@QAE@AAVCCriticalSection@@_N@Z
  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 398  :     m_DataQueue.DistillData(DataHead, m_cbBuffer, sizeof(m_cbBuffer));

  00052	68 00 40 00 00	 push	 16384			; 00004000H
  00057	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  00063	51		 push	 ecx
  00064	8d 95 44 ff ff
	ff		 lea	 edx, DWORD PTR _DataHead$[ebp]
  0006a	52		 push	 edx
  0006b	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00071	81 c1 8c 40 00
	00		 add	 ecx, 16524		; 0000408cH
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?DistillData@CWHDataQueue@@QAE_NAAUtagDataHead@@PAXG@Z

; 399  : 
; 400  :     // 效验数据
; 401  :     ASSERT(DataHead.wIdentifier == IDT_TRACE_STRING);

  0007d	0f b7 85 46 ff
	ff ff		 movzx	 eax, WORD PTR _DataHead$[ebp+2]
  00084	83 f8 01	 cmp	 eax, 1
  00087	74 14		 je	 SHORT $LN5@OnTraceSer
  00089	68 91 01 00 00	 push	 401			; 00000191H
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@LEMFCIBH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00093	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00098	85 c0		 test	 eax, eax
  0009a	74 01		 je	 SHORT $LN5@OnTraceSer
  0009c	cc		 int	 3
$LN5@OnTraceSer:

; 402  :     if (DataHead.wIdentifier != IDT_TRACE_STRING)

  0009d	0f b7 95 46 ff
	ff ff		 movzx	 edx, WORD PTR _DataHead$[ebp+2]
  000a4	83 fa 01	 cmp	 edx, 1
  000a7	74 28		 je	 SHORT $LN2@OnTraceSer

; 403  :         return 0;

  000a9	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp], 0
  000b3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ba	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
  000c6	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  000cc	e9 c3 01 00 00	 jmp	 $LN1@OnTraceSer
$LN2@OnTraceSer:

; 404  : 
; 405  :     // 溢出判断
; 406  :     INT nLineCount = GetLineCount();

  000d1	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	e8 00 00 00 00	 call	 ?GetLineCount@CRichEditCtrl@@QBEHXZ ; CRichEditCtrl::GetLineCount
  000dc	89 85 40 ff ff
	ff		 mov	 DWORD PTR _nLineCount$[ebp], eax

; 407  :     if ((m_lMaxLineCount > 0) && (nLineCount >= m_lMaxLineCount))

  000e2	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  000e8	83 b8 84 00 00
	00 00		 cmp	 DWORD PTR [eax+132], 0
  000ef	0f 8e b2 00 00
	00		 jle	 $LN3@OnTraceSer
  000f5	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR _nLineCount$[ebp]
  00101	3b 91 84 00 00
	00		 cmp	 edx, DWORD PTR [ecx+132]
  00107	0f 8c 9a 00 00
	00		 jl	 $LN3@OnTraceSer

; 408  :     {
; 409  :         // 清除消息
; 410  :         ASSERT(m_lMaxLineCount > m_lReserveLineCount);

  0010d	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00113	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00119	8b 90 84 00 00
	00		 mov	 edx, DWORD PTR [eax+132]
  0011f	3b 91 88 00 00
	00		 cmp	 edx, DWORD PTR [ecx+136]
  00125	7f 14		 jg	 SHORT $LN6@OnTraceSer
  00127	68 9a 01 00 00	 push	 410			; 0000019aH
  0012c	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@LEMFCIBH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00131	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00136	85 c0		 test	 eax, eax
  00138	74 01		 je	 SHORT $LN6@OnTraceSer
  0013a	cc		 int	 3
$LN6@OnTraceSer:

; 411  :         SetSel(0, LineIndex(nLineCount - m_lReserveLineCount));

  0013b	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00141	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR _nLineCount$[ebp]
  00147	2b 91 88 00 00
	00		 sub	 edx, DWORD PTR [ecx+136]
  0014d	52		 push	 edx
  0014e	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00154	e8 00 00 00 00	 call	 ?LineIndex@CRichEditCtrl@@QBEHH@Z ; CRichEditCtrl::LineIndex
  00159	50		 push	 eax
  0015a	6a 00		 push	 0
  0015c	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00162	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 412  :         ReplaceSel(TEXT(""));

  00167	6a 00		 push	 0
  00169	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0016e	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00174	e8 00 00 00 00	 call	 ?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z ; CRichEditCtrl::ReplaceSel

; 413  : 
; 414  :         // 设置光标
; 415  :         LONG lTextLength = GetTextLengthEx(GTL_NUMCHARS);

  00179	6a ff		 push	 -1
  0017b	6a 08		 push	 8
  0017d	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00183	e8 00 00 00 00	 call	 ?GetTextLengthEx@CRichEditCtrl@@QBEJKI@Z ; CRichEditCtrl::GetTextLengthEx
  00188	89 85 3c ff ff
	ff		 mov	 DWORD PTR _lTextLength$4[ebp], eax

; 416  :         SetSel(lTextLength, lTextLength);

  0018e	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _lTextLength$4[ebp]
  00194	50		 push	 eax
  00195	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _lTextLength$4[ebp]
  0019b	51		 push	 ecx
  0019c	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  001a2	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel
$LN3@OnTraceSer:

; 417  :     }
; 418  : 
; 419  :     // 获取时间
; 420  :     SYSTEMTIME SystemTime;
; 421  :     TCHAR szTimeBuffer[64];
; 422  :     GetLocalTime(&SystemTime);

  001a7	8d 55 a0	 lea	 edx, DWORD PTR _SystemTime$[ebp]
  001aa	52		 push	 edx
  001ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 423  :     _sntprintf(szTimeBuffer, CountArray(szTimeBuffer), TEXT("【 %04d-%02d-%02d %02d:%02d:%02d 】"),

  001b1	0f b7 45 ac	 movzx	 eax, WORD PTR _SystemTime$[ebp+12]
  001b5	50		 push	 eax
  001b6	0f b7 4d aa	 movzx	 ecx, WORD PTR _SystemTime$[ebp+10]
  001ba	51		 push	 ecx
  001bb	0f b7 55 a8	 movzx	 edx, WORD PTR _SystemTime$[ebp+8]
  001bf	52		 push	 edx
  001c0	0f b7 45 a6	 movzx	 eax, WORD PTR _SystemTime$[ebp+6]
  001c4	50		 push	 eax
  001c5	0f b7 4d a2	 movzx	 ecx, WORD PTR _SystemTime$[ebp+2]
  001c9	51		 push	 ecx
  001ca	0f b7 55 a0	 movzx	 edx, WORD PTR _SystemTime$[ebp]
  001ce	52		 push	 edx
  001cf	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@BMNGBAFE@?$KB?$LO?5?$CF04d?9?$CF02d?9?$CF02d?5?$CF02d?3?$CF02d?3?$CF02@
  001d4	6a 40		 push	 64			; 00000040H
  001d6	8d 45 b0	 lea	 eax, DWORD PTR _szTimeBuffer$[ebp]
  001d9	50		 push	 eax
  001da	e8 00 00 00 00	 call	 __snprintf
  001df	83 c4 24	 add	 esp, 36			; 00000024H

; 424  :         SystemTime.wYear, SystemTime.wMonth, SystemTime.wDay, SystemTime.wHour, SystemTime.wMinute, SystemTime.wSecond);
; 425  : 
; 426  :     // 插入时间
; 427  :     CHARFORMAT2 CharFormat;
; 428  :     ZeroMemory(&CharFormat, sizeof(CharFormat));

  001e2	6a 54		 push	 84			; 00000054H
  001e4	6a 00		 push	 0
  001e6	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR _CharFormat$[ebp]
  001ec	51		 push	 ecx
  001ed	e8 00 00 00 00	 call	 _memset
  001f2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 429  :     CharFormat.cbSize = sizeof(CharFormat);

  001f5	c7 85 4c ff ff
	ff 54 00 00 00	 mov	 DWORD PTR _CharFormat$[ebp], 84 ; 00000054H

; 430  :     CharFormat.dwMask = CFM_COLOR;

  001ff	c7 85 50 ff ff
	ff 00 00 00 40	 mov	 DWORD PTR _CharFormat$[ebp+4], 1073741824 ; 40000000H

; 431  :     CharFormat.crTextColor = COLOR_TIME;

  00209	c7 85 60 ff ff
	ff 0a 0a 0a 00	 mov	 DWORD PTR _CharFormat$[ebp+20], 657930 ; 000a0a0aH

; 432  :     InsertString(szTimeBuffer, CharFormat);

  00213	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR _CharFormat$[ebp]
  00219	52		 push	 edx
  0021a	8d 45 b0	 lea	 eax, DWORD PTR _szTimeBuffer$[ebp]
  0021d	50		 push	 eax
  0021e	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  00224	e8 00 00 00 00	 call	 ?InsertString@CTraceServiceControl@@AAE_NPBDAAUCHARFORMAT2A@@@Z ; CTraceServiceControl::InsertString

; 433  : 
; 434  :     // 插入消息
; 435  :     tagTraceInfo * pTraceInfo = (tagTraceInfo *)m_cbBuffer;

  00229	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0022f	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  00235	89 8d 38 ff ff
	ff		 mov	 DWORD PTR _pTraceInfo$[ebp], ecx

; 436  :     CharFormat.crTextColor = GetTraceColor(pTraceInfo->TraceLevel);

  0023b	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR _pTraceInfo$[ebp]
  00241	8b 02		 mov	 eax, DWORD PTR [edx]
  00243	50		 push	 eax
  00244	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0024a	e8 00 00 00 00	 call	 ?GetTraceColor@CTraceServiceControl@@AAEKW4enTraceLevel@@@Z ; CTraceServiceControl::GetTraceColor
  0024f	89 85 60 ff ff
	ff		 mov	 DWORD PTR _CharFormat$[ebp+20], eax

; 437  :     InsertString(pTraceInfo->szSring, CharFormat);

  00255	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR _CharFormat$[ebp]
  0025b	51		 push	 ecx
  0025c	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR _pTraceInfo$[ebp]
  00262	83 c2 04	 add	 edx, 4
  00265	52		 push	 edx
  00266	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  0026c	e8 00 00 00 00	 call	 ?InsertString@CTraceServiceControl@@AAE_NPBDAAUCHARFORMAT2A@@@Z ; CTraceServiceControl::InsertString

; 438  : 
; 439  :     return 0;

  00271	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  0027b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00282	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00288	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
  0028e	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
$LN1@OnTraceSer:

; 440  : }

  00294	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00297	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0029e	59		 pop	 ecx
  0029f	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002a2	33 cd		 xor	 ecx, ebp
  002a4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002a9	8b e5		 mov	 esp, ebp
  002ab	5d		 pop	 ebp
  002ac	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnTraceServiceMessage@CTraceServiceControl@@IAEJIJ@Z$0:
  00000	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
__ehhandler$?OnTraceServiceMessage@CTraceServiceControl@@IAEJIJ@Z:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 8a 2c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-212]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnTraceServiceMessage@CTraceServiceControl@@IAEJIJ@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnTraceServiceMessage@CTraceServiceControl@@IAEJIJ@Z ENDP ; CTraceServiceControl::OnTraceServiceMessage
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?OnRButtonDown@CTraceServiceControl@@IAEXIVCPoint@@@Z
_TEXT	SEGMENT
_FunctionMenu$ = -32					; size = 8
_nEnableMask$ = -24					; size = 4
tv137 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nFlags$ = 8						; size = 4
_Point$ = 12						; size = 8
?OnRButtonDown@CTraceServiceControl@@IAEXIVCPoint@@@Z PROC ; CTraceServiceControl::OnRButtonDown, COMDAT
; _this$ = ecx

; 364  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnRButtonDown@CTraceServiceControl@@IAEXIVCPoint@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 365  :     // 设置焦点
; 366  :     SetFocus();

  00028	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?SetFocus@CWnd@@QAEPAV1@XZ ; CWnd::SetFocus

; 367  : 
; 368  :     // 构造菜单
; 369  :     CMenu FunctionMenu;

  00030	8d 4d e0	 lea	 ecx, DWORD PTR _FunctionMenu$[ebp]
  00033	e8 00 00 00 00	 call	 ??0CMenu@@QAE@XZ	; CMenu::CMenu
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 370  :     FunctionMenu.CreatePopupMenu();

  0003f	8d 4d e0	 lea	 ecx, DWORD PTR _FunctionMenu$[ebp]
  00042	e8 00 00 00 00	 call	 ?CreatePopupMenu@CMenu@@QAEHXZ ; CMenu::CreatePopupMenu

; 371  : 
; 372  :     // 建立菜单
; 373  :     FunctionMenu.AppendMenu(MF_STRING, IDM_COPY_STRING, TEXT("复制(&C)     Ctrl+C"));

  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FLOLLKIF@?$LI?$LE?V?F?$CI?$CGC?$CJ?5?5?5?5?5Ctrl?$CLC@
  0004c	68 cb 04 00 00	 push	 1227			; 000004cbH
  00051	6a 00		 push	 0
  00053	8d 4d e0	 lea	 ecx, DWORD PTR _FunctionMenu$[ebp]
  00056	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA

; 374  :     FunctionMenu.AppendMenu(MF_STRING, IDM_SELECT_ALL, TEXT("全选(&A)     Ctrl+A"));

  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KFPFMLHH@?H?$KL?Q?$KB?$CI?$CGA?$CJ?5?5?5?5?5Ctrl?$CLA@
  00060	68 ca 04 00 00	 push	 1226			; 000004caH
  00065	6a 00		 push	 0
  00067	8d 4d e0	 lea	 ecx, DWORD PTR _FunctionMenu$[ebp]
  0006a	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA

; 375  :     FunctionMenu.AppendMenu(MF_STRING, IDM_DELETE_STRING, TEXT("删除(&D)"));

  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_08DBECOLPN@?I?$LO?$LD?$PN?$CI?$CGD?$CJ@
  00074	68 cc 04 00 00	 push	 1228			; 000004ccH
  00079	6a 00		 push	 0
  0007b	8d 4d e0	 lea	 ecx, DWORD PTR _FunctionMenu$[ebp]
  0007e	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA

; 376  :     FunctionMenu.AppendMenu(MF_STRING, IDM_CLEAR_ALL, TEXT("清除信息"));

  00083	68 00 00 00 00	 push	 OFFSET ??_C@_08HIFFJPFE@?G?e?$LD?$PN?P?E?O?$KC@
  00088	68 c9 04 00 00	 push	 1225			; 000004c9H
  0008d	6a 00		 push	 0
  0008f	8d 4d e0	 lea	 ecx, DWORD PTR _FunctionMenu$[ebp]
  00092	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA

; 377  :     FunctionMenu.AppendMenu(MF_SEPARATOR);

  00097	6a 00		 push	 0
  00099	6a 00		 push	 0
  0009b	68 00 08 00 00	 push	 2048			; 00000800H
  000a0	8d 4d e0	 lea	 ecx, DWORD PTR _FunctionMenu$[ebp]
  000a3	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA

; 378  :     FunctionMenu.AppendMenu(MF_STRING, IDM_SAVE_STRING, TEXT("保存信息..."));

  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MGJHDPBM@?$LB?$KD?$LE?f?P?E?O?$KC?4?4?4@
  000ad	68 cd 04 00 00	 push	 1229			; 000004cdH
  000b2	6a 00		 push	 0
  000b4	8d 4d e0	 lea	 ecx, DWORD PTR _FunctionMenu$[ebp]
  000b7	e8 00 00 00 00	 call	 ?AppendMenuA@CMenu@@QAEHIIPBD@Z ; CMenu::AppendMenuA

; 379  : 
; 380  :     // 禁止菜单
; 381  :     UINT nEnableMask = ((GetSelectionType() != SEL_EMPTY) ? 0 : MF_GRAYED);

  000bc	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bf	e8 00 00 00 00	 call	 ?GetSelectionType@CRichEditCtrl@@QBEGXZ ; CRichEditCtrl::GetSelectionType
  000c4	0f b7 c0	 movzx	 eax, ax
  000c7	85 c0		 test	 eax, eax
  000c9	74 09		 je	 SHORT $LN3@OnRButtonD
  000cb	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
  000d2	eb 07		 jmp	 SHORT $LN4@OnRButtonD
$LN3@OnRButtonD:
  000d4	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
$LN4@OnRButtonD:
  000db	8b 4d ec	 mov	 ecx, DWORD PTR tv137[ebp]
  000de	89 4d e8	 mov	 DWORD PTR _nEnableMask$[ebp], ecx

; 382  :     FunctionMenu.EnableMenuItem(IDM_COPY_STRING, MF_BYCOMMAND | nEnableMask);

  000e1	8b 55 e8	 mov	 edx, DWORD PTR _nEnableMask$[ebp]
  000e4	52		 push	 edx
  000e5	68 cb 04 00 00	 push	 1227			; 000004cbH
  000ea	8d 4d e0	 lea	 ecx, DWORD PTR _FunctionMenu$[ebp]
  000ed	e8 00 00 00 00	 call	 ?EnableMenuItem@CMenu@@QAEIII@Z ; CMenu::EnableMenuItem

; 383  :     FunctionMenu.EnableMenuItem(IDM_DELETE_STRING, MF_BYCOMMAND | nEnableMask);

  000f2	8b 45 e8	 mov	 eax, DWORD PTR _nEnableMask$[ebp]
  000f5	50		 push	 eax
  000f6	68 cc 04 00 00	 push	 1228			; 000004ccH
  000fb	8d 4d e0	 lea	 ecx, DWORD PTR _FunctionMenu$[ebp]
  000fe	e8 00 00 00 00	 call	 ?EnableMenuItem@CMenu@@QAEIII@Z ; CMenu::EnableMenuItem

; 384  : 
; 385  :     // 显示菜单
; 386  :     ClientToScreen(&Point);

  00103	8d 4d 0c	 lea	 ecx, DWORD PTR _Point$[ebp]
  00106	51		 push	 ecx
  00107	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010a	e8 00 00 00 00	 call	 ?ClientToScreen@CWnd@@QBEXPAUtagPOINT@@@Z ; CWnd::ClientToScreen

; 387  :     FunctionMenu.TrackPopupMenu(TPM_RIGHTBUTTON, Point.x, Point.y, this);

  0010f	6a 00		 push	 0
  00111	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00114	52		 push	 edx
  00115	8b 45 10	 mov	 eax, DWORD PTR _Point$[ebp+4]
  00118	50		 push	 eax
  00119	8b 4d 0c	 mov	 ecx, DWORD PTR _Point$[ebp]
  0011c	51		 push	 ecx
  0011d	6a 02		 push	 2
  0011f	8d 4d e0	 lea	 ecx, DWORD PTR _FunctionMenu$[ebp]
  00122	e8 00 00 00 00	 call	 ?TrackPopupMenu@CMenu@@QAEHIHHPAVCWnd@@PBUtagRECT@@@Z ; CMenu::TrackPopupMenu

; 388  : 
; 389  :     return;

  00127	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0012e	8d 4d e0	 lea	 ecx, DWORD PTR _FunctionMenu$[ebp]
  00131	e8 00 00 00 00	 call	 ??1CMenu@@UAE@XZ	; CMenu::~CMenu

; 390  : }

  00136	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00139	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00140	59		 pop	 ecx
  00141	8b e5		 mov	 esp, ebp
  00143	5d		 pop	 ebp
  00144	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnRButtonDown@CTraceServiceControl@@IAEXIVCPoint@@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _FunctionMenu$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CMenu@@UAE@XZ	; CMenu::~CMenu
__ehhandler$?OnRButtonDown@CTraceServiceControl@@IAEXIVCPoint@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnRButtonDown@CTraceServiceControl@@IAEXIVCPoint@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnRButtonDown@CTraceServiceControl@@IAEXIVCPoint@@@Z ENDP ; CTraceServiceControl::OnRButtonDown
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?OnCreate@CTraceServiceControl@@IAEHPAUtagCREATESTRUCTA@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpCreateStruct$ = 8					; size = 4
?OnCreate@CTraceServiceControl@@IAEHPAUtagCREATESTRUCTA@@@Z PROC ; CTraceServiceControl::OnCreate, COMDAT
; _this$ = ecx

; 352  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 353  :     if (__super::OnCreate(lpCreateStruct) == -1)

  00007	8b 45 08	 mov	 eax, DWORD PTR _lpCreateStruct$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?OnCreate@CWnd@@IAEHPAUtagCREATESTRUCTA@@@Z ; CWnd::OnCreate
  00013	83 f8 ff	 cmp	 eax, -1
  00016	75 05		 jne	 SHORT $LN2@OnCreate

; 354  :         return -1;

  00018	83 c8 ff	 or	 eax, -1
  0001b	eb 0a		 jmp	 SHORT $LN1@OnCreate
$LN2@OnCreate:

; 355  : 
; 356  :     // 配置控件
; 357  :     InitializeService();

  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?InitializeService@CTraceServiceControl@@AAEXXZ ; CTraceServiceControl::InitializeService

; 358  : 
; 359  :     return 0;

  00025	33 c0		 xor	 eax, eax
$LN1@OnCreate:

; 360  : }

  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?OnCreate@CTraceServiceControl@@IAEHPAUtagCREATESTRUCTA@@@Z ENDP ; CTraceServiceControl::OnCreate
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?OnDeleteString@CTraceServiceControl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnDeleteString@CTraceServiceControl@@IAEXXZ PROC	; CTraceServiceControl::OnDeleteString, COMDAT
; _this$ = ecx

; 343  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 344  :     // 删除字符
; 345  :     ReplaceSel(TEXT(""));

  00007	6a 00		 push	 0
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z ; CRichEditCtrl::ReplaceSel

; 346  : 
; 347  :     return;
; 348  : }

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?OnDeleteString@CTraceServiceControl@@IAEXXZ ENDP	; CTraceServiceControl::OnDeleteString
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?OnSaveString@CTraceServiceControl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnSaveString@CTraceServiceControl@@IAEXXZ PROC		; CTraceServiceControl::OnSaveString, COMDAT
; _this$ = ecx

; 334  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  :     // 保存信息
; 336  :     SaveMessage(NULL);

  00007	6a 00		 push	 0
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z ; CTraceServiceControl::SaveMessage

; 337  : 
; 338  :     return;
; 339  : }

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?OnSaveString@CTraceServiceControl@@IAEXXZ ENDP		; CTraceServiceControl::OnSaveString
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?OnCopyString@CTraceServiceControl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnCopyString@CTraceServiceControl@@IAEXXZ PROC		; CTraceServiceControl::OnCopyString, COMDAT
; _this$ = ecx

; 325  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 326  :     // 拷贝字符
; 327  :     Copy();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Copy@CRichEditCtrl@@QAEXXZ ; CRichEditCtrl::Copy

; 328  : 
; 329  :     return;
; 330  : }

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?OnCopyString@CTraceServiceControl@@IAEXXZ ENDP		; CTraceServiceControl::OnCopyString
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?OnSelectAll@CTraceServiceControl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnSelectAll@CTraceServiceControl@@IAEXXZ PROC		; CTraceServiceControl::OnSelectAll, COMDAT
; _this$ = ecx

; 316  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 317  :     // 全部选择
; 318  :     SetSel(0L, -1L);

  00007	6a ff		 push	 -1
  00009	6a 00		 push	 0
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 319  : 
; 320  :     return;
; 321  : }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?OnSelectAll@CTraceServiceControl@@IAEXXZ ENDP		; CTraceServiceControl::OnSelectAll
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?OnClearAll@CTraceServiceControl@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnClearAll@CTraceServiceControl@@IAEXXZ PROC		; CTraceServiceControl::OnClearAll, COMDAT
; _this$ = ecx

; 306  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 307  :     // 删除信息
; 308  :     SetSel(0L, -1L);

  00007	6a ff		 push	 -1
  00009	6a 00		 push	 0
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 309  :     ReplaceSel(NULL);

  00013	6a 00		 push	 0
  00015	6a 00		 push	 0
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z ; CRichEditCtrl::ReplaceSel

; 310  : 
; 311  :     return;
; 312  : }

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?OnClearAll@CTraceServiceControl@@IAEXXZ ENDP		; CTraceServiceControl::OnClearAll
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?SaveCallBack@CTraceServiceControl@@CGKKPAEJPAJ@Z
_TEXT	SEGMENT
_dwCookie$ = 8						; size = 4
_pbBuff$ = 12						; size = 4
_cb$ = 16						; size = 4
_pcb$ = 20						; size = 4
?SaveCallBack@CTraceServiceControl@@CGKKPAEJPAJ@Z PROC	; CTraceServiceControl::SaveCallBack, COMDAT

; 297  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 298  :     // 写入文件
; 299  :     ((CFile *)(LONGLONG)(dwCookie))->Write(pbBuff, *pcb);

  00003	8b 45 14	 mov	 eax, DWORD PTR _pcb$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	51		 push	 ecx
  00009	8b 55 0c	 mov	 edx, DWORD PTR _pbBuff$[ebp]
  0000c	52		 push	 edx
  0000d	8b 45 08	 mov	 eax, DWORD PTR _dwCookie$[ebp]
  00010	8b 10		 mov	 edx, DWORD PTR [eax]
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _dwCookie$[ebp]
  00015	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00018	ff d0		 call	 eax

; 300  : 
; 301  :     return 0;

  0001a	33 c0		 xor	 eax, eax

; 302  : }

  0001c	5d		 pop	 ebp
  0001d	c2 10 00	 ret	 16			; 00000010H
?SaveCallBack@CTraceServiceControl@@CGKKPAEJPAJ@Z ENDP	; CTraceServiceControl::SaveCallBack
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?LoadCallBack@CTraceServiceControl@@CGKKPAEJPAJ@Z
_TEXT	SEGMENT
_dwCookie$ = 8						; size = 4
_pbBuff$ = 12						; size = 4
_cb$ = 16						; size = 4
_pcb$ = 20						; size = 4
?LoadCallBack@CTraceServiceControl@@CGKKPAEJPAJ@Z PROC	; CTraceServiceControl::LoadCallBack, COMDAT

; 288  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 289  :     // 读取文件
; 290  :     *pcb = ((CFile *)(LONGLONG)(dwCookie))->Read(pbBuff, cb);

  00003	8b 45 10	 mov	 eax, DWORD PTR _cb$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 0c	 mov	 ecx, DWORD PTR _pbBuff$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 08	 mov	 edx, DWORD PTR _dwCookie$[ebp]
  0000e	8b 02		 mov	 eax, DWORD PTR [edx]
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _dwCookie$[ebp]
  00013	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  00016	ff d2		 call	 edx
  00018	8b 4d 14	 mov	 ecx, DWORD PTR _pcb$[ebp]
  0001b	89 01		 mov	 DWORD PTR [ecx], eax

; 291  : 
; 292  :     return 0;

  0001d	33 c0		 xor	 eax, eax

; 293  : }

  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
?LoadCallBack@CTraceServiceControl@@CGKKPAEJPAJ@Z ENDP	; CTraceServiceControl::LoadCallBack
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?InsertString@CTraceServiceControl@@AAE_NPBDAAUCHARFORMAT2A@@@Z
_TEXT	SEGMENT
_CharRange$ = -16					; size = 8
_lTextLength$ = -8					; size = 4
_this$ = -4						; size = 4
_pszString$ = 8						; size = 4
_CharFormat$ = 12					; size = 4
?InsertString@CTraceServiceControl@@AAE_NPBDAAUCHARFORMAT2A@@@Z PROC ; CTraceServiceControl::InsertString, COMDAT
; _this$ = ecx

; 267  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 268  :     // 保存信息
; 269  :     CHARRANGE CharRange;
; 270  :     GetSel(CharRange);

  00009	8d 45 f0	 lea	 eax, DWORD PTR _CharRange$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?GetSel@CRichEditCtrl@@QBEXAAU_charrange@@@Z ; CRichEditCtrl::GetSel

; 271  : 
; 272  :     // 变量定义
; 273  :     LONG lTextLength = GetTextLengthEx(GTL_NUMCHARS);

  00015	6a ff		 push	 -1
  00017	6a 08		 push	 8
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?GetTextLengthEx@CRichEditCtrl@@QBEJKI@Z ; CRichEditCtrl::GetTextLengthEx
  00021	89 45 f8	 mov	 DWORD PTR _lTextLength$[ebp], eax

; 274  : 
; 275  :     // 插入消息
; 276  :     SetSel(lTextLength, lTextLength);

  00024	8b 4d f8	 mov	 ecx, DWORD PTR _lTextLength$[ebp]
  00027	51		 push	 ecx
  00028	8b 55 f8	 mov	 edx, DWORD PTR _lTextLength$[ebp]
  0002b	52		 push	 edx
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?SetSel@CRichEditCtrl@@QAEXJJ@Z ; CRichEditCtrl::SetSel

; 277  :     SetSelectionCharFormat(CharFormat);

  00034	8b 45 0c	 mov	 eax, DWORD PTR _CharFormat$[ebp]
  00037	50		 push	 eax
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?SetSelectionCharFormat@CRichEditCtrl@@QAEHAAUCHARFORMAT2A@@@Z ; CRichEditCtrl::SetSelectionCharFormat

; 278  :     ReplaceSel(pszString);

  00040	6a 00		 push	 0
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _pszString$[ebp]
  00045	51		 push	 ecx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?ReplaceSel@CRichEditCtrl@@QAEXPBDH@Z ; CRichEditCtrl::ReplaceSel

; 279  : 
; 280  :     // 滚动字符
; 281  :     PostMessage(WM_VSCROLL, SB_BOTTOM, 0);

  0004e	6a 00		 push	 0
  00050	6a 07		 push	 7
  00052	68 15 01 00 00	 push	 277			; 00000115H
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?PostMessageA@CWnd@@QAEHIIJ@Z ; CWnd::PostMessageA

; 282  : 
; 283  :     return true;

  0005f	b0 01		 mov	 al, 1

; 284  : }

  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
?InsertString@CTraceServiceControl@@AAE_NPBDAAUCHARFORMAT2A@@@Z ENDP ; CTraceServiceControl::InsertString
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?GetTraceColor@CTraceServiceControl@@AAEKW4enTraceLevel@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv64 = -4						; size = 4
_TraceLevel$ = 8					; size = 4
?GetTraceColor@CTraceServiceControl@@AAEKW4enTraceLevel@@@Z PROC ; CTraceServiceControl::GetTraceColor, COMDAT
; _this$ = ecx

; 250  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 251  :     // 分析颜色
; 252  :     switch (TraceLevel)

  00009	8b 45 08	 mov	 eax, DWORD PTR _TraceLevel$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  0000f	83 7d fc 04	 cmp	 DWORD PTR tv64[ebp], 4
  00013	77 2d		 ja	 SHORT $LN9@GetTraceCo
  00015	8b 4d fc	 mov	 ecx, DWORD PTR tv64[ebp]
  00018	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN15@GetTraceCo[ecx*4]
$LN4@GetTraceCo:

; 253  :     {
; 254  :         case TraceLevel_Info: { return COLOR_INFO; }

  0001f	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00024	eb 39		 jmp	 SHORT $LN1@GetTraceCo
$LN5@GetTraceCo:

; 255  :         case TraceLevel_Normal: { return COLOR_NORMAL; }

  00026	b8 7d 7d 7d 00	 mov	 eax, 8224125		; 007d7d7dH
  0002b	eb 32		 jmp	 SHORT $LN1@GetTraceCo
$LN6@GetTraceCo:

; 256  :         case TraceLevel_Warning: { return COLOR_WARN; }

  0002d	b8 ff 80 00 00	 mov	 eax, 33023		; 000080ffH
  00032	eb 2b		 jmp	 SHORT $LN1@GetTraceCo
$LN7@GetTraceCo:

; 257  :         case TraceLevel_Exception: { return COLOR_EXCEPTION; }

  00034	b8 c8 00 00 00	 mov	 eax, 200		; 000000c8H
  00039	eb 24		 jmp	 SHORT $LN1@GetTraceCo
$LN8@GetTraceCo:

; 258  :         case TraceLevel_Debug: { return COLOR_DEBUG; }

  0003b	b8 00 80 80 00	 mov	 eax, 8421376		; 00808000H
  00040	eb 1d		 jmp	 SHORT $LN1@GetTraceCo
$LN9@GetTraceCo:

; 259  :         default: { ASSERT(FALSE); }

  00042	33 d2		 xor	 edx, edx
  00044	75 14		 jne	 SHORT $LN2@GetTraceCo
  00046	68 03 01 00 00	 push	 259			; 00000103H
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@LEMFCIBH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00050	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00055	85 c0		 test	 eax, eax
  00057	74 01		 je	 SHORT $LN2@GetTraceCo
  00059	cc		 int	 3
$LN2@GetTraceCo:

; 260  :     }
; 261  : 
; 262  :     return COLOR_NORMAL;

  0005a	b8 7d 7d 7d 00	 mov	 eax, 8224125		; 007d7d7dH
$LN1@GetTraceCo:

; 263  : }

  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
  00065	0f 1f 00	 npad	 3
$LN15@GetTraceCo:
  00068	00 00 00 00	 DD	 $LN4@GetTraceCo
  0006c	00 00 00 00	 DD	 $LN5@GetTraceCo
  00070	00 00 00 00	 DD	 $LN6@GetTraceCo
  00074	00 00 00 00	 DD	 $LN7@GetTraceCo
  00078	00 00 00 00	 DD	 $LN8@GetTraceCo
?GetTraceColor@CTraceServiceControl@@AAEKW4enTraceLevel@@@Z ENDP ; CTraceServiceControl::GetTraceColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?InitializeService@CTraceServiceControl@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InitializeService@CTraceServiceControl@@AAEXXZ PROC	; CTraceServiceControl::InitializeService, COMDAT
; _this$ = ecx

; 235  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 236  :     // 设置控件
; 237  :     SetBackgroundColor(FALSE, COLOR_BACK_GROUND);

  00007	68 e6 e6 e6 00	 push	 15132390		; 00e6e6e6H
  0000c	6a 00		 push	 0
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?SetBackgroundColor@CRichEditCtrl@@QAEKHK@Z ; CRichEditCtrl::SetBackgroundColor

; 238  : 
; 239  :     // 信息组件
; 240  :     if (CTraceService::SetTraceService(QUERY_ME_INTERFACE(IUnknownEx)) == false)

  00016	68 00 01 01 06	 push	 100729088		; 06010100H
  0001b	68 00 00 00 00	 push	 OFFSET ?IID_IUnknownEx@@3U_GUID@@B
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	81 c1 80 00 00
	00		 add	 ecx, 128		; 00000080H
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 90 80 00 00
	00		 mov	 edx, DWORD PTR [eax+128]
  00032	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00035	ff d0		 call	 eax
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?SetTraceService@CTraceService@@SA_NPAUIUnknownEx@@@Z ; CTraceService::SetTraceService
  0003d	83 c4 04	 add	 esp, 4
  00040	0f b6 c8	 movzx	 ecx, al
  00043	85 c9		 test	 ecx, ecx
  00045	75 1e		 jne	 SHORT $LN1@Initialize

; 241  :     {
; 242  :         TraceString(TEXT("信息输出接口设置失败，系统运行信息将无法显示"), TraceLevel_Exception);

  00047	6a 03		 push	 3
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@PMGALCLJ@?P?E?O?$KC?J?d?$LD?v?$LN?S?$LP?Z?I?h?V?C?J?$KH?$LA?$NM?$KD?$KM?O?$LF?M?$LD?T?K?P?P?P@
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	81 c1 80 00 00
	00		 add	 ecx, 128		; 00000080H
  00057	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005a	8b 82 80 00 00
	00		 mov	 eax, DWORD PTR [edx+128]
  00060	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00063	ff d2		 call	 edx
$LN1@Initialize:

; 243  :     }
; 244  : 
; 245  :     return;
; 246  : }

  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?InitializeService@CTraceServiceControl@@AAEXXZ ENDP	; CTraceServiceControl::InitializeService
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?SetParameter@CTraceServiceControl@@QAE_NJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lMaxLineCount$ = 8					; size = 4
_lReserveLineCount$ = 12				; size = 4
?SetParameter@CTraceServiceControl@@QAE_NJJ@Z PROC	; CTraceServiceControl::SetParameter, COMDAT
; _this$ = ecx

; 220  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 221  :     // 效验参数
; 222  :     ASSERT((m_lMaxLineCount == 0) || (m_lMaxLineCount > m_lReserveLineCount));

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 84 00 00
	00 00		 cmp	 DWORD PTR [eax+132], 0
  00011	74 28		 je	 SHORT $LN4@SetParamet
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
  0001f	3b 82 88 00 00
	00		 cmp	 eax, DWORD PTR [edx+136]
  00025	7f 14		 jg	 SHORT $LN4@SetParamet
  00027	68 de 00 00 00	 push	 222			; 000000deH
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@LEMFCIBH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00031	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00036	85 c0		 test	 eax, eax
  00038	74 01		 je	 SHORT $LN4@SetParamet
  0003a	cc		 int	 3
$LN4@SetParamet:

; 223  :     if ((m_lMaxLineCount != 0) && (m_lMaxLineCount <= m_lReserveLineCount))

  0003b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	83 ba 84 00 00
	00 00		 cmp	 DWORD PTR [edx+132], 0
  00045	74 18		 je	 SHORT $LN2@SetParamet
  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	8b 90 84 00 00
	00		 mov	 edx, DWORD PTR [eax+132]
  00053	3b 91 88 00 00
	00		 cmp	 edx, DWORD PTR [ecx+136]
  00059	7f 04		 jg	 SHORT $LN2@SetParamet

; 224  :         return false;

  0005b	32 c0		 xor	 al, al
  0005d	eb 1a		 jmp	 SHORT $LN1@SetParamet
$LN2@SetParamet:

; 225  : 
; 226  :     // 设置变量
; 227  :     m_lMaxLineCount = lMaxLineCount;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 4d 08	 mov	 ecx, DWORD PTR _lMaxLineCount$[ebp]
  00065	89 88 84 00 00
	00		 mov	 DWORD PTR [eax+132], ecx

; 228  :     m_lReserveLineCount = lReserveLineCount;

  0006b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006e	8b 45 0c	 mov	 eax, DWORD PTR _lReserveLineCount$[ebp]
  00071	89 82 88 00 00
	00		 mov	 DWORD PTR [edx+136], eax

; 229  : 
; 230  :     return true;

  00077	b0 01		 mov	 al, 1
$LN1@SetParamet:

; 231  : }

  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 08 00	 ret	 8
?SetParameter@CTraceServiceControl@@QAE_NJJ@Z ENDP	; CTraceServiceControl::SetParameter
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z
_TEXT	SEGMENT
_File$ = -808						; size = 20
_EditStream$ = -788					; size = 12
$T2 = -776						; size = 4
tv158 = -772						; size = 4
tv77 = -768						; size = 4
_this$ = -764						; size = 4
_strFileName$ = -760					; size = 4
$T3 = -755						; size = 1
$T4 = -754						; size = 1
$T5 = -753						; size = 1
_FileDlg$6 = -752					; size = 736
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pszFileName$ = 8					; size = 4
?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z PROC	; CTraceServiceControl::SaveMessage, COMDAT
; _this$ = ecx

; 190  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 1c 03 00
	00		 sub	 esp, 796		; 0000031cH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 8d 04 fd ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 191  :     // 变量定义
; 192  :     CString strFileName = pszFileName;

  00031	8b 45 08	 mov	 eax, DWORD PTR _pszFileName$[ebp]
  00034	50		 push	 eax
  00035	8d 8d 08 fd ff
	ff		 lea	 ecx, DWORD PTR _strFileName$[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 193  : 
; 194  :     // 打开文件
; 195  :     if (strFileName.IsEmpty() == true)

  00048	8d 8d 08 fd ff
	ff		 lea	 ecx, DWORD PTR _strFileName$[ebp]
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@D$00@ATL@@QBE_NXZ
  00054	0f b6 c8	 movzx	 ecx, al
  00057	83 f9 01	 cmp	 ecx, 1
  0005a	0f 85 ca 00 00
	00		 jne	 $LN2@SaveMessag

; 196  :     {
; 197  :         CFileDialog FileDlg(FALSE, TEXT("RTF"), 0, OFN_HIDEREADONLY | OFN_OVERWRITEPROMPT, TEXT("信息文件(*.RTF)|*.RTF||"), this);

  00060	6a 01		 push	 1
  00062	6a 00		 push	 0
  00064	8b 95 04 fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  0006a	52		 push	 edx
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LJEDAMFG@?P?E?O?$KC?N?D?$LM?$PO?$CI?$CK?4RTF?$CJ?$HM?$CK?4RTF?$HM?$HM@
  00070	6a 06		 push	 6
  00072	6a 00		 push	 0
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_03HCCJIJCF@RTF@
  00079	6a 00		 push	 0
  0007b	8d 8d 10 fd ff
	ff		 lea	 ecx, DWORD PTR _FileDlg$6[ebp]
  00081	e8 00 00 00 00	 call	 ??0CFileDialog@@QAE@HPBD0K0PAVCWnd@@KH@Z ; CFileDialog::CFileDialog
  00086	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 198  :         if (FileDlg.DoModal() == IDOK) strFileName = FileDlg.GetPathName();

  0008a	8d 8d 10 fd ff
	ff		 lea	 ecx, DWORD PTR _FileDlg$6[ebp]
  00090	e8 00 00 00 00	 call	 ?DoModal@CFileDialog@@UAEHXZ ; CFileDialog::DoModal
  00095	83 f8 01	 cmp	 eax, 1
  00098	75 4d		 jne	 SHORT $LN3@SaveMessag
  0009a	8d 85 f8 fc ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  000a0	50		 push	 eax
  000a1	8d 8d 10 fd ff
	ff		 lea	 ecx, DWORD PTR _FileDlg$6[ebp]
  000a7	e8 00 00 00 00	 call	 ?GetPathName@CFileDialog@@QBE?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; CFileDialog::GetPathName
  000ac	89 85 00 fd ff
	ff		 mov	 DWORD PTR tv77[ebp], eax
  000b2	8b 8d 00 fd ff
	ff		 mov	 ecx, DWORD PTR tv77[ebp]
  000b8	89 8d fc fc ff
	ff		 mov	 DWORD PTR tv158[ebp], ecx
  000be	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000c2	8b 95 fc fc ff
	ff		 mov	 edx, DWORD PTR tv158[ebp]
  000c8	52		 push	 edx
  000c9	8d 8d 08 fd ff
	ff		 lea	 ecx, DWORD PTR _strFileName$[ebp]
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  000d5	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000d9	8d 8d f8 fc ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000e5	eb 34		 jmp	 SHORT $LN4@SaveMessag
$LN3@SaveMessag:

; 199  :         else return false;

  000e7	c6 85 0f fd ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
  000ee	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000f2	8d 8d 10 fd ff
	ff		 lea	 ecx, DWORD PTR _FileDlg$6[ebp]
  000f8	e8 00 00 00 00	 call	 ??1CFileDialog@@UAE@XZ	; CFileDialog::~CFileDialog
  000fd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00104	8d 8d 08 fd ff
	ff		 lea	 ecx, DWORD PTR _strFileName$[ebp]
  0010a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00110	8a 85 0f fd ff
	ff		 mov	 al, BYTE PTR $T5[ebp]
  00116	e9 cb 00 00 00	 jmp	 $LN1@SaveMessag
$LN4@SaveMessag:

; 200  :     }

  0011b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0011f	8d 8d 10 fd ff
	ff		 lea	 ecx, DWORD PTR _FileDlg$6[ebp]
  00125	e8 00 00 00 00	 call	 ??1CFileDialog@@UAE@XZ	; CFileDialog::~CFileDialog
$LN2@SaveMessag:

; 201  : 
; 202  :     // 打开文件
; 203  :     CFile File;

  0012a	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _File$[ebp]
  00130	e8 00 00 00 00	 call	 ??0CFile@@QAE@XZ	; CFile::CFile
  00135	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 204  :     if (File.Open(strFileName, CFile::modeWrite | CFile::modeCreate, NULL) == FALSE)

  00139	6a 00		 push	 0
  0013b	68 01 10 00 00	 push	 4097			; 00001001H
  00140	8d 8d 08 fd ff
	ff		 lea	 ecx, DWORD PTR _strFileName$[ebp]
  00146	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0014c	50		 push	 eax
  0014d	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _File$[ebp]
  00153	e8 00 00 00 00	 call	 ?Open@CFile@@UAEHPBDIPAVCFileException@@@Z ; CFile::Open
  00158	85 c0		 test	 eax, eax
  0015a	75 31		 jne	 SHORT $LN5@SaveMessag

; 205  :         return false;

  0015c	c6 85 0e fd ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
  00163	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00167	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _File$[ebp]
  0016d	e8 00 00 00 00	 call	 ??1CFile@@UAE@XZ	; CFile::~CFile
  00172	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00179	8d 8d 08 fd ff
	ff		 lea	 ecx, DWORD PTR _strFileName$[ebp]
  0017f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00185	8a 85 0e fd ff
	ff		 mov	 al, BYTE PTR $T4[ebp]
  0018b	eb 59		 jmp	 SHORT $LN1@SaveMessag
$LN5@SaveMessag:

; 206  : 
; 207  :     // 构造数据
; 208  :     EDITSTREAM EditStream;
; 209  :     EditStream.pfnCallback = SaveCallBack;

  0018d	c7 85 f4 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _EditStream$[ebp+8], OFFSET ?SaveCallBack@CTraceServiceControl@@CGKKPAEJPAJ@Z ; CTraceServiceControl::SaveCallBack

; 210  :     EditStream.dwCookie = (DWORD)(LONGLONG)(&File);

  00197	8d 85 d8 fc ff
	ff		 lea	 eax, DWORD PTR _File$[ebp]
  0019d	89 85 ec fc ff
	ff		 mov	 DWORD PTR _EditStream$[ebp], eax

; 211  : 
; 212  :     // 写入文件
; 213  :     StreamOut(SF_RTF, EditStream);

  001a3	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _EditStream$[ebp]
  001a9	51		 push	 ecx
  001aa	6a 02		 push	 2
  001ac	8b 8d 04 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  001b2	e8 00 00 00 00	 call	 ?StreamOut@CRichEditCtrl@@QAEJHAAU_editstream@@@Z ; CRichEditCtrl::StreamOut

; 214  : 
; 215  :     return true;

  001b7	c6 85 0d fd ff
	ff 01		 mov	 BYTE PTR $T3[ebp], 1
  001be	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001c2	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _File$[ebp]
  001c8	e8 00 00 00 00	 call	 ??1CFile@@UAE@XZ	; CFile::~CFile
  001cd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001d4	8d 8d 08 fd ff
	ff		 lea	 ecx, DWORD PTR _strFileName$[ebp]
  001da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  001e0	8a 85 0d fd ff
	ff		 mov	 al, BYTE PTR $T3[ebp]
$LN1@SaveMessag:

; 216  : }

  001e6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001e9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001f0	59		 pop	 ecx
  001f1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f4	33 cd		 xor	 ecx, ebp
  001f6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001fb	8b e5		 mov	 esp, ebp
  001fd	5d		 pop	 ebp
  001fe	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z$0:
  00000	8d 8d 08 fd ff
	ff		 lea	 ecx, DWORD PTR _strFileName$[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z$1:
  0000c	8d 8d 10 fd ff
	ff		 lea	 ecx, DWORD PTR _FileDlg$6[ebp]
  00012	e9 00 00 00 00	 jmp	 ??1CFileDialog@@UAE@XZ	; CFileDialog::~CFileDialog
__unwindfunclet$?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z$2:
  00017	8d 8d f8 fc ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0001d	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z$3:
  00023	8d 8d d8 fc ff
	ff		 lea	 ecx, DWORD PTR _File$[ebp]
  00029	e9 00 00 00 00	 jmp	 ??1CFile@@UAE@XZ	; CFile::~CFile
__ehhandler$?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z:
  0002e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00032	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00035	8b 8a e0 fc ff
	ff		 mov	 ecx, DWORD PTR [edx-800]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00045	33 c8		 xor	 ecx, eax
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z
  00051	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SaveMessage@CTraceServiceControl@@QAE_NPBD@Z ENDP	; CTraceServiceControl::SaveMessage
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?LoadMessage@CTraceServiceControl@@QAE_NPBD@Z
_TEXT	SEGMENT
_File$ = -52						; size = 20
_EditStream$ = -32					; size = 12
_this$ = -20						; size = 4
$T2 = -14						; size = 1
$T3 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_pszFileName$ = 8					; size = 4
?LoadMessage@CTraceServiceControl@@QAE_NPBD@Z PROC	; CTraceServiceControl::LoadMessage, COMDAT
; _this$ = ecx

; 166  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadMessage@CTraceServiceControl@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 167  :     // 效验参数
; 168  :     ASSERT(pszFileName != NULL);

  00028	83 7d 08 00	 cmp	 DWORD PTR _pszFileName$[ebp], 0
  0002c	75 14		 jne	 SHORT $LN5@LoadMessag
  0002e	68 a8 00 00 00	 push	 168			; 000000a8H
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@LEMFCIBH@g?3?2?M?x?$LK?$PM?2happygamewh?2?$LH?$PO?N?q?$LG?K?2?O?$LF?M?$LD@
  00038	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  0003d	85 c0		 test	 eax, eax
  0003f	74 01		 je	 SHORT $LN5@LoadMessag
  00041	cc		 int	 3
$LN5@LoadMessag:

; 169  :     if (pszFileName == NULL)

  00042	83 7d 08 00	 cmp	 DWORD PTR _pszFileName$[ebp], 0
  00046	75 04		 jne	 SHORT $LN2@LoadMessag

; 170  :         return false;

  00048	32 c0		 xor	 al, al
  0004a	eb 6c		 jmp	 SHORT $LN1@LoadMessag
$LN2@LoadMessag:

; 171  : 
; 172  :     // 打开文件
; 173  :     CFile File;

  0004c	8d 4d cc	 lea	 ecx, DWORD PTR _File$[ebp]
  0004f	e8 00 00 00 00	 call	 ??0CFile@@QAE@XZ	; CFile::CFile
  00054	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 174  :     if (File.Open(pszFileName, CFile::modeRead, NULL) == FALSE)

  0005b	6a 00		 push	 0
  0005d	6a 00		 push	 0
  0005f	8b 4d 08	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  00062	51		 push	 ecx
  00063	8d 4d cc	 lea	 ecx, DWORD PTR _File$[ebp]
  00066	e8 00 00 00 00	 call	 ?Open@CFile@@UAEHPBDIPAVCFileException@@@Z ; CFile::Open
  0006b	85 c0		 test	 eax, eax
  0006d	75 18		 jne	 SHORT $LN3@LoadMessag

; 175  :         return false;

  0006f	c6 45 f3 00	 mov	 BYTE PTR $T3[ebp], 0
  00073	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007a	8d 4d cc	 lea	 ecx, DWORD PTR _File$[ebp]
  0007d	e8 00 00 00 00	 call	 ??1CFile@@UAE@XZ	; CFile::~CFile
  00082	8a 45 f3	 mov	 al, BYTE PTR $T3[ebp]
  00085	eb 31		 jmp	 SHORT $LN1@LoadMessag
$LN3@LoadMessag:

; 176  : 
; 177  :     // 构造数据
; 178  :     EDITSTREAM EditStream;
; 179  :     EditStream.pfnCallback = LoadCallBack;

  00087	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _EditStream$[ebp+8], OFFSET ?LoadCallBack@CTraceServiceControl@@CGKKPAEJPAJ@Z ; CTraceServiceControl::LoadCallBack

; 180  :     EditStream.dwCookie = (DWORD)(LONGLONG)(&File);

  0008e	8d 55 cc	 lea	 edx, DWORD PTR _File$[ebp]
  00091	89 55 e0	 mov	 DWORD PTR _EditStream$[ebp], edx

; 181  : 
; 182  :     // 读取文件
; 183  :     StreamIn(SF_RTF, EditStream);

  00094	8d 45 e0	 lea	 eax, DWORD PTR _EditStream$[ebp]
  00097	50		 push	 eax
  00098	6a 02		 push	 2
  0009a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	e8 00 00 00 00	 call	 ?StreamIn@CRichEditCtrl@@QAEJHAAU_editstream@@@Z ; CRichEditCtrl::StreamIn

; 184  : 
; 185  :     return true;

  000a2	c6 45 f2 01	 mov	 BYTE PTR $T2[ebp], 1
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ad	8d 4d cc	 lea	 ecx, DWORD PTR _File$[ebp]
  000b0	e8 00 00 00 00	 call	 ??1CFile@@UAE@XZ	; CFile::~CFile
  000b5	8a 45 f2	 mov	 al, BYTE PTR $T2[ebp]
$LN1@LoadMessag:

; 186  : }

  000b8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c2	59		 pop	 ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadMessage@CTraceServiceControl@@QAE_NPBD@Z$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR _File$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CFile@@UAE@XZ	; CFile::~CFile
__ehhandler$?LoadMessage@CTraceServiceControl@@QAE_NPBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadMessage@CTraceServiceControl@@QAE_NPBD@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadMessage@CTraceServiceControl@@QAE_NPBD@Z ENDP	; CTraceServiceControl::LoadMessage
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?PreSubclassWindow@CTraceServiceControl@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?PreSubclassWindow@CTraceServiceControl@@MAEXXZ PROC	; CTraceServiceControl::PreSubclassWindow, COMDAT
; _this$ = ecx

; 155  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 156  :     __super::PreSubclassWindow();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?PreSubclassWindow@CWnd@@UAEXXZ ; CWnd::PreSubclassWindow

; 157  : 
; 158  :     // 配置控件
; 159  :     InitializeService();

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?InitializeService@CTraceServiceControl@@AAEXXZ ; CTraceServiceControl::InitializeService

; 160  : 
; 161  :     return;
; 162  : }

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?PreSubclassWindow@CTraceServiceControl@@MAEXXZ ENDP	; CTraceServiceControl::PreSubclassWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?TraceString@CTraceServiceControl@@UAE_NPBDW4enTraceLevel@@@Z
_TEXT	SEGMENT
_ThreadLock$ = -556					; size = 12
_this$ = -544						; size = 4
_wDataSize$ = -540					; size = 2
$T2 = -533						; size = 1
_TraceInfo$ = -532					; size = 516
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pszString$ = 8						; size = 4
_TraceLevel$ = 12					; size = 4
?TraceString@CTraceServiceControl@@UAE_NPBDW4enTraceLevel@@@Z PROC ; CTraceServiceControl::TraceString, COMDAT
; _this$ = ecx

; 129  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?TraceString@CTraceServiceControl@@UAE_NPBDW4enTraceLevel@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 20 02 00
	00		 sub	 esp, 544		; 00000220H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 8d e0 fd ff
	ff		 mov	 DWORD PTR _this$[ebp], ecx

; 130  :     // 状态判断
; 131  :     if (m_hWnd == NULL)

  00031	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  00037	83 78 a0 00	 cmp	 DWORD PTR [eax-96], 0
  0003b	75 07		 jne	 SHORT $LN2@TraceStrin

; 132  :         return false;

  0003d	32 c0		 xor	 al, al
  0003f	e9 da 00 00 00	 jmp	 $LN1@TraceStrin
$LN2@TraceStrin:

; 133  : 
; 134  :     // 变量定义
; 135  :     tagTraceInfo TraceInfo;
; 136  :     ZeroMemory(&TraceInfo, sizeof(TraceInfo));

  00044	68 04 02 00 00	 push	 516			; 00000204H
  00049	6a 00		 push	 0
  0004b	8d 8d ec fd ff
	ff		 lea	 ecx, DWORD PTR _TraceInfo$[ebp]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 _memset
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH

; 137  : 
; 138  :     // 构造数据
; 139  :     TraceInfo.TraceLevel = TraceLevel;

  0005a	8b 55 0c	 mov	 edx, DWORD PTR _TraceLevel$[ebp]
  0005d	89 95 ec fd ff
	ff		 mov	 DWORD PTR _TraceInfo$[ebp], edx

; 140  :     _sntprintf(TraceInfo.szSring, CountArray(TraceInfo.szSring), TEXT("%s\n"), pszString);

  00063	8b 45 08	 mov	 eax, DWORD PTR _pszString$[ebp]
  00066	50		 push	 eax
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  0006c	68 00 02 00 00	 push	 512			; 00000200H
  00071	8d 8d f0 fd ff
	ff		 lea	 ecx, DWORD PTR _TraceInfo$[ebp+4]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 __snprintf
  0007d	83 c4 10	 add	 esp, 16			; 00000010H

; 141  : 
; 142  :     // 插入队列
; 143  :     CWHDataLocker ThreadLock(m_CriticalSection);

  00080	6a 01		 push	 1
  00082	8b 95 e0 fd ff
	ff		 mov	 edx, DWORD PTR _this$[ebp]
  00088	81 c2 2c 40 00
	00		 add	 edx, 16428		; 0000402cH
  0008e	52		 push	 edx
  0008f	8d 8d d4 fd ff
	ff		 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHDataLocker@@QAE@AAVCCriticalSection@@_N@Z
  0009b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 144  :     WORD wDataSize = sizeof(TraceInfo) - sizeof(TraceInfo.szSring) + CountStringBuffer(TraceInfo.szSring);

  000a2	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _TraceInfo$[ebp+4]
  000a8	50		 push	 eax
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  000af	83 c0 05	 add	 eax, 5
  000b2	66 89 85 e4 fd
	ff ff		 mov	 WORD PTR _wDataSize$[ebp], ax

; 145  :     m_DataQueue.InsertData(IDT_TRACE_STRING, &TraceInfo, wDataSize);

  000b9	0f b7 8d e4 fd
	ff ff		 movzx	 ecx, WORD PTR _wDataSize$[ebp]
  000c0	51		 push	 ecx
  000c1	8d 95 ec fd ff
	ff		 lea	 edx, DWORD PTR _TraceInfo$[ebp]
  000c7	52		 push	 edx
  000c8	6a 01		 push	 1
  000ca	8b 8d e0 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	81 c1 0c 40 00
	00		 add	 ecx, 16396		; 0000400cH
  000d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?InsertData@CWHDataQueue@@QAE_NGPAXG@Z

; 146  : 
; 147  :     // 发送消息
; 148  :     PostMessage(WM_TRACE_SERVICE_MESSAGE, TraceLevel, wDataSize);

  000dc	0f b7 85 e4 fd
	ff ff		 movzx	 eax, WORD PTR _wDataSize$[ebp]
  000e3	50		 push	 eax
  000e4	8b 4d 0c	 mov	 ecx, DWORD PTR _TraceLevel$[ebp]
  000e7	51		 push	 ecx
  000e8	68 64 04 00 00	 push	 1124			; 00000464H
  000ed	8b 8d e0 fd ff
	ff		 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	81 e9 80 00 00
	00		 sub	 ecx, 128		; 00000080H
  000f9	e8 00 00 00 00	 call	 ?PostMessageA@CWnd@@QAEHIIJ@Z ; CWnd::PostMessageA

; 149  : 
; 150  :     return true;

  000fe	c6 85 eb fd ff
	ff 01		 mov	 BYTE PTR $T2[ebp], 1
  00105	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0010c	8d 8d d4 fd ff
	ff		 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00112	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
  00118	8a 85 eb fd ff
	ff		 mov	 al, BYTE PTR $T2[ebp]
$LN1@TraceStrin:

; 151  : }

  0011e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00121	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00128	59		 pop	 ecx
  00129	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012c	33 cd		 xor	 ecx, ebp
  0012e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00133	8b e5		 mov	 esp, ebp
  00135	5d		 pop	 ebp
  00136	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?TraceString@CTraceServiceControl@@UAE_NPBDW4enTraceLevel@@@Z$0:
  00000	8d 8d d4 fd ff
	ff		 lea	 ecx, DWORD PTR _ThreadLock$[ebp]
  00006	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHDataLocker@@UAE@XZ
__ehhandler$?TraceString@CTraceServiceControl@@UAE_NPBDW4enTraceLevel@@@Z:
  0000c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00010	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00013	8b 8a dc fd ff
	ff		 mov	 ecx, DWORD PTR [edx-548]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?TraceString@CTraceServiceControl@@UAE_NPBDW4enTraceLevel@@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?TraceString@CTraceServiceControl@@UAE_NPBDW4enTraceLevel@@@Z ENDP ; CTraceServiceControl::TraceString
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?QueryInterface@CTraceServiceControl@@UAEPAXABU_GUID@@K@Z
_TEXT	SEGMENT
tv181 = -36						; size = 4
tv148 = -32						; size = 4
tv133 = -28						; size = 4
tv169 = -24						; size = 4
tv180 = -20						; size = 4
tv79 = -16						; size = 4
tv142 = -12						; size = 4
tv150 = -8						; size = 4
_this$ = -4						; size = 4
_Guid$ = 8						; size = 4
_dwQueryVer$ = 12					; size = 4
?QueryInterface@CTraceServiceControl@@UAEPAXABU_GUID@@K@Z PROC ; CTraceServiceControl::QueryInterface, COMDAT
; _this$ = ecx

; 121  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00009	6a 10		 push	 16			; 00000010H
  0000b	68 00 00 00 00	 push	 OFFSET ?IID_ITraceService@@3U_GUID@@B
  00010	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memcmp
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	89 45 e0	 mov	 DWORD PTR tv148[ebp], eax
  0001f	83 7d e0 00	 cmp	 DWORD PTR tv148[ebp], 0
  00023	75 09		 jne	 SHORT $LN15@QueryInter
  00025	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv150[ebp], 1
  0002c	eb 07		 jmp	 SHORT $LN13@QueryInter
$LN15@QueryInter:
  0002e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN13@QueryInter:

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  00035	83 7d f8 00	 cmp	 DWORD PTR tv150[ebp], 0
  00039	74 09		 je	 SHORT $LN11@QueryInter
  0003b	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv142[ebp], 1
  00042	eb 07		 jmp	 SHORT $LN9@QueryInter
$LN11@QueryInter:
  00044	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN9@QueryInter:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp

; 122  :     QUERYINTERFACE(ITraceService, Guid, dwQueryVer);

  0004b	0f b6 4d f4	 movzx	 ecx, BYTE PTR tv142[ebp]
  0004f	85 c9		 test	 ecx, ecx
  00051	74 3a		 je	 SHORT $LN2@QueryInter
  00053	68 00 01 01 06	 push	 100729088		; 06010100H
  00058	8b 55 0c	 mov	 edx, DWORD PTR _dwQueryVer$[ebp]
  0005b	52		 push	 edx
  0005c	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  00061	83 c4 08	 add	 esp, 8
  00064	0f b6 c0	 movzx	 eax, al
  00067	85 c0		 test	 eax, eax
  00069	74 22		 je	 SHORT $LN2@QueryInter
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	81 e9 80 00 00
	00		 sub	 ecx, 128		; 00000080H
  00074	74 08		 je	 SHORT $LN5@QueryInter
  00076	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00079	89 55 f0	 mov	 DWORD PTR tv79[ebp], edx
  0007c	eb 07		 jmp	 SHORT $LN6@QueryInter
$LN5@QueryInter:
  0007e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN6@QueryInter:
  00085	8b 45 f0	 mov	 eax, DWORD PTR tv79[ebp]
  00088	e9 83 00 00 00	 jmp	 $LN1@QueryInter
$LN2@QueryInter:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  0008d	6a 10		 push	 16			; 00000010H
  0008f	68 00 00 00 00	 push	 OFFSET ?IID_IUnknownEx@@3U_GUID@@B
  00094	8b 45 08	 mov	 eax, DWORD PTR _Guid$[ebp]
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 _memcmp
  0009d	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a0	89 45 dc	 mov	 DWORD PTR tv181[ebp], eax
  000a3	83 7d dc 00	 cmp	 DWORD PTR tv181[ebp], 0
  000a7	75 09		 jne	 SHORT $LN45@QueryInter
  000a9	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv180[ebp], 1
  000b0	eb 07		 jmp	 SHORT $LN43@QueryInter
$LN45@QueryInter:
  000b2	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv180[ebp], 0
$LN43@QueryInter:

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  000b9	83 7d ec 00	 cmp	 DWORD PTR tv180[ebp], 0
  000bd	74 09		 je	 SHORT $LN41@QueryInter
  000bf	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR tv169[ebp], 1
  000c6	eb 07		 jmp	 SHORT $LN39@QueryInter
$LN41@QueryInter:
  000c8	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv169[ebp], 0
$LN39@QueryInter:
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp

; 123  :     QUERYINTERFACE_IUNKNOWNEX(ITraceService, Guid, dwQueryVer);

  000cf	0f b6 4d e8	 movzx	 ecx, BYTE PTR tv169[ebp]
  000d3	85 c9		 test	 ecx, ecx
  000d5	74 37		 je	 SHORT $LN3@QueryInter
  000d7	68 00 01 01 06	 push	 100729088		; 06010100H
  000dc	8b 55 0c	 mov	 edx, DWORD PTR _dwQueryVer$[ebp]
  000df	52		 push	 edx
  000e0	e8 00 00 00 00	 call	 ?InterfaceVersionCompare@@YA_NKK@Z ; InterfaceVersionCompare
  000e5	83 c4 08	 add	 esp, 8
  000e8	0f b6 c0	 movzx	 eax, al
  000eb	85 c0		 test	 eax, eax
  000ed	74 1f		 je	 SHORT $LN3@QueryInter
  000ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	81 e9 80 00 00
	00		 sub	 ecx, 128		; 00000080H
  000f8	74 08		 je	 SHORT $LN7@QueryInter
  000fa	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000fd	89 55 e4	 mov	 DWORD PTR tv133[ebp], edx
  00100	eb 07		 jmp	 SHORT $LN8@QueryInter
$LN7@QueryInter:
  00102	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN8@QueryInter:
  00109	8b 45 e4	 mov	 eax, DWORD PTR tv133[ebp]
  0010c	eb 02		 jmp	 SHORT $LN1@QueryInter
$LN3@QueryInter:

; 124  :     return NULL;

  0010e	33 c0		 xor	 eax, eax
$LN1@QueryInter:

; 125  : }

  00110	8b e5		 mov	 esp, ebp
  00112	5d		 pop	 ebp
  00113	c2 08 00	 ret	 8
?QueryInterface@CTraceServiceControl@@UAEPAXABU_GUID@@K@Z ENDP ; CTraceServiceControl::QueryInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.h
;	COMDAT ?Release@CTraceServiceControl@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@CTraceServiceControl@@UAEXXZ PROC		; CTraceServiceControl::Release, COMDAT
; _this$ = ecx

; 66   :     virtual VOID Release() { return; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?Release@CTraceServiceControl@@UAEXXZ ENDP		; CTraceServiceControl::Release
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ??1CTraceServiceControl@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CTraceServiceControl@@UAE@XZ PROC			; CTraceServiceControl::~CTraceServiceControl, COMDAT
; _this$ = ecx

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CTraceServiceControl@@6BCRichEditCtrl@@@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 81 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+128], OFFSET ??_7CTraceServiceControl@@6BITraceService@@@

; 117  : }

  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	81 c1 ac 40 00
	00		 add	 ecx, 16556		; 000040acH
  00026	e8 00 00 00 00	 call	 ??1CCriticalSection@@UAE@XZ ; CCriticalSection::~CCriticalSection
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	81 c1 8c 40 00
	00		 add	 ecx, 16524		; 0000408cH
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1CWHDataQueue@@UAE@XZ
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ??1CRichEditCtrl@@UAE@XZ ; CRichEditCtrl::~CRichEditCtrl
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??1CTraceServiceControl@@UAE@XZ ENDP			; CTraceServiceControl::~CTraceServiceControl
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ??0CTraceServiceControl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CTraceServiceControl@@QAE@XZ PROC			; CTraceServiceControl::CTraceServiceControl, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CTraceServiceControl@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00028	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ??0CRichEditCtrl@@QAE@XZ ; CRichEditCtrl::CRichEditCtrl
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	05 80 00 00 00	 add	 eax, 128		; 00000080H
  0003f	89 45 ec	 mov	 DWORD PTR _this$[ebp], eax
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7IUnknownEx@@6B@
  0004b	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0004e	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7ITraceService@@6B@
  00054	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00057	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CTraceServiceControl@@6BCRichEditCtrl@@@
  0005d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	c7 81 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+128], OFFSET ??_7CTraceServiceControl@@6BITraceService@@@
  0006a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	81 c1 8c 40 00
	00		 add	 ecx, 16524		; 0000408cH
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0CWHDataQueue@@QAE@XZ
  00079	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	81 c1 ac 40 00
	00		 add	 ecx, 16556		; 000040acH
  00086	e8 00 00 00 00	 call	 ??0CCriticalSection@@QAE@XZ ; CCriticalSection::CCriticalSection

; 106  :     // 设置变量
; 107  :     m_lMaxLineCount = 1024;

  0008b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0008e	c7 82 84 00 00
	00 00 04 00 00	 mov	 DWORD PTR [edx+132], 1024 ; 00000400H

; 108  :     m_lReserveLineCount = 512;

  00098	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	c7 80 88 00 00
	00 00 02 00 00	 mov	 DWORD PTR [eax+136], 512 ; 00000200H

; 109  :     ZeroMemory(m_cbBuffer, sizeof(m_cbBuffer));

  000a5	68 00 40 00 00	 push	 16384			; 00004000H
  000aa	6a 00		 push	 0
  000ac	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  000b5	51		 push	 ecx
  000b6	e8 00 00 00 00	 call	 _memset
  000bb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 110  : 
; 111  :     return;
; 112  : }

  000be	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000c8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d2	59		 pop	 ecx
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CTraceServiceControl@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CRichEditCtrl@@UAE@XZ ; CRichEditCtrl::~CRichEditCtrl
__unwindfunclet$??0CTraceServiceControl@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 8c 40 00
	00		 add	 ecx, 16524		; 0000408cH
  00011	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1CWHDataQueue@@UAE@XZ
__ehhandler$??0CTraceServiceControl@@QAE@XZ:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CTraceServiceControl@@QAE@XZ
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CTraceServiceControl@@QAE@XZ ENDP			; CTraceServiceControl::CTraceServiceControl
; Function compile flags: /Odtp
;	COMDAT ??4CTraceService@@QAEAAV0@$$QAV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CTraceService@@QAEAAV0@$$QAV0@@Z PROC		; CTraceService::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??4CTraceService@@QAEAAV0@$$QAV0@@Z ENDP		; CTraceService::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??4CTraceService@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CTraceService@@QAEAAV0@ABV0@@Z PROC			; CTraceService::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??4CTraceService@@QAEAAV0@ABV0@@Z ENDP			; CTraceService::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z
_TEXT	SEGMENT
_pszString$ = 8						; size = 4
_TraceLevel$ = 12					; size = 4
?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z PROC ; CTraceService::TraceString, COMDAT

; 97   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 98   :     return g_TraceServiceManager.TraceString(pszString, TraceLevel);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _TraceLevel$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _pszString$[ebp]
  0000a	51		 push	 ecx
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TraceServiceManager@@3VCTraceServiceManager@@A ; g_TraceServiceManager
  00010	e8 00 00 00 00	 call	 ?TraceString@CTraceServiceManager@@UAE_NPBDW4enTraceLevel@@@Z ; CTraceServiceManager::TraceString

; 99   : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?TraceString@CTraceService@@SA_NPBDW4enTraceLevel@@@Z ENDP ; CTraceService::TraceString
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?EnableTrace@CTraceService@@SA_NW4enTraceLevel@@_N@Z
_TEXT	SEGMENT
_TraceLevel$ = 8					; size = 4
_bEnableTrace$ = 12					; size = 1
?EnableTrace@CTraceService@@SA_NW4enTraceLevel@@_N@Z PROC ; CTraceService::EnableTrace, COMDAT

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 92   :     return g_TraceServiceManager.EnableTrace(TraceLevel, bEnableTrace);

  00003	0f b6 45 0c	 movzx	 eax, BYTE PTR _bEnableTrace$[ebp]
  00007	50		 push	 eax
  00008	8b 4d 08	 mov	 ecx, DWORD PTR _TraceLevel$[ebp]
  0000b	51		 push	 ecx
  0000c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TraceServiceManager@@3VCTraceServiceManager@@A ; g_TraceServiceManager
  00011	e8 00 00 00 00	 call	 ?EnableTrace@CTraceServiceManager@@UAE_NW4enTraceLevel@@_N@Z ; CTraceServiceManager::EnableTrace

; 93   : }

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?EnableTrace@CTraceService@@SA_NW4enTraceLevel@@_N@Z ENDP ; CTraceService::EnableTrace
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?IsEnableTrace@CTraceService@@SA_NW4enTraceLevel@@@Z
_TEXT	SEGMENT
_TraceLevel$ = 8					; size = 4
?IsEnableTrace@CTraceService@@SA_NW4enTraceLevel@@@Z PROC ; CTraceService::IsEnableTrace, COMDAT

; 85   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 86   :     return g_TraceServiceManager.IsEnableTrace(TraceLevel);

  00003	8b 45 08	 mov	 eax, DWORD PTR _TraceLevel$[ebp]
  00006	50		 push	 eax
  00007	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TraceServiceManager@@3VCTraceServiceManager@@A ; g_TraceServiceManager
  0000c	e8 00 00 00 00	 call	 ?IsEnableTrace@CTraceServiceManager@@UAE_NW4enTraceLevel@@@Z ; CTraceServiceManager::IsEnableTrace

; 87   : }

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?IsEnableTrace@CTraceService@@SA_NW4enTraceLevel@@@Z ENDP ; CTraceService::IsEnableTrace
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?GetTraceServiceManager@CTraceService@@SAPAXABU_GUID@@K@Z
_TEXT	SEGMENT
_Guid$ = 8						; size = 4
_dwQueryVer$ = 12					; size = 4
?GetTraceServiceManager@CTraceService@@SAPAXABU_GUID@@K@Z PROC ; CTraceService::GetTraceServiceManager, COMDAT

; 79   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 80   :     return g_TraceServiceManager.QueryInterface(Guid, dwQueryVer);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _Guid$[ebp]
  0000a	51		 push	 ecx
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TraceServiceManager@@3VCTraceServiceManager@@A ; g_TraceServiceManager
  00010	e8 00 00 00 00	 call	 ?QueryInterface@CTraceServiceManager@@UAEPAXABU_GUID@@K@Z ; CTraceServiceManager::QueryInterface

; 81   : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?GetTraceServiceManager@CTraceService@@SAPAXABU_GUID@@K@Z ENDP ; CTraceService::GetTraceServiceManager
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?GetTraceService@CTraceService@@SAPAXABU_GUID@@K@Z
_TEXT	SEGMENT
_Guid$ = 8						; size = 4
_dwQueryVer$ = 12					; size = 4
?GetTraceService@CTraceService@@SAPAXABU_GUID@@K@Z PROC	; CTraceService::GetTraceService, COMDAT

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 74   :     return g_TraceServiceManager.GetTraceService(Guid, dwQueryVer);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _Guid$[ebp]
  0000a	51		 push	 ecx
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TraceServiceManager@@3VCTraceServiceManager@@A ; g_TraceServiceManager
  00010	e8 00 00 00 00	 call	 ?GetTraceService@CTraceServiceManager@@UAEPAXABU_GUID@@K@Z ; CTraceServiceManager::GetTraceService

; 75   : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?GetTraceService@CTraceService@@SAPAXABU_GUID@@K@Z ENDP	; CTraceService::GetTraceService
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?SetTraceService@CTraceService@@SA_NPAUIUnknownEx@@@Z
_TEXT	SEGMENT
_pIUnknownEx$ = 8					; size = 4
?SetTraceService@CTraceService@@SA_NPAUIUnknownEx@@@Z PROC ; CTraceService::SetTraceService, COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   :     return g_TraceServiceManager.SetTraceService(pIUnknownEx);

  00003	8b 45 08	 mov	 eax, DWORD PTR _pIUnknownEx$[ebp]
  00006	50		 push	 eax
  00007	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_TraceServiceManager@@3VCTraceServiceManager@@A ; g_TraceServiceManager
  0000c	e8 00 00 00 00	 call	 ?SetTraceService@CTraceServiceManager@@UAE_NPAUIUnknownEx@@@Z ; CTraceServiceManager::SetTraceService

; 69   : }

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?SetTraceService@CTraceService@@SA_NPAUIUnknownEx@@@Z ENDP ; CTraceService::SetTraceService
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ??0CTraceService@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CTraceService@@IAE@XZ PROC				; CTraceService::CTraceService, COMDAT
; _this$ = ecx

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 63   : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0CTraceService@@IAE@XZ ENDP				; CTraceService::CTraceService
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ITraceService@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ITraceService@@QAE@XZ PROC				; ITraceService::ITraceService, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7ITraceService@@6B@
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??0ITraceService@@QAE@XZ ENDP				; ITraceService::ITraceService
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
_this$ = -52						; size = 4
$T1 = -48						; size = 44
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00015	8d 45 d0	 lea	 eax, DWORD PTR $T1[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00022	8b 7d cc	 mov	 edi, DWORD PTR _this$[ebp]
  00025	83 c7 18	 add	 edi, 24			; 00000018H
  00028	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002d	8b f0		 mov	 esi, eax
  0002f	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00031	b9 01 00 00 00	 mov	 ecx, 1
  00036	85 c9		 test	 ecx, ecx
  00038	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00052	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00061	83 c4 04	 add	 esp, 4
  00064	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  0006f	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00074	83 c4 04	 add	 esp, 4
  00077	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  0007a	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 224  : 			}
; 225  : 		else

  0007d	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  0007f	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00082	83 c0 18	 add	 eax, 24			; 00000018H
  00085	50		 push	 eax
  00086	6a 00		 push	 0
  00088	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a0	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  000a3	83 c2 18	 add	 edx, 24			; 00000018H
  000a6	52		 push	 edx
  000a7	6a 00		 push	 0
  000a9	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bb	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c1	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  000c4	83 c2 18	 add	 edx, 24			; 00000018H
  000c7	52		 push	 edx
  000c8	6a 00		 push	 0
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000cf	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d7	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e2	33 cd		 xor	 ecx, ebp
  000e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
_this$ = -52						; size = 4
$T1 = -48						; size = 44
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx

; 216  : 		{	// get values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	89 4d cc	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 		_Cvt = _Lobj._Getcvt();

  00015	8d 45 d0	 lea	 eax, DWORD PTR $T1[ebp]
  00018	50		 push	 eax
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
  00022	8b 7d cc	 mov	 edi, DWORD PTR _this$[ebp]
  00025	83 c7 18	 add	 edi, 24			; 00000018H
  00028	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0002d	8b f0		 mov	 esi, eax
  0002f	f3 a5		 rep movsd

; 218  : 
; 219  : 		if (is_same_v<_Elem2, wchar_t>)

  00031	b9 01 00 00 00	 mov	 ecx, 1
  00036	85 c9		 test	 ecx, ecx
  00038	74 45		 je	 SHORT $LN2@Getvals

; 220  : 			{
; 221  : 			_Days = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getdays());

  0003a	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00049	83 c4 04	 add	 esp, 4
  0004c	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 222  : 			_Months = (const _Elem *)_Maklocwcs((const wchar_t *)_Lobj._W_Getmonths());

  00052	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00061	83 c4 04	 add	 esp, 4
  00064	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 223  : 			_Ampm = (const _Elem *)_Maklocwcs(L":AM:am:PM:pm");

  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  0006f	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPA_WPB_W@Z ; std::_Maklocwcs
  00074	83 c4 04	 add	 esp, 4
  00077	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  0007a	89 42 10	 mov	 DWORD PTR [edx+16], eax

; 224  : 			}
; 225  : 		else

  0007d	eb 5e		 jmp	 SHORT $LN1@Getvals
$LN2@Getvals:

; 226  : 			{
; 227  : 			_Days = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem *>(nullptr), _Cvt);

  0007f	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00082	83 c0 18	 add	 eax, 24			; 00000018H
  00085	50		 push	 eax
  00086	6a 00		 push	 0
  00088	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getdays@_Locinfo@std@@QBEPBDXZ
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 228  : 			_Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem *>(nullptr), _Cvt);

  000a0	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  000a3	83 c2 18	 add	 edx, 24			; 00000018H
  000a6	52		 push	 edx
  000a7	6a 00		 push	 0
  000a9	8b 4d 0c	 mov	 ecx, DWORD PTR __Lobj$[ebp]
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getmonths@_Locinfo@std@@QBEPBDXZ
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bb	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 229  : 			_Ampm = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem *>(nullptr), _Cvt);

  000c1	8b 55 cc	 mov	 edx, DWORD PTR _this$[ebp]
  000c4	83 c2 18	 add	 edx, 24			; 00000018H
  000c7	52		 push	 edx
  000c8	6a 00		 push	 0
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  000cf	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d7	8b 4d cc	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	89 41 10	 mov	 DWORD PTR [ecx+16], eax
$LN1@Getvals:

; 230  : 			}
; 231  : 		}

  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e2	33 cd		 xor	 ecx, ebp
  000e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 08 00	 ret	 8
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?InterfaceVersionCompare@@YA_NKK@Z
_TEXT	SEGMENT
_dwVersion$ = -40					; size = 4
_dwVersion$ = -36					; size = 4
_dwVersion$ = -32					; size = 4
_dwVersion$ = -28					; size = 4
_dwVersion$ = -24					; size = 4
_dwVersion$ = -20					; size = 4
_dwVersion$ = -16					; size = 4
_dwVersion$ = -12					; size = 4
$T1 = -8						; size = 1
$T2 = -7						; size = 1
$T3 = -6						; size = 1
$T4 = -5						; size = 1
$T5 = -4						; size = 1
$T6 = -3						; size = 1
$T7 = -2						; size = 1
$T8 = -1						; size = 1
_dwQueryVer$ = 8					; size = 4
_dwInterfaceVer$ = 12					; size = 4
?InterfaceVersionCompare@@YA_NKK@Z PROC			; InterfaceVersionCompare, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H

; 69   : 	if (GetSubVer(dwQueryVer)>GetSubVer(dwInterfaceVer)) return false;

  00006	8b 45 08	 mov	 eax, DWORD PTR _dwQueryVer$[ebp]
  00009	89 45 f4	 mov	 DWORD PTR _dwVersion$[ebp], eax

; 57   : 	return ((BYTE *)&dwVersion)[1];

  0000c	b9 01 00 00 00	 mov	 ecx, 1
  00011	c1 e1 00	 shl	 ecx, 0
  00014	8a 54 0d f4	 mov	 dl, BYTE PTR _dwVersion$[ebp+ecx]
  00018	88 55 ff	 mov	 BYTE PTR $T8[ebp], dl

; 69   : 	if (GetSubVer(dwQueryVer)>GetSubVer(dwInterfaceVer)) return false;

  0001b	8b 45 0c	 mov	 eax, DWORD PTR _dwInterfaceVer$[ebp]
  0001e	89 45 f0	 mov	 DWORD PTR _dwVersion$[ebp], eax

; 57   : 	return ((BYTE *)&dwVersion)[1];

  00021	b9 01 00 00 00	 mov	 ecx, 1
  00026	c1 e1 00	 shl	 ecx, 0
  00029	8a 54 0d f0	 mov	 dl, BYTE PTR _dwVersion$[ebp+ecx]
  0002d	88 55 fe	 mov	 BYTE PTR $T7[ebp], dl

; 69   : 	if (GetSubVer(dwQueryVer)>GetSubVer(dwInterfaceVer)) return false;

  00030	0f b6 45 ff	 movzx	 eax, BYTE PTR $T8[ebp]
  00034	0f b6 4d fe	 movzx	 ecx, BYTE PTR $T7[ebp]
  00038	3b c1		 cmp	 eax, ecx
  0003a	7e 07		 jle	 SHORT $LN2@InterfaceV
  0003c	32 c0		 xor	 al, al
  0003e	e9 ae 00 00 00	 jmp	 $LN1@InterfaceV
$LN2@InterfaceV:

; 70   : 	if (GetMainVer(dwQueryVer)!=GetMainVer(dwInterfaceVer)) return false;

  00043	8b 55 08	 mov	 edx, DWORD PTR _dwQueryVer$[ebp]
  00046	89 55 ec	 mov	 DWORD PTR _dwVersion$[ebp], edx

; 51   : 	return ((BYTE *)&dwVersion)[2];

  00049	b8 01 00 00 00	 mov	 eax, 1
  0004e	d1 e0		 shl	 eax, 1
  00050	8a 4c 05 ec	 mov	 cl, BYTE PTR _dwVersion$[ebp+eax]
  00054	88 4d fd	 mov	 BYTE PTR $T6[ebp], cl

; 70   : 	if (GetMainVer(dwQueryVer)!=GetMainVer(dwInterfaceVer)) return false;

  00057	8b 55 0c	 mov	 edx, DWORD PTR _dwInterfaceVer$[ebp]
  0005a	89 55 e8	 mov	 DWORD PTR _dwVersion$[ebp], edx

; 51   : 	return ((BYTE *)&dwVersion)[2];

  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	d1 e0		 shl	 eax, 1
  00064	8a 4c 05 e8	 mov	 cl, BYTE PTR _dwVersion$[ebp+eax]
  00068	88 4d fc	 mov	 BYTE PTR $T5[ebp], cl

; 70   : 	if (GetMainVer(dwQueryVer)!=GetMainVer(dwInterfaceVer)) return false;

  0006b	0f b6 55 fd	 movzx	 edx, BYTE PTR $T6[ebp]
  0006f	0f b6 45 fc	 movzx	 eax, BYTE PTR $T5[ebp]
  00073	3b d0		 cmp	 edx, eax
  00075	74 04		 je	 SHORT $LN3@InterfaceV
  00077	32 c0		 xor	 al, al
  00079	eb 76		 jmp	 SHORT $LN1@InterfaceV
$LN3@InterfaceV:

; 71   : 	if (GetBuildVer(dwQueryVer)!=GetBuildVer(dwInterfaceVer)) return false;

  0007b	8b 4d 08	 mov	 ecx, DWORD PTR _dwQueryVer$[ebp]
  0007e	89 4d e4	 mov	 DWORD PTR _dwVersion$[ebp], ecx

; 63   : 	return ((BYTE *)&dwVersion)[0];

  00081	ba 01 00 00 00	 mov	 edx, 1
  00086	6b c2 00	 imul	 eax, edx, 0
  00089	8a 4c 05 e4	 mov	 cl, BYTE PTR _dwVersion$[ebp+eax]
  0008d	88 4d fb	 mov	 BYTE PTR $T4[ebp], cl

; 71   : 	if (GetBuildVer(dwQueryVer)!=GetBuildVer(dwInterfaceVer)) return false;

  00090	8b 55 0c	 mov	 edx, DWORD PTR _dwInterfaceVer$[ebp]
  00093	89 55 e0	 mov	 DWORD PTR _dwVersion$[ebp], edx

; 63   : 	return ((BYTE *)&dwVersion)[0];

  00096	b8 01 00 00 00	 mov	 eax, 1
  0009b	6b c8 00	 imul	 ecx, eax, 0
  0009e	8a 54 0d e0	 mov	 dl, BYTE PTR _dwVersion$[ebp+ecx]
  000a2	88 55 fa	 mov	 BYTE PTR $T3[ebp], dl

; 71   : 	if (GetBuildVer(dwQueryVer)!=GetBuildVer(dwInterfaceVer)) return false;

  000a5	0f b6 45 fb	 movzx	 eax, BYTE PTR $T4[ebp]
  000a9	0f b6 4d fa	 movzx	 ecx, BYTE PTR $T3[ebp]
  000ad	3b c1		 cmp	 eax, ecx
  000af	74 04		 je	 SHORT $LN4@InterfaceV
  000b1	32 c0		 xor	 al, al
  000b3	eb 3c		 jmp	 SHORT $LN1@InterfaceV
$LN4@InterfaceV:

; 72   : 	if (GetProductVer(dwQueryVer)!=GetProductVer(dwInterfaceVer)) return false;

  000b5	8b 55 08	 mov	 edx, DWORD PTR _dwQueryVer$[ebp]
  000b8	89 55 dc	 mov	 DWORD PTR _dwVersion$[ebp], edx

; 45   : 	return ((BYTE *)&dwVersion)[3];

  000bb	b8 01 00 00 00	 mov	 eax, 1
  000c0	6b c8 03	 imul	 ecx, eax, 3
  000c3	8a 54 0d dc	 mov	 dl, BYTE PTR _dwVersion$[ebp+ecx]
  000c7	88 55 f9	 mov	 BYTE PTR $T2[ebp], dl

; 72   : 	if (GetProductVer(dwQueryVer)!=GetProductVer(dwInterfaceVer)) return false;

  000ca	8b 45 0c	 mov	 eax, DWORD PTR _dwInterfaceVer$[ebp]
  000cd	89 45 d8	 mov	 DWORD PTR _dwVersion$[ebp], eax

; 45   : 	return ((BYTE *)&dwVersion)[3];

  000d0	b9 01 00 00 00	 mov	 ecx, 1
  000d5	6b d1 03	 imul	 edx, ecx, 3
  000d8	8a 44 15 d8	 mov	 al, BYTE PTR _dwVersion$[ebp+edx]
  000dc	88 45 f8	 mov	 BYTE PTR $T1[ebp], al

; 72   : 	if (GetProductVer(dwQueryVer)!=GetProductVer(dwInterfaceVer)) return false;

  000df	0f b6 4d f9	 movzx	 ecx, BYTE PTR $T2[ebp]
  000e3	0f b6 55 f8	 movzx	 edx, BYTE PTR $T1[ebp]
  000e7	3b ca		 cmp	 ecx, edx
  000e9	74 04		 je	 SHORT $LN5@InterfaceV
  000eb	32 c0		 xor	 al, al
  000ed	eb 02		 jmp	 SHORT $LN1@InterfaceV
$LN5@InterfaceV:

; 73   : 	return true;

  000ef	b0 01		 mov	 al, 1
$LN1@InterfaceV:

; 74   : };

  000f1	8b e5		 mov	 esp, ebp
  000f3	5d		 pop	 ebp
  000f4	c3		 ret	 0
?InterfaceVersionCompare@@YA_NKK@Z ENDP			; InterfaceVersionCompare
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetBuildVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetBuildVer@@YAEK@Z PROC				; GetBuildVer, COMDAT

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 63   : 	return ((BYTE *)&dwVersion)[0];

  00003	b8 01 00 00 00	 mov	 eax, 1
  00008	6b c8 00	 imul	 ecx, eax, 0
  0000b	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 64   : }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetBuildVer@@YAEK@Z ENDP				; GetBuildVer
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetSubVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetSubVer@@YAEK@Z PROC					; GetSubVer, COMDAT

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 57   : 	return ((BYTE *)&dwVersion)[1];

  00003	b8 01 00 00 00	 mov	 eax, 1
  00008	c1 e0 00	 shl	 eax, 0
  0000b	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 58   : }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetSubVer@@YAEK@Z ENDP					; GetSubVer
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetMainVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetMainVer@@YAEK@Z PROC				; GetMainVer, COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : 	return ((BYTE *)&dwVersion)[2];

  00003	b8 01 00 00 00	 mov	 eax, 1
  00008	d1 e0		 shl	 eax, 1
  0000a	8a 44 05 08	 mov	 al, BYTE PTR _dwVersion$[ebp+eax]

; 52   : }

  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?GetMainVer@@YAEK@Z ENDP				; GetMainVer
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\全局定义\module.h
;	COMDAT ?GetProductVer@@YAEK@Z
_TEXT	SEGMENT
_dwVersion$ = 8						; size = 4
?GetProductVer@@YAEK@Z PROC				; GetProductVer, COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 45   : 	return ((BYTE *)&dwVersion)[3];

  00003	b8 01 00 00 00	 mov	 eax, 1
  00008	6b c8 03	 imul	 ecx, eax, 3
  0000b	8a 44 0d 08	 mov	 al, BYTE PTR _dwVersion$[ebp+ecx]

; 46   : }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetProductVer@@YAEK@Z ENDP				; GetProductVer
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0IUnknownEx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknownEx@@QAE@XZ PROC				; IUnknownEx::IUnknownEx, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7IUnknownEx@@6B@
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0IUnknownEx@@QAE@XZ ENDP				; IUnknownEx::IUnknownEx
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPA_WPB_W@Z
_TEXT	SEGMENT
tv66 = -24						; size = 4
tv86 = -20						; size = 4
__Count$ = -16						; size = 4
__Ptrdest$ = -12					; size = 4
tv79 = -8						; size = 4
tv89 = -2						; size = 2
__Ptr$ = 8						; size = 4
?_Maklocwcs@std@@YAPA_WPB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 97   : 	{	// copy NTWCS to allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 98   : 	const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  00006	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR tv79[ebp], eax
  0000c	8b 4d f8	 mov	 ecx, DWORD PTR tv79[ebp]
  0000f	83 c1 02	 add	 ecx, 2
  00012	89 4d ec	 mov	 DWORD PTR tv86[ebp], ecx
$LL6@Maklocwcs:
  00015	8b 55 f8	 mov	 edx, DWORD PTR tv79[ebp]
  00018	66 8b 02	 mov	 ax, WORD PTR [edx]
  0001b	66 89 45 fe	 mov	 WORD PTR tv89[ebp], ax
  0001f	83 45 f8 02	 add	 DWORD PTR tv79[ebp], 2
  00023	66 83 7d fe 00	 cmp	 WORD PTR tv89[ebp], 0
  00028	75 eb		 jne	 SHORT $LL6@Maklocwcs
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR tv79[ebp]
  0002d	2b 4d ec	 sub	 ecx, DWORD PTR tv86[ebp]
  00030	d1 f9		 sar	 ecx, 1
  00032	89 4d e8	 mov	 DWORD PTR tv66[ebp], ecx
  00035	8b 55 e8	 mov	 edx, DWORD PTR tv66[ebp]
  00038	83 c2 01	 add	 edx, 1
  0003b	89 55 f0	 mov	 DWORD PTR __Count$[ebp], edx

; 99   : 
; 100  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Count, sizeof (wchar_t),

  0003e	6a 65		 push	 101			; 00000065H
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@DJFLDKBN@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00045	6a 02		 push	 2
  00047	6a 02		 push	 2
  00049	8b 45 f0	 mov	 eax, DWORD PTR __Count$[ebp]
  0004c	50		 push	 eax
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  00053	83 c4 14	 add	 esp, 20			; 00000014H
  00056	89 45 f4	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 101  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 102  : 
; 103  : 	if (!_Ptrdest)

  00059	83 7d f4 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  0005d	75 05		 jne	 SHORT $LN2@Maklocwcs

; 104  : 		_Xbad_alloc();

  0005f	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h

; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00064	8b 4d f0	 mov	 ecx, DWORD PTR __Count$[ebp]
  00067	d1 e1		 shl	 ecx, 1
  00069	51		 push	 ecx
  0006a	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0006d	52		 push	 edx
  0006e	8b 45 f4	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 _memcpy
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum

; 106  : 	return (_Ptrdest);

  0007a	8b 45 f4	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN3@Maklocwcs:

; 107  : 	}

  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
?_Maklocwcs@std@@YAPA_WPB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Mbst2$ = -64						; size = 8
__Mbst1$ = -56						; size = 8
tv69 = -48						; size = 4
tv146 = -44						; size = 4
__Count1$ = -40						; size = 4
__Ptrdest$ = -36					; size = 4
__Ptr1$ = -32						; size = 4
__Ptrnext$ = -28					; size = 4
tv143 = -24						; size = 4
__Count$ = -20						; size = 4
__Bytes$ = -16						; size = 4
__Wchars$ = -12						; size = 4
__Wc$ = -8						; size = 2
tv149 = -1						; size = 1
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
__Cvt$ = 16						; size = 4
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z PROC	; std::_Maklocstr<wchar_t>, COMDAT

; 682  : 	{	// convert C string to wchar_t sequence using _Cvtvec

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H

; 683  : 	size_t _Count, _Count1;
; 684  : 	size_t _Wchars;
; 685  : 	const char *_Ptr1;
; 686  : 	int _Bytes;
; 687  : 	wchar_t _Wc;
; 688  : 	mbstate_t _Mbst1 = {};

  00006	33 c0		 xor	 eax, eax
  00008	89 45 c8	 mov	 DWORD PTR __Mbst1$[ebp], eax
  0000b	89 45 cc	 mov	 DWORD PTR __Mbst1$[ebp+4], eax

; 689  : 
; 690  : 	_Count1 = _CSTD strlen(_Ptr) + 1;

  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00011	89 4d e8	 mov	 DWORD PTR tv143[ebp], ecx
  00014	8b 55 e8	 mov	 edx, DWORD PTR tv143[ebp]
  00017	83 c2 01	 add	 edx, 1
  0001a	89 55 d4	 mov	 DWORD PTR tv146[ebp], edx
$LL12@Maklocstr:
  0001d	8b 45 e8	 mov	 eax, DWORD PTR tv143[ebp]
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	88 4d ff	 mov	 BYTE PTR tv149[ebp], cl
  00025	83 45 e8 01	 add	 DWORD PTR tv143[ebp], 1
  00029	80 7d ff 00	 cmp	 BYTE PTR tv149[ebp], 0
  0002d	75 ee		 jne	 SHORT $LL12@Maklocstr
  0002f	8b 55 e8	 mov	 edx, DWORD PTR tv143[ebp]
  00032	2b 55 d4	 sub	 edx, DWORD PTR tv146[ebp]
  00035	89 55 d0	 mov	 DWORD PTR tv69[ebp], edx
  00038	8b 45 d0	 mov	 eax, DWORD PTR tv69[ebp]
  0003b	83 c0 01	 add	 eax, 1
  0003e	89 45 d8	 mov	 DWORD PTR __Count1$[ebp], eax

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00041	8b 4d d8	 mov	 ecx, DWORD PTR __Count1$[ebp]
  00044	89 4d ec	 mov	 DWORD PTR __Count$[ebp], ecx
  00047	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __Wchars$[ebp], 0
  0004e	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00051	89 55 e0	 mov	 DWORD PTR __Ptr1$[ebp], edx
  00054	eb 1b		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:

; 692  : 		_Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars)

  00056	8b 45 ec	 mov	 eax, DWORD PTR __Count$[ebp]
  00059	2b 45 f0	 sub	 eax, DWORD PTR __Bytes$[ebp]
  0005c	89 45 ec	 mov	 DWORD PTR __Count$[ebp], eax
  0005f	8b 4d e0	 mov	 ecx, DWORD PTR __Ptr1$[ebp]
  00062	03 4d f0	 add	 ecx, DWORD PTR __Bytes$[ebp]
  00065	89 4d e0	 mov	 DWORD PTR __Ptr1$[ebp], ecx
  00068	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  0006b	83 c2 01	 add	 edx, 1
  0006e	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
$LN4@Maklocstr:

; 691  : 	for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count;

  00071	83 7d ec 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00075	76 29		 jbe	 SHORT $LN3@Maklocstr

; 693  : 		if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0)

  00077	8b 45 10	 mov	 eax, DWORD PTR __Cvt$[ebp]
  0007a	50		 push	 eax
  0007b	8d 4d c8	 lea	 ecx, DWORD PTR __Mbst1$[ebp]
  0007e	51		 push	 ecx
  0007f	8b 55 ec	 mov	 edx, DWORD PTR __Count$[ebp]
  00082	52		 push	 edx
  00083	8b 45 e0	 mov	 eax, DWORD PTR __Ptr1$[ebp]
  00086	50		 push	 eax
  00087	8d 4d f8	 lea	 ecx, DWORD PTR __Wc$[ebp]
  0008a	51		 push	 ecx
  0008b	e8 00 00 00 00	 call	 __Mbrtowc
  00090	83 c4 14	 add	 esp, 20			; 00000014H
  00093	89 45 f0	 mov	 DWORD PTR __Bytes$[ebp], eax
  00096	83 7d f0 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0009a	7f 02		 jg	 SHORT $LN8@Maklocstr

; 694  : 			break;

  0009c	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 695  : 	++_Wchars;	// count terminating nul

  0009e	eb b6		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:
  000a0	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  000a3	83 c2 01	 add	 edx, 1
  000a6	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx

; 696  : 
; 697  : 	wchar_t *_Ptrdest = (wchar_t *)_calloc_dbg(_Wchars, sizeof (wchar_t),

  000a9	68 ba 02 00 00	 push	 698			; 000002baH
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@LKBGDILM@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  000b3	6a 02		 push	 2
  000b5	6a 02		 push	 2
  000b7	8b 45 f4	 mov	 eax, DWORD PTR __Wchars$[ebp]
  000ba	50		 push	 eax
  000bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___calloc_dbg
  000c1	83 c4 14	 add	 esp, 20			; 00000014H
  000c4	89 45 dc	 mov	 DWORD PTR __Ptrdest$[ebp], eax

; 698  : 		_CRT_BLOCK, __FILE__, __LINE__);
; 699  : 
; 700  : 	if (!_Ptrdest)

  000c7	83 7d dc 00	 cmp	 DWORD PTR __Ptrdest$[ebp], 0
  000cb	75 05		 jne	 SHORT $LN9@Maklocstr

; 701  : 		_Xbad_alloc();

  000cd	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 702  : 	wchar_t *_Ptrnext = _Ptrdest;

  000d2	8b 4d dc	 mov	 ecx, DWORD PTR __Ptrdest$[ebp]
  000d5	89 4d e4	 mov	 DWORD PTR __Ptrnext$[ebp], ecx

; 703  : 	mbstate_t _Mbst2 = {};

  000d8	33 d2		 xor	 edx, edx
  000da	89 55 c0	 mov	 DWORD PTR __Mbst2$[ebp], edx
  000dd	89 55 c4	 mov	 DWORD PTR __Mbst2$[ebp+4], edx

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  000e0	eb 24		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:

; 706  : 		_Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext)

  000e2	8b 45 ec	 mov	 eax, DWORD PTR __Count$[ebp]
  000e5	2b 45 f0	 sub	 eax, DWORD PTR __Bytes$[ebp]
  000e8	89 45 ec	 mov	 DWORD PTR __Count$[ebp], eax
  000eb	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000ee	03 4d f0	 add	 ecx, DWORD PTR __Bytes$[ebp]
  000f1	89 4d 08	 mov	 DWORD PTR __Ptr$[ebp], ecx
  000f4	8b 55 f4	 mov	 edx, DWORD PTR __Wchars$[ebp]
  000f7	83 ea 01	 sub	 edx, 1
  000fa	89 55 f4	 mov	 DWORD PTR __Wchars$[ebp], edx
  000fd	8b 45 e4	 mov	 eax, DWORD PTR __Ptrnext$[ebp]
  00100	83 c0 02	 add	 eax, 2
  00103	89 45 e4	 mov	 DWORD PTR __Ptrnext$[ebp], eax
$LN7@Maklocstr:

; 704  : 
; 705  : 	for (; 0 < _Wchars;

  00106	83 7d f4 00	 cmp	 DWORD PTR __Wchars$[ebp], 0
  0010a	76 29		 jbe	 SHORT $LN6@Maklocstr

; 707  : 		if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0)

  0010c	8b 4d 10	 mov	 ecx, DWORD PTR __Cvt$[ebp]
  0010f	51		 push	 ecx
  00110	8d 55 c0	 lea	 edx, DWORD PTR __Mbst2$[ebp]
  00113	52		 push	 edx
  00114	8b 45 d8	 mov	 eax, DWORD PTR __Count1$[ebp]
  00117	50		 push	 eax
  00118	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0011b	51		 push	 ecx
  0011c	8b 55 e4	 mov	 edx, DWORD PTR __Ptrnext$[ebp]
  0011f	52		 push	 edx
  00120	e8 00 00 00 00	 call	 __Mbrtowc
  00125	83 c4 14	 add	 esp, 20			; 00000014H
  00128	89 45 f0	 mov	 DWORD PTR __Bytes$[ebp], eax
  0012b	83 7d f0 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0012f	7f 02		 jg	 SHORT $LN10@Maklocstr

; 708  : 			break;

  00131	eb 02		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 709  : 	*_Ptrnext = L'\0';

  00133	eb ad		 jmp	 SHORT $LN5@Maklocstr
$LN6@Maklocstr:
  00135	33 c0		 xor	 eax, eax
  00137	8b 4d e4	 mov	 ecx, DWORD PTR __Ptrnext$[ebp]
  0013a	66 89 01	 mov	 WORD PTR [ecx], ax

; 710  : 
; 711  : 	return (_Ptrdest);

  0013d	8b 45 dc	 mov	 eax, DWORD PTR __Ptrdest$[ebp]
$LN11@Maklocstr:

; 712  : 	}

  00140	8b e5		 mov	 esp, ebp
  00142	5d		 pop	 ebp
  00143	c3		 ret	 0
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT

; 230  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 231  :         #pragma warning(push)
; 232  :         #pragma warning(disable : 4995 4996 6386)
; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00003	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  00006	d1 e0		 shl	 eax, 1
  00008	50		 push	 eax
  00009	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  0000c	51		 push	 ecx
  0000d	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 _memcpy
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH

; 234  :         #pragma warning(pop)
; 235  :     }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z
_TEXT	SEGMENT
_buffer$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 330  : 		if (pszCategory == nullptr)

  00013	83 7d 08 00	 cmp	 DWORD PTR _pszCategory$[ebp], 0
  00017	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  00019	e9 a9 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  0001e	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00025	72 2d		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  00027	33 c0		 xor	 eax, eax
  00029	75 27		 jne	 SHORT $LN5@RegisterCa
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00035	6a 00		 push	 0
  00037	68 51 01 00 00	 push	 337			; 00000151H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00041	6a 02		 push	 2
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00049	83 c4 18	 add	 esp, 24			; 00000018H
  0004c	83 f8 01	 cmp	 eax, 1
  0004f	75 01		 jne	 SHORT $LN5@RegisterCa
  00051	cc		 int	 3
$LN5@RegisterCa:

; 338  : 			return;

  00052	eb 73		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  00054	69 15 00 00 00
	00 04 01 00 00	 imul	 edx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  0005e	8b 45 0c	 mov	 eax, DWORD PTR _nCategory$[ebp]
  00061	89 82 00 00 00
	00		 mov	 DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[edx], eax

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);
; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	

  00067	68 00 01 00 00	 push	 256			; 00000100H
  0006c	6a 00		 push	 0
  0006e	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 _memset
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);

  0007d	8b 55 08	 mov	 edx, DWORD PTR _pszCategory$[ebp]
  00080	52		 push	 edx
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  00086	6a 7f		 push	 127			; 0000007fH
  00088	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 _swprintf_s
  00094	83 c4 10	 add	 esp, 16			; 00000010H

; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);

  00097	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  0009d	51		 push	 ecx
  0009e	6a 7f		 push	 127			; 0000007fH
  000a0	69 15 00 00 00
	00 04 01 00 00	 imul	 edx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  000aa	81 c2 04 00 00
	00		 add	 edx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  000b0	52		 push	 edx
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000b7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000bf	83 c0 01	 add	 eax, 1
  000c2	a3 00 00 00 00	 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  000c7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ca	33 cd		 xor	 ecx, ebp
  000cc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 00 02 00	 push	 131072			; 00020000H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MBNHGHMI@atlTraceString@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 00 02 00	 push	 131072			; 00020000H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 20 00 00	 push	 8192			; 00002000H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PGMFNIFA@atlTraceException@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 20 00 00	 push	 8192			; 00002000H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_msg$ = -36						; size = 28
_bResult$ = -8						; size = 4
_bQuit$ = -4						; size = 4
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00006	6a 01		 push	 1
  00008	6a 12		 push	 18			; 00000012H
  0000a	6a 12		 push	 18			; 00000012H
  0000c	6a 00		 push	 0
  0000e	8d 45 dc	 lea	 eax, DWORD PTR _msg$[ebp]
  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  00018	89 45 fc	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  0001b	6a 00		 push	 0
  0001d	6a 00		 push	 0
  0001f	8b 4d 0c	 mov	 ecx, DWORD PTR _nLine$[ebp]
  00022	51		 push	 ecx
  00023	8b 55 08	 mov	 edx, DWORD PTR _lpszFileName$[ebp]
  00026	52		 push	 edx
  00027	6a 02		 push	 2
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  0002f	83 c4 14	 add	 esp, 20			; 00000014H
  00032	89 45 f8	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00035	83 7d fc 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  00039	74 0a		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0003b	8b 45 e4	 mov	 eax, DWORD PTR _msg$[ebp+8]
  0003e	50		 push	 eax
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00045	8b 45 f8	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Result$ = -20						; size = 4
__Format$ = -16						; size = 4
__ArgList$ = -12					; size = 4
tv86 = -8						; size = 4
__Result$1 = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1969 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 1970 :         int _Result;
; 1971 :         va_list _ArgList;
; 1972 :         __crt_va_start(_ArgList, _Format);

  00006	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00009	89 45 f4	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1973 :     #pragma warning(suppress:28719)    // 28719
; 1974 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);

  0000c	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR __Format$[ebp], ecx

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00012	8b 55 f4	 mov	 edx, DWORD PTR __ArgList$[ebp]
  00015	52		 push	 edx
  00016	6a 00		 push	 0
  00018	8b 45 f0	 mov	 eax, DWORD PTR __Format$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR __BufferCount$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00023	52		 push	 edx
  00024	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	83 c9 01	 or	 ecx, 1
  0002e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00031	52		 push	 edx
  00032	51		 push	 ecx
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00039	83 c4 1c	 add	 esp, 28			; 0000001cH
  0003c	89 45 fc	 mov	 DWORD PTR __Result$1[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  0003f	83 7d fc 00	 cmp	 DWORD PTR __Result$1[ebp], 0
  00043	7d 09		 jge	 SHORT $LN7@snprintf
  00045	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv86[ebp], -1
  0004c	eb 06		 jmp	 SHORT $LN3@snprintf
$LN7@snprintf:
  0004e	8b 45 fc	 mov	 eax, DWORD PTR __Result$1[ebp]
  00051	89 45 f8	 mov	 DWORD PTR tv86[ebp], eax
$LN3@snprintf:

; 1973 :     #pragma warning(suppress:28719)    // 28719
; 1974 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);

  00054	8b 4d f8	 mov	 ecx, DWORD PTR tv86[ebp]
  00057	89 4d ec	 mov	 DWORD PTR __Result$[ebp], ecx

; 1975 :         __crt_va_end(_ArgList);

  0005a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1976 :         return _Result;

  00061	8b 45 ec	 mov	 eax, DWORD PTR __Result$[ebp]

; 1977 :     }

  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf
_TEXT	SEGMENT
tv80 = -8						; size = 4
__Result$1 = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsnprintf PROC					; COMDAT

; 1409 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00006	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001f	83 c9 01	 or	 ecx, 1
  00022	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00025	52		 push	 edx
  00026	51		 push	 ecx
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  0002d	83 c4 1c	 add	 esp, 28			; 0000001cH
  00030	89 45 fc	 mov	 DWORD PTR __Result$1[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00033	83 7d fc 00	 cmp	 DWORD PTR __Result$1[ebp], 0
  00037	7d 09		 jge	 SHORT $LN5@vsnprintf
  00039	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv80[ebp], -1
  00040	eb 06		 jmp	 SHORT $LN3@vsnprintf
$LN5@vsnprintf:
  00042	8b 45 fc	 mov	 eax, DWORD PTR __Result$1[ebp]
  00045	89 45 f8	 mov	 DWORD PTR tv80[ebp], eax
$LN3@vsnprintf:

; 1410 :         #pragma warning(push)
; 1411 :         #pragma warning(disable: 4996) // Deprecation
; 1412 :         return _vsnprintf_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  00048	8b 45 f8	 mov	 eax, DWORD PTR tv80[ebp]

; 1413 :         #pragma warning(pop)
; 1414 :     }

  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
__vsnprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00006	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  0000d	51		 push	 ecx
  0000e	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00011	52		 push	 edx
  00012	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00015	50		 push	 eax
  00016	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001f	8b 10		 mov	 edx, DWORD PTR [eax]
  00021	83 ca 01	 or	 edx, 1
  00024	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00027	50		 push	 eax
  00028	52		 push	 edx
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  0002f	83 c4 1c	 add	 esp, 28			; 0000001cH
  00032	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00035	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00039	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003b	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00042	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00044	8b 4d fc	 mov	 ecx, DWORD PTR __Result$[ebp]
  00047	89 4d f8	 mov	 DWORD PTR tv74[ebp], ecx
$LN4@vsnprintf_:
  0004a	8b 45 f8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT _swprintf_s
_TEXT	SEGMENT
__Result$ = -20						; size = 4
__Format$ = -16						; size = 4
__ArgList$ = -12					; size = 4
tv80 = -8						; size = 4
__Result$1 = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf_s PROC					; COMDAT

; 1538 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 1539 :             int _Result;
; 1540 :             va_list _ArgList;
; 1541 :             __crt_va_start(_ArgList, _Format);

  00006	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00009	89 45 f4	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0000c	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR __Format$[ebp], ecx

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  00012	8b 55 f4	 mov	 edx, DWORD PTR __ArgList$[ebp]
  00015	52		 push	 edx
  00016	6a 00		 push	 0
  00018	8b 45 f0	 mov	 eax, DWORD PTR __Format$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR __BufferCount$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00023	52		 push	 edx
  00024	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00029	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002c	51		 push	 ecx
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	52		 push	 edx
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s
  00036	83 c4 1c	 add	 esp, 28			; 0000001cH
  00039	89 45 fc	 mov	 DWORD PTR __Result$1[ebp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  0003c	83 7d fc 00	 cmp	 DWORD PTR __Result$1[ebp], 0
  00040	7d 09		 jge	 SHORT $LN5@swprintf_s
  00042	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv80[ebp], -1
  00049	eb 06		 jmp	 SHORT $LN3@swprintf_s
$LN5@swprintf_s:
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Result$1[ebp]
  0004e	89 45 f8	 mov	 DWORD PTR tv80[ebp], eax
$LN3@swprintf_s:

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  00051	8b 4d f8	 mov	 ecx, DWORD PTR tv80[ebp]
  00054	89 4d ec	 mov	 DWORD PTR __Result$[ebp], ecx

; 1543 :             __crt_va_end(_ArgList);

  00057	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1544 :             return _Result;

  0005e	8b 45 ec	 mov	 eax, DWORD PTR __Result$[ebp]

; 1545 :         }

  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
_swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT __vswprintf_s_l
_TEXT	SEGMENT
tv73 = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_s_l PROC					; COMDAT

; 1264 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  00006	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  0000d	51		 push	 ecx
  0000e	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00011	52		 push	 edx
  00012	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00015	50		 push	 eax
  00016	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001f	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00022	52		 push	 edx
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
  00025	50		 push	 eax
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s
  0002c	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002f	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  00032	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00036	7d 09		 jge	 SHORT $LN3@vswprintf_
  00038	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
  0003f	eb 06		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00041	8b 4d fc	 mov	 ecx, DWORD PTR __Result$[ebp]
  00044	89 4d f8	 mov	 DWORD PTR tv73[ebp], ecx
$LN4@vswprintf_:
  00047	8b 45 f8	 mov	 eax, DWORD PTR tv73[ebp]

; 1270 :     }

  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
__vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _==
_TEXT	SEGMENT
tv74 = -12						; size = 4
tv68 = -8						; size = 4
tv76 = -4						; size = 4
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==	PROC						; COMDAT

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00006	6a 10		 push	 16			; 00000010H
  00008	8b 45 0c	 mov	 eax, DWORD PTR _guidOther$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _guidOne$[ebp]
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 _memcmp
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH
  00018	89 45 f4	 mov	 DWORD PTR tv74[ebp], eax
  0001b	83 7d f4 00	 cmp	 DWORD PTR tv74[ebp], 0
  0001f	75 09		 jne	 SHORT $LN7@
  00021	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN5@
$LN7@:
  0002a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN5@:

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

  00031	83 7d fc 00	 cmp	 DWORD PTR tv76[ebp], 0
  00035	74 09		 je	 SHORT $LN3@
  00037	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  0003e	eb 07		 jmp	 SHORT $LN4@
$LN3@:
  00040	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@:
  00047	8a 45 f8	 mov	 al, BYTE PTR tv68[ebp]

; 195  : }

  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
_==	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\guiddef.h
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
tv68 = -8						; size = 4
tv70 = -4						; size = 4
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00006	6a 10		 push	 16			; 00000010H
  00008	8b 45 0c	 mov	 eax, DWORD PTR _rguid2$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _rguid1$[ebp]
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 _memcmp
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH
  00018	89 45 f8	 mov	 DWORD PTR tv68[ebp], eax
  0001b	83 7d f8 00	 cmp	 DWORD PTR tv68[ebp], 0
  0001f	75 09		 jne	 SHORT $LN3@IsEqualGUI
  00021	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv70[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@IsEqualGUI
$LN3@IsEqualGUI:
  0002a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN4@IsEqualGUI:
  00031	8b 45 fc	 mov	 eax, DWORD PTR tv70[ebp]

; 162  : }

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_IsEqualGUID ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?__global_array_delete@@YAXPAXI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sz$ = 12						; size = 4
?__global_array_delete@@YAXPAXI@Z PROC			; __global_array_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR _sz$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00010	83 c4 08	 add	 esp, 8
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?__global_array_delete@@YAXPAXI@Z ENDP			; __global_array_delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?__global_array_delete@@YAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?__global_array_delete@@YAXPAX@Z PROC			; __global_array_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?__global_array_delete@@YAXPAX@Z ENDP			; __global_array_delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?__global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sz$ = 12						; size = 4
?__global_delete@@YAXPAXI@Z PROC			; __global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR _sz$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00010	83 c4 08	 add	 esp, 8
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?__global_delete@@YAXPAXI@Z ENDP			; __global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?__global_delete@@YAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?__global_delete@@YAXPAX@Z PROC				; __global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?__global_delete@@YAXPAX@Z ENDP				; __global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\traceservice.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
$LN2@vector:
  00004	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  0000d	83 e9 01	 sub	 ecx, 1
  00010	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00013	83 7d fc 00	 cmp	 DWORD PTR tv66[ebp], 0
  00017	76 11		 jbe	 SHORT $LN1@vector
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  0001c	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001f	8b 55 08	 mov	 edx, DWORD PTR ___t$[ebp]
  00022	03 55 0c	 add	 edx, DWORD PTR ___s$[ebp]
  00025	89 55 08	 mov	 DWORD PTR ___t$[ebp], edx
  00028	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
