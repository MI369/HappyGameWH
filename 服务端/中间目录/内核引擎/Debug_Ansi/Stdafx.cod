; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	G:\网狐\HappyGameWH\服务端\系统模块\服务器组件\内核引擎\Stdafx.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___@@_PchSym_@00@UKlsKomKqyKlsKroKqzUszkkbtznvdsUKltKqnKrmKluKrpKpyKlsKpoKpkUKlvKorKpmKlqKqsKovKlsKqoKplKluKomKquUKluKrtKruKltKpzKorKluKonKquKltKqwKrlUwvyftPzmhrUhgwzucOlyq@4B2008FD98C1DD4
PUBLIC	??_C@_0N@KLPNCFEE@atlTraceSync@			; `string'
PUBLIC	??_C@_0O@KHOBHOBJ@atlTraceISAPI@		; `string'
PUBLIC	?m_nLevel@CTrace@ATL@@1IA			; ATL::CTrace::m_nLevel
PUBLIC	?m_nCategory@CTrace@ATL@@1IA			; ATL::CTrace::m_nCategory
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ ; `string'
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?_AfxInitManaged@@YAHXZ				; _AfxInitManaged
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	??_C@_0ED@GFNHMOFC@ERROR?5?3?5Unable?5to?5initialize?5cr@ ; `string'
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z ; ATL::CAtlStringMgr::Allocate
PUBLIC	?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z ; ATL::CAtlStringMgr::Free
PUBLIC	?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z ; ATL::CAtlStringMgr::Reallocate
PUBLIC	?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ ; ATL::CAtlStringMgr::GetNilString
PUBLIC	?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ ; ATL::CAtlStringMgr::Clone
PUBLIC	??_7CAtlStringMgr@ATL@@6B@			; ATL::CAtlStringMgr::`vftable'
PUBLIC	??_GCAtlStringMgr@ATL@@UAEPAXI@Z		; ATL::CAtlStringMgr::`scalar deleting destructor'
PUBLIC	??_C@_1OA@NFJNFLGL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
PUBLIC	?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
PUBLIC	?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr
PUBLIC	?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
PUBLIC	_IID_IAxWinHostWindowLic
PUBLIC	??_C@_1BG@IEBIBJEI@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1DE@KEEBDKDC@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM@ ; `string'
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_IID_IAxWinAmbientDispatchEx
PUBLIC	_IID_IInternalConnection
PUBLIC	__pAtlLcidToLocaleNameTable
PUBLIC	??_C@_15EMKDOKLE@?$AAa?$AAr@			; `string'
PUBLIC	??_C@_15KNPADPLH@?$AAb?$AAg@			; `string'
PUBLIC	??_C@_15EDMHLDMO@?$AAc?$AAa@			; `string'
PUBLIC	??_C@_1O@BPEAJADD@?$AAz?$AAh?$AA?9?$AAC?$AAH?$AAS@ ; `string'
PUBLIC	??_C@_15LJNHCMNK@?$AAc?$AAs@			; `string'
PUBLIC	??_C@_15FOMCIDHG@?$AAd?$AAa@			; `string'
PUBLIC	??_C@_15NBKABECB@?$AAd?$AAe@			; `string'
PUBLIC	??_C@_15GHPEIIAO@?$AAe?$AAl@			; `string'
PUBLIC	??_C@_15MNPNEAIF@?$AAe?$AAn@			; `string'
PUBLIC	??_C@_15GPIOMPMH@?$AAe?$AAs@			; `string'
PUBLIC	??_C@_15NGLOAKJC@?$AAf?$AAi@			; `string'
PUBLIC	??_C@_15FBKGNKAM@?$AAf?$AAr@			; `string'
PUBLIC	??_C@_15KGGCNEFK@?$AAh?$AAe@			; `string'
PUBLIC	??_C@_15PGHLIDMF@?$AAh?$AAu@			; `string'
PUBLIC	??_C@_15BIEMAPLM@?$AAi?$AAs@			; `string'
PUBLIC	??_C@_15IFJLDHAF@?$AAi?$AAt@			; `string'
PUBLIC	??_C@_15GEMIOCAG@?$AAj?$AAa@			; `string'
PUBLIC	??_C@_15EPELEGJA@?$AAk?$AAo@			; `string'
PUBLIC	??_C@_15NDDHIMN@?$AAn?$AAl@			; `string'
PUBLIC	??_C@_15BPIGNHCD@?$AAn?$AAo@			; `string'
PUBLIC	??_C@_15DEOPBLCG@?$AAp?$AAl@			; `string'
PUBLIC	??_C@_15KBECGEFG@?$AAp?$AAt@			; `string'
PUBLIC	??_C@_15GLJCBFMD@?$AAr?$AAo@			; `string'
PUBLIC	??_C@_15FEDGKCDI@?$AAr?$AAu@			; `string'
PUBLIC	??_C@_15GLKMLLHM@?$AAh?$AAr@			; `string'
PUBLIC	??_C@_15CPKMFBDB@?$AAs?$AAk@			; `string'
PUBLIC	??_C@_15BAAIOGMK@?$AAs?$AAq@			; `string'
PUBLIC	??_C@_15INNPNOHD@?$AAs?$AAv@			; `string'
PUBLIC	??_C@_15CABMMOGH@?$AAt?$AAh@			; `string'
PUBLIC	??_C@_15BPLIHJJM@?$AAt?$AAr@			; `string'
PUBLIC	??_C@_15NEOEKKDJ@?$AAu?$AAr@			; `string'
PUBLIC	??_C@_15NFICGAJK@?$AAi?$AAd@			; `string'
PUBLIC	??_C@_15PJPFLCCM@?$AAu?$AAk@			; `string'
PUBLIC	??_C@_15HPJPHDM@?$AAb?$AAe@			; `string'
PUBLIC	??_C@_15LCHLGJII@?$AAs?$AAl@			; `string'
PUBLIC	??_C@_15PCFJPHHO@?$AAe?$AAt@			; `string'
PUBLIC	??_C@_15HPFPGODN@?$AAl?$AAv@			; `string'
PUBLIC	??_C@_15NFFGKGLG@?$AAl?$AAt@			; `string'
PUBLIC	??_C@_15BDAKCCHN@?$AAf?$AAa@			; `string'
PUBLIC	??_C@_15NFGIAIAJ@?$AAv?$AAi@			; `string'
PUBLIC	??_C@_15LMKNDMHN@?$AAh?$AAy@			; `string'
PUBLIC	??_C@_15IJBHMCFL@?$AAa?$AAz@			; `string'
PUBLIC	??_C@_15EKOFJABL@?$AAe?$AAu@			; `string'
PUBLIC	??_C@_15BGHADCNK@?$AAm?$AAk@			; `string'
PUBLIC	??_C@_15JDNICKHM@?$AAa?$AAf@			; `string'
PUBLIC	??_C@_15KPJEDBKD@?$AAk?$AAa@			; `string'
PUBLIC	??_C@_15PDNFFFEO@?$AAf?$AAo@			; `string'
PUBLIC	??_C@_15OMLEGLOC@?$AAh?$AAi@			; `string'
PUBLIC	??_C@_15IDNNENKK@?$AAm?$AAs@			; `string'
PUBLIC	??_C@_15MACJNBMH@?$AAk?$AAk@			; `string'
PUBLIC	??_C@_15DKDJEOND@?$AAk?$AAy@			; `string'
PUBLIC	??_C@_15DFGDLJBG@?$AAs?$AAw@			; `string'
PUBLIC	??_C@_15BBFAICNG@?$AAu?$AAz@			; `string'
PUBLIC	??_C@_15DKNDCGEA@?$AAt?$AAt@			; `string'
PUBLIC	??_C@_15MGIFMDPL@?$AAp?$AAa@			; `string'
PUBLIC	??_C@_15HCNDBBA@?$AAg?$AAu@			; `string'
PUBLIC	??_C@_15FNBEIBON@?$AAt?$AAa@			; `string'
PUBLIC	??_C@_15NCHGBGLK@?$AAt?$AAe@			; `string'
PUBLIC	??_C@_15PHPHCBPF@?$AAk?$AAn@			; `string'
PUBLIC	??_C@_15DLGBCKMP@?$AAm?$AAr@			; `string'
PUBLIC	??_C@_15EABBLBFF@?$AAs?$AAa@			; `string'
PUBLIC	??_C@_15CBKOMCOI@?$AAm?$AAn@			; `string'
PUBLIC	??_C@_15CKDMCJAF@?$AAg?$AAl@			; `string'
PUBLIC	??_C@_17CNJFBPG@?$AAk?$AAo?$AAk@		; `string'
PUBLIC	??_C@_17FFBJICPL@?$AAs?$AAy?$AAr@		; `string'
PUBLIC	??_C@_17KPNDCPAF@?$AAd?$AAi?$AAv@		; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_1M@OKAHONE@?$AAa?$AAr?$AA?9?$AAS?$AAA@	; `string'
PUBLIC	??_C@_1M@FFFIGIGK@?$AAb?$AAg?$AA?9?$AAB?$AAG@	; `string'
PUBLIC	??_C@_1M@BJNKEDC@?$AAc?$AAa?$AA?9?$AAE?$AAS@	; `string'
PUBLIC	??_C@_1M@CLNBBOPM@?$AAz?$AAh?$AA?9?$AAT?$AAW@	; `string'
PUBLIC	??_C@_1M@IJJHFJHA@?$AAc?$AAs?$AA?9?$AAC?$AAZ@	; `string'
PUBLIC	??_C@_1M@CLPEOBGI@?$AAd?$AAa?$AA?9?$AAD?$AAK@	; `string'
PUBLIC	??_C@_1M@MCMADGCB@?$AAd?$AAe?$AA?9?$AAD?$AAE@	; `string'
PUBLIC	??_C@_1M@OOCKEMAM@?$AAe?$AAl?$AA?9?$AAG?$AAR@	; `string'
PUBLIC	??_C@_1M@BMHNFIME@?$AAe?$AAn?$AA?9?$AAU?$AAS@	; `string'
PUBLIC	??_C@_1M@DDNJFGID@?$AAf?$AAi?$AA?9?$AAF?$AAI@	; `string'
PUBLIC	??_C@_1M@GLIPPMAC@?$AAf?$AAr?$AA?9?$AAF?$AAR@	; `string'
PUBLIC	??_C@_1M@GFMCHPE@?$AAh?$AAe?$AA?9?$AAI?$AAL@	; `string'
PUBLIC	??_C@_1M@MHLPGNKM@?$AAh?$AAu?$AA?9?$AAH?$AAU@	; `string'
PUBLIC	??_C@_1M@LPDDNNPN@?$AAi?$AAs?$AA?9?$AAI?$AAS@	; `string'
PUBLIC	??_C@_1M@MADIPODN@?$AAi?$AAt?$AA?9?$AAI?$AAT@	; `string'
PUBLIC	??_C@_1M@HPNHIDJI@?$AAj?$AAa?$AA?9?$AAJ?$AAP@	; `string'
PUBLIC	??_C@_1M@JLOOOEGK@?$AAk?$AAo?$AA?9?$AAK?$AAR@	; `string'
PUBLIC	??_C@_1M@IHBJJGG@?$AAn?$AAl?$AA?9?$AAN?$AAL@	; `string'
PUBLIC	??_C@_1M@EANAGDL@?$AAn?$AAb?$AA?9?$AAN?$AAO@	; `string'
PUBLIC	??_C@_1M@NEIEMEGP@?$AAp?$AAl?$AA?9?$AAP?$AAL@	; `string'
PUBLIC	??_C@_1M@BOCFIGEP@?$AAp?$AAt?$AA?9?$AAB?$AAR@	; `string'
PUBLIC	??_C@_1M@IMPFOPBG@?$AAr?$AAo?$AA?9?$AAR?$AAO@	; `string'
PUBLIC	??_C@_1M@IDNNEJMM@?$AAr?$AAu?$AA?9?$AAR?$AAU@	; `string'
PUBLIC	??_C@_1M@LILEEOGM@?$AAh?$AAr?$AA?9?$AAH?$AAR@	; `string'
PUBLIC	??_C@_1M@FKIFEHPB@?$AAs?$AAk?$AA?9?$AAS?$AAK@	; `string'
PUBLIC	??_C@_1M@LJMAMNPJ@?$AAs?$AAq?$AA?9?$AAA?$AAL@	; `string'
PUBLIC	??_C@_1M@GIAKDKJK@?$AAs?$AAv?$AA?9?$AAS?$AAE@	; `string'
PUBLIC	??_C@_1M@MKJKIKCL@?$AAt?$AAh?$AA?9?$AAT?$AAH@	; `string'
PUBLIC	??_C@_1M@MFLCCMPB@?$AAt?$AAr?$AA?9?$AAT?$AAR@	; `string'
PUBLIC	??_C@_1M@OIJHDKJN@?$AAu?$AAr?$AA?9?$AAP?$AAK@	; `string'
PUBLIC	??_C@_1M@LHIPCIEK@?$AAi?$AAd?$AA?9?$AAI?$AAD@	; `string'
PUBLIC	??_C@_1M@MFMOBGI@?$AAu?$AAk?$AA?9?$AAU?$AAA@	; `string'
PUBLIC	??_C@_1M@OBGLJIPL@?$AAb?$AAe?$AA?9?$AAB?$AAY@	; `string'
PUBLIC	??_C@_1M@BCFAJEAD@?$AAs?$AAl?$AA?9?$AAS?$AAI@	; `string'
PUBLIC	??_C@_1M@FKFFEDDN@?$AAe?$AAt?$AA?9?$AAE?$AAE@	; `string'
PUBLIC	??_C@_1M@KGKKAACI@?$AAl?$AAv?$AA?9?$AAL?$AAV@	; `string'
PUBLIC	??_C@_1M@IFGBIJO@?$AAl?$AAt?$AA?9?$AAL?$AAT@	; `string'
PUBLIC	??_C@_1M@FGEAHEDM@?$AAf?$AAa?$AA?9?$AAI?$AAR@	; `string'
PUBLIC	??_C@_1M@KBMAIBFN@?$AAv?$AAi?$AA?9?$AAV?$AAN@	; `string'
PUBLIC	??_C@_1M@GPCBKDJK@?$AAh?$AAy?$AA?9?$AAA?$AAM@	; `string'
PUBLIC	??_C@_1BG@BECMDDJB@?$AAa?$AAz?$AA?9?$AAA?$AAZ?$AA?9?$AAL?$AAa?$AAt?$AAn@ ; `string'
PUBLIC	??_C@_1M@MAOFCAEA@?$AAe?$AAu?$AA?9?$AAE?$AAS@	; `string'
PUBLIC	??_C@_1M@IGHABKPI@?$AAm?$AAk?$AA?9?$AAM?$AAK@	; `string'
PUBLIC	??_C@_1M@IAIGNEJG@?$AAt?$AAn?$AA?9?$AAZ?$AAA@	; `string'
PUBLIC	??_C@_1M@IIJCOJFA@?$AAx?$AAh?$AA?9?$AAZ?$AAA@	; `string'
PUBLIC	??_C@_1M@LGPJHNJH@?$AAz?$AAu?$AA?9?$AAZ?$AAA@	; `string'
PUBLIC	??_C@_1M@HOKAOIO@?$AAa?$AAf?$AA?9?$AAZ?$AAA@	; `string'
PUBLIC	??_C@_1M@DPCLHLIE@?$AAk?$AAa?$AA?9?$AAG?$AAE@	; `string'
PUBLIC	??_C@_1M@BLKMHJBI@?$AAf?$AAo?$AA?9?$AAF?$AAO@	; `string'
PUBLIC	??_C@_1M@LGGJAPPB@?$AAh?$AAi?$AA?9?$AAI?$AAN@	; `string'
PUBLIC	??_C@_1M@FIKPIHFE@?$AAm?$AAt?$AA?9?$AAM?$AAT@	; `string'
PUBLIC	??_C@_1M@HEGGPBFA@?$AAs?$AAe?$AA?9?$AAN?$AAO@	; `string'
PUBLIC	??_C@_1M@EIBJEEPA@?$AAm?$AAs?$AA?9?$AAM?$AAY@	; `string'
PUBLIC	??_C@_1M@FHLBGMPP@?$AAk?$AAk?$AA?9?$AAK?$AAZ@	; `string'
PUBLIC	??_C@_1M@NGJJLCGI@?$AAk?$AAy?$AA?9?$AAK?$AAG@	; `string'
PUBLIC	??_C@_1M@GIENNBFC@?$AAs?$AAw?$AA?9?$AAK?$AAE@	; `string'
PUBLIC	??_C@_1BG@NDGMJIMJ@?$AAu?$AAz?$AA?9?$AAU?$AAZ?$AA?9?$AAL?$AAa?$AAt?$AAn@ ; `string'
PUBLIC	??_C@_1M@IDCCIHBC@?$AAt?$AAt?$AA?9?$AAR?$AAU@	; `string'
PUBLIC	??_C@_1M@LOICPMOJ@?$AAb?$AAn?$AA?9?$AAI?$AAN@	; `string'
PUBLIC	??_C@_1M@KPKKNEAH@?$AAp?$AAa?$AA?9?$AAI?$AAN@	; `string'
PUBLIC	??_C@_1M@PJGPPBOG@?$AAg?$AAu?$AA?9?$AAI?$AAN@	; `string'
PUBLIC	??_C@_1M@KMKMOPHI@?$AAt?$AAa?$AA?9?$AAI?$AAN@	; `string'
PUBLIC	??_C@_1M@KFEHEPAC@?$AAt?$AAe?$AA?9?$AAI?$AAN@	; `string'
PUBLIC	??_C@_1M@CDCLMGHI@?$AAk?$AAn?$AA?9?$AAI?$AAN@	; `string'
PUBLIC	??_C@_1M@MIODLDKF@?$AAm?$AAl?$AA?9?$AAI?$AAN@	; `string'
PUBLIC	??_C@_1M@PBIEACPO@?$AAm?$AAr?$AA?9?$AAI?$AAN@	; `string'
PUBLIC	??_C@_1M@NIDEAGPH@?$AAs?$AAa?$AA?9?$AAI?$AAN@	; `string'
PUBLIC	??_C@_1M@FHIHCBIO@?$AAm?$AAn?$AA?9?$AAM?$AAN@	; `string'
PUBLIC	??_C@_1M@JAIJPENP@?$AAc?$AAy?$AA?9?$AAG?$AAB@	; `string'
PUBLIC	??_C@_1M@PHGFBEPN@?$AAg?$AAl?$AA?9?$AAE?$AAS@	; `string'
PUBLIC	??_C@_1O@KPIPDNCP@?$AAk?$AAo?$AAk?$AA?9?$AAI?$AAN@ ; `string'
PUBLIC	??_C@_1O@KNHJLDJA@?$AAs?$AAy?$AAr?$AA?9?$AAS?$AAY@ ; `string'
PUBLIC	??_C@_1O@MKEKBLAH@?$AAd?$AAi?$AAv?$AA?9?$AAM?$AAV@ ; `string'
PUBLIC	??_C@_1O@OHDCKDDF@?$AAq?$AAu?$AAz?$AA?9?$AAB?$AAO@ ; `string'
PUBLIC	??_C@_1M@LEPJNLFD@?$AAn?$AAs?$AA?9?$AAZ?$AAA@	; `string'
PUBLIC	??_C@_1M@OMLEIIJB@?$AAm?$AAi?$AA?9?$AAN?$AAZ@	; `string'
PUBLIC	??_C@_1M@PMPEAILG@?$AAa?$AAr?$AA?9?$AAI?$AAQ@	; `string'
PUBLIC	??_C@_1M@BIBDDEMK@?$AAz?$AAh?$AA?9?$AAC?$AAN@	; `string'
PUBLIC	??_C@_1M@CNKPNOEE@?$AAd?$AAe?$AA?9?$AAC?$AAH@	; `string'
PUBLIC	??_C@_1M@LKMGMLKO@?$AAe?$AAn?$AA?9?$AAG?$AAB@	; `string'
PUBLIC	??_C@_1M@PGKJFFGL@?$AAe?$AAs?$AA?9?$AAM?$AAX@	; `string'
PUBLIC	??_C@_1M@DNNANBDC@?$AAf?$AAr?$AA?9?$AAB?$AAE@	; `string'
PUBLIC	??_C@_1M@HLGMDFHM@?$AAi?$AAt?$AA?9?$AAC?$AAH@	; `string'
PUBLIC	??_C@_1M@CLLBGJH@?$AAn?$AAl?$AA?9?$AAB?$AAE@	; `string'
PUBLIC	??_C@_1M@BODBOGLF@?$AAn?$AAn?$AA?9?$AAN?$AAO@	; `string'
PUBLIC	??_C@_1M@HFFAHKAD@?$AAp?$AAt?$AA?9?$AAP?$AAT@	; `string'
PUBLIC	??_C@_1BG@LNOAKHIE@?$AAs?$AAr?$AA?9?$AAS?$AAP?$AA?9?$AAL?$AAa?$AAt?$AAn@ ; `string'
PUBLIC	??_C@_1M@HBMHBGAK@?$AAs?$AAv?$AA?9?$AAF?$AAI@	; `string'
PUBLIC	??_C@_1BG@DGCJGJBE@?$AAa?$AAz?$AA?9?$AAA?$AAZ?$AA?9?$AAC?$AAy?$AAr?$AAl@ ; `string'
PUBLIC	??_C@_1M@KEJDAAHB@?$AAs?$AAe?$AA?9?$AAS?$AAE@	; `string'
PUBLIC	??_C@_1M@HEIBJJAD@?$AAm?$AAs?$AA?9?$AAB?$AAN@	; `string'
PUBLIC	??_C@_1BG@PBGJMCEM@?$AAu?$AAz?$AA?9?$AAU?$AAZ?$AA?9?$AAC?$AAy?$AAr?$AAl@ ; `string'
PUBLIC	??_C@_1O@LAOBCMDF@?$AAq?$AAu?$AAz?$AA?9?$AAE?$AAC@ ; `string'
PUBLIC	??_C@_1M@POEEMAIO@?$AAa?$AAr?$AA?9?$AAE?$AAG@	; `string'
PUBLIC	??_C@_1M@EFAKDEDL@?$AAz?$AAh?$AA?9?$AAH?$AAK@	; `string'
PUBLIC	??_C@_1M@HKKIJHGI@?$AAd?$AAe?$AA?9?$AAA?$AAT@	; `string'
PUBLIC	??_C@_1M@KBFBEHJF@?$AAe?$AAn?$AA?9?$AAA?$AAU@	; `string'
PUBLIC	??_C@_1M@MNPLFAAH@?$AAe?$AAs?$AA?9?$AAE?$AAS@	; `string'
PUBLIC	??_C@_1M@HJOOJFMA@?$AAf?$AAr?$AA?9?$AAC?$AAA@	; `string'
PUBLIC	??_C@_1BG@JPOFPNAB@?$AAs?$AAr?$AA?9?$AAS?$AAP?$AA?9?$AAC?$AAy?$AAr?$AAl@ ; `string'
PUBLIC	??_C@_1M@LNFOCMOB@?$AAs?$AAe?$AA?9?$AAF?$AAI@	; `string'
PUBLIC	??_C@_1O@MGJBOAMB@?$AAq?$AAu?$AAz?$AA?9?$AAP?$AAE@ ; `string'
PUBLIC	??_C@_1M@GJINLBOK@?$AAa?$AAr?$AA?9?$AAL?$AAY@	; `string'
PUBLIC	??_C@_1M@GGMNHJNL@?$AAz?$AAh?$AA?9?$AAS?$AAG@	; `string'
PUBLIC	??_C@_1M@HOIKODND@?$AAd?$AAe?$AA?9?$AAL?$AAU@	; `string'
PUBLIC	??_C@_1M@DDOCCGFG@?$AAe?$AAn?$AA?9?$AAC?$AAA@	; `string'
PUBLIC	??_C@_1M@BNOEMJLF@?$AAe?$AAs?$AA?9?$AAG?$AAT@	; `string'
PUBLIC	??_C@_1M@EOGNKEK@?$AAf?$AAr?$AA?9?$AAC?$AAH@	; `string'
PUBLIC	??_C@_1M@FLIDJFHL@?$AAh?$AAr?$AA?9?$AAB?$AAA@	; `string'
PUBLIC	??_C@_1O@FMCELNAJ@?$AAs?$AAm?$AAj?$AA?9?$AAN?$AAO@ ; `string'
PUBLIC	??_C@_1M@JHGLJMGJ@?$AAa?$AAr?$AA?9?$AAD?$AAZ@	; `string'
PUBLIC	??_C@_1M@JKKFDCNP@?$AAz?$AAh?$AA?9?$AAM?$AAO@	; `string'
PUBLIC	??_C@_1M@GEEFALPE@?$AAd?$AAe?$AA?9?$AAL?$AAI@	; `string'
PUBLIC	??_C@_1M@IGEOFBG@?$AAe?$AAn?$AA?9?$AAN?$AAZ@	; `string'
PUBLIC	??_C@_1M@KDBONEHP@?$AAe?$AAs?$AA?9?$AAC?$AAR@	; `string'
PUBLIC	??_C@_1M@FHMDOHNN@?$AAf?$AAr?$AA?9?$AAL?$AAU@	; `string'
PUBLIC	??_C@_1BG@NFKKMAFG@?$AAb?$AAs?$AA?9?$AAB?$AAA?$AA?9?$AAL?$AAa?$AAt?$AAn@ ; `string'
PUBLIC	??_C@_1O@IMNBEMCI@?$AAs?$AAm?$AAj?$AA?9?$AAS?$AAE@ ; `string'
PUBLIC	??_C@_1M@DHHMBNDP@?$AAa?$AAr?$AA?9?$AAM?$AAA@	; `string'
PUBLIC	??_C@_1M@BNBLJCGH@?$AAe?$AAn?$AA?9?$AAI?$AAE@	; `string'
PUBLIC	??_C@_1M@GEPAFMDL@?$AAe?$AAs?$AA?9?$AAP?$AAA@	; `string'
PUBLIC	??_C@_1M@OJONDMDL@?$AAf?$AAr?$AA?9?$AAM?$AAC@	; `string'
PUBLIC	??_C@_1BG@OBCNFJB@?$AAs?$AAr?$AA?9?$AAB?$AAA?$AA?9?$AAL?$AAa?$AAt?$AAn@ ; `string'
PUBLIC	??_C@_1O@KEMEEGPO@?$AAs?$AAm?$AAa?$AA?9?$AAN?$AAO@ ; `string'
PUBLIC	??_C@_1M@ELMGFODK@?$AAa?$AAr?$AA?9?$AAT?$AAN@	; `string'
PUBLIC	??_C@_1M@BHDLHFAF@?$AAe?$AAn?$AA?9?$AAZ?$AAA@	; `string'
PUBLIC	??_C@_1M@BMGIGLIF@?$AAe?$AAs?$AA?9?$AAD?$AAO@	; `string'
PUBLIC	??_C@_1BG@CMBHIPBE@?$AAs?$AAr?$AA?9?$AAB?$AAA?$AA?9?$AAC?$AAy?$AAr?$AAl@ ; `string'
PUBLIC	??_C@_1O@HEDBLHNP@?$AAs?$AAm?$AAa?$AA?9?$AAS?$AAE@ ; `string'
PUBLIC	??_C@_1M@DAGCADIM@?$AAa?$AAr?$AA?9?$AAO?$AAM@	; `string'
PUBLIC	??_C@_1M@FODLMICG@?$AAe?$AAn?$AA?9?$AAJ?$AAM@	; `string'
PUBLIC	??_C@_1M@DNMLCIHB@?$AAe?$AAs?$AA?9?$AAV?$AAE@	; `string'
PUBLIC	??_C@_1O@EOKHMKJK@?$AAs?$AAm?$AAs?$AA?9?$AAF?$AAI@ ; `string'
PUBLIC	??_C@_1M@CAFJMKOF@?$AAa?$AAr?$AA?9?$AAY?$AAE@	; `string'
PUBLIC	??_C@_1M@CBFHIJLI@?$AAe?$AAn?$AA?9?$AAC?$AAB@	; `string'
PUBLIC	??_C@_1M@BGNFLDN@?$AAe?$AAs?$AA?9?$AAC?$AAO@	; `string'
PUBLIC	??_C@_1O@JMPHMAMC@?$AAs?$AAm?$AAn?$AA?9?$AAF?$AAI@ ; `string'
PUBLIC	??_C@_1M@JLANABKE@?$AAa?$AAr?$AA?9?$AAS?$AAY@	; `string'
PUBLIC	??_C@_1M@HPKGCFGN@?$AAe?$AAn?$AA?9?$AAB?$AAZ@	; `string'
PUBLIC	??_C@_1M@OLJCMLGM@?$AAe?$AAs?$AA?9?$AAP?$AAE@	; `string'
PUBLIC	??_C@_1M@MKKGFKLE@?$AAa?$AAr?$AA?9?$AAJ?$AAO@	; `string'
PUBLIC	??_C@_1M@EKPGLDNI@?$AAe?$AAn?$AA?9?$AAT?$AAT@	; `string'
PUBLIC	??_C@_1M@OONGHFHE@?$AAe?$AAs?$AA?9?$AAA?$AAR@	; `string'
PUBLIC	??_C@_1M@OOJFGBHE@?$AAa?$AAr?$AA?9?$AAL?$AAB@	; `string'
PUBLIC	??_C@_1M@GCEJHNEG@?$AAe?$AAn?$AA?9?$AAZ?$AAW@	; `string'
PUBLIC	??_C@_1M@JNOCAHJI@?$AAe?$AAs?$AA?9?$AAE?$AAC@	; `string'
PUBLIC	??_C@_1M@JEFHPGGB@?$AAa?$AAr?$AA?9?$AAK?$AAW@	; `string'
PUBLIC	??_C@_1M@MLKIBJOJ@?$AAe?$AAn?$AA?9?$AAP?$AAH@	; `string'
PUBLIC	??_C@_1M@BDNIPEND@?$AAe?$AAs?$AA?9?$AAC?$AAL@	; `string'
PUBLIC	??_C@_1M@MPNMEKBD@?$AAa?$AAr?$AA?9?$AAA?$AAE@	; `string'
PUBLIC	??_C@_1M@KBJALCPI@?$AAe?$AAs?$AA?9?$AAU?$AAY@	; `string'
PUBLIC	??_C@_1M@LLCCOAGA@?$AAa?$AAr?$AA?9?$AAB?$AAH@	; `string'
PUBLIC	??_C@_1M@PBFNCDEL@?$AAe?$AAs?$AA?9?$AAP?$AAY@	; `string'
PUBLIC	??_C@_1M@EDGINPNP@?$AAa?$AAr?$AA?9?$AAQ?$AAA@	; `string'
PUBLIC	??_C@_1M@MKDBIIJI@?$AAe?$AAs?$AA?9?$AAB?$AAO@	; `string'
PUBLIC	??_C@_1M@CPKKEBLD@?$AAe?$AAs?$AA?9?$AAS?$AAV@	; `string'
PUBLIC	??_C@_1M@NDBGMMJL@?$AAe?$AAs?$AA?9?$AAH?$AAN@	; `string'
PUBLIC	??_C@_1M@JIJIBHDP@?$AAe?$AAs?$AA?9?$AAN?$AAI@	; `string'
PUBLIC	??_C@_1M@CGFMKEEK@?$AAe?$AAs?$AA?9?$AAP?$AAR@	; `string'
PUBLIC	??_C@_1O@ICJHKIIK@?$AAz?$AAh?$AA?9?$AAC?$AAH?$AAT@ ; `string'
PUBLIC	??_C@_15CLNEJCE@?$AAs?$AAr@			; `string'
PUBLIC	__pAtlLocaleNameToIndexTable
PUBLIC	??_C@_1M@KAHEKEIG@?$AAa?$AAf?$AA?9?$AAz?$AAa@	; `string'
PUBLIC	??_C@_1M@GIECOABL@?$AAa?$AAr?$AA?9?$AAa?$AAe@	; `string'
PUBLIC	??_C@_1M@BMLMEKGI@?$AAa?$AAr?$AA?9?$AAb?$AAh@	; `string'
PUBLIC	??_C@_1M@DAPFDGGB@?$AAa?$AAr?$AA?9?$AAd?$AAz@	; `string'
PUBLIC	??_C@_1M@FJNKGKIG@?$AAa?$AAr?$AA?9?$AAe?$AAg@	; `string'
PUBLIC	??_C@_1M@FLGKKCLO@?$AAa?$AAr?$AA?9?$AAi?$AAq@	; `string'
PUBLIC	??_C@_1M@GNDIPALM@?$AAa?$AAr?$AA?9?$AAj?$AAo@	; `string'
PUBLIC	??_C@_1M@DDMJFMGJ@?$AAa?$AAr?$AA?9?$AAk?$AAw@	; `string'
PUBLIC	??_C@_1M@EJALMLHM@?$AAa?$AAr?$AA?9?$AAl?$AAb@	; `string'
PUBLIC	??_C@_1M@MOBDBLOC@?$AAa?$AAr?$AA?9?$AAl?$AAy@	; `string'
PUBLIC	??_C@_1M@JAOCLHDH@?$AAa?$AAr?$AA?9?$AAm?$AAa@	; `string'
PUBLIC	??_C@_1M@JHPMKJIE@?$AAa?$AAr?$AA?9?$AAo?$AAm@	; `string'
PUBLIC	??_C@_1M@OEPGHFNH@?$AAa?$AAr?$AA?9?$AAq?$AAa@	; `string'
PUBLIC	??_C@_1M@KJDONENM@?$AAa?$AAr?$AA?9?$AAs?$AAa@	; `string'
PUBLIC	??_C@_1M@DMJDKLKM@?$AAa?$AAr?$AA?9?$AAs?$AAy@	; `string'
PUBLIC	??_C@_1M@OMFIPEDC@?$AAa?$AAr?$AA?9?$AAt?$AAn@	; `string'
PUBLIC	??_C@_1M@IHMHGAON@?$AAa?$AAr?$AA?9?$AAy?$AAe@	; `string'
PUBLIC	??_C@_1BG@KDCPGJGB@?$AAa?$AAz?$AA?9?$AAa?$AAz?$AA?9?$AAc?$AAy?$AAr?$AAl@ ; `string'
PUBLIC	??_C@_1BG@IBCKDDOE@?$AAa?$AAz?$AA?9?$AAa?$AAz?$AA?9?$AAl?$AAa?$AAt?$AAn@ ; `string'
PUBLIC	??_C@_1M@EGPFDCPD@?$AAb?$AAe?$AA?9?$AAb?$AAy@	; `string'
PUBLIC	??_C@_1M@PCMGMCGC@?$AAb?$AAg?$AA?9?$AAb?$AAg@	; `string'
PUBLIC	??_C@_1M@BJBMFGOB@?$AAb?$AAn?$AA?9?$AAi?$AAn@	; `string'
PUBLIC	??_C@_1BG@EAKMMACD@?$AAb?$AAs?$AA?9?$AAb?$AAa?$AA?9?$AAl?$AAa?$AAt?$AAn@ ; `string'
PUBLIC	??_C@_1M@KGADAODK@?$AAc?$AAa?$AA?9?$AAe?$AAs@	; `string'
PUBLIC	??_C@_1M@COAJPDHI@?$AAc?$AAs?$AA?9?$AAc?$AAz@	; `string'
PUBLIC	??_C@_1M@DHBHFONH@?$AAc?$AAy?$AA?9?$AAg?$AAb@	; `string'
PUBLIC	??_C@_1M@IMGKELGA@?$AAd?$AAa?$AA?9?$AAd?$AAk@	; `string'
PUBLIC	??_C@_1M@NNDGDNGA@?$AAd?$AAe?$AA?9?$AAa?$AAt@	; `string'
PUBLIC	??_C@_1M@IKDBHEEM@?$AAd?$AAe?$AA?9?$AAc?$AAh@	; `string'
PUBLIC	??_C@_1M@GFFOJMCJ@?$AAd?$AAe?$AA?9?$AAd?$AAe@	; `string'
PUBLIC	??_C@_1M@MDNLKBPM@?$AAd?$AAe?$AA?9?$AAl?$AAi@	; `string'
PUBLIC	??_C@_1M@NJBEEJNL@?$AAd?$AAe?$AA?9?$AAl?$AAu@	; `string'
PUBLIC	??_C@_1O@GNNELBAP@?$AAd?$AAi?$AAv?$AA?9?$AAm?$AAv@ ; `string'
PUBLIC	??_C@_1M@EJLEOGAE@?$AAe?$AAl?$AA?9?$AAg?$AAr@	; `string'
PUBLIC	??_C@_1M@GMPONJN@?$AAe?$AAn?$AA?9?$AAa?$AAu@	; `string'
PUBLIC	??_C@_1M@NIDIIPGF@?$AAe?$AAn?$AA?9?$AAb?$AAz@	; `string'
PUBLIC	??_C@_1M@JEHMIMFO@?$AAe?$AAn?$AA?9?$AAc?$AAa@	; `string'
PUBLIC	??_C@_1M@IGMJCDLA@?$AAe?$AAn?$AA?9?$AAc?$AAb@	; `string'
PUBLIC	??_C@_1M@BNFIGBKG@?$AAe?$AAn?$AA?9?$AAg?$AAb@	; `string'
PUBLIC	??_C@_1M@LKIFDIGP@?$AAe?$AAn?$AA?9?$AAi?$AAe@	; `string'
PUBLIC	??_C@_1M@PJKFGCCO@?$AAe?$AAn?$AA?9?$AAj?$AAm@	; `string'
PUBLIC	??_C@_1M@KPPKEPBO@?$AAe?$AAn?$AA?9?$AAn?$AAz@	; `string'
PUBLIC	??_C@_1M@GMDGLDOB@?$AAe?$AAn?$AA?9?$AAp?$AAh@	; `string'
PUBLIC	??_C@_1M@ONGIBJNA@?$AAe?$AAn?$AA?9?$AAt?$AAt@	; `string'
PUBLIC	??_C@_1M@LLODPCMM@?$AAe?$AAn?$AA?9?$AAu?$AAs@	; `string'
PUBLIC	??_C@_1M@LAKFNPAN@?$AAe?$AAn?$AA?9?$AAz?$AAa@	; `string'
PUBLIC	??_C@_1M@MFNHNHEO@?$AAe?$AAn?$AA?9?$AAz?$AAw@	; `string'
PUBLIC	??_C@_1M@EJEINPHM@?$AAe?$AAs?$AA?9?$AAa?$AAr@	; `string'
PUBLIC	??_C@_1M@GNKPCCJA@?$AAe?$AAs?$AA?9?$AAb?$AAo@	; `string'
PUBLIC	??_C@_1M@LEEGFONL@?$AAe?$AAs?$AA?9?$AAc?$AAl@	; `string'
PUBLIC	??_C@_1M@KGPDPBDF@?$AAe?$AAs?$AA?9?$AAc?$AAo@	; `string'
PUBLIC	??_C@_1M@EIAHOHH@?$AAe?$AAs?$AA?9?$AAc?$AAr@	; `string'
PUBLIC	??_C@_1M@LLPGMBIN@?$AAe?$AAs?$AA?9?$AAd?$AAo@	; `string'
PUBLIC	??_C@_1M@DKHMKNJA@?$AAe?$AAs?$AA?9?$AAe?$AAc@	; `string'
PUBLIC	??_C@_1M@GKGFPKAP@?$AAe?$AAs?$AA?9?$AAe?$AAs@	; `string'
PUBLIC	??_C@_1M@LKHKGDLN@?$AAe?$AAs?$AA?9?$AAg?$AAt@	; `string'
PUBLIC	??_C@_1M@HEIIGGJD@?$AAe?$AAs?$AA?9?$AAh?$AAn@	; `string'
PUBLIC	??_C@_1M@FBDHPPGD@?$AAe?$AAs?$AA?9?$AAm?$AAx@	; `string'
PUBLIC	??_C@_1M@DPAGLNDH@?$AAe?$AAs?$AA?9?$AAn?$AAi@	; `string'
PUBLIC	??_C@_1M@MDGOPGDD@?$AAe?$AAs?$AA?9?$AAp?$AAa@	; `string'
PUBLIC	??_C@_1M@EMAMGBGE@?$AAe?$AAs?$AA?9?$AAp?$AAe@	; `string'
PUBLIC	??_C@_1M@IBMCAOEC@?$AAe?$AAs?$AA?9?$AAp?$AAr@	; `string'
PUBLIC	??_C@_1M@FGMDIJED@?$AAe?$AAs?$AA?9?$AAp?$AAy@	; `string'
PUBLIC	??_C@_1M@IIDEOLLL@?$AAe?$AAs?$AA?9?$AAs?$AAv@	; `string'
PUBLIC	??_C@_1M@GAOBIPA@?$AAe?$AAs?$AA?9?$AAu?$AAy@	; `string'
PUBLIC	??_C@_1M@JKFFICHJ@?$AAe?$AAs?$AA?9?$AAv?$AAe@	; `string'
PUBLIC	??_C@_1M@PNMLOJDF@?$AAe?$AAt?$AA?9?$AAe?$AAe@	; `string'
PUBLIC	??_C@_1M@GHHLIKEI@?$AAe?$AAu?$AA?9?$AAe?$AAs@	; `string'
PUBLIC	??_C@_1M@PBNONODE@?$AAf?$AAa?$AA?9?$AAi?$AAr@	; `string'
PUBLIC	??_C@_1M@JEEHPMIL@?$AAf?$AAi?$AA?9?$AAf?$AAi@	; `string'
PUBLIC	??_C@_1M@LMDCNDBA@?$AAf?$AAo?$AA?9?$AAf?$AAo@	; `string'
PUBLIC	??_C@_1M@JKEOHLDK@?$AAf?$AAr?$AA?9?$AAb?$AAe@	; `string'
PUBLIC	??_C@_1M@NOHADPMI@?$AAf?$AAr?$AA?9?$AAc?$AAa@	; `string'
PUBLIC	??_C@_1M@KDHIHAEC@?$AAf?$AAr?$AA?9?$AAc?$AAh@	; `string'
PUBLIC	??_C@_1M@MMBBFGAK@?$AAf?$AAr?$AA?9?$AAf?$AAr@	; `string'
PUBLIC	??_C@_1M@PAFNENNF@?$AAf?$AAr?$AA?9?$AAl?$AAu@	; `string'
PUBLIC	??_C@_1M@EOHDJGDD@?$AAf?$AAr?$AA?9?$AAm?$AAc@	; `string'
PUBLIC	??_C@_1M@FAPLLOPF@?$AAg?$AAl?$AA?9?$AAe?$AAs@	; `string'
PUBLIC	??_C@_1M@FOPBFLOO@?$AAg?$AAu?$AA?9?$AAi?$AAn@	; `string'
PUBLIC	??_C@_1M@KBMCINPM@?$AAh?$AAe?$AA?9?$AAi?$AAl@	; `string'
PUBLIC	??_C@_1M@BBPHKFPJ@?$AAh?$AAi?$AA?9?$AAi?$AAn@	; `string'
PUBLIC	??_C@_1M@PMBNDPHD@?$AAh?$AAr?$AA?9?$AAb?$AAa@	; `string'
PUBLIC	??_C@_1M@BPCKOEGE@?$AAh?$AAr?$AA?9?$AAh?$AAr@	; `string'
PUBLIC	??_C@_1M@GACBMHKE@?$AAh?$AAu?$AA?9?$AAh?$AAu@	; `string'
PUBLIC	??_C@_1M@MILPAJJC@?$AAh?$AAy?$AA?9?$AAa?$AAm@	; `string'
PUBLIC	??_C@_1M@BABBICEC@?$AAi?$AAd?$AA?9?$AAi?$AAd@	; `string'
PUBLIC	??_C@_1M@BIKNHHPF@?$AAi?$AAs?$AA?9?$AAi?$AAs@	; `string'
PUBLIC	??_C@_1M@NMPCJPHE@?$AAi?$AAt?$AA?9?$AAc?$AAh@	; `string'
PUBLIC	??_C@_1M@GHKGFEDF@?$AAi?$AAt?$AA?9?$AAi?$AAt@	; `string'
PUBLIC	??_C@_1M@NIEJCJJA@?$AAj?$AAa?$AA?9?$AAj?$AAp@	; `string'
PUBLIC	??_C@_1M@JILFNBIM@?$AAk?$AAa?$AA?9?$AAg?$AAe@	; `string'
PUBLIC	??_C@_1M@PACPMGPH@?$AAk?$AAk?$AA?9?$AAk?$AAz@	; `string'
PUBLIC	??_C@_1M@IELFGMHA@?$AAk?$AAn?$AA?9?$AAi?$AAn@	; `string'
PUBLIC	??_C@_1O@IBBJHCH@?$AAk?$AAo?$AAk?$AA?9?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1M@DMHAEOGC@?$AAk?$AAo?$AA?9?$AAk?$AAr@	; `string'
PUBLIC	??_C@_1M@HBAHBIGA@?$AAk?$AAy?$AA?9?$AAk?$AAg@	; `string'
PUBLIC	??_C@_1M@KPMILCJG@?$AAl?$AAt?$AA?9?$AAl?$AAt@	; `string'
PUBLIC	??_C@_1M@BDEKKCA@?$AAl?$AAv?$AA?9?$AAl?$AAv@	; `string'
PUBLIC	??_C@_1M@ELCKCCJJ@?$AAm?$AAi?$AA?9?$AAn?$AAz@	; `string'
PUBLIC	??_C@_1M@CBOOLAPA@?$AAm?$AAk?$AA?9?$AAm?$AAk@	; `string'
PUBLIC	??_C@_1M@GPHNBJKN@?$AAm?$AAl?$AA?9?$AAi?$AAn@	; `string'
PUBLIC	??_C@_1M@PABJILIG@?$AAm?$AAn?$AA?9?$AAm?$AAn@	; `string'
PUBLIC	??_C@_1M@FGBKKIPG@?$AAm?$AAr?$AA?9?$AAi?$AAn@	; `string'
PUBLIC	??_C@_1M@NDBPDDAL@?$AAm?$AAs?$AA?9?$AAb?$AAn@	; `string'
PUBLIC	??_C@_1M@OPIHOOPI@?$AAm?$AAs?$AA?9?$AAm?$AAy@	; `string'
PUBLIC	??_C@_1M@PPDBCNFM@?$AAm?$AAt?$AA?9?$AAm?$AAt@	; `string'
PUBLIC	??_C@_1M@KDJDKMDD@?$AAn?$AAb?$AA?9?$AAn?$AAo@	; `string'
PUBLIC	??_C@_1M@KFCFLMJP@?$AAn?$AAl?$AA?9?$AAb?$AAe@	; `string'
PUBLIC	??_C@_1M@KPOPDDGO@?$AAn?$AAl?$AA?9?$AAn?$AAl@	; `string'
PUBLIC	??_C@_1M@LJKPEMLN@?$AAn?$AAn?$AA?9?$AAn?$AAo@	; `string'
PUBLIC	??_C@_1M@BDGHHBFL@?$AAn?$AAs?$AA?9?$AAz?$AAa@	; `string'
PUBLIC	??_C@_1M@IDEHOAP@?$AAp?$AAa?$AA?9?$AAi?$AAn@	; `string'
PUBLIC	??_C@_1M@HDBKGOGH@?$AAp?$AAl?$AA?9?$AAp?$AAl@	; `string'
PUBLIC	??_C@_1M@LJLLCMEH@?$AAp?$AAt?$AA?9?$AAb?$AAr@	; `string'
PUBLIC	??_C@_1M@NCMONAAL@?$AAp?$AAt?$AA?9?$AAp?$AAt@	; `string'
PUBLIC	??_C@_1O@EAKMAJDN@?$AAq?$AAu?$AAz?$AA?9?$AAb?$AAo@ ; `string'
PUBLIC	??_C@_1O@BHHPIGDN@?$AAq?$AAu?$AAz?$AA?9?$AAe?$AAc@ ; `string'
PUBLIC	??_C@_1O@GBAPEKMJ@?$AAq?$AAu?$AAz?$AA?9?$AAp?$AAe@ ; `string'
PUBLIC	??_C@_1M@CLGLEFBO@?$AAr?$AAo?$AA?9?$AAr?$AAo@	; `string'
PUBLIC	??_C@_1M@CEEDODME@?$AAr?$AAu?$AA?9?$AAr?$AAu@	; `string'
PUBLIC	??_C@_1M@HPKKKMPP@?$AAs?$AAa?$AA?9?$AAi?$AAn@	; `string'
PUBLIC	??_C@_1M@BKMAIGOJ@?$AAs?$AAe?$AA?9?$AAf?$AAi@	; `string'
PUBLIC	??_C@_1M@NDPIFLFI@?$AAs?$AAe?$AA?9?$AAn?$AAo@	; `string'
PUBLIC	??_C@_1M@DANKKHJ@?$AAs?$AAe?$AA?9?$AAs?$AAe@	; `string'
PUBLIC	??_C@_1M@PNBLONPJ@?$AAs?$AAk?$AA?9?$AAs?$AAk@	; `string'
PUBLIC	??_C@_1M@LFMODOAL@?$AAs?$AAl?$AA?9?$AAs?$AAi@	; `string'
PUBLIC	??_C@_1O@DFKOMPG@?$AAs?$AAm?$AAa?$AA?9?$AAn?$AAo@ ; `string'
PUBLIC	??_C@_1O@NDKPBNNH@?$AAs?$AAm?$AAa?$AA?9?$AAs?$AAe@ ; `string'
PUBLIC	??_C@_1O@PLLKBHAB@?$AAs?$AAm?$AAj?$AA?9?$AAn?$AAo@ ; `string'
PUBLIC	??_C@_1O@CLEPOGCA@?$AAs?$AAm?$AAj?$AA?9?$AAs?$AAe@ ; `string'
PUBLIC	??_C@_1O@DLGJGKMK@?$AAs?$AAm?$AAn?$AA?9?$AAf?$AAi@ ; `string'
PUBLIC	??_C@_1O@OJDJGAJC@?$AAs?$AAm?$AAs?$AA?9?$AAf?$AAi@ ; `string'
PUBLIC	??_C@_1M@BOFOGHPB@?$AAs?$AAq?$AA?9?$AAa?$AAl@	; `string'
PUBLIC	??_C@_1BG@LJBBIPGB@?$AAs?$AAr?$AA?9?$AAb?$AAa?$AA?9?$AAc?$AAy?$AAr?$AAl@ ; `string'
PUBLIC	??_C@_1BG@JLBENFOE@?$AAs?$AAr?$AA?9?$AAb?$AAa?$AA?9?$AAl?$AAa?$AAt?$AAn@ ; `string'
PUBLIC	??_C@_1BG@KODPNHE@?$AAs?$AAr?$AA?9?$AAs?$AAp?$AA?9?$AAc?$AAy?$AAr?$AAl@ ; `string'
PUBLIC	??_C@_1BG@CIOGKHPB@?$AAs?$AAr?$AA?9?$AAs?$AAp?$AA?9?$AAl?$AAa?$AAt?$AAn@ ; `string'
PUBLIC	??_C@_1M@NGFJLMAC@?$AAs?$AAv?$AA?9?$AAf?$AAi@	; `string'
PUBLIC	??_C@_1M@MPJEJAJC@?$AAs?$AAv?$AA?9?$AAs?$AAe@	; `string'
PUBLIC	??_C@_1M@MPNDHLFK@?$AAs?$AAw?$AA?9?$AAk?$AAe@	; `string'
PUBLIC	??_C@_1O@KOHBJJI@?$AAs?$AAy?$AAr?$AA?9?$AAs?$AAy@ ; `string'
PUBLIC	??_C@_1M@LDCEFHA@?$AAt?$AAa?$AA?9?$AAi?$AAn@	; `string'
PUBLIC	??_C@_1M@CNJOFAK@?$AAt?$AAe?$AA?9?$AAi?$AAn@	; `string'
PUBLIC	??_C@_1M@GNAECACD@?$AAt?$AAh?$AA?9?$AAt?$AAh@	; `string'
PUBLIC	??_C@_1M@CHBIHOJO@?$AAt?$AAn?$AA?9?$AAz?$AAa@	; `string'
PUBLIC	??_C@_1M@GCCMIGPJ@?$AAt?$AAr?$AA?9?$AAt?$AAr@	; `string'
PUBLIC	??_C@_1M@CELMCNBK@?$AAt?$AAt?$AA?9?$AAr?$AAu@	; `string'
PUBLIC	??_C@_1M@KLMCELGA@?$AAu?$AAk?$AA?9?$AAu?$AAa@	; `string'
PUBLIC	??_C@_1M@EPAJJAJF@?$AAu?$AAr?$AA?9?$AAp?$AAk@	; `string'
PUBLIC	??_C@_1BG@GEGPMCDJ@?$AAu?$AAz?$AA?9?$AAu?$AAz?$AA?9?$AAc?$AAy?$AAr?$AAl@ ; `string'
PUBLIC	??_C@_1BG@EGGKJILM@?$AAu?$AAz?$AA?9?$AAu?$AAz?$AA?9?$AAl?$AAa?$AAt?$AAn@ ; `string'
PUBLIC	??_C@_1M@GFOCLFF@?$AAv?$AAi?$AA?9?$AAv?$AAn@	; `string'
PUBLIC	??_C@_1M@CPAMEDFI@?$AAx?$AAh?$AA?9?$AAz?$AAa@	; `string'
PUBLIC	??_C@_1O@EBKIFIGN@?$AAz?$AAh?$AA?9?$AAc?$AAh?$AAs@ ; `string'
PUBLIC	??_C@_1O@NMHPGANE@?$AAz?$AAh?$AA?9?$AAc?$AAh?$AAt@ ; `string'
PUBLIC	??_C@_1M@LPINJOMC@?$AAz?$AAh?$AA?9?$AAc?$AAn@	; `string'
PUBLIC	??_C@_1M@OCJEJODD@?$AAz?$AAh?$AA?9?$AAh?$AAk@	; `string'
PUBLIC	??_C@_1M@DNDLJINH@?$AAz?$AAh?$AA?9?$AAm?$AAo@	; `string'
PUBLIC	??_C@_1M@MBFDNDND@?$AAz?$AAh?$AA?9?$AAs?$AAg@	; `string'
PUBLIC	??_C@_1M@IMEPLEPE@?$AAz?$AAh?$AA?9?$AAt?$AAw@	; `string'
PUBLIC	??_C@_1M@BBGHNHJP@?$AAz?$AAu?$AA?9?$AAz?$AAa@	; `string'
PUBLIC	_c_DwmMaxQueuedBuffers
PUBLIC	_c_DwmMaxMonitors
PUBLIC	_c_DwmMaxAdapters
PUBLIC	__pIncludeInitManaged
PUBLIC	_LIBID_ATLLib
PUBLIC	??_C@_1OC@KJBACLGD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	___pobjMapEntryFirst
PUBLIC	___pobjMapEntryLast
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	??_C@_0HB@FHIMFEIJ@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_0EA@EJEMLPD@ERROR?5?3?5Unable?5to?5initialize?5cr@ ; `string'
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?CLSID_WinFormsControl@@3U_GUID@@B		; CLSID_WinFormsControl
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_1OK@GILLOEON@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A ; ATL::_pAtlAutoThreadModule
PUBLIC	??_C@_1BE@BLGCOAPB@?$AAn?$AAR?$AAe?$AAf?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1OI@LKICOBAJ@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1CA@MEFFJNJ@?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_13COJANIEC@?$AA0@				; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?chDirSep@ATL@@3DB				; ATL::chDirSep
PUBLIC	?chRightBracket@ATL@@3DB			; ATL::chRightBracket
PUBLIC	?chLeftBracket@ATL@@3DB				; ATL::chLeftBracket
PUBLIC	?chQuote@ATL@@3DB				; ATL::chQuote
PUBLIC	?chEquals@ATL@@3DB				; ATL::chEquals
PUBLIC	?szStringVal@ATL@@3QBDB				; ATL::szStringVal
PUBLIC	??_C@_01CPLAODJH@S@				; `string'
PUBLIC	?multiszStringVal@ATL@@3QBDB			; ATL::multiszStringVal
PUBLIC	??_C@_01PLPBNMEI@M@				; `string'
PUBLIC	?szDwordVal@ATL@@3QBDB				; ATL::szDwordVal
PUBLIC	??_C@_01CKDDGHAB@D@				; `string'
PUBLIC	?szBinaryVal@ATL@@3QBDB				; ATL::szBinaryVal
PUBLIC	??_C@_01HMGJMAIH@B@				; `string'
PUBLIC	?szValToken@ATL@@3QBDB				; ATL::szValToken
PUBLIC	??_C@_03LAIAPFCB@Val@				; `string'
PUBLIC	?szForceRemove@ATL@@3QBDB			; ATL::szForceRemove
PUBLIC	??_C@_0M@DBGDLGLL@ForceRemove@			; `string'
PUBLIC	?szNoRemove@ATL@@3QBDB				; ATL::szNoRemove
PUBLIC	??_C@_08KAAPDIAN@NoRemove@			; `string'
PUBLIC	?szDelete@ATL@@3QBDB				; ATL::szDelete
PUBLIC	??_C@_06JBKGCNBB@Delete@			; `string'
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@ ; `string'
PUBLIC	?Allocate@CWin32Heap@ATL@@UAEPAXI@Z		; ATL::CWin32Heap::Allocate
PUBLIC	?Free@CWin32Heap@ATL@@UAEXPAX@Z			; ATL::CWin32Heap::Free
PUBLIC	?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z	; ATL::CWin32Heap::Reallocate
PUBLIC	?GetSize@CWin32Heap@ATL@@UAEIPAX@Z		; ATL::CWin32Heap::GetSize
PUBLIC	??_7CWin32Heap@ATL@@6B@				; ATL::CWin32Heap::`vftable'
PUBLIC	??_GCWin32Heap@ATL@@UAEPAXI@Z			; ATL::CWin32Heap::`scalar deleting destructor'
PUBLIC	??_C@_1BG@CLPBKBHG@?$AAh?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1OA@FNEDKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@PMINONJG@?$AAb?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs@ ; `string'
PUBLIC	??_C@_0BA@MKMIKKJB@atlTraceGeneral@		; `string'
PUBLIC	??_C@_0M@DGPFJEBB@atlTraceCOM@			; `string'
PUBLIC	??_C@_0L@LHELAKBP@atlTraceQI@			; `string'
PUBLIC	?szInvalidDateTime@ATL@@3QBDB			; ATL::szInvalidDateTime
PUBLIC	??_C@_0BB@KEKMKJPM@Invalid?5DateTime@		; `string'
PUBLIC	?szInvalidDateTimeSpan@ATL@@3QBDB		; ATL::szInvalidDateTimeSpan
PUBLIC	??_C@_0BF@GPPHKJFN@Invalid?5DateTimeSpan@	; `string'
PUBLIC	??_C@_0BC@MALHFBAO@atlTraceRegistrar@		; `string'
PUBLIC	??_C@_0BB@ILPPDKFL@atlTraceRefcount@		; `string'
PUBLIC	??_C@_0BC@DGHHNKDC@atlTraceWindowing@		; `string'
PUBLIC	??_C@_0BB@GHKJKKIE@atlTraceControls@		; `string'
PUBLIC	??_C@_0BA@DKOAAGGM@atlTraceHosting@		; `string'
PUBLIC	??_C@_0BB@BEBMGMDO@atlTraceDBClient@		; `string'
PUBLIC	??_C@_0BD@KOADKDIA@atlTraceDBProvider@		; `string'
PUBLIC	??_C@_0P@LNEGBOLO@atlTraceSnapin@		; `string'
PUBLIC	??_C@_0BA@MCBFIDIC@atlTraceNotImpl@		; `string'
PUBLIC	??_C@_0BD@PJPCCAKP@atlTraceAllocation@		; `string'
PUBLIC	??_C@_0BC@PGMFNIFA@atlTraceException@		; `string'
PUBLIC	??_C@_0N@BNNILHBE@atlTraceTime@			; `string'
PUBLIC	??_R4CWin32Heap@ATL@@6B@			; ATL::CWin32Heap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCWin32Heap@ATL@@@8			; ATL::CWin32Heap `RTTI Type Descriptor'
PUBLIC	??_R3CWin32Heap@ATL@@8				; ATL::CWin32Heap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWin32Heap@ATL@@8				; ATL::CWin32Heap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWin32Heap@ATL@@8			; ATL::CWin32Heap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IAtlMemMgr@ATL@@8			; ATL::IAtlMemMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIAtlMemMgr@ATL@@@8			; ATL::IAtlMemMgr `RTTI Type Descriptor'
PUBLIC	??_R3IAtlMemMgr@ATL@@8				; ATL::IAtlMemMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAtlMemMgr@ATL@@8				; ATL::IAtlMemMgr::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IAtlStringMgr@ATL@@8		; ATL::IAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIAtlStringMgr@ATL@@@8			; ATL::IAtlStringMgr `RTTI Type Descriptor'
PUBLIC	??_R3IAtlStringMgr@ATL@@8			; ATL::IAtlStringMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAtlStringMgr@ATL@@8			; ATL::IAtlStringMgr::`RTTI Base Class Array'
PUBLIC	??_C@_0O@MEOJAOKK@atlTraceCache@		; `string'
PUBLIC	??_R4CAtlStringMgr@ATL@@6B@			; ATL::CAtlStringMgr::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAtlStringMgr@ATL@@@8			; ATL::CAtlStringMgr `RTTI Type Descriptor'
PUBLIC	??_R3CAtlStringMgr@ATL@@8			; ATL::CAtlStringMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAtlStringMgr@ATL@@8			; ATL::CAtlStringMgr::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAtlStringMgr@ATL@@8		; ATL::CAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_C@_0BA@IDBKCKK@atlTraceStencil@		; `string'
PUBLIC	??_C@_0P@MBNHGHMI@atlTraceString@		; `string'
PUBLIC	??_C@_0M@IOBBMAHG@atlTraceMap@			; `string'
PUBLIC	??_C@_0N@FEAAACHD@atlTraceUtil@			; `string'
PUBLIC	??_C@_0BB@DNJDADMG@atlTraceSecurity@		; `string'
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_ECAtlStringMgr@ATL@@UAEPAXI@Z:PROC		; ATL::CAtlStringMgr::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___ImageBase:BYTE
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
EXTRN	??_ECWin32Heap@ATL@@UAEPAXI@Z:PROC		; ATL::CWin32Heap::`vector deleting destructor'
;	COMDAT ___@@_PchSym_@00@UKlsKomKqyKlsKroKqzUszkkbtznvdsUKltKqnKrmKluKrpKpyKlsKpoKpkUKlvKorKpmKlqKqsKovKlsKqoKplKluKomKquUKluKrtKruKltKpzKorKluKonKquKltKqwKrlUwvyftPzmhrUhgwzucOlyq@4B2008FD98C1DD4
_BSS	SEGMENT
___@@_PchSym_@00@UKlsKomKqyKlsKroKqzUszkkbtznvdsUKltKqnKrmKluKrpKpyKlsKpoKpkUKlvKorKpmKlqKqsKovKlsKqoKplKluKomKquUKluKrtKruKltKpzKorKluKonKquKltKqwKrlUwvyftPzmhrUhgwzucOlyq@4B2008FD98C1DD4 DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ?m_nLevel@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLevel@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLevel
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A
_BSS	SEGMENT
?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A DB 0cH DUP (?) ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
_BSS	ENDS
;	COMDAT ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
_BSS	ENDS
;	COMDAT ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A
_BSS	SEGMENT
?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A DB 01cH DUP (?) ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr
_BSS	ENDS
;	COMDAT ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA
_BSS	SEGMENT
?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA DD 01H DUP (?) ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A DD 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ??_C@_0BB@DNJDADMG@atlTraceSecurity@
CONST	SEGMENT
??_C@_0BB@DNJDADMG@atlTraceSecurity@ DB 'atlTraceSecurity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FEAAACHD@atlTraceUtil@
CONST	SEGMENT
??_C@_0N@FEAAACHD@atlTraceUtil@ DB 'atlTraceUtil', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IOBBMAHG@atlTraceMap@
CONST	SEGMENT
??_C@_0M@IOBBMAHG@atlTraceMap@ DB 'atlTraceMap', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MBNHGHMI@atlTraceString@
CONST	SEGMENT
??_C@_0P@MBNHGHMI@atlTraceString@ DB 'atlTraceString', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IDBKCKK@atlTraceStencil@
CONST	SEGMENT
??_C@_0BA@IDBKCKK@atlTraceStencil@ DB 'atlTraceStencil', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAtlStringMgr@ATL@@8 DD FLAT:??_R0?AVCAtlStringMgr@ATL@@@8 ; ATL::CAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2CAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R2CAtlStringMgr@ATL@@8 DD FLAT:??_R1A@?0A@EA@CAtlStringMgr@ATL@@8 ; ATL::CAtlStringMgr::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R3CAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R3CAtlStringMgr@ATL@@8 DD 00H			; ATL::CAtlStringMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAtlStringMgr@ATL@@@8
data$r	SEGMENT
??_R0?AVCAtlStringMgr@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CAtlStringMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAtlStringMgr@ATL@@', 00H
data$r	ENDS
;	COMDAT ??_R4CAtlStringMgr@ATL@@6B@
rdata$r	SEGMENT
??_R4CAtlStringMgr@ATL@@6B@ DD 00H			; ATL::CAtlStringMgr::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAtlStringMgr@ATL@@@8
	DD	FLAT:??_R3CAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_C@_0O@MEOJAOKK@atlTraceCache@
CONST	SEGMENT
??_C@_0O@MEOJAOKK@atlTraceCache@ DB 'atlTraceCache', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R2IAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R2IAtlStringMgr@ATL@@8 DD FLAT:??_R1A@?0A@EA@IAtlStringMgr@ATL@@8 ; ATL::IAtlStringMgr::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R3IAtlStringMgr@ATL@@8 DD 00H			; ATL::IAtlStringMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAtlStringMgr@ATL@@@8
data$r	SEGMENT
??_R0?AUIAtlStringMgr@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::IAtlStringMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAtlStringMgr@ATL@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAtlStringMgr@ATL@@8 DD FLAT:??_R0?AUIAtlStringMgr@ATL@@@8 ; ATL::IAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2IAtlMemMgr@ATL@@8
rdata$r	SEGMENT
??_R2IAtlMemMgr@ATL@@8 DD FLAT:??_R1A@?0A@EA@IAtlMemMgr@ATL@@8 ; ATL::IAtlMemMgr::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IAtlMemMgr@ATL@@8
rdata$r	SEGMENT
??_R3IAtlMemMgr@ATL@@8 DD 00H				; ATL::IAtlMemMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IAtlMemMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAtlMemMgr@ATL@@@8
data$r	SEGMENT
??_R0?AUIAtlMemMgr@ATL@@@8 DD FLAT:??_7type_info@@6B@	; ATL::IAtlMemMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAtlMemMgr@ATL@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IAtlMemMgr@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAtlMemMgr@ATL@@8 DD FLAT:??_R0?AUIAtlMemMgr@ATL@@@8 ; ATL::IAtlMemMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAtlMemMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWin32Heap@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWin32Heap@ATL@@8 DD FLAT:??_R0?AVCWin32Heap@ATL@@@8 ; ATL::CWin32Heap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWin32Heap@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2CWin32Heap@ATL@@8
rdata$r	SEGMENT
??_R2CWin32Heap@ATL@@8 DD FLAT:??_R1A@?0A@EA@CWin32Heap@ATL@@8 ; ATL::CWin32Heap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAtlMemMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R3CWin32Heap@ATL@@8
rdata$r	SEGMENT
??_R3CWin32Heap@ATL@@8 DD 00H				; ATL::CWin32Heap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CWin32Heap@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWin32Heap@ATL@@@8
data$r	SEGMENT
??_R0?AVCWin32Heap@ATL@@@8 DD FLAT:??_7type_info@@6B@	; ATL::CWin32Heap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWin32Heap@ATL@@', 00H
data$r	ENDS
;	COMDAT ??_R4CWin32Heap@ATL@@6B@
rdata$r	SEGMENT
??_R4CWin32Heap@ATL@@6B@ DD 00H				; ATL::CWin32Heap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWin32Heap@ATL@@@8
	DD	FLAT:??_R3CWin32Heap@ATL@@8
rdata$r	ENDS
;	COMDAT ??_C@_0N@BNNILHBE@atlTraceTime@
CONST	SEGMENT
??_C@_0N@BNNILHBE@atlTraceTime@ DB 'atlTraceTime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PGMFNIFA@atlTraceException@
CONST	SEGMENT
??_C@_0BC@PGMFNIFA@atlTraceException@ DB 'atlTraceException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PJPCCAKP@atlTraceAllocation@
CONST	SEGMENT
??_C@_0BD@PJPCCAKP@atlTraceAllocation@ DB 'atlTraceAllocation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MCBFIDIC@atlTraceNotImpl@
CONST	SEGMENT
??_C@_0BA@MCBFIDIC@atlTraceNotImpl@ DB 'atlTraceNotImpl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LNEGBOLO@atlTraceSnapin@
CONST	SEGMENT
??_C@_0P@LNEGBOLO@atlTraceSnapin@ DB 'atlTraceSnapin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KOADKDIA@atlTraceDBProvider@
CONST	SEGMENT
??_C@_0BD@KOADKDIA@atlTraceDBProvider@ DB 'atlTraceDBProvider', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BEBMGMDO@atlTraceDBClient@
CONST	SEGMENT
??_C@_0BB@BEBMGMDO@atlTraceDBClient@ DB 'atlTraceDBClient', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DKOAAGGM@atlTraceHosting@
CONST	SEGMENT
??_C@_0BA@DKOAAGGM@atlTraceHosting@ DB 'atlTraceHosting', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GHKJKKIE@atlTraceControls@
CONST	SEGMENT
??_C@_0BB@GHKJKKIE@atlTraceControls@ DB 'atlTraceControls', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DGHHNKDC@atlTraceWindowing@
CONST	SEGMENT
??_C@_0BC@DGHHNKDC@atlTraceWindowing@ DB 'atlTraceWindowing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ILPPDKFL@atlTraceRefcount@
CONST	SEGMENT
??_C@_0BB@ILPPDKFL@atlTraceRefcount@ DB 'atlTraceRefcount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MALHFBAO@atlTraceRegistrar@
CONST	SEGMENT
??_C@_0BC@MALHFBAO@atlTraceRegistrar@ DB 'atlTraceRegistrar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GPPHKJFN@Invalid?5DateTimeSpan@
CONST	SEGMENT
??_C@_0BF@GPPHKJFN@Invalid?5DateTimeSpan@ DB 'Invalid DateTimeSpan', 00H ; `string'
CONST	ENDS
;	COMDAT ?szInvalidDateTimeSpan@ATL@@3QBDB
CONST	SEGMENT
?szInvalidDateTimeSpan@ATL@@3QBDB DD FLAT:??_C@_0BF@GPPHKJFN@Invalid?5DateTimeSpan@ ; ATL::szInvalidDateTimeSpan
CONST	ENDS
;	COMDAT ??_C@_0BB@KEKMKJPM@Invalid?5DateTime@
CONST	SEGMENT
??_C@_0BB@KEKMKJPM@Invalid?5DateTime@ DB 'Invalid DateTime', 00H ; `string'
CONST	ENDS
;	COMDAT ?szInvalidDateTime@ATL@@3QBDB
CONST	SEGMENT
?szInvalidDateTime@ATL@@3QBDB DD FLAT:??_C@_0BB@KEKMKJPM@Invalid?5DateTime@ ; ATL::szInvalidDateTime
CONST	ENDS
;	COMDAT ??_C@_0L@LHELAKBP@atlTraceQI@
CONST	SEGMENT
??_C@_0L@LHELAKBP@atlTraceQI@ DB 'atlTraceQI', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DGPFJEBB@atlTraceCOM@
CONST	SEGMENT
??_C@_0M@DGPFJEBB@atlTraceCOM@ DB 'atlTraceCOM', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MKMIKKJB@atlTraceGeneral@
CONST	SEGMENT
??_C@_0BA@MKMIKKJB@atlTraceGeneral@ DB 'atlTraceGeneral', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@PMINONJG@?$AAb?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs@
CONST	SEGMENT
??_C@_1BC@PMINONJG@?$AAb?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs@ DB 'b', 00H, 'S'
	DB	00H, 'u', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1OA@FNEDKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OA@FNEDKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H, '.', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@CLPBKBHG@?$AAh?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BG@CLPBKBHG@?$AAh?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'h'
	DB	00H, 'H', 00H, 'e', 00H, 'a', 00H, 'p', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CWin32Heap@ATL@@6B@
CONST	SEGMENT
??_7CWin32Heap@ATL@@6B@ DD FLAT:??_R4CWin32Heap@ATL@@6B@ ; ATL::CWin32Heap::`vftable'
	DD	FLAT:?Allocate@CWin32Heap@ATL@@UAEPAXI@Z
	DD	FLAT:?Free@CWin32Heap@ATL@@UAEXPAX@Z
	DD	FLAT:?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z
	DD	FLAT:?GetSize@CWin32Heap@ATL@@UAEIPAX@Z
	DD	FLAT:??_ECWin32Heap@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
CONST	SEGMENT
??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@ DB '_'
	DB	00H, '_', 00H, 'a', 00H, 't', 00H, 'l', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete@
CONST	SEGMENT
??_C@_06JBKGCNBB@Delete@ DB 'Delete', 00H		; `string'
CONST	ENDS
;	COMDAT ?szDelete@ATL@@3QBDB
CONST	SEGMENT
?szDelete@ATL@@3QBDB DD FLAT:??_C@_06JBKGCNBB@Delete@	; ATL::szDelete
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove@
CONST	SEGMENT
??_C@_08KAAPDIAN@NoRemove@ DB 'NoRemove', 00H		; `string'
CONST	ENDS
;	COMDAT ?szNoRemove@ATL@@3QBDB
CONST	SEGMENT
?szNoRemove@ATL@@3QBDB DD FLAT:??_C@_08KAAPDIAN@NoRemove@ ; ATL::szNoRemove
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove@
CONST	SEGMENT
??_C@_0M@DBGDLGLL@ForceRemove@ DB 'ForceRemove', 00H	; `string'
CONST	ENDS
;	COMDAT ?szForceRemove@ATL@@3QBDB
CONST	SEGMENT
?szForceRemove@ATL@@3QBDB DD FLAT:??_C@_0M@DBGDLGLL@ForceRemove@ ; ATL::szForceRemove
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val@
CONST	SEGMENT
??_C@_03LAIAPFCB@Val@ DB 'Val', 00H			; `string'
CONST	ENDS
;	COMDAT ?szValToken@ATL@@3QBDB
CONST	SEGMENT
?szValToken@ATL@@3QBDB DD FLAT:??_C@_03LAIAPFCB@Val@	; ATL::szValToken
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B@
CONST	SEGMENT
??_C@_01HMGJMAIH@B@ DB 'B', 00H				; `string'
CONST	ENDS
;	COMDAT ?szBinaryVal@ATL@@3QBDB
CONST	SEGMENT
?szBinaryVal@ATL@@3QBDB DD FLAT:??_C@_01HMGJMAIH@B@	; ATL::szBinaryVal
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D@
CONST	SEGMENT
??_C@_01CKDDGHAB@D@ DB 'D', 00H				; `string'
CONST	ENDS
;	COMDAT ?szDwordVal@ATL@@3QBDB
CONST	SEGMENT
?szDwordVal@ATL@@3QBDB DD FLAT:??_C@_01CKDDGHAB@D@	; ATL::szDwordVal
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M@
CONST	SEGMENT
??_C@_01PLPBNMEI@M@ DB 'M', 00H				; `string'
CONST	ENDS
;	COMDAT ?multiszStringVal@ATL@@3QBDB
CONST	SEGMENT
?multiszStringVal@ATL@@3QBDB DD FLAT:??_C@_01PLPBNMEI@M@ ; ATL::multiszStringVal
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S@
CONST	SEGMENT
??_C@_01CPLAODJH@S@ DB 'S', 00H				; `string'
CONST	ENDS
;	COMDAT ?szStringVal@ATL@@3QBDB
CONST	SEGMENT
?szStringVal@ATL@@3QBDB DD FLAT:??_C@_01CPLAODJH@S@	; ATL::szStringVal
CONST	ENDS
;	COMDAT ?chEquals@ATL@@3DB
CONST	SEGMENT
?chEquals@ATL@@3DB DB 03dH				; ATL::chEquals
CONST	ENDS
;	COMDAT ?chQuote@ATL@@3DB
CONST	SEGMENT
?chQuote@ATL@@3DB DB 027H				; ATL::chQuote
CONST	ENDS
;	COMDAT ?chLeftBracket@ATL@@3DB
CONST	SEGMENT
?chLeftBracket@ATL@@3DB DB 07bH				; ATL::chLeftBracket
CONST	ENDS
;	COMDAT ?chRightBracket@ATL@@3DB
CONST	SEGMENT
?chRightBracket@ATL@@3DB DB 07dH			; ATL::chRightBracket
CONST	ENDS
;	COMDAT ?chDirSep@ATL@@3DB
CONST	SEGMENT
?chDirSep@ATL@@3DB DB 05cH				; ATL::chDirSep
CONST	ENDS
;	COMDAT ??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0@ DB '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@MEFFJNJ@?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1CA@MEFFJNJ@?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'M', 00H, 'g', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1OI@LKICOBAJ@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OI@LKICOBAJ@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 's', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@BLGCOAPB@?$AAn?$AAR?$AAe?$AAf?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BE@BLGCOAPB@?$AAn?$AAR?$AAe?$AAf?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0@ DB 'n'
	DB	00H, 'R', 00H, 'e', 00H, 'f', 00H, 's', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1OK@GILLOEON@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OK@GILLOEON@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 's', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'c', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB 'n'
	DB	00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'n', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'm', 00H, '_', 00H, 'n'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?CLSID_WinFormsControl@@3U_GUID@@B
CONST	SEGMENT
?CLSID_WinFormsControl@@3U_GUID@@B DD 0b7e7a666H	; CLSID_WinFormsControl
	DW	0d623H
	DW	0457fH
	DB	0a3H
	DB	0aH
	DB	06aH
	DB	049H
	DB	0a3H
	DB	0e5H
	DB	0b4H
	DB	070H
CONST	ENDS
;	COMDAT ??_C@_0EA@EJEMLPD@ERROR?5?3?5Unable?5to?5initialize?5cr@
CONST	SEGMENT
??_C@_0EA@EJEMLPD@ERROR?5?3?5Unable?5to?5initialize?5cr@ DB 'ERROR : Unab'
	DB	'le to initialize critical section in CAtlComModule', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HB@FHIMFEIJ@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0HB@FHIMFEIJ@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\atlmfc\include\atlbase.h', 00H ; `string'
CONST	ENDS
;	COMDAT ___pobjMapEntryLast
ATL$__z	SEGMENT
___pobjMapEntryLast DD 00H
ATL$__z	ENDS
;	COMDAT ___pobjMapEntryFirst
ATL$__a	SEGMENT
___pobjMapEntryFirst DD 00H
ATL$__a	ENDS
;	COMDAT ??_C@_1OC@KJBACLGD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OC@KJBACLGD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT __pIncludeInitManaged
_DATA	SEGMENT
__pIncludeInitManaged DD FLAT:?_AfxInitManaged@@YAHXZ
_DATA	ENDS
;	COMDAT _c_DwmMaxAdapters
CONST	SEGMENT
_c_DwmMaxAdapters DD 010H
CONST	ENDS
;	COMDAT _c_DwmMaxMonitors
CONST	SEGMENT
_c_DwmMaxMonitors DD 010H
CONST	ENDS
;	COMDAT _c_DwmMaxQueuedBuffers
CONST	SEGMENT
_c_DwmMaxQueuedBuffers DD 08H
CONST	ENDS
;	COMDAT ??_C@_1M@BBGHNHJP@?$AAz?$AAu?$AA?9?$AAz?$AAa@
CONST	SEGMENT
??_C@_1M@BBGHNHJP@?$AAz?$AAu?$AA?9?$AAz?$AAa@ DB 'z', 00H, 'u', 00H, '-', 00H
	DB	'z', 00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IMEPLEPE@?$AAz?$AAh?$AA?9?$AAt?$AAw@
CONST	SEGMENT
??_C@_1M@IMEPLEPE@?$AAz?$AAh?$AA?9?$AAt?$AAw@ DB 'z', 00H, 'h', 00H, '-', 00H
	DB	't', 00H, 'w', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MBFDNDND@?$AAz?$AAh?$AA?9?$AAs?$AAg@
CONST	SEGMENT
??_C@_1M@MBFDNDND@?$AAz?$AAh?$AA?9?$AAs?$AAg@ DB 'z', 00H, 'h', 00H, '-', 00H
	DB	's', 00H, 'g', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DNDLJINH@?$AAz?$AAh?$AA?9?$AAm?$AAo@
CONST	SEGMENT
??_C@_1M@DNDLJINH@?$AAz?$AAh?$AA?9?$AAm?$AAo@ DB 'z', 00H, 'h', 00H, '-', 00H
	DB	'm', 00H, 'o', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@OCJEJODD@?$AAz?$AAh?$AA?9?$AAh?$AAk@
CONST	SEGMENT
??_C@_1M@OCJEJODD@?$AAz?$AAh?$AA?9?$AAh?$AAk@ DB 'z', 00H, 'h', 00H, '-', 00H
	DB	'h', 00H, 'k', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LPINJOMC@?$AAz?$AAh?$AA?9?$AAc?$AAn@
CONST	SEGMENT
??_C@_1M@LPINJOMC@?$AAz?$AAh?$AA?9?$AAc?$AAn@ DB 'z', 00H, 'h', 00H, '-', 00H
	DB	'c', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@NMHPGANE@?$AAz?$AAh?$AA?9?$AAc?$AAh?$AAt@
CONST	SEGMENT
??_C@_1O@NMHPGANE@?$AAz?$AAh?$AA?9?$AAc?$AAh?$AAt@ DB 'z', 00H, 'h', 00H, '-'
	DB	00H, 'c', 00H, 'h', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@EBKIFIGN@?$AAz?$AAh?$AA?9?$AAc?$AAh?$AAs@
CONST	SEGMENT
??_C@_1O@EBKIFIGN@?$AAz?$AAh?$AA?9?$AAc?$AAh?$AAs@ DB 'z', 00H, 'h', 00H, '-'
	DB	00H, 'c', 00H, 'h', 00H, 's', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CPAMEDFI@?$AAx?$AAh?$AA?9?$AAz?$AAa@
CONST	SEGMENT
??_C@_1M@CPAMEDFI@?$AAx?$AAh?$AA?9?$AAz?$AAa@ DB 'x', 00H, 'h', 00H, '-', 00H
	DB	'z', 00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GFOCLFF@?$AAv?$AAi?$AA?9?$AAv?$AAn@
CONST	SEGMENT
??_C@_1M@GFOCLFF@?$AAv?$AAi?$AA?9?$AAv?$AAn@ DB 'v', 00H, 'i', 00H, '-', 00H
	DB	'v', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@EGGKJILM@?$AAu?$AAz?$AA?9?$AAu?$AAz?$AA?9?$AAl?$AAa?$AAt?$AAn@
CONST	SEGMENT
??_C@_1BG@EGGKJILM@?$AAu?$AAz?$AA?9?$AAu?$AAz?$AA?9?$AAl?$AAa?$AAt?$AAn@ DB 'u'
	DB	00H, 'z', 00H, '-', 00H, 'u', 00H, 'z', 00H, '-', 00H, 'l', 00H
	DB	'a', 00H, 't', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@GEGPMCDJ@?$AAu?$AAz?$AA?9?$AAu?$AAz?$AA?9?$AAc?$AAy?$AAr?$AAl@
CONST	SEGMENT
??_C@_1BG@GEGPMCDJ@?$AAu?$AAz?$AA?9?$AAu?$AAz?$AA?9?$AAc?$AAy?$AAr?$AAl@ DB 'u'
	DB	00H, 'z', 00H, '-', 00H, 'u', 00H, 'z', 00H, '-', 00H, 'c', 00H
	DB	'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EPAJJAJF@?$AAu?$AAr?$AA?9?$AAp?$AAk@
CONST	SEGMENT
??_C@_1M@EPAJJAJF@?$AAu?$AAr?$AA?9?$AAp?$AAk@ DB 'u', 00H, 'r', 00H, '-', 00H
	DB	'p', 00H, 'k', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KLMCELGA@?$AAu?$AAk?$AA?9?$AAu?$AAa@
CONST	SEGMENT
??_C@_1M@KLMCELGA@?$AAu?$AAk?$AA?9?$AAu?$AAa@ DB 'u', 00H, 'k', 00H, '-', 00H
	DB	'u', 00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CELMCNBK@?$AAt?$AAt?$AA?9?$AAr?$AAu@
CONST	SEGMENT
??_C@_1M@CELMCNBK@?$AAt?$AAt?$AA?9?$AAr?$AAu@ DB 't', 00H, 't', 00H, '-', 00H
	DB	'r', 00H, 'u', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GCCMIGPJ@?$AAt?$AAr?$AA?9?$AAt?$AAr@
CONST	SEGMENT
??_C@_1M@GCCMIGPJ@?$AAt?$AAr?$AA?9?$AAt?$AAr@ DB 't', 00H, 'r', 00H, '-', 00H
	DB	't', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CHBIHOJO@?$AAt?$AAn?$AA?9?$AAz?$AAa@
CONST	SEGMENT
??_C@_1M@CHBIHOJO@?$AAt?$AAn?$AA?9?$AAz?$AAa@ DB 't', 00H, 'n', 00H, '-', 00H
	DB	'z', 00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GNAECACD@?$AAt?$AAh?$AA?9?$AAt?$AAh@
CONST	SEGMENT
??_C@_1M@GNAECACD@?$AAt?$AAh?$AA?9?$AAt?$AAh@ DB 't', 00H, 'h', 00H, '-', 00H
	DB	't', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CNJOFAK@?$AAt?$AAe?$AA?9?$AAi?$AAn@
CONST	SEGMENT
??_C@_1M@CNJOFAK@?$AAt?$AAe?$AA?9?$AAi?$AAn@ DB 't', 00H, 'e', 00H, '-', 00H
	DB	'i', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LDCEFHA@?$AAt?$AAa?$AA?9?$AAi?$AAn@
CONST	SEGMENT
??_C@_1M@LDCEFHA@?$AAt?$AAa?$AA?9?$AAi?$AAn@ DB 't', 00H, 'a', 00H, '-', 00H
	DB	'i', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@KOHBJJI@?$AAs?$AAy?$AAr?$AA?9?$AAs?$AAy@
CONST	SEGMENT
??_C@_1O@KOHBJJI@?$AAs?$AAy?$AAr?$AA?9?$AAs?$AAy@ DB 's', 00H, 'y', 00H, 'r'
	DB	00H, '-', 00H, 's', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MPNDHLFK@?$AAs?$AAw?$AA?9?$AAk?$AAe@
CONST	SEGMENT
??_C@_1M@MPNDHLFK@?$AAs?$AAw?$AA?9?$AAk?$AAe@ DB 's', 00H, 'w', 00H, '-', 00H
	DB	'k', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MPJEJAJC@?$AAs?$AAv?$AA?9?$AAs?$AAe@
CONST	SEGMENT
??_C@_1M@MPJEJAJC@?$AAs?$AAv?$AA?9?$AAs?$AAe@ DB 's', 00H, 'v', 00H, '-', 00H
	DB	's', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@NGFJLMAC@?$AAs?$AAv?$AA?9?$AAf?$AAi@
CONST	SEGMENT
??_C@_1M@NGFJLMAC@?$AAs?$AAv?$AA?9?$AAf?$AAi@ DB 's', 00H, 'v', 00H, '-', 00H
	DB	'f', 00H, 'i', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@CIOGKHPB@?$AAs?$AAr?$AA?9?$AAs?$AAp?$AA?9?$AAl?$AAa?$AAt?$AAn@
CONST	SEGMENT
??_C@_1BG@CIOGKHPB@?$AAs?$AAr?$AA?9?$AAs?$AAp?$AA?9?$AAl?$AAa?$AAt?$AAn@ DB 's'
	DB	00H, 'r', 00H, '-', 00H, 's', 00H, 'p', 00H, '-', 00H, 'l', 00H
	DB	'a', 00H, 't', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@KODPNHE@?$AAs?$AAr?$AA?9?$AAs?$AAp?$AA?9?$AAc?$AAy?$AAr?$AAl@
CONST	SEGMENT
??_C@_1BG@KODPNHE@?$AAs?$AAr?$AA?9?$AAs?$AAp?$AA?9?$AAc?$AAy?$AAr?$AAl@ DB 's'
	DB	00H, 'r', 00H, '-', 00H, 's', 00H, 'p', 00H, '-', 00H, 'c', 00H
	DB	'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@JLBENFOE@?$AAs?$AAr?$AA?9?$AAb?$AAa?$AA?9?$AAl?$AAa?$AAt?$AAn@
CONST	SEGMENT
??_C@_1BG@JLBENFOE@?$AAs?$AAr?$AA?9?$AAb?$AAa?$AA?9?$AAl?$AAa?$AAt?$AAn@ DB 's'
	DB	00H, 'r', 00H, '-', 00H, 'b', 00H, 'a', 00H, '-', 00H, 'l', 00H
	DB	'a', 00H, 't', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@LJBBIPGB@?$AAs?$AAr?$AA?9?$AAb?$AAa?$AA?9?$AAc?$AAy?$AAr?$AAl@
CONST	SEGMENT
??_C@_1BG@LJBBIPGB@?$AAs?$AAr?$AA?9?$AAb?$AAa?$AA?9?$AAc?$AAy?$AAr?$AAl@ DB 's'
	DB	00H, 'r', 00H, '-', 00H, 'b', 00H, 'a', 00H, '-', 00H, 'c', 00H
	DB	'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BOFOGHPB@?$AAs?$AAq?$AA?9?$AAa?$AAl@
CONST	SEGMENT
??_C@_1M@BOFOGHPB@?$AAs?$AAq?$AA?9?$AAa?$AAl@ DB 's', 00H, 'q', 00H, '-', 00H
	DB	'a', 00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OJDJGAJC@?$AAs?$AAm?$AAs?$AA?9?$AAf?$AAi@
CONST	SEGMENT
??_C@_1O@OJDJGAJC@?$AAs?$AAm?$AAs?$AA?9?$AAf?$AAi@ DB 's', 00H, 'm', 00H, 's'
	DB	00H, '-', 00H, 'f', 00H, 'i', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@DLGJGKMK@?$AAs?$AAm?$AAn?$AA?9?$AAf?$AAi@
CONST	SEGMENT
??_C@_1O@DLGJGKMK@?$AAs?$AAm?$AAn?$AA?9?$AAf?$AAi@ DB 's', 00H, 'm', 00H, 'n'
	DB	00H, '-', 00H, 'f', 00H, 'i', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@CLEPOGCA@?$AAs?$AAm?$AAj?$AA?9?$AAs?$AAe@
CONST	SEGMENT
??_C@_1O@CLEPOGCA@?$AAs?$AAm?$AAj?$AA?9?$AAs?$AAe@ DB 's', 00H, 'm', 00H, 'j'
	DB	00H, '-', 00H, 's', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@PLLKBHAB@?$AAs?$AAm?$AAj?$AA?9?$AAn?$AAo@
CONST	SEGMENT
??_C@_1O@PLLKBHAB@?$AAs?$AAm?$AAj?$AA?9?$AAn?$AAo@ DB 's', 00H, 'm', 00H, 'j'
	DB	00H, '-', 00H, 'n', 00H, 'o', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@NDKPBNNH@?$AAs?$AAm?$AAa?$AA?9?$AAs?$AAe@
CONST	SEGMENT
??_C@_1O@NDKPBNNH@?$AAs?$AAm?$AAa?$AA?9?$AAs?$AAe@ DB 's', 00H, 'm', 00H, 'a'
	DB	00H, '-', 00H, 's', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@DFKOMPG@?$AAs?$AAm?$AAa?$AA?9?$AAn?$AAo@
CONST	SEGMENT
??_C@_1O@DFKOMPG@?$AAs?$AAm?$AAa?$AA?9?$AAn?$AAo@ DB 's', 00H, 'm', 00H, 'a'
	DB	00H, '-', 00H, 'n', 00H, 'o', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LFMODOAL@?$AAs?$AAl?$AA?9?$AAs?$AAi@
CONST	SEGMENT
??_C@_1M@LFMODOAL@?$AAs?$AAl?$AA?9?$AAs?$AAi@ DB 's', 00H, 'l', 00H, '-', 00H
	DB	's', 00H, 'i', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PNBLONPJ@?$AAs?$AAk?$AA?9?$AAs?$AAk@
CONST	SEGMENT
??_C@_1M@PNBLONPJ@?$AAs?$AAk?$AA?9?$AAs?$AAk@ DB 's', 00H, 'k', 00H, '-', 00H
	DB	's', 00H, 'k', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DANKKHJ@?$AAs?$AAe?$AA?9?$AAs?$AAe@
CONST	SEGMENT
??_C@_1M@DANKKHJ@?$AAs?$AAe?$AA?9?$AAs?$AAe@ DB 's', 00H, 'e', 00H, '-', 00H
	DB	's', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@NDPIFLFI@?$AAs?$AAe?$AA?9?$AAn?$AAo@
CONST	SEGMENT
??_C@_1M@NDPIFLFI@?$AAs?$AAe?$AA?9?$AAn?$AAo@ DB 's', 00H, 'e', 00H, '-', 00H
	DB	'n', 00H, 'o', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BKMAIGOJ@?$AAs?$AAe?$AA?9?$AAf?$AAi@
CONST	SEGMENT
??_C@_1M@BKMAIGOJ@?$AAs?$AAe?$AA?9?$AAf?$AAi@ DB 's', 00H, 'e', 00H, '-', 00H
	DB	'f', 00H, 'i', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HPKKKMPP@?$AAs?$AAa?$AA?9?$AAi?$AAn@
CONST	SEGMENT
??_C@_1M@HPKKKMPP@?$AAs?$AAa?$AA?9?$AAi?$AAn@ DB 's', 00H, 'a', 00H, '-', 00H
	DB	'i', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CEEDODME@?$AAr?$AAu?$AA?9?$AAr?$AAu@
CONST	SEGMENT
??_C@_1M@CEEDODME@?$AAr?$AAu?$AA?9?$AAr?$AAu@ DB 'r', 00H, 'u', 00H, '-', 00H
	DB	'r', 00H, 'u', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CLGLEFBO@?$AAr?$AAo?$AA?9?$AAr?$AAo@
CONST	SEGMENT
??_C@_1M@CLGLEFBO@?$AAr?$AAo?$AA?9?$AAr?$AAo@ DB 'r', 00H, 'o', 00H, '-', 00H
	DB	'r', 00H, 'o', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@GBAPEKMJ@?$AAq?$AAu?$AAz?$AA?9?$AAp?$AAe@
CONST	SEGMENT
??_C@_1O@GBAPEKMJ@?$AAq?$AAu?$AAz?$AA?9?$AAp?$AAe@ DB 'q', 00H, 'u', 00H, 'z'
	DB	00H, '-', 00H, 'p', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@BHHPIGDN@?$AAq?$AAu?$AAz?$AA?9?$AAe?$AAc@
CONST	SEGMENT
??_C@_1O@BHHPIGDN@?$AAq?$AAu?$AAz?$AA?9?$AAe?$AAc@ DB 'q', 00H, 'u', 00H, 'z'
	DB	00H, '-', 00H, 'e', 00H, 'c', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@EAKMAJDN@?$AAq?$AAu?$AAz?$AA?9?$AAb?$AAo@
CONST	SEGMENT
??_C@_1O@EAKMAJDN@?$AAq?$AAu?$AAz?$AA?9?$AAb?$AAo@ DB 'q', 00H, 'u', 00H, 'z'
	DB	00H, '-', 00H, 'b', 00H, 'o', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@NCMONAAL@?$AAp?$AAt?$AA?9?$AAp?$AAt@
CONST	SEGMENT
??_C@_1M@NCMONAAL@?$AAp?$AAt?$AA?9?$AAp?$AAt@ DB 'p', 00H, 't', 00H, '-', 00H
	DB	'p', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LJLLCMEH@?$AAp?$AAt?$AA?9?$AAb?$AAr@
CONST	SEGMENT
??_C@_1M@LJLLCMEH@?$AAp?$AAt?$AA?9?$AAb?$AAr@ DB 'p', 00H, 't', 00H, '-', 00H
	DB	'b', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HDBKGOGH@?$AAp?$AAl?$AA?9?$AAp?$AAl@
CONST	SEGMENT
??_C@_1M@HDBKGOGH@?$AAp?$AAl?$AA?9?$AAp?$AAl@ DB 'p', 00H, 'l', 00H, '-', 00H
	DB	'p', 00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IDEHOAP@?$AAp?$AAa?$AA?9?$AAi?$AAn@
CONST	SEGMENT
??_C@_1M@IDEHOAP@?$AAp?$AAa?$AA?9?$AAi?$AAn@ DB 'p', 00H, 'a', 00H, '-', 00H
	DB	'i', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BDGHHBFL@?$AAn?$AAs?$AA?9?$AAz?$AAa@
CONST	SEGMENT
??_C@_1M@BDGHHBFL@?$AAn?$AAs?$AA?9?$AAz?$AAa@ DB 'n', 00H, 's', 00H, '-', 00H
	DB	'z', 00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LJKPEMLN@?$AAn?$AAn?$AA?9?$AAn?$AAo@
CONST	SEGMENT
??_C@_1M@LJKPEMLN@?$AAn?$AAn?$AA?9?$AAn?$AAo@ DB 'n', 00H, 'n', 00H, '-', 00H
	DB	'n', 00H, 'o', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KPOPDDGO@?$AAn?$AAl?$AA?9?$AAn?$AAl@
CONST	SEGMENT
??_C@_1M@KPOPDDGO@?$AAn?$AAl?$AA?9?$AAn?$AAl@ DB 'n', 00H, 'l', 00H, '-', 00H
	DB	'n', 00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KFCFLMJP@?$AAn?$AAl?$AA?9?$AAb?$AAe@
CONST	SEGMENT
??_C@_1M@KFCFLMJP@?$AAn?$AAl?$AA?9?$AAb?$AAe@ DB 'n', 00H, 'l', 00H, '-', 00H
	DB	'b', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KDJDKMDD@?$AAn?$AAb?$AA?9?$AAn?$AAo@
CONST	SEGMENT
??_C@_1M@KDJDKMDD@?$AAn?$AAb?$AA?9?$AAn?$AAo@ DB 'n', 00H, 'b', 00H, '-', 00H
	DB	'n', 00H, 'o', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PPDBCNFM@?$AAm?$AAt?$AA?9?$AAm?$AAt@
CONST	SEGMENT
??_C@_1M@PPDBCNFM@?$AAm?$AAt?$AA?9?$AAm?$AAt@ DB 'm', 00H, 't', 00H, '-', 00H
	DB	'm', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@OPIHOOPI@?$AAm?$AAs?$AA?9?$AAm?$AAy@
CONST	SEGMENT
??_C@_1M@OPIHOOPI@?$AAm?$AAs?$AA?9?$AAm?$AAy@ DB 'm', 00H, 's', 00H, '-', 00H
	DB	'm', 00H, 'y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@NDBPDDAL@?$AAm?$AAs?$AA?9?$AAb?$AAn@
CONST	SEGMENT
??_C@_1M@NDBPDDAL@?$AAm?$AAs?$AA?9?$AAb?$AAn@ DB 'm', 00H, 's', 00H, '-', 00H
	DB	'b', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FGBKKIPG@?$AAm?$AAr?$AA?9?$AAi?$AAn@
CONST	SEGMENT
??_C@_1M@FGBKKIPG@?$AAm?$AAr?$AA?9?$AAi?$AAn@ DB 'm', 00H, 'r', 00H, '-', 00H
	DB	'i', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PABJILIG@?$AAm?$AAn?$AA?9?$AAm?$AAn@
CONST	SEGMENT
??_C@_1M@PABJILIG@?$AAm?$AAn?$AA?9?$AAm?$AAn@ DB 'm', 00H, 'n', 00H, '-', 00H
	DB	'm', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GPHNBJKN@?$AAm?$AAl?$AA?9?$AAi?$AAn@
CONST	SEGMENT
??_C@_1M@GPHNBJKN@?$AAm?$AAl?$AA?9?$AAi?$AAn@ DB 'm', 00H, 'l', 00H, '-', 00H
	DB	'i', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CBOOLAPA@?$AAm?$AAk?$AA?9?$AAm?$AAk@
CONST	SEGMENT
??_C@_1M@CBOOLAPA@?$AAm?$AAk?$AA?9?$AAm?$AAk@ DB 'm', 00H, 'k', 00H, '-', 00H
	DB	'm', 00H, 'k', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@ELCKCCJJ@?$AAm?$AAi?$AA?9?$AAn?$AAz@
CONST	SEGMENT
??_C@_1M@ELCKCCJJ@?$AAm?$AAi?$AA?9?$AAn?$AAz@ DB 'm', 00H, 'i', 00H, '-', 00H
	DB	'n', 00H, 'z', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BDEKKCA@?$AAl?$AAv?$AA?9?$AAl?$AAv@
CONST	SEGMENT
??_C@_1M@BDEKKCA@?$AAl?$AAv?$AA?9?$AAl?$AAv@ DB 'l', 00H, 'v', 00H, '-', 00H
	DB	'l', 00H, 'v', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KPMILCJG@?$AAl?$AAt?$AA?9?$AAl?$AAt@
CONST	SEGMENT
??_C@_1M@KPMILCJG@?$AAl?$AAt?$AA?9?$AAl?$AAt@ DB 'l', 00H, 't', 00H, '-', 00H
	DB	'l', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HBAHBIGA@?$AAk?$AAy?$AA?9?$AAk?$AAg@
CONST	SEGMENT
??_C@_1M@HBAHBIGA@?$AAk?$AAy?$AA?9?$AAk?$AAg@ DB 'k', 00H, 'y', 00H, '-', 00H
	DB	'k', 00H, 'g', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DMHAEOGC@?$AAk?$AAo?$AA?9?$AAk?$AAr@
CONST	SEGMENT
??_C@_1M@DMHAEOGC@?$AAk?$AAo?$AA?9?$AAk?$AAr@ DB 'k', 00H, 'o', 00H, '-', 00H
	DB	'k', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@IBBJHCH@?$AAk?$AAo?$AAk?$AA?9?$AAi?$AAn@
CONST	SEGMENT
??_C@_1O@IBBJHCH@?$AAk?$AAo?$AAk?$AA?9?$AAi?$AAn@ DB 'k', 00H, 'o', 00H, 'k'
	DB	00H, '-', 00H, 'i', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IELFGMHA@?$AAk?$AAn?$AA?9?$AAi?$AAn@
CONST	SEGMENT
??_C@_1M@IELFGMHA@?$AAk?$AAn?$AA?9?$AAi?$AAn@ DB 'k', 00H, 'n', 00H, '-', 00H
	DB	'i', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PACPMGPH@?$AAk?$AAk?$AA?9?$AAk?$AAz@
CONST	SEGMENT
??_C@_1M@PACPMGPH@?$AAk?$AAk?$AA?9?$AAk?$AAz@ DB 'k', 00H, 'k', 00H, '-', 00H
	DB	'k', 00H, 'z', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JILFNBIM@?$AAk?$AAa?$AA?9?$AAg?$AAe@
CONST	SEGMENT
??_C@_1M@JILFNBIM@?$AAk?$AAa?$AA?9?$AAg?$AAe@ DB 'k', 00H, 'a', 00H, '-', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@NIEJCJJA@?$AAj?$AAa?$AA?9?$AAj?$AAp@
CONST	SEGMENT
??_C@_1M@NIEJCJJA@?$AAj?$AAa?$AA?9?$AAj?$AAp@ DB 'j', 00H, 'a', 00H, '-', 00H
	DB	'j', 00H, 'p', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GHKGFEDF@?$AAi?$AAt?$AA?9?$AAi?$AAt@
CONST	SEGMENT
??_C@_1M@GHKGFEDF@?$AAi?$AAt?$AA?9?$AAi?$AAt@ DB 'i', 00H, 't', 00H, '-', 00H
	DB	'i', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@NMPCJPHE@?$AAi?$AAt?$AA?9?$AAc?$AAh@
CONST	SEGMENT
??_C@_1M@NMPCJPHE@?$AAi?$AAt?$AA?9?$AAc?$AAh@ DB 'i', 00H, 't', 00H, '-', 00H
	DB	'c', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BIKNHHPF@?$AAi?$AAs?$AA?9?$AAi?$AAs@
CONST	SEGMENT
??_C@_1M@BIKNHHPF@?$AAi?$AAs?$AA?9?$AAi?$AAs@ DB 'i', 00H, 's', 00H, '-', 00H
	DB	'i', 00H, 's', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BABBICEC@?$AAi?$AAd?$AA?9?$AAi?$AAd@
CONST	SEGMENT
??_C@_1M@BABBICEC@?$AAi?$AAd?$AA?9?$AAi?$AAd@ DB 'i', 00H, 'd', 00H, '-', 00H
	DB	'i', 00H, 'd', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MILPAJJC@?$AAh?$AAy?$AA?9?$AAa?$AAm@
CONST	SEGMENT
??_C@_1M@MILPAJJC@?$AAh?$AAy?$AA?9?$AAa?$AAm@ DB 'h', 00H, 'y', 00H, '-', 00H
	DB	'a', 00H, 'm', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GACBMHKE@?$AAh?$AAu?$AA?9?$AAh?$AAu@
CONST	SEGMENT
??_C@_1M@GACBMHKE@?$AAh?$AAu?$AA?9?$AAh?$AAu@ DB 'h', 00H, 'u', 00H, '-', 00H
	DB	'h', 00H, 'u', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BPCKOEGE@?$AAh?$AAr?$AA?9?$AAh?$AAr@
CONST	SEGMENT
??_C@_1M@BPCKOEGE@?$AAh?$AAr?$AA?9?$AAh?$AAr@ DB 'h', 00H, 'r', 00H, '-', 00H
	DB	'h', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PMBNDPHD@?$AAh?$AAr?$AA?9?$AAb?$AAa@
CONST	SEGMENT
??_C@_1M@PMBNDPHD@?$AAh?$AAr?$AA?9?$AAb?$AAa@ DB 'h', 00H, 'r', 00H, '-', 00H
	DB	'b', 00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BBPHKFPJ@?$AAh?$AAi?$AA?9?$AAi?$AAn@
CONST	SEGMENT
??_C@_1M@BBPHKFPJ@?$AAh?$AAi?$AA?9?$AAi?$AAn@ DB 'h', 00H, 'i', 00H, '-', 00H
	DB	'i', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KBMCINPM@?$AAh?$AAe?$AA?9?$AAi?$AAl@
CONST	SEGMENT
??_C@_1M@KBMCINPM@?$AAh?$AAe?$AA?9?$AAi?$AAl@ DB 'h', 00H, 'e', 00H, '-', 00H
	DB	'i', 00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FOPBFLOO@?$AAg?$AAu?$AA?9?$AAi?$AAn@
CONST	SEGMENT
??_C@_1M@FOPBFLOO@?$AAg?$AAu?$AA?9?$AAi?$AAn@ DB 'g', 00H, 'u', 00H, '-', 00H
	DB	'i', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FAPLLOPF@?$AAg?$AAl?$AA?9?$AAe?$AAs@
CONST	SEGMENT
??_C@_1M@FAPLLOPF@?$AAg?$AAl?$AA?9?$AAe?$AAs@ DB 'g', 00H, 'l', 00H, '-', 00H
	DB	'e', 00H, 's', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EOHDJGDD@?$AAf?$AAr?$AA?9?$AAm?$AAc@
CONST	SEGMENT
??_C@_1M@EOHDJGDD@?$AAf?$AAr?$AA?9?$AAm?$AAc@ DB 'f', 00H, 'r', 00H, '-', 00H
	DB	'm', 00H, 'c', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PAFNENNF@?$AAf?$AAr?$AA?9?$AAl?$AAu@
CONST	SEGMENT
??_C@_1M@PAFNENNF@?$AAf?$AAr?$AA?9?$AAl?$AAu@ DB 'f', 00H, 'r', 00H, '-', 00H
	DB	'l', 00H, 'u', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MMBBFGAK@?$AAf?$AAr?$AA?9?$AAf?$AAr@
CONST	SEGMENT
??_C@_1M@MMBBFGAK@?$AAf?$AAr?$AA?9?$AAf?$AAr@ DB 'f', 00H, 'r', 00H, '-', 00H
	DB	'f', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KDHIHAEC@?$AAf?$AAr?$AA?9?$AAc?$AAh@
CONST	SEGMENT
??_C@_1M@KDHIHAEC@?$AAf?$AAr?$AA?9?$AAc?$AAh@ DB 'f', 00H, 'r', 00H, '-', 00H
	DB	'c', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@NOHADPMI@?$AAf?$AAr?$AA?9?$AAc?$AAa@
CONST	SEGMENT
??_C@_1M@NOHADPMI@?$AAf?$AAr?$AA?9?$AAc?$AAa@ DB 'f', 00H, 'r', 00H, '-', 00H
	DB	'c', 00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JKEOHLDK@?$AAf?$AAr?$AA?9?$AAb?$AAe@
CONST	SEGMENT
??_C@_1M@JKEOHLDK@?$AAf?$AAr?$AA?9?$AAb?$AAe@ DB 'f', 00H, 'r', 00H, '-', 00H
	DB	'b', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LMDCNDBA@?$AAf?$AAo?$AA?9?$AAf?$AAo@
CONST	SEGMENT
??_C@_1M@LMDCNDBA@?$AAf?$AAo?$AA?9?$AAf?$AAo@ DB 'f', 00H, 'o', 00H, '-', 00H
	DB	'f', 00H, 'o', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JEEHPMIL@?$AAf?$AAi?$AA?9?$AAf?$AAi@
CONST	SEGMENT
??_C@_1M@JEEHPMIL@?$AAf?$AAi?$AA?9?$AAf?$AAi@ DB 'f', 00H, 'i', 00H, '-', 00H
	DB	'f', 00H, 'i', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PBNONODE@?$AAf?$AAa?$AA?9?$AAi?$AAr@
CONST	SEGMENT
??_C@_1M@PBNONODE@?$AAf?$AAa?$AA?9?$AAi?$AAr@ DB 'f', 00H, 'a', 00H, '-', 00H
	DB	'i', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GHHLIKEI@?$AAe?$AAu?$AA?9?$AAe?$AAs@
CONST	SEGMENT
??_C@_1M@GHHLIKEI@?$AAe?$AAu?$AA?9?$AAe?$AAs@ DB 'e', 00H, 'u', 00H, '-', 00H
	DB	'e', 00H, 's', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PNMLOJDF@?$AAe?$AAt?$AA?9?$AAe?$AAe@
CONST	SEGMENT
??_C@_1M@PNMLOJDF@?$AAe?$AAt?$AA?9?$AAe?$AAe@ DB 'e', 00H, 't', 00H, '-', 00H
	DB	'e', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JKFFICHJ@?$AAe?$AAs?$AA?9?$AAv?$AAe@
CONST	SEGMENT
??_C@_1M@JKFFICHJ@?$AAe?$AAs?$AA?9?$AAv?$AAe@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'v', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GAOBIPA@?$AAe?$AAs?$AA?9?$AAu?$AAy@
CONST	SEGMENT
??_C@_1M@GAOBIPA@?$AAe?$AAs?$AA?9?$AAu?$AAy@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'u', 00H, 'y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IIDEOLLL@?$AAe?$AAs?$AA?9?$AAs?$AAv@
CONST	SEGMENT
??_C@_1M@IIDEOLLL@?$AAe?$AAs?$AA?9?$AAs?$AAv@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	's', 00H, 'v', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FGMDIJED@?$AAe?$AAs?$AA?9?$AAp?$AAy@
CONST	SEGMENT
??_C@_1M@FGMDIJED@?$AAe?$AAs?$AA?9?$AAp?$AAy@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'p', 00H, 'y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IBMCAOEC@?$AAe?$AAs?$AA?9?$AAp?$AAr@
CONST	SEGMENT
??_C@_1M@IBMCAOEC@?$AAe?$AAs?$AA?9?$AAp?$AAr@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'p', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EMAMGBGE@?$AAe?$AAs?$AA?9?$AAp?$AAe@
CONST	SEGMENT
??_C@_1M@EMAMGBGE@?$AAe?$AAs?$AA?9?$AAp?$AAe@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'p', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MDGOPGDD@?$AAe?$AAs?$AA?9?$AAp?$AAa@
CONST	SEGMENT
??_C@_1M@MDGOPGDD@?$AAe?$AAs?$AA?9?$AAp?$AAa@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'p', 00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DPAGLNDH@?$AAe?$AAs?$AA?9?$AAn?$AAi@
CONST	SEGMENT
??_C@_1M@DPAGLNDH@?$AAe?$AAs?$AA?9?$AAn?$AAi@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'n', 00H, 'i', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FBDHPPGD@?$AAe?$AAs?$AA?9?$AAm?$AAx@
CONST	SEGMENT
??_C@_1M@FBDHPPGD@?$AAe?$AAs?$AA?9?$AAm?$AAx@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'm', 00H, 'x', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HEIIGGJD@?$AAe?$AAs?$AA?9?$AAh?$AAn@
CONST	SEGMENT
??_C@_1M@HEIIGGJD@?$AAe?$AAs?$AA?9?$AAh?$AAn@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'h', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LKHKGDLN@?$AAe?$AAs?$AA?9?$AAg?$AAt@
CONST	SEGMENT
??_C@_1M@LKHKGDLN@?$AAe?$AAs?$AA?9?$AAg?$AAt@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'g', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GKGFPKAP@?$AAe?$AAs?$AA?9?$AAe?$AAs@
CONST	SEGMENT
??_C@_1M@GKGFPKAP@?$AAe?$AAs?$AA?9?$AAe?$AAs@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'e', 00H, 's', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DKHMKNJA@?$AAe?$AAs?$AA?9?$AAe?$AAc@
CONST	SEGMENT
??_C@_1M@DKHMKNJA@?$AAe?$AAs?$AA?9?$AAe?$AAc@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'e', 00H, 'c', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LLPGMBIN@?$AAe?$AAs?$AA?9?$AAd?$AAo@
CONST	SEGMENT
??_C@_1M@LLPGMBIN@?$AAe?$AAs?$AA?9?$AAd?$AAo@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'd', 00H, 'o', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EIAHOHH@?$AAe?$AAs?$AA?9?$AAc?$AAr@
CONST	SEGMENT
??_C@_1M@EIAHOHH@?$AAe?$AAs?$AA?9?$AAc?$AAr@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'c', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KGPDPBDF@?$AAe?$AAs?$AA?9?$AAc?$AAo@
CONST	SEGMENT
??_C@_1M@KGPDPBDF@?$AAe?$AAs?$AA?9?$AAc?$AAo@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'c', 00H, 'o', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LEEGFONL@?$AAe?$AAs?$AA?9?$AAc?$AAl@
CONST	SEGMENT
??_C@_1M@LEEGFONL@?$AAe?$AAs?$AA?9?$AAc?$AAl@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'c', 00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GNKPCCJA@?$AAe?$AAs?$AA?9?$AAb?$AAo@
CONST	SEGMENT
??_C@_1M@GNKPCCJA@?$AAe?$AAs?$AA?9?$AAb?$AAo@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'b', 00H, 'o', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EJEINPHM@?$AAe?$AAs?$AA?9?$AAa?$AAr@
CONST	SEGMENT
??_C@_1M@EJEINPHM@?$AAe?$AAs?$AA?9?$AAa?$AAr@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'a', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MFNHNHEO@?$AAe?$AAn?$AA?9?$AAz?$AAw@
CONST	SEGMENT
??_C@_1M@MFNHNHEO@?$AAe?$AAn?$AA?9?$AAz?$AAw@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'z', 00H, 'w', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LAKFNPAN@?$AAe?$AAn?$AA?9?$AAz?$AAa@
CONST	SEGMENT
??_C@_1M@LAKFNPAN@?$AAe?$AAn?$AA?9?$AAz?$AAa@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'z', 00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LLODPCMM@?$AAe?$AAn?$AA?9?$AAu?$AAs@
CONST	SEGMENT
??_C@_1M@LLODPCMM@?$AAe?$AAn?$AA?9?$AAu?$AAs@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'u', 00H, 's', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@ONGIBJNA@?$AAe?$AAn?$AA?9?$AAt?$AAt@
CONST	SEGMENT
??_C@_1M@ONGIBJNA@?$AAe?$AAn?$AA?9?$AAt?$AAt@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	't', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GMDGLDOB@?$AAe?$AAn?$AA?9?$AAp?$AAh@
CONST	SEGMENT
??_C@_1M@GMDGLDOB@?$AAe?$AAn?$AA?9?$AAp?$AAh@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'p', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KPPKEPBO@?$AAe?$AAn?$AA?9?$AAn?$AAz@
CONST	SEGMENT
??_C@_1M@KPPKEPBO@?$AAe?$AAn?$AA?9?$AAn?$AAz@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'n', 00H, 'z', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PJKFGCCO@?$AAe?$AAn?$AA?9?$AAj?$AAm@
CONST	SEGMENT
??_C@_1M@PJKFGCCO@?$AAe?$AAn?$AA?9?$AAj?$AAm@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'j', 00H, 'm', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LKIFDIGP@?$AAe?$AAn?$AA?9?$AAi?$AAe@
CONST	SEGMENT
??_C@_1M@LKIFDIGP@?$AAe?$AAn?$AA?9?$AAi?$AAe@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'i', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BNFIGBKG@?$AAe?$AAn?$AA?9?$AAg?$AAb@
CONST	SEGMENT
??_C@_1M@BNFIGBKG@?$AAe?$AAn?$AA?9?$AAg?$AAb@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'g', 00H, 'b', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IGMJCDLA@?$AAe?$AAn?$AA?9?$AAc?$AAb@
CONST	SEGMENT
??_C@_1M@IGMJCDLA@?$AAe?$AAn?$AA?9?$AAc?$AAb@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'c', 00H, 'b', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JEHMIMFO@?$AAe?$AAn?$AA?9?$AAc?$AAa@
CONST	SEGMENT
??_C@_1M@JEHMIMFO@?$AAe?$AAn?$AA?9?$AAc?$AAa@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'c', 00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@NIDIIPGF@?$AAe?$AAn?$AA?9?$AAb?$AAz@
CONST	SEGMENT
??_C@_1M@NIDIIPGF@?$AAe?$AAn?$AA?9?$AAb?$AAz@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'b', 00H, 'z', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GMPONJN@?$AAe?$AAn?$AA?9?$AAa?$AAu@
CONST	SEGMENT
??_C@_1M@GMPONJN@?$AAe?$AAn?$AA?9?$AAa?$AAu@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'a', 00H, 'u', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EJLEOGAE@?$AAe?$AAl?$AA?9?$AAg?$AAr@
CONST	SEGMENT
??_C@_1M@EJLEOGAE@?$AAe?$AAl?$AA?9?$AAg?$AAr@ DB 'e', 00H, 'l', 00H, '-', 00H
	DB	'g', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@GNNELBAP@?$AAd?$AAi?$AAv?$AA?9?$AAm?$AAv@
CONST	SEGMENT
??_C@_1O@GNNELBAP@?$AAd?$AAi?$AAv?$AA?9?$AAm?$AAv@ DB 'd', 00H, 'i', 00H, 'v'
	DB	00H, '-', 00H, 'm', 00H, 'v', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@NJBEEJNL@?$AAd?$AAe?$AA?9?$AAl?$AAu@
CONST	SEGMENT
??_C@_1M@NJBEEJNL@?$AAd?$AAe?$AA?9?$AAl?$AAu@ DB 'd', 00H, 'e', 00H, '-', 00H
	DB	'l', 00H, 'u', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MDNLKBPM@?$AAd?$AAe?$AA?9?$AAl?$AAi@
CONST	SEGMENT
??_C@_1M@MDNLKBPM@?$AAd?$AAe?$AA?9?$AAl?$AAi@ DB 'd', 00H, 'e', 00H, '-', 00H
	DB	'l', 00H, 'i', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GFFOJMCJ@?$AAd?$AAe?$AA?9?$AAd?$AAe@
CONST	SEGMENT
??_C@_1M@GFFOJMCJ@?$AAd?$AAe?$AA?9?$AAd?$AAe@ DB 'd', 00H, 'e', 00H, '-', 00H
	DB	'd', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IKDBHEEM@?$AAd?$AAe?$AA?9?$AAc?$AAh@
CONST	SEGMENT
??_C@_1M@IKDBHEEM@?$AAd?$AAe?$AA?9?$AAc?$AAh@ DB 'd', 00H, 'e', 00H, '-', 00H
	DB	'c', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@NNDGDNGA@?$AAd?$AAe?$AA?9?$AAa?$AAt@
CONST	SEGMENT
??_C@_1M@NNDGDNGA@?$AAd?$AAe?$AA?9?$AAa?$AAt@ DB 'd', 00H, 'e', 00H, '-', 00H
	DB	'a', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IMGKELGA@?$AAd?$AAa?$AA?9?$AAd?$AAk@
CONST	SEGMENT
??_C@_1M@IMGKELGA@?$AAd?$AAa?$AA?9?$AAd?$AAk@ DB 'd', 00H, 'a', 00H, '-', 00H
	DB	'd', 00H, 'k', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DHBHFONH@?$AAc?$AAy?$AA?9?$AAg?$AAb@
CONST	SEGMENT
??_C@_1M@DHBHFONH@?$AAc?$AAy?$AA?9?$AAg?$AAb@ DB 'c', 00H, 'y', 00H, '-', 00H
	DB	'g', 00H, 'b', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@COAJPDHI@?$AAc?$AAs?$AA?9?$AAc?$AAz@
CONST	SEGMENT
??_C@_1M@COAJPDHI@?$AAc?$AAs?$AA?9?$AAc?$AAz@ DB 'c', 00H, 's', 00H, '-', 00H
	DB	'c', 00H, 'z', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KGADAODK@?$AAc?$AAa?$AA?9?$AAe?$AAs@
CONST	SEGMENT
??_C@_1M@KGADAODK@?$AAc?$AAa?$AA?9?$AAe?$AAs@ DB 'c', 00H, 'a', 00H, '-', 00H
	DB	'e', 00H, 's', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@EAKMMACD@?$AAb?$AAs?$AA?9?$AAb?$AAa?$AA?9?$AAl?$AAa?$AAt?$AAn@
CONST	SEGMENT
??_C@_1BG@EAKMMACD@?$AAb?$AAs?$AA?9?$AAb?$AAa?$AA?9?$AAl?$AAa?$AAt?$AAn@ DB 'b'
	DB	00H, 's', 00H, '-', 00H, 'b', 00H, 'a', 00H, '-', 00H, 'l', 00H
	DB	'a', 00H, 't', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BJBMFGOB@?$AAb?$AAn?$AA?9?$AAi?$AAn@
CONST	SEGMENT
??_C@_1M@BJBMFGOB@?$AAb?$AAn?$AA?9?$AAi?$AAn@ DB 'b', 00H, 'n', 00H, '-', 00H
	DB	'i', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PCMGMCGC@?$AAb?$AAg?$AA?9?$AAb?$AAg@
CONST	SEGMENT
??_C@_1M@PCMGMCGC@?$AAb?$AAg?$AA?9?$AAb?$AAg@ DB 'b', 00H, 'g', 00H, '-', 00H
	DB	'b', 00H, 'g', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EGPFDCPD@?$AAb?$AAe?$AA?9?$AAb?$AAy@
CONST	SEGMENT
??_C@_1M@EGPFDCPD@?$AAb?$AAe?$AA?9?$AAb?$AAy@ DB 'b', 00H, 'e', 00H, '-', 00H
	DB	'b', 00H, 'y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@IBCKDDOE@?$AAa?$AAz?$AA?9?$AAa?$AAz?$AA?9?$AAl?$AAa?$AAt?$AAn@
CONST	SEGMENT
??_C@_1BG@IBCKDDOE@?$AAa?$AAz?$AA?9?$AAa?$AAz?$AA?9?$AAl?$AAa?$AAt?$AAn@ DB 'a'
	DB	00H, 'z', 00H, '-', 00H, 'a', 00H, 'z', 00H, '-', 00H, 'l', 00H
	DB	'a', 00H, 't', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@KDCPGJGB@?$AAa?$AAz?$AA?9?$AAa?$AAz?$AA?9?$AAc?$AAy?$AAr?$AAl@
CONST	SEGMENT
??_C@_1BG@KDCPGJGB@?$AAa?$AAz?$AA?9?$AAa?$AAz?$AA?9?$AAc?$AAy?$AAr?$AAl@ DB 'a'
	DB	00H, 'z', 00H, '-', 00H, 'a', 00H, 'z', 00H, '-', 00H, 'c', 00H
	DB	'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IHMHGAON@?$AAa?$AAr?$AA?9?$AAy?$AAe@
CONST	SEGMENT
??_C@_1M@IHMHGAON@?$AAa?$AAr?$AA?9?$AAy?$AAe@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'y', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@OMFIPEDC@?$AAa?$AAr?$AA?9?$AAt?$AAn@
CONST	SEGMENT
??_C@_1M@OMFIPEDC@?$AAa?$AAr?$AA?9?$AAt?$AAn@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	't', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DMJDKLKM@?$AAa?$AAr?$AA?9?$AAs?$AAy@
CONST	SEGMENT
??_C@_1M@DMJDKLKM@?$AAa?$AAr?$AA?9?$AAs?$AAy@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	's', 00H, 'y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KJDONENM@?$AAa?$AAr?$AA?9?$AAs?$AAa@
CONST	SEGMENT
??_C@_1M@KJDONENM@?$AAa?$AAr?$AA?9?$AAs?$AAa@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	's', 00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@OEPGHFNH@?$AAa?$AAr?$AA?9?$AAq?$AAa@
CONST	SEGMENT
??_C@_1M@OEPGHFNH@?$AAa?$AAr?$AA?9?$AAq?$AAa@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'q', 00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JHPMKJIE@?$AAa?$AAr?$AA?9?$AAo?$AAm@
CONST	SEGMENT
??_C@_1M@JHPMKJIE@?$AAa?$AAr?$AA?9?$AAo?$AAm@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'o', 00H, 'm', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JAOCLHDH@?$AAa?$AAr?$AA?9?$AAm?$AAa@
CONST	SEGMENT
??_C@_1M@JAOCLHDH@?$AAa?$AAr?$AA?9?$AAm?$AAa@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'm', 00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MOBDBLOC@?$AAa?$AAr?$AA?9?$AAl?$AAy@
CONST	SEGMENT
??_C@_1M@MOBDBLOC@?$AAa?$AAr?$AA?9?$AAl?$AAy@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'l', 00H, 'y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EJALMLHM@?$AAa?$AAr?$AA?9?$AAl?$AAb@
CONST	SEGMENT
??_C@_1M@EJALMLHM@?$AAa?$AAr?$AA?9?$AAl?$AAb@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'l', 00H, 'b', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DDMJFMGJ@?$AAa?$AAr?$AA?9?$AAk?$AAw@
CONST	SEGMENT
??_C@_1M@DDMJFMGJ@?$AAa?$AAr?$AA?9?$AAk?$AAw@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'k', 00H, 'w', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GNDIPALM@?$AAa?$AAr?$AA?9?$AAj?$AAo@
CONST	SEGMENT
??_C@_1M@GNDIPALM@?$AAa?$AAr?$AA?9?$AAj?$AAo@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'j', 00H, 'o', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FLGKKCLO@?$AAa?$AAr?$AA?9?$AAi?$AAq@
CONST	SEGMENT
??_C@_1M@FLGKKCLO@?$AAa?$AAr?$AA?9?$AAi?$AAq@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'i', 00H, 'q', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FJNKGKIG@?$AAa?$AAr?$AA?9?$AAe?$AAg@
CONST	SEGMENT
??_C@_1M@FJNKGKIG@?$AAa?$AAr?$AA?9?$AAe?$AAg@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'e', 00H, 'g', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DAPFDGGB@?$AAa?$AAr?$AA?9?$AAd?$AAz@
CONST	SEGMENT
??_C@_1M@DAPFDGGB@?$AAa?$AAr?$AA?9?$AAd?$AAz@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'd', 00H, 'z', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BMLMEKGI@?$AAa?$AAr?$AA?9?$AAb?$AAh@
CONST	SEGMENT
??_C@_1M@BMLMEKGI@?$AAa?$AAr?$AA?9?$AAb?$AAh@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'b', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GIECOABL@?$AAa?$AAr?$AA?9?$AAa?$AAe@
CONST	SEGMENT
??_C@_1M@GIECOABL@?$AAa?$AAr?$AA?9?$AAa?$AAe@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'a', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KAHEKEIG@?$AAa?$AAf?$AA?9?$AAz?$AAa@
CONST	SEGMENT
??_C@_1M@KAHEKEIG@?$AAa?$AAf?$AA?9?$AAz?$AAa@ DB 'a', 00H, 'f', 00H, '-', 00H
	DB	'z', 00H, 'a', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT __pAtlLocaleNameToIndexTable
CONST	SEGMENT
__pAtlLocaleNameToIndexTable DD FLAT:??_C@_11LOCGONAA@@
	DD	042H
	DD	FLAT:??_C@_15JDNICKHM@?$AAa?$AAf@
	DD	02cH
	DD	FLAT:??_C@_1M@KAHEKEIG@?$AAa?$AAf?$AA?9?$AAz?$AAa@
	DD	071H
	DD	FLAT:??_C@_15EMKDOKLE@?$AAa?$AAr@
	DD	00H
	DD	FLAT:??_C@_1M@GIECOABL@?$AAa?$AAr?$AA?9?$AAa?$AAe@
	DD	0d8H
	DD	FLAT:??_C@_1M@BMLMEKGI@?$AAa?$AAr?$AA?9?$AAb?$AAh@
	DD	0daH
	DD	FLAT:??_C@_1M@DAPFDGGB@?$AAa?$AAr?$AA?9?$AAd?$AAz@
	DD	0b1H
	DD	FLAT:??_C@_1M@FJNKGKIG@?$AAa?$AAr?$AA?9?$AAe?$AAg@
	DD	0a0H
	DD	FLAT:??_C@_1M@FLGKKCLO@?$AAa?$AAr?$AA?9?$AAi?$AAq@
	DD	08fH
	DD	FLAT:??_C@_1M@GNDIPALM@?$AAa?$AAr?$AA?9?$AAj?$AAo@
	DD	0cfH
	DD	FLAT:??_C@_1M@DDMJFMGJ@?$AAa?$AAr?$AA?9?$AAk?$AAw@
	DD	0d5H
	DD	FLAT:??_C@_1M@EJALMLHM@?$AAa?$AAr?$AA?9?$AAl?$AAb@
	DD	0d2H
	DD	FLAT:??_C@_1M@MOBDBLOC@?$AAa?$AAr?$AA?9?$AAl?$AAy@
	DD	0a9H
	DD	FLAT:??_C@_1M@JAOCLHDH@?$AAa?$AAr?$AA?9?$AAm?$AAa@
	DD	0b9H
	DD	FLAT:??_C@_1M@JHPMKJIE@?$AAa?$AAr?$AA?9?$AAo?$AAm@
	DD	0c4H
	DD	FLAT:??_C@_1M@OEPGHFNH@?$AAa?$AAr?$AA?9?$AAq?$AAa@
	DD	0dcH
	DD	FLAT:??_C@_1M@KJDONENM@?$AAa?$AAr?$AA?9?$AAs?$AAa@
	DD	043H
	DD	FLAT:??_C@_1M@DMJDKLKM@?$AAa?$AAr?$AA?9?$AAs?$AAy@
	DD	0ccH
	DD	FLAT:??_C@_1M@OMFIPEDC@?$AAa?$AAr?$AA?9?$AAt?$AAn@
	DD	0bfH
	DD	FLAT:??_C@_1M@IHMHGAON@?$AAa?$AAr?$AA?9?$AAy?$AAe@
	DD	0c8H
	DD	FLAT:??_C@_15IJBHMCFL@?$AAa?$AAz@
	DD	029H
	DD	FLAT:??_C@_1BG@KDCPGJGB@?$AAa?$AAz?$AA?9?$AAa?$AAz?$AA?9?$AAc?$AAy?$AAr?$AAl@
	DD	09bH
	DD	FLAT:??_C@_1BG@IBCKDDOE@?$AAa?$AAz?$AA?9?$AAa?$AAz?$AA?9?$AAl?$AAa?$AAt?$AAn@
	DD	06bH
	DD	FLAT:??_C@_15HPJPHDM@?$AAb?$AAe@
	DD	021H
	DD	FLAT:??_C@_1M@EGPFDCPD@?$AAb?$AAe?$AA?9?$AAb?$AAy@
	DD	063H
	DD	FLAT:??_C@_15KNPADPLH@?$AAb?$AAg@
	DD	01H
	DD	FLAT:??_C@_1M@PCMGMCGC@?$AAb?$AAg?$AA?9?$AAb?$AAg@
	DD	044H
	DD	FLAT:??_C@_1M@BJBMFGOB@?$AAb?$AAn?$AA?9?$AAi?$AAn@
	DD	07dH
	DD	FLAT:??_C@_1BG@EAKMMACD@?$AAb?$AAs?$AA?9?$AAb?$AAa?$AA?9?$AAl?$AAa?$AAt?$AAn@
	DD	0b7H
	DD	FLAT:??_C@_15EDMHLDMO@?$AAc?$AAa@
	DD	02H
	DD	FLAT:??_C@_1M@KGADAODK@?$AAc?$AAa?$AA?9?$AAe?$AAs@
	DD	045H
	DD	FLAT:??_C@_15LJNHCMNK@?$AAc?$AAs@
	DD	04H
	DD	FLAT:??_C@_1M@COAJPDHI@?$AAc?$AAs?$AA?9?$AAc?$AAz@
	DD	047H
	DD	FLAT:??_C@_1M@DHBHFONH@?$AAc?$AAy?$AA?9?$AAg?$AAb@
	DD	087H
	DD	FLAT:??_C@_15FOMCIDHG@?$AAd?$AAa@
	DD	05H
	DD	FLAT:??_C@_1M@IMGKELGA@?$AAd?$AAa?$AA?9?$AAd?$AAk@
	DD	048H
	DD	FLAT:??_C@_15NBKABECB@?$AAd?$AAe@
	DD	06H
	DD	FLAT:??_C@_1M@NNDGDNGA@?$AAd?$AAe?$AA?9?$AAa?$AAt@
	DD	0a2H
	DD	FLAT:??_C@_1M@IKDBHEEM@?$AAd?$AAe?$AA?9?$AAc?$AAh@
	DD	091H
	DD	FLAT:??_C@_1M@GFFOJMCJ@?$AAd?$AAe?$AA?9?$AAd?$AAe@
	DD	049H
	DD	FLAT:??_C@_1M@MDNLKBPM@?$AAd?$AAe?$AA?9?$AAl?$AAi@
	DD	0b3H
	DD	FLAT:??_C@_1M@NJBEEJNL@?$AAd?$AAe?$AA?9?$AAl?$AAu@
	DD	0abH
	DD	FLAT:??_C@_17KPNDCPAF@?$AAd?$AAi?$AAv@
	DD	041H
	DD	FLAT:??_C@_1O@GNNELBAP@?$AAd?$AAi?$AAv?$AA?9?$AAm?$AAv@
	DD	08bH
	DD	FLAT:??_C@_15GHPEIIAO@?$AAe?$AAl@
	DD	07H
	DD	FLAT:??_C@_1M@EJLEOGAE@?$AAe?$AAl?$AA?9?$AAg?$AAr@
	DD	04aH
	DD	FLAT:??_C@_15MNPNEAIF@?$AAe?$AAn@
	DD	08H
	DD	FLAT:??_C@_1M@GMPONJN@?$AAe?$AAn?$AA?9?$AAa?$AAu@
	DD	0a3H
	DD	FLAT:??_C@_1M@NIDIIPGF@?$AAe?$AAn?$AA?9?$AAb?$AAz@
	DD	0cdH
	DD	FLAT:??_C@_1M@JEHMIMFO@?$AAe?$AAn?$AA?9?$AAc?$AAa@
	DD	0acH
	DD	FLAT:??_C@_1M@IGMJCDLA@?$AAe?$AAn?$AA?9?$AAc?$AAb@
	DD	0c9H
	DD	FLAT:??_C@_1M@BNFIGBKG@?$AAe?$AAn?$AA?9?$AAg?$AAb@
	DD	092H
	DD	FLAT:??_C@_1M@LKIFDIGP@?$AAe?$AAn?$AA?9?$AAi?$AAe@
	DD	0baH
	DD	FLAT:??_C@_1M@PJKFGCCO@?$AAe?$AAn?$AA?9?$AAj?$AAm@
	DD	0c5H
	DD	FLAT:??_C@_1M@KPPKEPBO@?$AAe?$AAn?$AA?9?$AAn?$AAz@
	DD	0b4H
	DD	FLAT:??_C@_1M@GMDGLDOB@?$AAe?$AAn?$AA?9?$AAp?$AAh@
	DD	0d6H
	DD	FLAT:??_C@_1M@ONGIBJNA@?$AAe?$AAn?$AA?9?$AAt?$AAt@
	DD	0d0H
	DD	FLAT:??_C@_1M@LLODPCMM@?$AAe?$AAn?$AA?9?$AAu?$AAs@
	DD	04bH
	DD	FLAT:??_C@_1M@LAKFNPAN@?$AAe?$AAn?$AA?9?$AAz?$AAa@
	DD	0c0H
	DD	FLAT:??_C@_1M@MFNHNHEO@?$AAe?$AAn?$AA?9?$AAz?$AAw@
	DD	0d3H
	DD	FLAT:??_C@_15GPIOMPMH@?$AAe?$AAs@
	DD	09H
	DD	FLAT:??_C@_1M@EJEINPHM@?$AAe?$AAs?$AA?9?$AAa?$AAr@
	DD	0d1H
	DD	FLAT:??_C@_1M@GNKPCCJA@?$AAe?$AAs?$AA?9?$AAb?$AAo@
	DD	0ddH
	DD	FLAT:??_C@_1M@LEEGFONL@?$AAe?$AAs?$AA?9?$AAc?$AAl@
	DD	0d7H
	DD	FLAT:??_C@_1M@KGPDPBDF@?$AAe?$AAs?$AA?9?$AAc?$AAo@
	DD	0caH
	DD	FLAT:??_C@_1M@EIAHOHH@?$AAe?$AAs?$AA?9?$AAc?$AAr@
	DD	0b5H
	DD	FLAT:??_C@_1M@LLPGMBIN@?$AAe?$AAs?$AA?9?$AAd?$AAo@
	DD	0c1H
	DD	FLAT:??_C@_1M@DKHMKNJA@?$AAe?$AAs?$AA?9?$AAe?$AAc@
	DD	0d4H
	DD	FLAT:??_C@_1M@GKGFPKAP@?$AAe?$AAs?$AA?9?$AAe?$AAs@
	DD	0a4H
	DD	FLAT:??_C@_1M@LKHKGDLN@?$AAe?$AAs?$AA?9?$AAg?$AAt@
	DD	0adH
	DD	FLAT:??_C@_1M@HEIIGGJD@?$AAe?$AAs?$AA?9?$AAh?$AAn@
	DD	0dfH
	DD	FLAT:??_C@_1M@FBDHPPGD@?$AAe?$AAs?$AA?9?$AAm?$AAx@
	DD	093H
	DD	FLAT:??_C@_1M@DPAGLNDH@?$AAe?$AAs?$AA?9?$AAn?$AAi@
	DD	0e0H
	DD	FLAT:??_C@_1M@MDGOPGDD@?$AAe?$AAs?$AA?9?$AAp?$AAa@
	DD	0bbH
	DD	FLAT:??_C@_1M@EMAMGBGE@?$AAe?$AAs?$AA?9?$AAp?$AAe@
	DD	0ceH
	DD	FLAT:??_C@_1M@IBMCAOEC@?$AAe?$AAs?$AA?9?$AAp?$AAr@
	DD	0e1H
	DD	FLAT:??_C@_1M@FGMDIJED@?$AAe?$AAs?$AA?9?$AAp?$AAy@
	DD	0dbH
	DD	FLAT:??_C@_1M@IIDEOLLL@?$AAe?$AAs?$AA?9?$AAs?$AAv@
	DD	0deH
	DD	FLAT:??_C@_1M@GAOBIPA@?$AAe?$AAs?$AA?9?$AAu?$AAy@
	DD	0d9H
	DD	FLAT:??_C@_1M@JKFFICHJ@?$AAe?$AAs?$AA?9?$AAv?$AAe@
	DD	0c6H
	DD	FLAT:??_C@_15PCFJPHHO@?$AAe?$AAt@
	DD	023H
	DD	FLAT:??_C@_1M@PNMLOJDF@?$AAe?$AAt?$AA?9?$AAe?$AAe@
	DD	065H
	DD	FLAT:??_C@_15EKOFJABL@?$AAe?$AAu@
	DD	02aH
	DD	FLAT:??_C@_1M@GHHLIKEI@?$AAe?$AAu?$AA?9?$AAe?$AAs@
	DD	06cH
	DD	FLAT:??_C@_15BDAKCCHN@?$AAf?$AAa@
	DD	026H
	DD	FLAT:??_C@_1M@PBNONODE@?$AAf?$AAa?$AA?9?$AAi?$AAr@
	DD	068H
	DD	FLAT:??_C@_15NGLOAKJC@?$AAf?$AAi@
	DD	0aH
	DD	FLAT:??_C@_1M@JEEHPMIL@?$AAf?$AAi?$AA?9?$AAf?$AAi@
	DD	04cH
	DD	FLAT:??_C@_15PDNFFFEO@?$AAf?$AAo@
	DD	02eH
	DD	FLAT:??_C@_1M@LMDCNDBA@?$AAf?$AAo?$AA?9?$AAf?$AAo@
	DD	073H
	DD	FLAT:??_C@_15FBKGNKAM@?$AAf?$AAr@
	DD	0bH
	DD	FLAT:??_C@_1M@JKEOHLDK@?$AAf?$AAr?$AA?9?$AAb?$AAe@
	DD	094H
	DD	FLAT:??_C@_1M@NOHADPMI@?$AAf?$AAr?$AA?9?$AAc?$AAa@
	DD	0a5H
	DD	FLAT:??_C@_1M@KDHIHAEC@?$AAf?$AAr?$AA?9?$AAc?$AAh@
	DD	0aeH
	DD	FLAT:??_C@_1M@MMBBFGAK@?$AAf?$AAr?$AA?9?$AAf?$AAr@
	DD	04dH
	DD	FLAT:??_C@_1M@PAFNENNF@?$AAf?$AAr?$AA?9?$AAl?$AAu@
	DD	0b6H
	DD	FLAT:??_C@_1M@EOHDJGDD@?$AAf?$AAr?$AA?9?$AAm?$AAc@
	DD	0bcH
	DD	FLAT:??_C@_15CKDMCJAF@?$AAg?$AAl@
	DD	03eH
	DD	FLAT:??_C@_1M@FAPLLOPF@?$AAg?$AAl?$AA?9?$AAe?$AAs@
	DD	088H
	DD	FLAT:??_C@_15HCNDBBA@?$AAg?$AAu@
	DD	037H
	DD	FLAT:??_C@_1M@FOPBFLOO@?$AAg?$AAu?$AA?9?$AAi?$AAn@
	DD	07fH
	DD	FLAT:??_C@_15KGGCNEFK@?$AAh?$AAe@
	DD	0cH
	DD	FLAT:??_C@_1M@KBMCINPM@?$AAh?$AAe?$AA?9?$AAi?$AAl@
	DD	04eH
	DD	FLAT:??_C@_15OMLEGLOC@?$AAh?$AAi@
	DD	02fH
	DD	FLAT:??_C@_1M@BBPHKFPJ@?$AAh?$AAi?$AA?9?$AAi?$AAn@
	DD	074H
	DD	FLAT:??_C@_15GLKMLLHM@?$AAh?$AAr@
	DD	018H
	DD	FLAT:??_C@_1M@PMBNDPHD@?$AAh?$AAr?$AA?9?$AAb?$AAa@
	DD	0afH
	DD	FLAT:??_C@_1M@BPCKOEGE@?$AAh?$AAr?$AA?9?$AAh?$AAr@
	DD	05aH
	DD	FLAT:??_C@_15PGHLIDMF@?$AAh?$AAu@
	DD	0dH
	DD	FLAT:??_C@_1M@GACBMHKE@?$AAh?$AAu?$AA?9?$AAh?$AAu@
	DD	04fH
	DD	FLAT:??_C@_15LMKNDMHN@?$AAh?$AAy@
	DD	028H
	DD	FLAT:??_C@_1M@MILPAJJC@?$AAh?$AAy?$AA?9?$AAa?$AAm@
	DD	06aH
	DD	FLAT:??_C@_15NFICGAJK@?$AAi?$AAd@
	DD	01fH
	DD	FLAT:??_C@_1M@BABBICEC@?$AAi?$AAd?$AA?9?$AAi?$AAd@
	DD	061H
	DD	FLAT:??_C@_15BIEMAPLM@?$AAi?$AAs@
	DD	0eH
	DD	FLAT:??_C@_1M@BIKNHHPF@?$AAi?$AAs?$AA?9?$AAi?$AAs@
	DD	050H
	DD	FLAT:??_C@_15IFJLDHAF@?$AAi?$AAt@
	DD	0fH
	DD	FLAT:??_C@_1M@NMPCJPHE@?$AAi?$AAt?$AA?9?$AAc?$AAh@
	DD	095H
	DD	FLAT:??_C@_1M@GHKGFEDF@?$AAi?$AAt?$AA?9?$AAi?$AAt@
	DD	051H
	DD	FLAT:??_C@_15GEMIOCAG@?$AAj?$AAa@
	DD	010H
	DD	FLAT:??_C@_1M@NIEJCJJA@?$AAj?$AAa?$AA?9?$AAj?$AAp@
	DD	052H
	DD	FLAT:??_C@_15KPJEDBKD@?$AAk?$AAa@
	DD	02dH
	DD	FLAT:??_C@_1M@JILFNBIM@?$AAk?$AAa?$AA?9?$AAg?$AAe@
	DD	072H
	DD	FLAT:??_C@_15MACJNBMH@?$AAk?$AAk@
	DD	031H
	DD	FLAT:??_C@_1M@PACPMGPH@?$AAk?$AAk?$AA?9?$AAk?$AAz@
	DD	078H
	DD	FLAT:??_C@_15PHPHCBPF@?$AAk?$AAn@
	DD	03aH
	DD	FLAT:??_C@_1M@IELFGMHA@?$AAk?$AAn?$AA?9?$AAi?$AAn@
	DD	082H
	DD	FLAT:??_C@_15EPELEGJA@?$AAk?$AAo@
	DD	011H
	DD	FLAT:??_C@_17CNJFBPG@?$AAk?$AAo?$AAk@
	DD	03fH
	DD	FLAT:??_C@_1O@IBBJHCH@?$AAk?$AAo?$AAk?$AA?9?$AAi?$AAn@
	DD	089H
	DD	FLAT:??_C@_1M@DMHAEOGC@?$AAk?$AAo?$AA?9?$AAk?$AAr@
	DD	053H
	DD	FLAT:??_C@_15DKDJEOND@?$AAk?$AAy@
	DD	032H
	DD	FLAT:??_C@_1M@HBAHBIGA@?$AAk?$AAy?$AA?9?$AAk?$AAg@
	DD	079H
	DD	FLAT:??_C@_15NFFGKGLG@?$AAl?$AAt@
	DD	025H
	DD	FLAT:??_C@_1M@KPMILCJG@?$AAl?$AAt?$AA?9?$AAl?$AAt@
	DD	067H
	DD	FLAT:??_C@_15HPFPGODN@?$AAl?$AAv@
	DD	024H
	DD	FLAT:??_C@_1M@BDEKKCA@?$AAl?$AAv?$AA?9?$AAl?$AAv@
	DD	066H
	DD	FLAT:??_C@_1M@ELCKCCJJ@?$AAm?$AAi?$AA?9?$AAn?$AAz@
	DD	08eH
	DD	FLAT:??_C@_15BGHADCNK@?$AAm?$AAk@
	DD	02bH
	DD	FLAT:??_C@_1M@CBOOLAPA@?$AAm?$AAk?$AA?9?$AAm?$AAk@
	DD	06dH
	DD	FLAT:??_C@_1M@GPHNBJKN@?$AAm?$AAl?$AA?9?$AAi?$AAn@
	DD	083H
	DD	FLAT:??_C@_15CBKOMCOI@?$AAm?$AAn@
	DD	03dH
	DD	FLAT:??_C@_1M@PABJILIG@?$AAm?$AAn?$AA?9?$AAm?$AAn@
	DD	086H
	DD	FLAT:??_C@_15DLGBCKMP@?$AAm?$AAr@
	DD	03bH
	DD	FLAT:??_C@_1M@FGBKKIPG@?$AAm?$AAr?$AA?9?$AAi?$AAn@
	DD	084H
	DD	FLAT:??_C@_15IDNNENKK@?$AAm?$AAs@
	DD	030H
	DD	FLAT:??_C@_1M@NDBPDDAL@?$AAm?$AAs?$AA?9?$AAb?$AAn@
	DD	09dH
	DD	FLAT:??_C@_1M@OPIHOOPI@?$AAm?$AAs?$AA?9?$AAm?$AAy@
	DD	077H
	DD	FLAT:??_C@_1M@PPDBCNFM@?$AAm?$AAt?$AA?9?$AAm?$AAt@
	DD	075H
	DD	FLAT:??_C@_1M@KDJDKMDD@?$AAn?$AAb?$AA?9?$AAn?$AAo@
	DD	055H
	DD	FLAT:??_C@_15NDDHIMN@?$AAn?$AAl@
	DD	012H
	DD	FLAT:??_C@_1M@KFCFLMJP@?$AAn?$AAl?$AA?9?$AAb?$AAe@
	DD	096H
	DD	FLAT:??_C@_1M@KPOPDDGO@?$AAn?$AAl?$AA?9?$AAn?$AAl@
	DD	054H
	DD	FLAT:??_C@_1M@LJKPEMLN@?$AAn?$AAn?$AA?9?$AAn?$AAo@
	DD	097H
	DD	FLAT:??_C@_15BPIGNHCD@?$AAn?$AAo@
	DD	013H
	DD	FLAT:??_C@_1M@BDGHHBFL@?$AAn?$AAs?$AA?9?$AAz?$AAa@
	DD	08dH
	DD	FLAT:??_C@_15MGIFMDPL@?$AAp?$AAa@
	DD	036H
	DD	FLAT:??_C@_1M@IDEHOAP@?$AAp?$AAa?$AA?9?$AAi?$AAn@
	DD	07eH
	DD	FLAT:??_C@_15DEOPBLCG@?$AAp?$AAl@
	DD	014H
	DD	FLAT:??_C@_1M@HDBKGOGH@?$AAp?$AAl?$AA?9?$AAp?$AAl@
	DD	056H
	DD	FLAT:??_C@_15KBECGEFG@?$AAp?$AAt@
	DD	015H
	DD	FLAT:??_C@_1M@LJLLCMEH@?$AAp?$AAt?$AA?9?$AAb?$AAr@
	DD	057H
	DD	FLAT:??_C@_1M@NCMONAAL@?$AAp?$AAt?$AA?9?$AAp?$AAt@
	DD	098H
	DD	FLAT:??_C@_1O@EAKMAJDN@?$AAq?$AAu?$AAz?$AA?9?$AAb?$AAo@
	DD	08cH
	DD	FLAT:??_C@_1O@BHHPIGDN@?$AAq?$AAu?$AAz?$AA?9?$AAe?$AAc@
	DD	09fH
	DD	FLAT:??_C@_1O@GBAPEKMJ@?$AAq?$AAu?$AAz?$AA?9?$AAp?$AAe@
	DD	0a8H
	DD	FLAT:??_C@_15GLJCBFMD@?$AAr?$AAo@
	DD	016H
	DD	FLAT:??_C@_1M@CLGLEFBO@?$AAr?$AAo?$AA?9?$AAr?$AAo@
	DD	058H
	DD	FLAT:??_C@_15FEDGKCDI@?$AAr?$AAu@
	DD	017H
	DD	FLAT:??_C@_1M@CEEDODME@?$AAr?$AAu?$AA?9?$AAr?$AAu@
	DD	059H
	DD	FLAT:??_C@_15EABBLBFF@?$AAs?$AAa@
	DD	03cH
	DD	FLAT:??_C@_1M@HPKKKMPP@?$AAs?$AAa?$AA?9?$AAi?$AAn@
	DD	085H
	DD	FLAT:??_C@_1M@BKMAIGOJ@?$AAs?$AAe?$AA?9?$AAf?$AAi@
	DD	0a7H
	DD	FLAT:??_C@_1M@NDPIFLFI@?$AAs?$AAe?$AA?9?$AAn?$AAo@
	DD	076H
	DD	FLAT:??_C@_1M@DANKKHJ@?$AAs?$AAe?$AA?9?$AAs?$AAe@
	DD	09cH
	DD	FLAT:??_C@_15CPKMFBDB@?$AAs?$AAk@
	DD	019H
	DD	FLAT:??_C@_1M@PNBLONPJ@?$AAs?$AAk?$AA?9?$AAs?$AAk@
	DD	05bH
	DD	FLAT:??_C@_15LCHLGJII@?$AAs?$AAl@
	DD	022H
	DD	FLAT:??_C@_1M@LFMODOAL@?$AAs?$AAl?$AA?9?$AAs?$AAi@
	DD	064H
	DD	FLAT:??_C@_1O@DFKOMPG@?$AAs?$AAm?$AAa?$AA?9?$AAn?$AAo@
	DD	0beH
	DD	FLAT:??_C@_1O@NDKPBNNH@?$AAs?$AAm?$AAa?$AA?9?$AAs?$AAe@
	DD	0c3H
	DD	FLAT:??_C@_1O@PLLKBHAB@?$AAs?$AAm?$AAj?$AA?9?$AAn?$AAo@
	DD	0b0H
	DD	FLAT:??_C@_1O@CLEPOGCA@?$AAs?$AAm?$AAj?$AA?9?$AAs?$AAe@
	DD	0b8H
	DD	FLAT:??_C@_1O@DLGJGKMK@?$AAs?$AAm?$AAn?$AA?9?$AAf?$AAi@
	DD	0cbH
	DD	FLAT:??_C@_1O@OJDJGAJC@?$AAs?$AAm?$AAs?$AA?9?$AAf?$AAi@
	DD	0c7H
	DD	FLAT:??_C@_15BAAIOGMK@?$AAs?$AAq@
	DD	01aH
	DD	FLAT:??_C@_1M@BOFOGHPB@?$AAs?$AAq?$AA?9?$AAa?$AAl@
	DD	05cH
	DD	FLAT:??_C@_15CLNEJCE@?$AAs?$AAr@
	DD	0e3H
	DD	FLAT:??_C@_1BG@LJBBIPGB@?$AAs?$AAr?$AA?9?$AAb?$AAa?$AA?9?$AAc?$AAy?$AAr?$AAl@
	DD	0c2H
	DD	FLAT:??_C@_1BG@JLBENFOE@?$AAs?$AAr?$AA?9?$AAb?$AAa?$AA?9?$AAl?$AAa?$AAt?$AAn@
	DD	0bdH
	DD	FLAT:??_C@_1BG@KODPNHE@?$AAs?$AAr?$AA?9?$AAs?$AAp?$AA?9?$AAc?$AAy?$AAr?$AAl@
	DD	0a6H
	DD	FLAT:??_C@_1BG@CIOGKHPB@?$AAs?$AAr?$AA?9?$AAs?$AAp?$AA?9?$AAl?$AAa?$AAt?$AAn@
	DD	099H
	DD	FLAT:??_C@_15INNPNOHD@?$AAs?$AAv@
	DD	01bH
	DD	FLAT:??_C@_1M@NGFJLMAC@?$AAs?$AAv?$AA?9?$AAf?$AAi@
	DD	09aH
	DD	FLAT:??_C@_1M@MPJEJAJC@?$AAs?$AAv?$AA?9?$AAs?$AAe@
	DD	05dH
	DD	FLAT:??_C@_15DFGDLJBG@?$AAs?$AAw@
	DD	033H
	DD	FLAT:??_C@_1M@MPNDHLFK@?$AAs?$AAw?$AA?9?$AAk?$AAe@
	DD	07aH
	DD	FLAT:??_C@_17FFBJICPL@?$AAs?$AAy?$AAr@
	DD	040H
	DD	FLAT:??_C@_1O@KOHBJJI@?$AAs?$AAy?$AAr?$AA?9?$AAs?$AAy@
	DD	08aH
	DD	FLAT:??_C@_15FNBEIBON@?$AAt?$AAa@
	DD	038H
	DD	FLAT:??_C@_1M@LDCEFHA@?$AAt?$AAa?$AA?9?$AAi?$AAn@
	DD	080H
	DD	FLAT:??_C@_15NCHGBGLK@?$AAt?$AAe@
	DD	039H
	DD	FLAT:??_C@_1M@CNJOFAK@?$AAt?$AAe?$AA?9?$AAi?$AAn@
	DD	081H
	DD	FLAT:??_C@_15CABMMOGH@?$AAt?$AAh@
	DD	01cH
	DD	FLAT:??_C@_1M@GNAECACD@?$AAt?$AAh?$AA?9?$AAt?$AAh@
	DD	05eH
	DD	FLAT:??_C@_1M@CHBIHOJO@?$AAt?$AAn?$AA?9?$AAz?$AAa@
	DD	06eH
	DD	FLAT:??_C@_15BPLIHJJM@?$AAt?$AAr@
	DD	01dH
	DD	FLAT:??_C@_1M@GCCMIGPJ@?$AAt?$AAr?$AA?9?$AAt?$AAr@
	DD	05fH
	DD	FLAT:??_C@_15DKNDCGEA@?$AAt?$AAt@
	DD	035H
	DD	FLAT:??_C@_1M@CELMCNBK@?$AAt?$AAt?$AA?9?$AAr?$AAu@
	DD	07cH
	DD	FLAT:??_C@_15PJPFLCCM@?$AAu?$AAk@
	DD	020H
	DD	FLAT:??_C@_1M@KLMCELGA@?$AAu?$AAk?$AA?9?$AAu?$AAa@
	DD	062H
	DD	FLAT:??_C@_15NEOEKKDJ@?$AAu?$AAr@
	DD	01eH
	DD	FLAT:??_C@_1M@EPAJJAJF@?$AAu?$AAr?$AA?9?$AAp?$AAk@
	DD	060H
	DD	FLAT:??_C@_15BBFAICNG@?$AAu?$AAz@
	DD	034H
	DD	FLAT:??_C@_1BG@GEGPMCDJ@?$AAu?$AAz?$AA?9?$AAu?$AAz?$AA?9?$AAc?$AAy?$AAr?$AAl@
	DD	09eH
	DD	FLAT:??_C@_1BG@EGGKJILM@?$AAu?$AAz?$AA?9?$AAu?$AAz?$AA?9?$AAl?$AAa?$AAt?$AAn@
	DD	07bH
	DD	FLAT:??_C@_15NFGIAIAJ@?$AAv?$AAi@
	DD	027H
	DD	FLAT:??_C@_1M@GFOCLFF@?$AAv?$AAi?$AA?9?$AAv?$AAn@
	DD	069H
	DD	FLAT:??_C@_1M@CPAMEDFI@?$AAx?$AAh?$AA?9?$AAz?$AAa@
	DD	06fH
	DD	FLAT:??_C@_1O@EBKIFIGN@?$AAz?$AAh?$AA?9?$AAc?$AAh?$AAs@
	DD	03H
	DD	FLAT:??_C@_1O@NMHPGANE@?$AAz?$AAh?$AA?9?$AAc?$AAh?$AAt@
	DD	0e2H
	DD	FLAT:??_C@_1M@LPINJOMC@?$AAz?$AAh?$AA?9?$AAc?$AAn@
	DD	090H
	DD	FLAT:??_C@_1M@OCJEJODD@?$AAz?$AAh?$AA?9?$AAh?$AAk@
	DD	0a1H
	DD	FLAT:??_C@_1M@DNDLJINH@?$AAz?$AAh?$AA?9?$AAm?$AAo@
	DD	0b2H
	DD	FLAT:??_C@_1M@MBFDNDND@?$AAz?$AAh?$AA?9?$AAs?$AAg@
	DD	0aaH
	DD	FLAT:??_C@_1M@IMEPLEPE@?$AAz?$AAh?$AA?9?$AAt?$AAw@
	DD	046H
	DD	FLAT:??_C@_1M@BBGHNHJP@?$AAz?$AAu?$AA?9?$AAz?$AAa@
	DD	070H
CONST	ENDS
;	COMDAT ??_C@_15CLNEJCE@?$AAs?$AAr@
CONST	SEGMENT
??_C@_15CLNEJCE@?$AAs?$AAr@ DB 's', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@ICJHKIIK@?$AAz?$AAh?$AA?9?$AAC?$AAH?$AAT@
CONST	SEGMENT
??_C@_1O@ICJHKIIK@?$AAz?$AAh?$AA?9?$AAC?$AAH?$AAT@ DB 'z', 00H, 'h', 00H, '-'
	DB	00H, 'C', 00H, 'H', 00H, 'T', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CGFMKEEK@?$AAe?$AAs?$AA?9?$AAP?$AAR@
CONST	SEGMENT
??_C@_1M@CGFMKEEK@?$AAe?$AAs?$AA?9?$AAP?$AAR@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'P', 00H, 'R', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JIJIBHDP@?$AAe?$AAs?$AA?9?$AAN?$AAI@
CONST	SEGMENT
??_C@_1M@JIJIBHDP@?$AAe?$AAs?$AA?9?$AAN?$AAI@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'N', 00H, 'I', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@NDBGMMJL@?$AAe?$AAs?$AA?9?$AAH?$AAN@
CONST	SEGMENT
??_C@_1M@NDBGMMJL@?$AAe?$AAs?$AA?9?$AAH?$AAN@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'H', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CPKKEBLD@?$AAe?$AAs?$AA?9?$AAS?$AAV@
CONST	SEGMENT
??_C@_1M@CPKKEBLD@?$AAe?$AAs?$AA?9?$AAS?$AAV@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'S', 00H, 'V', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MKDBIIJI@?$AAe?$AAs?$AA?9?$AAB?$AAO@
CONST	SEGMENT
??_C@_1M@MKDBIIJI@?$AAe?$AAs?$AA?9?$AAB?$AAO@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'B', 00H, 'O', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EDGINPNP@?$AAa?$AAr?$AA?9?$AAQ?$AAA@
CONST	SEGMENT
??_C@_1M@EDGINPNP@?$AAa?$AAr?$AA?9?$AAQ?$AAA@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'Q', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PBFNCDEL@?$AAe?$AAs?$AA?9?$AAP?$AAY@
CONST	SEGMENT
??_C@_1M@PBFNCDEL@?$AAe?$AAs?$AA?9?$AAP?$AAY@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'P', 00H, 'Y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LLCCOAGA@?$AAa?$AAr?$AA?9?$AAB?$AAH@
CONST	SEGMENT
??_C@_1M@LLCCOAGA@?$AAa?$AAr?$AA?9?$AAB?$AAH@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'B', 00H, 'H', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KBJALCPI@?$AAe?$AAs?$AA?9?$AAU?$AAY@
CONST	SEGMENT
??_C@_1M@KBJALCPI@?$AAe?$AAs?$AA?9?$AAU?$AAY@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'U', 00H, 'Y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MPNMEKBD@?$AAa?$AAr?$AA?9?$AAA?$AAE@
CONST	SEGMENT
??_C@_1M@MPNMEKBD@?$AAa?$AAr?$AA?9?$AAA?$AAE@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'A', 00H, 'E', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BDNIPEND@?$AAe?$AAs?$AA?9?$AAC?$AAL@
CONST	SEGMENT
??_C@_1M@BDNIPEND@?$AAe?$AAs?$AA?9?$AAC?$AAL@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'C', 00H, 'L', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MLKIBJOJ@?$AAe?$AAn?$AA?9?$AAP?$AAH@
CONST	SEGMENT
??_C@_1M@MLKIBJOJ@?$AAe?$AAn?$AA?9?$AAP?$AAH@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'P', 00H, 'H', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JEFHPGGB@?$AAa?$AAr?$AA?9?$AAK?$AAW@
CONST	SEGMENT
??_C@_1M@JEFHPGGB@?$AAa?$AAr?$AA?9?$AAK?$AAW@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'K', 00H, 'W', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JNOCAHJI@?$AAe?$AAs?$AA?9?$AAE?$AAC@
CONST	SEGMENT
??_C@_1M@JNOCAHJI@?$AAe?$AAs?$AA?9?$AAE?$AAC@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'E', 00H, 'C', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GCEJHNEG@?$AAe?$AAn?$AA?9?$AAZ?$AAW@
CONST	SEGMENT
??_C@_1M@GCEJHNEG@?$AAe?$AAn?$AA?9?$AAZ?$AAW@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'Z', 00H, 'W', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@OOJFGBHE@?$AAa?$AAr?$AA?9?$AAL?$AAB@
CONST	SEGMENT
??_C@_1M@OOJFGBHE@?$AAa?$AAr?$AA?9?$AAL?$AAB@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'L', 00H, 'B', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@OONGHFHE@?$AAe?$AAs?$AA?9?$AAA?$AAR@
CONST	SEGMENT
??_C@_1M@OONGHFHE@?$AAe?$AAs?$AA?9?$AAA?$AAR@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'A', 00H, 'R', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EKPGLDNI@?$AAe?$AAn?$AA?9?$AAT?$AAT@
CONST	SEGMENT
??_C@_1M@EKPGLDNI@?$AAe?$AAn?$AA?9?$AAT?$AAT@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'T', 00H, 'T', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MKKGFKLE@?$AAa?$AAr?$AA?9?$AAJ?$AAO@
CONST	SEGMENT
??_C@_1M@MKKGFKLE@?$AAa?$AAr?$AA?9?$AAJ?$AAO@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'J', 00H, 'O', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@OLJCMLGM@?$AAe?$AAs?$AA?9?$AAP?$AAE@
CONST	SEGMENT
??_C@_1M@OLJCMLGM@?$AAe?$AAs?$AA?9?$AAP?$AAE@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'P', 00H, 'E', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HPKGCFGN@?$AAe?$AAn?$AA?9?$AAB?$AAZ@
CONST	SEGMENT
??_C@_1M@HPKGCFGN@?$AAe?$AAn?$AA?9?$AAB?$AAZ@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'B', 00H, 'Z', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JLANABKE@?$AAa?$AAr?$AA?9?$AAS?$AAY@
CONST	SEGMENT
??_C@_1M@JLANABKE@?$AAa?$AAr?$AA?9?$AAS?$AAY@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'S', 00H, 'Y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@JMPHMAMC@?$AAs?$AAm?$AAn?$AA?9?$AAF?$AAI@
CONST	SEGMENT
??_C@_1O@JMPHMAMC@?$AAs?$AAm?$AAn?$AA?9?$AAF?$AAI@ DB 's', 00H, 'm', 00H, 'n'
	DB	00H, '-', 00H, 'F', 00H, 'I', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BGNFLDN@?$AAe?$AAs?$AA?9?$AAC?$AAO@
CONST	SEGMENT
??_C@_1M@BGNFLDN@?$AAe?$AAs?$AA?9?$AAC?$AAO@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'C', 00H, 'O', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CBFHIJLI@?$AAe?$AAn?$AA?9?$AAC?$AAB@
CONST	SEGMENT
??_C@_1M@CBFHIJLI@?$AAe?$AAn?$AA?9?$AAC?$AAB@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'C', 00H, 'B', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CAFJMKOF@?$AAa?$AAr?$AA?9?$AAY?$AAE@
CONST	SEGMENT
??_C@_1M@CAFJMKOF@?$AAa?$AAr?$AA?9?$AAY?$AAE@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'Y', 00H, 'E', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@EOKHMKJK@?$AAs?$AAm?$AAs?$AA?9?$AAF?$AAI@
CONST	SEGMENT
??_C@_1O@EOKHMKJK@?$AAs?$AAm?$AAs?$AA?9?$AAF?$AAI@ DB 's', 00H, 'm', 00H, 's'
	DB	00H, '-', 00H, 'F', 00H, 'I', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DNMLCIHB@?$AAe?$AAs?$AA?9?$AAV?$AAE@
CONST	SEGMENT
??_C@_1M@DNMLCIHB@?$AAe?$AAs?$AA?9?$AAV?$AAE@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'V', 00H, 'E', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FODLMICG@?$AAe?$AAn?$AA?9?$AAJ?$AAM@
CONST	SEGMENT
??_C@_1M@FODLMICG@?$AAe?$AAn?$AA?9?$AAJ?$AAM@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'J', 00H, 'M', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DAGCADIM@?$AAa?$AAr?$AA?9?$AAO?$AAM@
CONST	SEGMENT
??_C@_1M@DAGCADIM@?$AAa?$AAr?$AA?9?$AAO?$AAM@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'O', 00H, 'M', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@HEDBLHNP@?$AAs?$AAm?$AAa?$AA?9?$AAS?$AAE@
CONST	SEGMENT
??_C@_1O@HEDBLHNP@?$AAs?$AAm?$AAa?$AA?9?$AAS?$AAE@ DB 's', 00H, 'm', 00H, 'a'
	DB	00H, '-', 00H, 'S', 00H, 'E', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@CMBHIPBE@?$AAs?$AAr?$AA?9?$AAB?$AAA?$AA?9?$AAC?$AAy?$AAr?$AAl@
CONST	SEGMENT
??_C@_1BG@CMBHIPBE@?$AAs?$AAr?$AA?9?$AAB?$AAA?$AA?9?$AAC?$AAy?$AAr?$AAl@ DB 's'
	DB	00H, 'r', 00H, '-', 00H, 'B', 00H, 'A', 00H, '-', 00H, 'C', 00H
	DB	'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BMGIGLIF@?$AAe?$AAs?$AA?9?$AAD?$AAO@
CONST	SEGMENT
??_C@_1M@BMGIGLIF@?$AAe?$AAs?$AA?9?$AAD?$AAO@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'D', 00H, 'O', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BHDLHFAF@?$AAe?$AAn?$AA?9?$AAZ?$AAA@
CONST	SEGMENT
??_C@_1M@BHDLHFAF@?$AAe?$AAn?$AA?9?$AAZ?$AAA@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'Z', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@ELMGFODK@?$AAa?$AAr?$AA?9?$AAT?$AAN@
CONST	SEGMENT
??_C@_1M@ELMGFODK@?$AAa?$AAr?$AA?9?$AAT?$AAN@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'T', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@KEMEEGPO@?$AAs?$AAm?$AAa?$AA?9?$AAN?$AAO@
CONST	SEGMENT
??_C@_1O@KEMEEGPO@?$AAs?$AAm?$AAa?$AA?9?$AAN?$AAO@ DB 's', 00H, 'm', 00H, 'a'
	DB	00H, '-', 00H, 'N', 00H, 'O', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@OBCNFJB@?$AAs?$AAr?$AA?9?$AAB?$AAA?$AA?9?$AAL?$AAa?$AAt?$AAn@
CONST	SEGMENT
??_C@_1BG@OBCNFJB@?$AAs?$AAr?$AA?9?$AAB?$AAA?$AA?9?$AAL?$AAa?$AAt?$AAn@ DB 's'
	DB	00H, 'r', 00H, '-', 00H, 'B', 00H, 'A', 00H, '-', 00H, 'L', 00H
	DB	'a', 00H, 't', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@OJONDMDL@?$AAf?$AAr?$AA?9?$AAM?$AAC@
CONST	SEGMENT
??_C@_1M@OJONDMDL@?$AAf?$AAr?$AA?9?$AAM?$AAC@ DB 'f', 00H, 'r', 00H, '-', 00H
	DB	'M', 00H, 'C', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GEPAFMDL@?$AAe?$AAs?$AA?9?$AAP?$AAA@
CONST	SEGMENT
??_C@_1M@GEPAFMDL@?$AAe?$AAs?$AA?9?$AAP?$AAA@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'P', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BNBLJCGH@?$AAe?$AAn?$AA?9?$AAI?$AAE@
CONST	SEGMENT
??_C@_1M@BNBLJCGH@?$AAe?$AAn?$AA?9?$AAI?$AAE@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'I', 00H, 'E', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DHHMBNDP@?$AAa?$AAr?$AA?9?$AAM?$AAA@
CONST	SEGMENT
??_C@_1M@DHHMBNDP@?$AAa?$AAr?$AA?9?$AAM?$AAA@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'M', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@IMNBEMCI@?$AAs?$AAm?$AAj?$AA?9?$AAS?$AAE@
CONST	SEGMENT
??_C@_1O@IMNBEMCI@?$AAs?$AAm?$AAj?$AA?9?$AAS?$AAE@ DB 's', 00H, 'm', 00H, 'j'
	DB	00H, '-', 00H, 'S', 00H, 'E', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@NFKKMAFG@?$AAb?$AAs?$AA?9?$AAB?$AAA?$AA?9?$AAL?$AAa?$AAt?$AAn@
CONST	SEGMENT
??_C@_1BG@NFKKMAFG@?$AAb?$AAs?$AA?9?$AAB?$AAA?$AA?9?$AAL?$AAa?$AAt?$AAn@ DB 'b'
	DB	00H, 's', 00H, '-', 00H, 'B', 00H, 'A', 00H, '-', 00H, 'L', 00H
	DB	'a', 00H, 't', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FHMDOHNN@?$AAf?$AAr?$AA?9?$AAL?$AAU@
CONST	SEGMENT
??_C@_1M@FHMDOHNN@?$AAf?$AAr?$AA?9?$AAL?$AAU@ DB 'f', 00H, 'r', 00H, '-', 00H
	DB	'L', 00H, 'U', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KDBONEHP@?$AAe?$AAs?$AA?9?$AAC?$AAR@
CONST	SEGMENT
??_C@_1M@KDBONEHP@?$AAe?$AAs?$AA?9?$AAC?$AAR@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'C', 00H, 'R', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IGEOFBG@?$AAe?$AAn?$AA?9?$AAN?$AAZ@
CONST	SEGMENT
??_C@_1M@IGEOFBG@?$AAe?$AAn?$AA?9?$AAN?$AAZ@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'N', 00H, 'Z', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GEEFALPE@?$AAd?$AAe?$AA?9?$AAL?$AAI@
CONST	SEGMENT
??_C@_1M@GEEFALPE@?$AAd?$AAe?$AA?9?$AAL?$AAI@ DB 'd', 00H, 'e', 00H, '-', 00H
	DB	'L', 00H, 'I', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JKKFDCNP@?$AAz?$AAh?$AA?9?$AAM?$AAO@
CONST	SEGMENT
??_C@_1M@JKKFDCNP@?$AAz?$AAh?$AA?9?$AAM?$AAO@ DB 'z', 00H, 'h', 00H, '-', 00H
	DB	'M', 00H, 'O', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JHGLJMGJ@?$AAa?$AAr?$AA?9?$AAD?$AAZ@
CONST	SEGMENT
??_C@_1M@JHGLJMGJ@?$AAa?$AAr?$AA?9?$AAD?$AAZ@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'D', 00H, 'Z', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@FMCELNAJ@?$AAs?$AAm?$AAj?$AA?9?$AAN?$AAO@
CONST	SEGMENT
??_C@_1O@FMCELNAJ@?$AAs?$AAm?$AAj?$AA?9?$AAN?$AAO@ DB 's', 00H, 'm', 00H, 'j'
	DB	00H, '-', 00H, 'N', 00H, 'O', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FLIDJFHL@?$AAh?$AAr?$AA?9?$AAB?$AAA@
CONST	SEGMENT
??_C@_1M@FLIDJFHL@?$AAh?$AAr?$AA?9?$AAB?$AAA@ DB 'h', 00H, 'r', 00H, '-', 00H
	DB	'B', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EOGNKEK@?$AAf?$AAr?$AA?9?$AAC?$AAH@
CONST	SEGMENT
??_C@_1M@EOGNKEK@?$AAf?$AAr?$AA?9?$AAC?$AAH@ DB 'f', 00H, 'r', 00H, '-', 00H
	DB	'C', 00H, 'H', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BNOEMJLF@?$AAe?$AAs?$AA?9?$AAG?$AAT@
CONST	SEGMENT
??_C@_1M@BNOEMJLF@?$AAe?$AAs?$AA?9?$AAG?$AAT@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'G', 00H, 'T', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DDOCCGFG@?$AAe?$AAn?$AA?9?$AAC?$AAA@
CONST	SEGMENT
??_C@_1M@DDOCCGFG@?$AAe?$AAn?$AA?9?$AAC?$AAA@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'C', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HOIKODND@?$AAd?$AAe?$AA?9?$AAL?$AAU@
CONST	SEGMENT
??_C@_1M@HOIKODND@?$AAd?$AAe?$AA?9?$AAL?$AAU@ DB 'd', 00H, 'e', 00H, '-', 00H
	DB	'L', 00H, 'U', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GGMNHJNL@?$AAz?$AAh?$AA?9?$AAS?$AAG@
CONST	SEGMENT
??_C@_1M@GGMNHJNL@?$AAz?$AAh?$AA?9?$AAS?$AAG@ DB 'z', 00H, 'h', 00H, '-', 00H
	DB	'S', 00H, 'G', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GJINLBOK@?$AAa?$AAr?$AA?9?$AAL?$AAY@
CONST	SEGMENT
??_C@_1M@GJINLBOK@?$AAa?$AAr?$AA?9?$AAL?$AAY@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'L', 00H, 'Y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@MGJBOAMB@?$AAq?$AAu?$AAz?$AA?9?$AAP?$AAE@
CONST	SEGMENT
??_C@_1O@MGJBOAMB@?$AAq?$AAu?$AAz?$AA?9?$AAP?$AAE@ DB 'q', 00H, 'u', 00H, 'z'
	DB	00H, '-', 00H, 'P', 00H, 'E', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LNFOCMOB@?$AAs?$AAe?$AA?9?$AAF?$AAI@
CONST	SEGMENT
??_C@_1M@LNFOCMOB@?$AAs?$AAe?$AA?9?$AAF?$AAI@ DB 's', 00H, 'e', 00H, '-', 00H
	DB	'F', 00H, 'I', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@JPOFPNAB@?$AAs?$AAr?$AA?9?$AAS?$AAP?$AA?9?$AAC?$AAy?$AAr?$AAl@
CONST	SEGMENT
??_C@_1BG@JPOFPNAB@?$AAs?$AAr?$AA?9?$AAS?$AAP?$AA?9?$AAC?$AAy?$AAr?$AAl@ DB 's'
	DB	00H, 'r', 00H, '-', 00H, 'S', 00H, 'P', 00H, '-', 00H, 'C', 00H
	DB	'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HJOOJFMA@?$AAf?$AAr?$AA?9?$AAC?$AAA@
CONST	SEGMENT
??_C@_1M@HJOOJFMA@?$AAf?$AAr?$AA?9?$AAC?$AAA@ DB 'f', 00H, 'r', 00H, '-', 00H
	DB	'C', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MNPLFAAH@?$AAe?$AAs?$AA?9?$AAE?$AAS@
CONST	SEGMENT
??_C@_1M@MNPLFAAH@?$AAe?$AAs?$AA?9?$AAE?$AAS@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'E', 00H, 'S', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KBFBEHJF@?$AAe?$AAn?$AA?9?$AAA?$AAU@
CONST	SEGMENT
??_C@_1M@KBFBEHJF@?$AAe?$AAn?$AA?9?$AAA?$AAU@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'A', 00H, 'U', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HKKIJHGI@?$AAd?$AAe?$AA?9?$AAA?$AAT@
CONST	SEGMENT
??_C@_1M@HKKIJHGI@?$AAd?$AAe?$AA?9?$AAA?$AAT@ DB 'd', 00H, 'e', 00H, '-', 00H
	DB	'A', 00H, 'T', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EFAKDEDL@?$AAz?$AAh?$AA?9?$AAH?$AAK@
CONST	SEGMENT
??_C@_1M@EFAKDEDL@?$AAz?$AAh?$AA?9?$AAH?$AAK@ DB 'z', 00H, 'h', 00H, '-', 00H
	DB	'H', 00H, 'K', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@POEEMAIO@?$AAa?$AAr?$AA?9?$AAE?$AAG@
CONST	SEGMENT
??_C@_1M@POEEMAIO@?$AAa?$AAr?$AA?9?$AAE?$AAG@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'E', 00H, 'G', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@LAOBCMDF@?$AAq?$AAu?$AAz?$AA?9?$AAE?$AAC@
CONST	SEGMENT
??_C@_1O@LAOBCMDF@?$AAq?$AAu?$AAz?$AA?9?$AAE?$AAC@ DB 'q', 00H, 'u', 00H, 'z'
	DB	00H, '-', 00H, 'E', 00H, 'C', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@PBGJMCEM@?$AAu?$AAz?$AA?9?$AAU?$AAZ?$AA?9?$AAC?$AAy?$AAr?$AAl@
CONST	SEGMENT
??_C@_1BG@PBGJMCEM@?$AAu?$AAz?$AA?9?$AAU?$AAZ?$AA?9?$AAC?$AAy?$AAr?$AAl@ DB 'u'
	DB	00H, 'z', 00H, '-', 00H, 'U', 00H, 'Z', 00H, '-', 00H, 'C', 00H
	DB	'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HEIBJJAD@?$AAm?$AAs?$AA?9?$AAB?$AAN@
CONST	SEGMENT
??_C@_1M@HEIBJJAD@?$AAm?$AAs?$AA?9?$AAB?$AAN@ DB 'm', 00H, 's', 00H, '-', 00H
	DB	'B', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KEJDAAHB@?$AAs?$AAe?$AA?9?$AAS?$AAE@
CONST	SEGMENT
??_C@_1M@KEJDAAHB@?$AAs?$AAe?$AA?9?$AAS?$AAE@ DB 's', 00H, 'e', 00H, '-', 00H
	DB	'S', 00H, 'E', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@DGCJGJBE@?$AAa?$AAz?$AA?9?$AAA?$AAZ?$AA?9?$AAC?$AAy?$AAr?$AAl@
CONST	SEGMENT
??_C@_1BG@DGCJGJBE@?$AAa?$AAz?$AA?9?$AAA?$AAZ?$AA?9?$AAC?$AAy?$AAr?$AAl@ DB 'a'
	DB	00H, 'z', 00H, '-', 00H, 'A', 00H, 'Z', 00H, '-', 00H, 'C', 00H
	DB	'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HBMHBGAK@?$AAs?$AAv?$AA?9?$AAF?$AAI@
CONST	SEGMENT
??_C@_1M@HBMHBGAK@?$AAs?$AAv?$AA?9?$AAF?$AAI@ DB 's', 00H, 'v', 00H, '-', 00H
	DB	'F', 00H, 'I', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@LNOAKHIE@?$AAs?$AAr?$AA?9?$AAS?$AAP?$AA?9?$AAL?$AAa?$AAt?$AAn@
CONST	SEGMENT
??_C@_1BG@LNOAKHIE@?$AAs?$AAr?$AA?9?$AAS?$AAP?$AA?9?$AAL?$AAa?$AAt?$AAn@ DB 's'
	DB	00H, 'r', 00H, '-', 00H, 'S', 00H, 'P', 00H, '-', 00H, 'L', 00H
	DB	'a', 00H, 't', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HFFAHKAD@?$AAp?$AAt?$AA?9?$AAP?$AAT@
CONST	SEGMENT
??_C@_1M@HFFAHKAD@?$AAp?$AAt?$AA?9?$AAP?$AAT@ DB 'p', 00H, 't', 00H, '-', 00H
	DB	'P', 00H, 'T', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BODBOGLF@?$AAn?$AAn?$AA?9?$AAN?$AAO@
CONST	SEGMENT
??_C@_1M@BODBOGLF@?$AAn?$AAn?$AA?9?$AAN?$AAO@ DB 'n', 00H, 'n', 00H, '-', 00H
	DB	'N', 00H, 'O', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CLLBGJH@?$AAn?$AAl?$AA?9?$AAB?$AAE@
CONST	SEGMENT
??_C@_1M@CLLBGJH@?$AAn?$AAl?$AA?9?$AAB?$AAE@ DB 'n', 00H, 'l', 00H, '-', 00H
	DB	'B', 00H, 'E', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HLGMDFHM@?$AAi?$AAt?$AA?9?$AAC?$AAH@
CONST	SEGMENT
??_C@_1M@HLGMDFHM@?$AAi?$AAt?$AA?9?$AAC?$AAH@ DB 'i', 00H, 't', 00H, '-', 00H
	DB	'C', 00H, 'H', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DNNANBDC@?$AAf?$AAr?$AA?9?$AAB?$AAE@
CONST	SEGMENT
??_C@_1M@DNNANBDC@?$AAf?$AAr?$AA?9?$AAB?$AAE@ DB 'f', 00H, 'r', 00H, '-', 00H
	DB	'B', 00H, 'E', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PGKJFFGL@?$AAe?$AAs?$AA?9?$AAM?$AAX@
CONST	SEGMENT
??_C@_1M@PGKJFFGL@?$AAe?$AAs?$AA?9?$AAM?$AAX@ DB 'e', 00H, 's', 00H, '-', 00H
	DB	'M', 00H, 'X', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LKMGMLKO@?$AAe?$AAn?$AA?9?$AAG?$AAB@
CONST	SEGMENT
??_C@_1M@LKMGMLKO@?$AAe?$AAn?$AA?9?$AAG?$AAB@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'G', 00H, 'B', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CNKPNOEE@?$AAd?$AAe?$AA?9?$AAC?$AAH@
CONST	SEGMENT
??_C@_1M@CNKPNOEE@?$AAd?$AAe?$AA?9?$AAC?$AAH@ DB 'd', 00H, 'e', 00H, '-', 00H
	DB	'C', 00H, 'H', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BIBDDEMK@?$AAz?$AAh?$AA?9?$AAC?$AAN@
CONST	SEGMENT
??_C@_1M@BIBDDEMK@?$AAz?$AAh?$AA?9?$AAC?$AAN@ DB 'z', 00H, 'h', 00H, '-', 00H
	DB	'C', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PMPEAILG@?$AAa?$AAr?$AA?9?$AAI?$AAQ@
CONST	SEGMENT
??_C@_1M@PMPEAILG@?$AAa?$AAr?$AA?9?$AAI?$AAQ@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'I', 00H, 'Q', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@OMLEIIJB@?$AAm?$AAi?$AA?9?$AAN?$AAZ@
CONST	SEGMENT
??_C@_1M@OMLEIIJB@?$AAm?$AAi?$AA?9?$AAN?$AAZ@ DB 'm', 00H, 'i', 00H, '-', 00H
	DB	'N', 00H, 'Z', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LEPJNLFD@?$AAn?$AAs?$AA?9?$AAZ?$AAA@
CONST	SEGMENT
??_C@_1M@LEPJNLFD@?$AAn?$AAs?$AA?9?$AAZ?$AAA@ DB 'n', 00H, 's', 00H, '-', 00H
	DB	'Z', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OHDCKDDF@?$AAq?$AAu?$AAz?$AA?9?$AAB?$AAO@
CONST	SEGMENT
??_C@_1O@OHDCKDDF@?$AAq?$AAu?$AAz?$AA?9?$AAB?$AAO@ DB 'q', 00H, 'u', 00H, 'z'
	DB	00H, '-', 00H, 'B', 00H, 'O', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@MKEKBLAH@?$AAd?$AAi?$AAv?$AA?9?$AAM?$AAV@
CONST	SEGMENT
??_C@_1O@MKEKBLAH@?$AAd?$AAi?$AAv?$AA?9?$AAM?$AAV@ DB 'd', 00H, 'i', 00H, 'v'
	DB	00H, '-', 00H, 'M', 00H, 'V', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@KNHJLDJA@?$AAs?$AAy?$AAr?$AA?9?$AAS?$AAY@
CONST	SEGMENT
??_C@_1O@KNHJLDJA@?$AAs?$AAy?$AAr?$AA?9?$AAS?$AAY@ DB 's', 00H, 'y', 00H, 'r'
	DB	00H, '-', 00H, 'S', 00H, 'Y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@KPIPDNCP@?$AAk?$AAo?$AAk?$AA?9?$AAI?$AAN@
CONST	SEGMENT
??_C@_1O@KPIPDNCP@?$AAk?$AAo?$AAk?$AA?9?$AAI?$AAN@ DB 'k', 00H, 'o', 00H, 'k'
	DB	00H, '-', 00H, 'I', 00H, 'N', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PHGFBEPN@?$AAg?$AAl?$AA?9?$AAE?$AAS@
CONST	SEGMENT
??_C@_1M@PHGFBEPN@?$AAg?$AAl?$AA?9?$AAE?$AAS@ DB 'g', 00H, 'l', 00H, '-', 00H
	DB	'E', 00H, 'S', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JAIJPENP@?$AAc?$AAy?$AA?9?$AAG?$AAB@
CONST	SEGMENT
??_C@_1M@JAIJPENP@?$AAc?$AAy?$AA?9?$AAG?$AAB@ DB 'c', 00H, 'y', 00H, '-', 00H
	DB	'G', 00H, 'B', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FHIHCBIO@?$AAm?$AAn?$AA?9?$AAM?$AAN@
CONST	SEGMENT
??_C@_1M@FHIHCBIO@?$AAm?$AAn?$AA?9?$AAM?$AAN@ DB 'm', 00H, 'n', 00H, '-', 00H
	DB	'M', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@NIDEAGPH@?$AAs?$AAa?$AA?9?$AAI?$AAN@
CONST	SEGMENT
??_C@_1M@NIDEAGPH@?$AAs?$AAa?$AA?9?$AAI?$AAN@ DB 's', 00H, 'a', 00H, '-', 00H
	DB	'I', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PBIEACPO@?$AAm?$AAr?$AA?9?$AAI?$AAN@
CONST	SEGMENT
??_C@_1M@PBIEACPO@?$AAm?$AAr?$AA?9?$AAI?$AAN@ DB 'm', 00H, 'r', 00H, '-', 00H
	DB	'I', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MIODLDKF@?$AAm?$AAl?$AA?9?$AAI?$AAN@
CONST	SEGMENT
??_C@_1M@MIODLDKF@?$AAm?$AAl?$AA?9?$AAI?$AAN@ DB 'm', 00H, 'l', 00H, '-', 00H
	DB	'I', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CDCLMGHI@?$AAk?$AAn?$AA?9?$AAI?$AAN@
CONST	SEGMENT
??_C@_1M@CDCLMGHI@?$AAk?$AAn?$AA?9?$AAI?$AAN@ DB 'k', 00H, 'n', 00H, '-', 00H
	DB	'I', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KFEHEPAC@?$AAt?$AAe?$AA?9?$AAI?$AAN@
CONST	SEGMENT
??_C@_1M@KFEHEPAC@?$AAt?$AAe?$AA?9?$AAI?$AAN@ DB 't', 00H, 'e', 00H, '-', 00H
	DB	'I', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KMKMOPHI@?$AAt?$AAa?$AA?9?$AAI?$AAN@
CONST	SEGMENT
??_C@_1M@KMKMOPHI@?$AAt?$AAa?$AA?9?$AAI?$AAN@ DB 't', 00H, 'a', 00H, '-', 00H
	DB	'I', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PJGPPBOG@?$AAg?$AAu?$AA?9?$AAI?$AAN@
CONST	SEGMENT
??_C@_1M@PJGPPBOG@?$AAg?$AAu?$AA?9?$AAI?$AAN@ DB 'g', 00H, 'u', 00H, '-', 00H
	DB	'I', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KPKKNEAH@?$AAp?$AAa?$AA?9?$AAI?$AAN@
CONST	SEGMENT
??_C@_1M@KPKKNEAH@?$AAp?$AAa?$AA?9?$AAI?$AAN@ DB 'p', 00H, 'a', 00H, '-', 00H
	DB	'I', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LOICPMOJ@?$AAb?$AAn?$AA?9?$AAI?$AAN@
CONST	SEGMENT
??_C@_1M@LOICPMOJ@?$AAb?$AAn?$AA?9?$AAI?$AAN@ DB 'b', 00H, 'n', 00H, '-', 00H
	DB	'I', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IDCCIHBC@?$AAt?$AAt?$AA?9?$AAR?$AAU@
CONST	SEGMENT
??_C@_1M@IDCCIHBC@?$AAt?$AAt?$AA?9?$AAR?$AAU@ DB 't', 00H, 't', 00H, '-', 00H
	DB	'R', 00H, 'U', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@NDGMJIMJ@?$AAu?$AAz?$AA?9?$AAU?$AAZ?$AA?9?$AAL?$AAa?$AAt?$AAn@
CONST	SEGMENT
??_C@_1BG@NDGMJIMJ@?$AAu?$AAz?$AA?9?$AAU?$AAZ?$AA?9?$AAL?$AAa?$AAt?$AAn@ DB 'u'
	DB	00H, 'z', 00H, '-', 00H, 'U', 00H, 'Z', 00H, '-', 00H, 'L', 00H
	DB	'a', 00H, 't', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GIENNBFC@?$AAs?$AAw?$AA?9?$AAK?$AAE@
CONST	SEGMENT
??_C@_1M@GIENNBFC@?$AAs?$AAw?$AA?9?$AAK?$AAE@ DB 's', 00H, 'w', 00H, '-', 00H
	DB	'K', 00H, 'E', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@NGJJLCGI@?$AAk?$AAy?$AA?9?$AAK?$AAG@
CONST	SEGMENT
??_C@_1M@NGJJLCGI@?$AAk?$AAy?$AA?9?$AAK?$AAG@ DB 'k', 00H, 'y', 00H, '-', 00H
	DB	'K', 00H, 'G', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FHLBGMPP@?$AAk?$AAk?$AA?9?$AAK?$AAZ@
CONST	SEGMENT
??_C@_1M@FHLBGMPP@?$AAk?$AAk?$AA?9?$AAK?$AAZ@ DB 'k', 00H, 'k', 00H, '-', 00H
	DB	'K', 00H, 'Z', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EIBJEEPA@?$AAm?$AAs?$AA?9?$AAM?$AAY@
CONST	SEGMENT
??_C@_1M@EIBJEEPA@?$AAm?$AAs?$AA?9?$AAM?$AAY@ DB 'm', 00H, 's', 00H, '-', 00H
	DB	'M', 00H, 'Y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HEGGPBFA@?$AAs?$AAe?$AA?9?$AAN?$AAO@
CONST	SEGMENT
??_C@_1M@HEGGPBFA@?$AAs?$AAe?$AA?9?$AAN?$AAO@ DB 's', 00H, 'e', 00H, '-', 00H
	DB	'N', 00H, 'O', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FIKPIHFE@?$AAm?$AAt?$AA?9?$AAM?$AAT@
CONST	SEGMENT
??_C@_1M@FIKPIHFE@?$AAm?$AAt?$AA?9?$AAM?$AAT@ DB 'm', 00H, 't', 00H, '-', 00H
	DB	'M', 00H, 'T', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LGGJAPPB@?$AAh?$AAi?$AA?9?$AAI?$AAN@
CONST	SEGMENT
??_C@_1M@LGGJAPPB@?$AAh?$AAi?$AA?9?$AAI?$AAN@ DB 'h', 00H, 'i', 00H, '-', 00H
	DB	'I', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BLKMHJBI@?$AAf?$AAo?$AA?9?$AAF?$AAO@
CONST	SEGMENT
??_C@_1M@BLKMHJBI@?$AAf?$AAo?$AA?9?$AAF?$AAO@ DB 'f', 00H, 'o', 00H, '-', 00H
	DB	'F', 00H, 'O', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DPCLHLIE@?$AAk?$AAa?$AA?9?$AAG?$AAE@
CONST	SEGMENT
??_C@_1M@DPCLHLIE@?$AAk?$AAa?$AA?9?$AAG?$AAE@ DB 'k', 00H, 'a', 00H, '-', 00H
	DB	'G', 00H, 'E', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HOKAOIO@?$AAa?$AAf?$AA?9?$AAZ?$AAA@
CONST	SEGMENT
??_C@_1M@HOKAOIO@?$AAa?$AAf?$AA?9?$AAZ?$AAA@ DB 'a', 00H, 'f', 00H, '-', 00H
	DB	'Z', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LGPJHNJH@?$AAz?$AAu?$AA?9?$AAZ?$AAA@
CONST	SEGMENT
??_C@_1M@LGPJHNJH@?$AAz?$AAu?$AA?9?$AAZ?$AAA@ DB 'z', 00H, 'u', 00H, '-', 00H
	DB	'Z', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IIJCOJFA@?$AAx?$AAh?$AA?9?$AAZ?$AAA@
CONST	SEGMENT
??_C@_1M@IIJCOJFA@?$AAx?$AAh?$AA?9?$AAZ?$AAA@ DB 'x', 00H, 'h', 00H, '-', 00H
	DB	'Z', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IAIGNEJG@?$AAt?$AAn?$AA?9?$AAZ?$AAA@
CONST	SEGMENT
??_C@_1M@IAIGNEJG@?$AAt?$AAn?$AA?9?$AAZ?$AAA@ DB 't', 00H, 'n', 00H, '-', 00H
	DB	'Z', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IGHABKPI@?$AAm?$AAk?$AA?9?$AAM?$AAK@
CONST	SEGMENT
??_C@_1M@IGHABKPI@?$AAm?$AAk?$AA?9?$AAM?$AAK@ DB 'm', 00H, 'k', 00H, '-', 00H
	DB	'M', 00H, 'K', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MAOFCAEA@?$AAe?$AAu?$AA?9?$AAE?$AAS@
CONST	SEGMENT
??_C@_1M@MAOFCAEA@?$AAe?$AAu?$AA?9?$AAE?$AAS@ DB 'e', 00H, 'u', 00H, '-', 00H
	DB	'E', 00H, 'S', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@BECMDDJB@?$AAa?$AAz?$AA?9?$AAA?$AAZ?$AA?9?$AAL?$AAa?$AAt?$AAn@
CONST	SEGMENT
??_C@_1BG@BECMDDJB@?$AAa?$AAz?$AA?9?$AAA?$AAZ?$AA?9?$AAL?$AAa?$AAt?$AAn@ DB 'a'
	DB	00H, 'z', 00H, '-', 00H, 'A', 00H, 'Z', 00H, '-', 00H, 'L', 00H
	DB	'a', 00H, 't', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GPCBKDJK@?$AAh?$AAy?$AA?9?$AAA?$AAM@
CONST	SEGMENT
??_C@_1M@GPCBKDJK@?$AAh?$AAy?$AA?9?$AAA?$AAM@ DB 'h', 00H, 'y', 00H, '-', 00H
	DB	'A', 00H, 'M', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KBMAIBFN@?$AAv?$AAi?$AA?9?$AAV?$AAN@
CONST	SEGMENT
??_C@_1M@KBMAIBFN@?$AAv?$AAi?$AA?9?$AAV?$AAN@ DB 'v', 00H, 'i', 00H, '-', 00H
	DB	'V', 00H, 'N', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FGEAHEDM@?$AAf?$AAa?$AA?9?$AAI?$AAR@
CONST	SEGMENT
??_C@_1M@FGEAHEDM@?$AAf?$AAa?$AA?9?$AAI?$AAR@ DB 'f', 00H, 'a', 00H, '-', 00H
	DB	'I', 00H, 'R', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IFGBIJO@?$AAl?$AAt?$AA?9?$AAL?$AAT@
CONST	SEGMENT
??_C@_1M@IFGBIJO@?$AAl?$AAt?$AA?9?$AAL?$AAT@ DB 'l', 00H, 't', 00H, '-', 00H
	DB	'L', 00H, 'T', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KGKKAACI@?$AAl?$AAv?$AA?9?$AAL?$AAV@
CONST	SEGMENT
??_C@_1M@KGKKAACI@?$AAl?$AAv?$AA?9?$AAL?$AAV@ DB 'l', 00H, 'v', 00H, '-', 00H
	DB	'L', 00H, 'V', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FKFFEDDN@?$AAe?$AAt?$AA?9?$AAE?$AAE@
CONST	SEGMENT
??_C@_1M@FKFFEDDN@?$AAe?$AAt?$AA?9?$AAE?$AAE@ DB 'e', 00H, 't', 00H, '-', 00H
	DB	'E', 00H, 'E', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BCFAJEAD@?$AAs?$AAl?$AA?9?$AAS?$AAI@
CONST	SEGMENT
??_C@_1M@BCFAJEAD@?$AAs?$AAl?$AA?9?$AAS?$AAI@ DB 's', 00H, 'l', 00H, '-', 00H
	DB	'S', 00H, 'I', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@OBGLJIPL@?$AAb?$AAe?$AA?9?$AAB?$AAY@
CONST	SEGMENT
??_C@_1M@OBGLJIPL@?$AAb?$AAe?$AA?9?$AAB?$AAY@ DB 'b', 00H, 'e', 00H, '-', 00H
	DB	'B', 00H, 'Y', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MFMOBGI@?$AAu?$AAk?$AA?9?$AAU?$AAA@
CONST	SEGMENT
??_C@_1M@MFMOBGI@?$AAu?$AAk?$AA?9?$AAU?$AAA@ DB 'u', 00H, 'k', 00H, '-', 00H
	DB	'U', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LHIPCIEK@?$AAi?$AAd?$AA?9?$AAI?$AAD@
CONST	SEGMENT
??_C@_1M@LHIPCIEK@?$AAi?$AAd?$AA?9?$AAI?$AAD@ DB 'i', 00H, 'd', 00H, '-', 00H
	DB	'I', 00H, 'D', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@OIJHDKJN@?$AAu?$AAr?$AA?9?$AAP?$AAK@
CONST	SEGMENT
??_C@_1M@OIJHDKJN@?$AAu?$AAr?$AA?9?$AAP?$AAK@ DB 'u', 00H, 'r', 00H, '-', 00H
	DB	'P', 00H, 'K', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MFLCCMPB@?$AAt?$AAr?$AA?9?$AAT?$AAR@
CONST	SEGMENT
??_C@_1M@MFLCCMPB@?$AAt?$AAr?$AA?9?$AAT?$AAR@ DB 't', 00H, 'r', 00H, '-', 00H
	DB	'T', 00H, 'R', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MKJKIKCL@?$AAt?$AAh?$AA?9?$AAT?$AAH@
CONST	SEGMENT
??_C@_1M@MKJKIKCL@?$AAt?$AAh?$AA?9?$AAT?$AAH@ DB 't', 00H, 'h', 00H, '-', 00H
	DB	'T', 00H, 'H', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GIAKDKJK@?$AAs?$AAv?$AA?9?$AAS?$AAE@
CONST	SEGMENT
??_C@_1M@GIAKDKJK@?$AAs?$AAv?$AA?9?$AAS?$AAE@ DB 's', 00H, 'v', 00H, '-', 00H
	DB	'S', 00H, 'E', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LJMAMNPJ@?$AAs?$AAq?$AA?9?$AAA?$AAL@
CONST	SEGMENT
??_C@_1M@LJMAMNPJ@?$AAs?$AAq?$AA?9?$AAA?$AAL@ DB 's', 00H, 'q', 00H, '-', 00H
	DB	'A', 00H, 'L', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FKIFEHPB@?$AAs?$AAk?$AA?9?$AAS?$AAK@
CONST	SEGMENT
??_C@_1M@FKIFEHPB@?$AAs?$AAk?$AA?9?$AAS?$AAK@ DB 's', 00H, 'k', 00H, '-', 00H
	DB	'S', 00H, 'K', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LILEEOGM@?$AAh?$AAr?$AA?9?$AAH?$AAR@
CONST	SEGMENT
??_C@_1M@LILEEOGM@?$AAh?$AAr?$AA?9?$AAH?$AAR@ DB 'h', 00H, 'r', 00H, '-', 00H
	DB	'H', 00H, 'R', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IDNNEJMM@?$AAr?$AAu?$AA?9?$AAR?$AAU@
CONST	SEGMENT
??_C@_1M@IDNNEJMM@?$AAr?$AAu?$AA?9?$AAR?$AAU@ DB 'r', 00H, 'u', 00H, '-', 00H
	DB	'R', 00H, 'U', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IMPFOPBG@?$AAr?$AAo?$AA?9?$AAR?$AAO@
CONST	SEGMENT
??_C@_1M@IMPFOPBG@?$AAr?$AAo?$AA?9?$AAR?$AAO@ DB 'r', 00H, 'o', 00H, '-', 00H
	DB	'R', 00H, 'O', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BOCFIGEP@?$AAp?$AAt?$AA?9?$AAB?$AAR@
CONST	SEGMENT
??_C@_1M@BOCFIGEP@?$AAp?$AAt?$AA?9?$AAB?$AAR@ DB 'p', 00H, 't', 00H, '-', 00H
	DB	'B', 00H, 'R', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@NEIEMEGP@?$AAp?$AAl?$AA?9?$AAP?$AAL@
CONST	SEGMENT
??_C@_1M@NEIEMEGP@?$AAp?$AAl?$AA?9?$AAP?$AAL@ DB 'p', 00H, 'l', 00H, '-', 00H
	DB	'P', 00H, 'L', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EANAGDL@?$AAn?$AAb?$AA?9?$AAN?$AAO@
CONST	SEGMENT
??_C@_1M@EANAGDL@?$AAn?$AAb?$AA?9?$AAN?$AAO@ DB 'n', 00H, 'b', 00H, '-', 00H
	DB	'N', 00H, 'O', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IHBJJGG@?$AAn?$AAl?$AA?9?$AAN?$AAL@
CONST	SEGMENT
??_C@_1M@IHBJJGG@?$AAn?$AAl?$AA?9?$AAN?$AAL@ DB 'n', 00H, 'l', 00H, '-', 00H
	DB	'N', 00H, 'L', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JLOOOEGK@?$AAk?$AAo?$AA?9?$AAK?$AAR@
CONST	SEGMENT
??_C@_1M@JLOOOEGK@?$AAk?$AAo?$AA?9?$AAK?$AAR@ DB 'k', 00H, 'o', 00H, '-', 00H
	DB	'K', 00H, 'R', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HPNHIDJI@?$AAj?$AAa?$AA?9?$AAJ?$AAP@
CONST	SEGMENT
??_C@_1M@HPNHIDJI@?$AAj?$AAa?$AA?9?$AAJ?$AAP@ DB 'j', 00H, 'a', 00H, '-', 00H
	DB	'J', 00H, 'P', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MADIPODN@?$AAi?$AAt?$AA?9?$AAI?$AAT@
CONST	SEGMENT
??_C@_1M@MADIPODN@?$AAi?$AAt?$AA?9?$AAI?$AAT@ DB 'i', 00H, 't', 00H, '-', 00H
	DB	'I', 00H, 'T', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LPDDNNPN@?$AAi?$AAs?$AA?9?$AAI?$AAS@
CONST	SEGMENT
??_C@_1M@LPDDNNPN@?$AAi?$AAs?$AA?9?$AAI?$AAS@ DB 'i', 00H, 's', 00H, '-', 00H
	DB	'I', 00H, 'S', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MHLPGNKM@?$AAh?$AAu?$AA?9?$AAH?$AAU@
CONST	SEGMENT
??_C@_1M@MHLPGNKM@?$AAh?$AAu?$AA?9?$AAH?$AAU@ DB 'h', 00H, 'u', 00H, '-', 00H
	DB	'H', 00H, 'U', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GFMCHPE@?$AAh?$AAe?$AA?9?$AAI?$AAL@
CONST	SEGMENT
??_C@_1M@GFMCHPE@?$AAh?$AAe?$AA?9?$AAI?$AAL@ DB 'h', 00H, 'e', 00H, '-', 00H
	DB	'I', 00H, 'L', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GLIPPMAC@?$AAf?$AAr?$AA?9?$AAF?$AAR@
CONST	SEGMENT
??_C@_1M@GLIPPMAC@?$AAf?$AAr?$AA?9?$AAF?$AAR@ DB 'f', 00H, 'r', 00H, '-', 00H
	DB	'F', 00H, 'R', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@DDNJFGID@?$AAf?$AAi?$AA?9?$AAF?$AAI@
CONST	SEGMENT
??_C@_1M@DDNJFGID@?$AAf?$AAi?$AA?9?$AAF?$AAI@ DB 'f', 00H, 'i', 00H, '-', 00H
	DB	'F', 00H, 'I', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BMHNFIME@?$AAe?$AAn?$AA?9?$AAU?$AAS@
CONST	SEGMENT
??_C@_1M@BMHNFIME@?$AAe?$AAn?$AA?9?$AAU?$AAS@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'U', 00H, 'S', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@OOCKEMAM@?$AAe?$AAl?$AA?9?$AAG?$AAR@
CONST	SEGMENT
??_C@_1M@OOCKEMAM@?$AAe?$AAl?$AA?9?$AAG?$AAR@ DB 'e', 00H, 'l', 00H, '-', 00H
	DB	'G', 00H, 'R', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@MCMADGCB@?$AAd?$AAe?$AA?9?$AAD?$AAE@
CONST	SEGMENT
??_C@_1M@MCMADGCB@?$AAd?$AAe?$AA?9?$AAD?$AAE@ DB 'd', 00H, 'e', 00H, '-', 00H
	DB	'D', 00H, 'E', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CLPEOBGI@?$AAd?$AAa?$AA?9?$AAD?$AAK@
CONST	SEGMENT
??_C@_1M@CLPEOBGI@?$AAd?$AAa?$AA?9?$AAD?$AAK@ DB 'd', 00H, 'a', 00H, '-', 00H
	DB	'D', 00H, 'K', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IJJHFJHA@?$AAc?$AAs?$AA?9?$AAC?$AAZ@
CONST	SEGMENT
??_C@_1M@IJJHFJHA@?$AAc?$AAs?$AA?9?$AAC?$AAZ@ DB 'c', 00H, 's', 00H, '-', 00H
	DB	'C', 00H, 'Z', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@CLNBBOPM@?$AAz?$AAh?$AA?9?$AAT?$AAW@
CONST	SEGMENT
??_C@_1M@CLNBBOPM@?$AAz?$AAh?$AA?9?$AAT?$AAW@ DB 'z', 00H, 'h', 00H, '-', 00H
	DB	'T', 00H, 'W', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BJNKEDC@?$AAc?$AAa?$AA?9?$AAE?$AAS@
CONST	SEGMENT
??_C@_1M@BJNKEDC@?$AAc?$AAa?$AA?9?$AAE?$AAS@ DB 'c', 00H, 'a', 00H, '-', 00H
	DB	'E', 00H, 'S', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@FFFIGIGK@?$AAb?$AAg?$AA?9?$AAB?$AAG@
CONST	SEGMENT
??_C@_1M@FFFIGIGK@?$AAb?$AAg?$AA?9?$AAB?$AAG@ DB 'b', 00H, 'g', 00H, '-', 00H
	DB	'B', 00H, 'G', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@OKAHONE@?$AAa?$AAr?$AA?9?$AAS?$AAA@
CONST	SEGMENT
??_C@_1M@OKAHONE@?$AAa?$AAr?$AA?9?$AAS?$AAA@ DB 'a', 00H, 'r', 00H, '-', 00H
	DB	'S', 00H, 'A', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_17KPNDCPAF@?$AAd?$AAi?$AAv@
CONST	SEGMENT
??_C@_17KPNDCPAF@?$AAd?$AAi?$AAv@ DB 'd', 00H, 'i', 00H, 'v', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17FFBJICPL@?$AAs?$AAy?$AAr@
CONST	SEGMENT
??_C@_17FFBJICPL@?$AAs?$AAy?$AAr@ DB 's', 00H, 'y', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNJFBPG@?$AAk?$AAo?$AAk@
CONST	SEGMENT
??_C@_17CNJFBPG@?$AAk?$AAo?$AAk@ DB 'k', 00H, 'o', 00H, 'k', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15CKDMCJAF@?$AAg?$AAl@
CONST	SEGMENT
??_C@_15CKDMCJAF@?$AAg?$AAl@ DB 'g', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15CBKOMCOI@?$AAm?$AAn@
CONST	SEGMENT
??_C@_15CBKOMCOI@?$AAm?$AAn@ DB 'm', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15EABBLBFF@?$AAs?$AAa@
CONST	SEGMENT
??_C@_15EABBLBFF@?$AAs?$AAa@ DB 's', 00H, 'a', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15DLGBCKMP@?$AAm?$AAr@
CONST	SEGMENT
??_C@_15DLGBCKMP@?$AAm?$AAr@ DB 'm', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15PHPHCBPF@?$AAk?$AAn@
CONST	SEGMENT
??_C@_15PHPHCBPF@?$AAk?$AAn@ DB 'k', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15NCHGBGLK@?$AAt?$AAe@
CONST	SEGMENT
??_C@_15NCHGBGLK@?$AAt?$AAe@ DB 't', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15FNBEIBON@?$AAt?$AAa@
CONST	SEGMENT
??_C@_15FNBEIBON@?$AAt?$AAa@ DB 't', 00H, 'a', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15HCNDBBA@?$AAg?$AAu@
CONST	SEGMENT
??_C@_15HCNDBBA@?$AAg?$AAu@ DB 'g', 00H, 'u', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15MGIFMDPL@?$AAp?$AAa@
CONST	SEGMENT
??_C@_15MGIFMDPL@?$AAp?$AAa@ DB 'p', 00H, 'a', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15DKNDCGEA@?$AAt?$AAt@
CONST	SEGMENT
??_C@_15DKNDCGEA@?$AAt?$AAt@ DB 't', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15BBFAICNG@?$AAu?$AAz@
CONST	SEGMENT
??_C@_15BBFAICNG@?$AAu?$AAz@ DB 'u', 00H, 'z', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15DFGDLJBG@?$AAs?$AAw@
CONST	SEGMENT
??_C@_15DFGDLJBG@?$AAs?$AAw@ DB 's', 00H, 'w', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15DKDJEOND@?$AAk?$AAy@
CONST	SEGMENT
??_C@_15DKDJEOND@?$AAk?$AAy@ DB 'k', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15MACJNBMH@?$AAk?$AAk@
CONST	SEGMENT
??_C@_15MACJNBMH@?$AAk?$AAk@ DB 'k', 00H, 'k', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15IDNNENKK@?$AAm?$AAs@
CONST	SEGMENT
??_C@_15IDNNENKK@?$AAm?$AAs@ DB 'm', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15OMLEGLOC@?$AAh?$AAi@
CONST	SEGMENT
??_C@_15OMLEGLOC@?$AAh?$AAi@ DB 'h', 00H, 'i', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15PDNFFFEO@?$AAf?$AAo@
CONST	SEGMENT
??_C@_15PDNFFFEO@?$AAf?$AAo@ DB 'f', 00H, 'o', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15KPJEDBKD@?$AAk?$AAa@
CONST	SEGMENT
??_C@_15KPJEDBKD@?$AAk?$AAa@ DB 'k', 00H, 'a', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15JDNICKHM@?$AAa?$AAf@
CONST	SEGMENT
??_C@_15JDNICKHM@?$AAa?$AAf@ DB 'a', 00H, 'f', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15BGHADCNK@?$AAm?$AAk@
CONST	SEGMENT
??_C@_15BGHADCNK@?$AAm?$AAk@ DB 'm', 00H, 'k', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15EKOFJABL@?$AAe?$AAu@
CONST	SEGMENT
??_C@_15EKOFJABL@?$AAe?$AAu@ DB 'e', 00H, 'u', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15IJBHMCFL@?$AAa?$AAz@
CONST	SEGMENT
??_C@_15IJBHMCFL@?$AAa?$AAz@ DB 'a', 00H, 'z', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15LMKNDMHN@?$AAh?$AAy@
CONST	SEGMENT
??_C@_15LMKNDMHN@?$AAh?$AAy@ DB 'h', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15NFGIAIAJ@?$AAv?$AAi@
CONST	SEGMENT
??_C@_15NFGIAIAJ@?$AAv?$AAi@ DB 'v', 00H, 'i', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15BDAKCCHN@?$AAf?$AAa@
CONST	SEGMENT
??_C@_15BDAKCCHN@?$AAf?$AAa@ DB 'f', 00H, 'a', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15NFFGKGLG@?$AAl?$AAt@
CONST	SEGMENT
??_C@_15NFFGKGLG@?$AAl?$AAt@ DB 'l', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15HPFPGODN@?$AAl?$AAv@
CONST	SEGMENT
??_C@_15HPFPGODN@?$AAl?$AAv@ DB 'l', 00H, 'v', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15PCFJPHHO@?$AAe?$AAt@
CONST	SEGMENT
??_C@_15PCFJPHHO@?$AAe?$AAt@ DB 'e', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15LCHLGJII@?$AAs?$AAl@
CONST	SEGMENT
??_C@_15LCHLGJII@?$AAs?$AAl@ DB 's', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15HPJPHDM@?$AAb?$AAe@
CONST	SEGMENT
??_C@_15HPJPHDM@?$AAb?$AAe@ DB 'b', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15PJPFLCCM@?$AAu?$AAk@
CONST	SEGMENT
??_C@_15PJPFLCCM@?$AAu?$AAk@ DB 'u', 00H, 'k', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15NFICGAJK@?$AAi?$AAd@
CONST	SEGMENT
??_C@_15NFICGAJK@?$AAi?$AAd@ DB 'i', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15NEOEKKDJ@?$AAu?$AAr@
CONST	SEGMENT
??_C@_15NEOEKKDJ@?$AAu?$AAr@ DB 'u', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15BPLIHJJM@?$AAt?$AAr@
CONST	SEGMENT
??_C@_15BPLIHJJM@?$AAt?$AAr@ DB 't', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15CABMMOGH@?$AAt?$AAh@
CONST	SEGMENT
??_C@_15CABMMOGH@?$AAt?$AAh@ DB 't', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15INNPNOHD@?$AAs?$AAv@
CONST	SEGMENT
??_C@_15INNPNOHD@?$AAs?$AAv@ DB 's', 00H, 'v', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15BAAIOGMK@?$AAs?$AAq@
CONST	SEGMENT
??_C@_15BAAIOGMK@?$AAs?$AAq@ DB 's', 00H, 'q', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15CPKMFBDB@?$AAs?$AAk@
CONST	SEGMENT
??_C@_15CPKMFBDB@?$AAs?$AAk@ DB 's', 00H, 'k', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15GLKMLLHM@?$AAh?$AAr@
CONST	SEGMENT
??_C@_15GLKMLLHM@?$AAh?$AAr@ DB 'h', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15FEDGKCDI@?$AAr?$AAu@
CONST	SEGMENT
??_C@_15FEDGKCDI@?$AAr?$AAu@ DB 'r', 00H, 'u', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15GLJCBFMD@?$AAr?$AAo@
CONST	SEGMENT
??_C@_15GLJCBFMD@?$AAr?$AAo@ DB 'r', 00H, 'o', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15KBECGEFG@?$AAp?$AAt@
CONST	SEGMENT
??_C@_15KBECGEFG@?$AAp?$AAt@ DB 'p', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15DEOPBLCG@?$AAp?$AAl@
CONST	SEGMENT
??_C@_15DEOPBLCG@?$AAp?$AAl@ DB 'p', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15BPIGNHCD@?$AAn?$AAo@
CONST	SEGMENT
??_C@_15BPIGNHCD@?$AAn?$AAo@ DB 'n', 00H, 'o', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15NDDHIMN@?$AAn?$AAl@
CONST	SEGMENT
??_C@_15NDDHIMN@?$AAn?$AAl@ DB 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15EPELEGJA@?$AAk?$AAo@
CONST	SEGMENT
??_C@_15EPELEGJA@?$AAk?$AAo@ DB 'k', 00H, 'o', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15GEMIOCAG@?$AAj?$AAa@
CONST	SEGMENT
??_C@_15GEMIOCAG@?$AAj?$AAa@ DB 'j', 00H, 'a', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15IFJLDHAF@?$AAi?$AAt@
CONST	SEGMENT
??_C@_15IFJLDHAF@?$AAi?$AAt@ DB 'i', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15BIEMAPLM@?$AAi?$AAs@
CONST	SEGMENT
??_C@_15BIEMAPLM@?$AAi?$AAs@ DB 'i', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15PGHLIDMF@?$AAh?$AAu@
CONST	SEGMENT
??_C@_15PGHLIDMF@?$AAh?$AAu@ DB 'h', 00H, 'u', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15KGGCNEFK@?$AAh?$AAe@
CONST	SEGMENT
??_C@_15KGGCNEFK@?$AAh?$AAe@ DB 'h', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15FBKGNKAM@?$AAf?$AAr@
CONST	SEGMENT
??_C@_15FBKGNKAM@?$AAf?$AAr@ DB 'f', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15NGLOAKJC@?$AAf?$AAi@
CONST	SEGMENT
??_C@_15NGLOAKJC@?$AAf?$AAi@ DB 'f', 00H, 'i', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15GPIOMPMH@?$AAe?$AAs@
CONST	SEGMENT
??_C@_15GPIOMPMH@?$AAe?$AAs@ DB 'e', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15MNPNEAIF@?$AAe?$AAn@
CONST	SEGMENT
??_C@_15MNPNEAIF@?$AAe?$AAn@ DB 'e', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15GHPEIIAO@?$AAe?$AAl@
CONST	SEGMENT
??_C@_15GHPEIIAO@?$AAe?$AAl@ DB 'e', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15NBKABECB@?$AAd?$AAe@
CONST	SEGMENT
??_C@_15NBKABECB@?$AAd?$AAe@ DB 'd', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15FOMCIDHG@?$AAd?$AAa@
CONST	SEGMENT
??_C@_15FOMCIDHG@?$AAd?$AAa@ DB 'd', 00H, 'a', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15LJNHCMNK@?$AAc?$AAs@
CONST	SEGMENT
??_C@_15LJNHCMNK@?$AAc?$AAs@ DB 'c', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@BPEAJADD@?$AAz?$AAh?$AA?9?$AAC?$AAH?$AAS@
CONST	SEGMENT
??_C@_1O@BPEAJADD@?$AAz?$AAh?$AA?9?$AAC?$AAH?$AAS@ DB 'z', 00H, 'h', 00H, '-'
	DB	00H, 'C', 00H, 'H', 00H, 'S', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_15EDMHLDMO@?$AAc?$AAa@
CONST	SEGMENT
??_C@_15EDMHLDMO@?$AAc?$AAa@ DB 'c', 00H, 'a', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15KNPADPLH@?$AAb?$AAg@
CONST	SEGMENT
??_C@_15KNPADPLH@?$AAb?$AAg@ DB 'b', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15EMKDOKLE@?$AAa?$AAr@
CONST	SEGMENT
??_C@_15EMKDOKLE@?$AAa?$AAr@ DB 'a', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT __pAtlLcidToLocaleNameTable
CONST	SEGMENT
__pAtlLcidToLocaleNameTable DD 01H
	DD	FLAT:??_C@_15EMKDOKLE@?$AAa?$AAr@
	DD	02H
	DD	FLAT:??_C@_15KNPADPLH@?$AAb?$AAg@
	DD	03H
	DD	FLAT:??_C@_15EDMHLDMO@?$AAc?$AAa@
	DD	04H
	DD	FLAT:??_C@_1O@BPEAJADD@?$AAz?$AAh?$AA?9?$AAC?$AAH?$AAS@
	DD	05H
	DD	FLAT:??_C@_15LJNHCMNK@?$AAc?$AAs@
	DD	06H
	DD	FLAT:??_C@_15FOMCIDHG@?$AAd?$AAa@
	DD	07H
	DD	FLAT:??_C@_15NBKABECB@?$AAd?$AAe@
	DD	08H
	DD	FLAT:??_C@_15GHPEIIAO@?$AAe?$AAl@
	DD	09H
	DD	FLAT:??_C@_15MNPNEAIF@?$AAe?$AAn@
	DD	0aH
	DD	FLAT:??_C@_15GPIOMPMH@?$AAe?$AAs@
	DD	0bH
	DD	FLAT:??_C@_15NGLOAKJC@?$AAf?$AAi@
	DD	0cH
	DD	FLAT:??_C@_15FBKGNKAM@?$AAf?$AAr@
	DD	0dH
	DD	FLAT:??_C@_15KGGCNEFK@?$AAh?$AAe@
	DD	0eH
	DD	FLAT:??_C@_15PGHLIDMF@?$AAh?$AAu@
	DD	0fH
	DD	FLAT:??_C@_15BIEMAPLM@?$AAi?$AAs@
	DD	010H
	DD	FLAT:??_C@_15IFJLDHAF@?$AAi?$AAt@
	DD	011H
	DD	FLAT:??_C@_15GEMIOCAG@?$AAj?$AAa@
	DD	012H
	DD	FLAT:??_C@_15EPELEGJA@?$AAk?$AAo@
	DD	013H
	DD	FLAT:??_C@_15NDDHIMN@?$AAn?$AAl@
	DD	014H
	DD	FLAT:??_C@_15BPIGNHCD@?$AAn?$AAo@
	DD	015H
	DD	FLAT:??_C@_15DEOPBLCG@?$AAp?$AAl@
	DD	016H
	DD	FLAT:??_C@_15KBECGEFG@?$AAp?$AAt@
	DD	018H
	DD	FLAT:??_C@_15GLJCBFMD@?$AAr?$AAo@
	DD	019H
	DD	FLAT:??_C@_15FEDGKCDI@?$AAr?$AAu@
	DD	01aH
	DD	FLAT:??_C@_15GLKMLLHM@?$AAh?$AAr@
	DD	01bH
	DD	FLAT:??_C@_15CPKMFBDB@?$AAs?$AAk@
	DD	01cH
	DD	FLAT:??_C@_15BAAIOGMK@?$AAs?$AAq@
	DD	01dH
	DD	FLAT:??_C@_15INNPNOHD@?$AAs?$AAv@
	DD	01eH
	DD	FLAT:??_C@_15CABMMOGH@?$AAt?$AAh@
	DD	01fH
	DD	FLAT:??_C@_15BPLIHJJM@?$AAt?$AAr@
	DD	020H
	DD	FLAT:??_C@_15NEOEKKDJ@?$AAu?$AAr@
	DD	021H
	DD	FLAT:??_C@_15NFICGAJK@?$AAi?$AAd@
	DD	022H
	DD	FLAT:??_C@_15PJPFLCCM@?$AAu?$AAk@
	DD	023H
	DD	FLAT:??_C@_15HPJPHDM@?$AAb?$AAe@
	DD	024H
	DD	FLAT:??_C@_15LCHLGJII@?$AAs?$AAl@
	DD	025H
	DD	FLAT:??_C@_15PCFJPHHO@?$AAe?$AAt@
	DD	026H
	DD	FLAT:??_C@_15HPFPGODN@?$AAl?$AAv@
	DD	027H
	DD	FLAT:??_C@_15NFFGKGLG@?$AAl?$AAt@
	DD	029H
	DD	FLAT:??_C@_15BDAKCCHN@?$AAf?$AAa@
	DD	02aH
	DD	FLAT:??_C@_15NFGIAIAJ@?$AAv?$AAi@
	DD	02bH
	DD	FLAT:??_C@_15LMKNDMHN@?$AAh?$AAy@
	DD	02cH
	DD	FLAT:??_C@_15IJBHMCFL@?$AAa?$AAz@
	DD	02dH
	DD	FLAT:??_C@_15EKOFJABL@?$AAe?$AAu@
	DD	02fH
	DD	FLAT:??_C@_15BGHADCNK@?$AAm?$AAk@
	DD	036H
	DD	FLAT:??_C@_15JDNICKHM@?$AAa?$AAf@
	DD	037H
	DD	FLAT:??_C@_15KPJEDBKD@?$AAk?$AAa@
	DD	038H
	DD	FLAT:??_C@_15PDNFFFEO@?$AAf?$AAo@
	DD	039H
	DD	FLAT:??_C@_15OMLEGLOC@?$AAh?$AAi@
	DD	03eH
	DD	FLAT:??_C@_15IDNNENKK@?$AAm?$AAs@
	DD	03fH
	DD	FLAT:??_C@_15MACJNBMH@?$AAk?$AAk@
	DD	040H
	DD	FLAT:??_C@_15DKDJEOND@?$AAk?$AAy@
	DD	041H
	DD	FLAT:??_C@_15DFGDLJBG@?$AAs?$AAw@
	DD	043H
	DD	FLAT:??_C@_15BBFAICNG@?$AAu?$AAz@
	DD	044H
	DD	FLAT:??_C@_15DKNDCGEA@?$AAt?$AAt@
	DD	046H
	DD	FLAT:??_C@_15MGIFMDPL@?$AAp?$AAa@
	DD	047H
	DD	FLAT:??_C@_15HCNDBBA@?$AAg?$AAu@
	DD	049H
	DD	FLAT:??_C@_15FNBEIBON@?$AAt?$AAa@
	DD	04aH
	DD	FLAT:??_C@_15NCHGBGLK@?$AAt?$AAe@
	DD	04bH
	DD	FLAT:??_C@_15PHPHCBPF@?$AAk?$AAn@
	DD	04eH
	DD	FLAT:??_C@_15DLGBCKMP@?$AAm?$AAr@
	DD	04fH
	DD	FLAT:??_C@_15EABBLBFF@?$AAs?$AAa@
	DD	050H
	DD	FLAT:??_C@_15CBKOMCOI@?$AAm?$AAn@
	DD	056H
	DD	FLAT:??_C@_15CKDMCJAF@?$AAg?$AAl@
	DD	057H
	DD	FLAT:??_C@_17CNJFBPG@?$AAk?$AAo?$AAk@
	DD	05aH
	DD	FLAT:??_C@_17FFBJICPL@?$AAs?$AAy?$AAr@
	DD	065H
	DD	FLAT:??_C@_17KPNDCPAF@?$AAd?$AAi?$AAv@
	DD	07fH
	DD	FLAT:??_C@_11LOCGONAA@@
	DD	0401H
	DD	FLAT:??_C@_1M@OKAHONE@?$AAa?$AAr?$AA?9?$AAS?$AAA@
	DD	0402H
	DD	FLAT:??_C@_1M@FFFIGIGK@?$AAb?$AAg?$AA?9?$AAB?$AAG@
	DD	0403H
	DD	FLAT:??_C@_1M@BJNKEDC@?$AAc?$AAa?$AA?9?$AAE?$AAS@
	DD	0404H
	DD	FLAT:??_C@_1M@CLNBBOPM@?$AAz?$AAh?$AA?9?$AAT?$AAW@
	DD	0405H
	DD	FLAT:??_C@_1M@IJJHFJHA@?$AAc?$AAs?$AA?9?$AAC?$AAZ@
	DD	0406H
	DD	FLAT:??_C@_1M@CLPEOBGI@?$AAd?$AAa?$AA?9?$AAD?$AAK@
	DD	0407H
	DD	FLAT:??_C@_1M@MCMADGCB@?$AAd?$AAe?$AA?9?$AAD?$AAE@
	DD	0408H
	DD	FLAT:??_C@_1M@OOCKEMAM@?$AAe?$AAl?$AA?9?$AAG?$AAR@
	DD	0409H
	DD	FLAT:??_C@_1M@BMHNFIME@?$AAe?$AAn?$AA?9?$AAU?$AAS@
	DD	040bH
	DD	FLAT:??_C@_1M@DDNJFGID@?$AAf?$AAi?$AA?9?$AAF?$AAI@
	DD	040cH
	DD	FLAT:??_C@_1M@GLIPPMAC@?$AAf?$AAr?$AA?9?$AAF?$AAR@
	DD	040dH
	DD	FLAT:??_C@_1M@GFMCHPE@?$AAh?$AAe?$AA?9?$AAI?$AAL@
	DD	040eH
	DD	FLAT:??_C@_1M@MHLPGNKM@?$AAh?$AAu?$AA?9?$AAH?$AAU@
	DD	040fH
	DD	FLAT:??_C@_1M@LPDDNNPN@?$AAi?$AAs?$AA?9?$AAI?$AAS@
	DD	0410H
	DD	FLAT:??_C@_1M@MADIPODN@?$AAi?$AAt?$AA?9?$AAI?$AAT@
	DD	0411H
	DD	FLAT:??_C@_1M@HPNHIDJI@?$AAj?$AAa?$AA?9?$AAJ?$AAP@
	DD	0412H
	DD	FLAT:??_C@_1M@JLOOOEGK@?$AAk?$AAo?$AA?9?$AAK?$AAR@
	DD	0413H
	DD	FLAT:??_C@_1M@IHBJJGG@?$AAn?$AAl?$AA?9?$AAN?$AAL@
	DD	0414H
	DD	FLAT:??_C@_1M@EANAGDL@?$AAn?$AAb?$AA?9?$AAN?$AAO@
	DD	0415H
	DD	FLAT:??_C@_1M@NEIEMEGP@?$AAp?$AAl?$AA?9?$AAP?$AAL@
	DD	0416H
	DD	FLAT:??_C@_1M@BOCFIGEP@?$AAp?$AAt?$AA?9?$AAB?$AAR@
	DD	0418H
	DD	FLAT:??_C@_1M@IMPFOPBG@?$AAr?$AAo?$AA?9?$AAR?$AAO@
	DD	0419H
	DD	FLAT:??_C@_1M@IDNNEJMM@?$AAr?$AAu?$AA?9?$AAR?$AAU@
	DD	041aH
	DD	FLAT:??_C@_1M@LILEEOGM@?$AAh?$AAr?$AA?9?$AAH?$AAR@
	DD	041bH
	DD	FLAT:??_C@_1M@FKIFEHPB@?$AAs?$AAk?$AA?9?$AAS?$AAK@
	DD	041cH
	DD	FLAT:??_C@_1M@LJMAMNPJ@?$AAs?$AAq?$AA?9?$AAA?$AAL@
	DD	041dH
	DD	FLAT:??_C@_1M@GIAKDKJK@?$AAs?$AAv?$AA?9?$AAS?$AAE@
	DD	041eH
	DD	FLAT:??_C@_1M@MKJKIKCL@?$AAt?$AAh?$AA?9?$AAT?$AAH@
	DD	041fH
	DD	FLAT:??_C@_1M@MFLCCMPB@?$AAt?$AAr?$AA?9?$AAT?$AAR@
	DD	0420H
	DD	FLAT:??_C@_1M@OIJHDKJN@?$AAu?$AAr?$AA?9?$AAP?$AAK@
	DD	0421H
	DD	FLAT:??_C@_1M@LHIPCIEK@?$AAi?$AAd?$AA?9?$AAI?$AAD@
	DD	0422H
	DD	FLAT:??_C@_1M@MFMOBGI@?$AAu?$AAk?$AA?9?$AAU?$AAA@
	DD	0423H
	DD	FLAT:??_C@_1M@OBGLJIPL@?$AAb?$AAe?$AA?9?$AAB?$AAY@
	DD	0424H
	DD	FLAT:??_C@_1M@BCFAJEAD@?$AAs?$AAl?$AA?9?$AAS?$AAI@
	DD	0425H
	DD	FLAT:??_C@_1M@FKFFEDDN@?$AAe?$AAt?$AA?9?$AAE?$AAE@
	DD	0426H
	DD	FLAT:??_C@_1M@KGKKAACI@?$AAl?$AAv?$AA?9?$AAL?$AAV@
	DD	0427H
	DD	FLAT:??_C@_1M@IFGBIJO@?$AAl?$AAt?$AA?9?$AAL?$AAT@
	DD	0429H
	DD	FLAT:??_C@_1M@FGEAHEDM@?$AAf?$AAa?$AA?9?$AAI?$AAR@
	DD	042aH
	DD	FLAT:??_C@_1M@KBMAIBFN@?$AAv?$AAi?$AA?9?$AAV?$AAN@
	DD	042bH
	DD	FLAT:??_C@_1M@GPCBKDJK@?$AAh?$AAy?$AA?9?$AAA?$AAM@
	DD	042cH
	DD	FLAT:??_C@_1BG@BECMDDJB@?$AAa?$AAz?$AA?9?$AAA?$AAZ?$AA?9?$AAL?$AAa?$AAt?$AAn@
	DD	042dH
	DD	FLAT:??_C@_1M@MAOFCAEA@?$AAe?$AAu?$AA?9?$AAE?$AAS@
	DD	042fH
	DD	FLAT:??_C@_1M@IGHABKPI@?$AAm?$AAk?$AA?9?$AAM?$AAK@
	DD	0432H
	DD	FLAT:??_C@_1M@IAIGNEJG@?$AAt?$AAn?$AA?9?$AAZ?$AAA@
	DD	0434H
	DD	FLAT:??_C@_1M@IIJCOJFA@?$AAx?$AAh?$AA?9?$AAZ?$AAA@
	DD	0435H
	DD	FLAT:??_C@_1M@LGPJHNJH@?$AAz?$AAu?$AA?9?$AAZ?$AAA@
	DD	0436H
	DD	FLAT:??_C@_1M@HOKAOIO@?$AAa?$AAf?$AA?9?$AAZ?$AAA@
	DD	0437H
	DD	FLAT:??_C@_1M@DPCLHLIE@?$AAk?$AAa?$AA?9?$AAG?$AAE@
	DD	0438H
	DD	FLAT:??_C@_1M@BLKMHJBI@?$AAf?$AAo?$AA?9?$AAF?$AAO@
	DD	0439H
	DD	FLAT:??_C@_1M@LGGJAPPB@?$AAh?$AAi?$AA?9?$AAI?$AAN@
	DD	043aH
	DD	FLAT:??_C@_1M@FIKPIHFE@?$AAm?$AAt?$AA?9?$AAM?$AAT@
	DD	043bH
	DD	FLAT:??_C@_1M@HEGGPBFA@?$AAs?$AAe?$AA?9?$AAN?$AAO@
	DD	043eH
	DD	FLAT:??_C@_1M@EIBJEEPA@?$AAm?$AAs?$AA?9?$AAM?$AAY@
	DD	043fH
	DD	FLAT:??_C@_1M@FHLBGMPP@?$AAk?$AAk?$AA?9?$AAK?$AAZ@
	DD	0440H
	DD	FLAT:??_C@_1M@NGJJLCGI@?$AAk?$AAy?$AA?9?$AAK?$AAG@
	DD	0441H
	DD	FLAT:??_C@_1M@GIENNBFC@?$AAs?$AAw?$AA?9?$AAK?$AAE@
	DD	0443H
	DD	FLAT:??_C@_1BG@NDGMJIMJ@?$AAu?$AAz?$AA?9?$AAU?$AAZ?$AA?9?$AAL?$AAa?$AAt?$AAn@
	DD	0444H
	DD	FLAT:??_C@_1M@IDCCIHBC@?$AAt?$AAt?$AA?9?$AAR?$AAU@
	DD	0445H
	DD	FLAT:??_C@_1M@LOICPMOJ@?$AAb?$AAn?$AA?9?$AAI?$AAN@
	DD	0446H
	DD	FLAT:??_C@_1M@KPKKNEAH@?$AAp?$AAa?$AA?9?$AAI?$AAN@
	DD	0447H
	DD	FLAT:??_C@_1M@PJGPPBOG@?$AAg?$AAu?$AA?9?$AAI?$AAN@
	DD	0449H
	DD	FLAT:??_C@_1M@KMKMOPHI@?$AAt?$AAa?$AA?9?$AAI?$AAN@
	DD	044aH
	DD	FLAT:??_C@_1M@KFEHEPAC@?$AAt?$AAe?$AA?9?$AAI?$AAN@
	DD	044bH
	DD	FLAT:??_C@_1M@CDCLMGHI@?$AAk?$AAn?$AA?9?$AAI?$AAN@
	DD	044cH
	DD	FLAT:??_C@_1M@MIODLDKF@?$AAm?$AAl?$AA?9?$AAI?$AAN@
	DD	044eH
	DD	FLAT:??_C@_1M@PBIEACPO@?$AAm?$AAr?$AA?9?$AAI?$AAN@
	DD	044fH
	DD	FLAT:??_C@_1M@NIDEAGPH@?$AAs?$AAa?$AA?9?$AAI?$AAN@
	DD	0450H
	DD	FLAT:??_C@_1M@FHIHCBIO@?$AAm?$AAn?$AA?9?$AAM?$AAN@
	DD	0452H
	DD	FLAT:??_C@_1M@JAIJPENP@?$AAc?$AAy?$AA?9?$AAG?$AAB@
	DD	0456H
	DD	FLAT:??_C@_1M@PHGFBEPN@?$AAg?$AAl?$AA?9?$AAE?$AAS@
	DD	0457H
	DD	FLAT:??_C@_1O@KPIPDNCP@?$AAk?$AAo?$AAk?$AA?9?$AAI?$AAN@
	DD	045aH
	DD	FLAT:??_C@_1O@KNHJLDJA@?$AAs?$AAy?$AAr?$AA?9?$AAS?$AAY@
	DD	0465H
	DD	FLAT:??_C@_1O@MKEKBLAH@?$AAd?$AAi?$AAv?$AA?9?$AAM?$AAV@
	DD	046bH
	DD	FLAT:??_C@_1O@OHDCKDDF@?$AAq?$AAu?$AAz?$AA?9?$AAB?$AAO@
	DD	046cH
	DD	FLAT:??_C@_1M@LEPJNLFD@?$AAn?$AAs?$AA?9?$AAZ?$AAA@
	DD	0481H
	DD	FLAT:??_C@_1M@OMLEIIJB@?$AAm?$AAi?$AA?9?$AAN?$AAZ@
	DD	0801H
	DD	FLAT:??_C@_1M@PMPEAILG@?$AAa?$AAr?$AA?9?$AAI?$AAQ@
	DD	0804H
	DD	FLAT:??_C@_1M@BIBDDEMK@?$AAz?$AAh?$AA?9?$AAC?$AAN@
	DD	0807H
	DD	FLAT:??_C@_1M@CNKPNOEE@?$AAd?$AAe?$AA?9?$AAC?$AAH@
	DD	0809H
	DD	FLAT:??_C@_1M@LKMGMLKO@?$AAe?$AAn?$AA?9?$AAG?$AAB@
	DD	080aH
	DD	FLAT:??_C@_1M@PGKJFFGL@?$AAe?$AAs?$AA?9?$AAM?$AAX@
	DD	080cH
	DD	FLAT:??_C@_1M@DNNANBDC@?$AAf?$AAr?$AA?9?$AAB?$AAE@
	DD	0810H
	DD	FLAT:??_C@_1M@HLGMDFHM@?$AAi?$AAt?$AA?9?$AAC?$AAH@
	DD	0813H
	DD	FLAT:??_C@_1M@CLLBGJH@?$AAn?$AAl?$AA?9?$AAB?$AAE@
	DD	0814H
	DD	FLAT:??_C@_1M@BODBOGLF@?$AAn?$AAn?$AA?9?$AAN?$AAO@
	DD	0816H
	DD	FLAT:??_C@_1M@HFFAHKAD@?$AAp?$AAt?$AA?9?$AAP?$AAT@
	DD	081aH
	DD	FLAT:??_C@_1BG@LNOAKHIE@?$AAs?$AAr?$AA?9?$AAS?$AAP?$AA?9?$AAL?$AAa?$AAt?$AAn@
	DD	081dH
	DD	FLAT:??_C@_1M@HBMHBGAK@?$AAs?$AAv?$AA?9?$AAF?$AAI@
	DD	082cH
	DD	FLAT:??_C@_1BG@DGCJGJBE@?$AAa?$AAz?$AA?9?$AAA?$AAZ?$AA?9?$AAC?$AAy?$AAr?$AAl@
	DD	083bH
	DD	FLAT:??_C@_1M@KEJDAAHB@?$AAs?$AAe?$AA?9?$AAS?$AAE@
	DD	083eH
	DD	FLAT:??_C@_1M@HEIBJJAD@?$AAm?$AAs?$AA?9?$AAB?$AAN@
	DD	0843H
	DD	FLAT:??_C@_1BG@PBGJMCEM@?$AAu?$AAz?$AA?9?$AAU?$AAZ?$AA?9?$AAC?$AAy?$AAr?$AAl@
	DD	086bH
	DD	FLAT:??_C@_1O@LAOBCMDF@?$AAq?$AAu?$AAz?$AA?9?$AAE?$AAC@
	DD	0c01H
	DD	FLAT:??_C@_1M@POEEMAIO@?$AAa?$AAr?$AA?9?$AAE?$AAG@
	DD	0c04H
	DD	FLAT:??_C@_1M@EFAKDEDL@?$AAz?$AAh?$AA?9?$AAH?$AAK@
	DD	0c07H
	DD	FLAT:??_C@_1M@HKKIJHGI@?$AAd?$AAe?$AA?9?$AAA?$AAT@
	DD	0c09H
	DD	FLAT:??_C@_1M@KBFBEHJF@?$AAe?$AAn?$AA?9?$AAA?$AAU@
	DD	0c0aH
	DD	FLAT:??_C@_1M@MNPLFAAH@?$AAe?$AAs?$AA?9?$AAE?$AAS@
	DD	0c0cH
	DD	FLAT:??_C@_1M@HJOOJFMA@?$AAf?$AAr?$AA?9?$AAC?$AAA@
	DD	0c1aH
	DD	FLAT:??_C@_1BG@JPOFPNAB@?$AAs?$AAr?$AA?9?$AAS?$AAP?$AA?9?$AAC?$AAy?$AAr?$AAl@
	DD	0c3bH
	DD	FLAT:??_C@_1M@LNFOCMOB@?$AAs?$AAe?$AA?9?$AAF?$AAI@
	DD	0c6bH
	DD	FLAT:??_C@_1O@MGJBOAMB@?$AAq?$AAu?$AAz?$AA?9?$AAP?$AAE@
	DD	01001H
	DD	FLAT:??_C@_1M@GJINLBOK@?$AAa?$AAr?$AA?9?$AAL?$AAY@
	DD	01004H
	DD	FLAT:??_C@_1M@GGMNHJNL@?$AAz?$AAh?$AA?9?$AAS?$AAG@
	DD	01007H
	DD	FLAT:??_C@_1M@HOIKODND@?$AAd?$AAe?$AA?9?$AAL?$AAU@
	DD	01009H
	DD	FLAT:??_C@_1M@DDOCCGFG@?$AAe?$AAn?$AA?9?$AAC?$AAA@
	DD	0100aH
	DD	FLAT:??_C@_1M@BNOEMJLF@?$AAe?$AAs?$AA?9?$AAG?$AAT@
	DD	0100cH
	DD	FLAT:??_C@_1M@EOGNKEK@?$AAf?$AAr?$AA?9?$AAC?$AAH@
	DD	0101aH
	DD	FLAT:??_C@_1M@FLIDJFHL@?$AAh?$AAr?$AA?9?$AAB?$AAA@
	DD	0103bH
	DD	FLAT:??_C@_1O@FMCELNAJ@?$AAs?$AAm?$AAj?$AA?9?$AAN?$AAO@
	DD	01401H
	DD	FLAT:??_C@_1M@JHGLJMGJ@?$AAa?$AAr?$AA?9?$AAD?$AAZ@
	DD	01404H
	DD	FLAT:??_C@_1M@JKKFDCNP@?$AAz?$AAh?$AA?9?$AAM?$AAO@
	DD	01407H
	DD	FLAT:??_C@_1M@GEEFALPE@?$AAd?$AAe?$AA?9?$AAL?$AAI@
	DD	01409H
	DD	FLAT:??_C@_1M@IGEOFBG@?$AAe?$AAn?$AA?9?$AAN?$AAZ@
	DD	0140aH
	DD	FLAT:??_C@_1M@KDBONEHP@?$AAe?$AAs?$AA?9?$AAC?$AAR@
	DD	0140cH
	DD	FLAT:??_C@_1M@FHMDOHNN@?$AAf?$AAr?$AA?9?$AAL?$AAU@
	DD	0141aH
	DD	FLAT:??_C@_1BG@NFKKMAFG@?$AAb?$AAs?$AA?9?$AAB?$AAA?$AA?9?$AAL?$AAa?$AAt?$AAn@
	DD	0143bH
	DD	FLAT:??_C@_1O@IMNBEMCI@?$AAs?$AAm?$AAj?$AA?9?$AAS?$AAE@
	DD	01801H
	DD	FLAT:??_C@_1M@DHHMBNDP@?$AAa?$AAr?$AA?9?$AAM?$AAA@
	DD	01809H
	DD	FLAT:??_C@_1M@BNBLJCGH@?$AAe?$AAn?$AA?9?$AAI?$AAE@
	DD	0180aH
	DD	FLAT:??_C@_1M@GEPAFMDL@?$AAe?$AAs?$AA?9?$AAP?$AAA@
	DD	0180cH
	DD	FLAT:??_C@_1M@OJONDMDL@?$AAf?$AAr?$AA?9?$AAM?$AAC@
	DD	0181aH
	DD	FLAT:??_C@_1BG@OBCNFJB@?$AAs?$AAr?$AA?9?$AAB?$AAA?$AA?9?$AAL?$AAa?$AAt?$AAn@
	DD	0183bH
	DD	FLAT:??_C@_1O@KEMEEGPO@?$AAs?$AAm?$AAa?$AA?9?$AAN?$AAO@
	DD	01c01H
	DD	FLAT:??_C@_1M@ELMGFODK@?$AAa?$AAr?$AA?9?$AAT?$AAN@
	DD	01c09H
	DD	FLAT:??_C@_1M@BHDLHFAF@?$AAe?$AAn?$AA?9?$AAZ?$AAA@
	DD	01c0aH
	DD	FLAT:??_C@_1M@BMGIGLIF@?$AAe?$AAs?$AA?9?$AAD?$AAO@
	DD	01c1aH
	DD	FLAT:??_C@_1BG@CMBHIPBE@?$AAs?$AAr?$AA?9?$AAB?$AAA?$AA?9?$AAC?$AAy?$AAr?$AAl@
	DD	01c3bH
	DD	FLAT:??_C@_1O@HEDBLHNP@?$AAs?$AAm?$AAa?$AA?9?$AAS?$AAE@
	DD	02001H
	DD	FLAT:??_C@_1M@DAGCADIM@?$AAa?$AAr?$AA?9?$AAO?$AAM@
	DD	02009H
	DD	FLAT:??_C@_1M@FODLMICG@?$AAe?$AAn?$AA?9?$AAJ?$AAM@
	DD	0200aH
	DD	FLAT:??_C@_1M@DNMLCIHB@?$AAe?$AAs?$AA?9?$AAV?$AAE@
	DD	0203bH
	DD	FLAT:??_C@_1O@EOKHMKJK@?$AAs?$AAm?$AAs?$AA?9?$AAF?$AAI@
	DD	02401H
	DD	FLAT:??_C@_1M@CAFJMKOF@?$AAa?$AAr?$AA?9?$AAY?$AAE@
	DD	02409H
	DD	FLAT:??_C@_1M@CBFHIJLI@?$AAe?$AAn?$AA?9?$AAC?$AAB@
	DD	0240aH
	DD	FLAT:??_C@_1M@BGNFLDN@?$AAe?$AAs?$AA?9?$AAC?$AAO@
	DD	0243bH
	DD	FLAT:??_C@_1O@JMPHMAMC@?$AAs?$AAm?$AAn?$AA?9?$AAF?$AAI@
	DD	02801H
	DD	FLAT:??_C@_1M@JLANABKE@?$AAa?$AAr?$AA?9?$AAS?$AAY@
	DD	02809H
	DD	FLAT:??_C@_1M@HPKGCFGN@?$AAe?$AAn?$AA?9?$AAB?$AAZ@
	DD	0280aH
	DD	FLAT:??_C@_1M@OLJCMLGM@?$AAe?$AAs?$AA?9?$AAP?$AAE@
	DD	02c01H
	DD	FLAT:??_C@_1M@MKKGFKLE@?$AAa?$AAr?$AA?9?$AAJ?$AAO@
	DD	02c09H
	DD	FLAT:??_C@_1M@EKPGLDNI@?$AAe?$AAn?$AA?9?$AAT?$AAT@
	DD	02c0aH
	DD	FLAT:??_C@_1M@OONGHFHE@?$AAe?$AAs?$AA?9?$AAA?$AAR@
	DD	03001H
	DD	FLAT:??_C@_1M@OOJFGBHE@?$AAa?$AAr?$AA?9?$AAL?$AAB@
	DD	03009H
	DD	FLAT:??_C@_1M@GCEJHNEG@?$AAe?$AAn?$AA?9?$AAZ?$AAW@
	DD	0300aH
	DD	FLAT:??_C@_1M@JNOCAHJI@?$AAe?$AAs?$AA?9?$AAE?$AAC@
	DD	03401H
	DD	FLAT:??_C@_1M@JEFHPGGB@?$AAa?$AAr?$AA?9?$AAK?$AAW@
	DD	03409H
	DD	FLAT:??_C@_1M@MLKIBJOJ@?$AAe?$AAn?$AA?9?$AAP?$AAH@
	DD	0340aH
	DD	FLAT:??_C@_1M@BDNIPEND@?$AAe?$AAs?$AA?9?$AAC?$AAL@
	DD	03801H
	DD	FLAT:??_C@_1M@MPNMEKBD@?$AAa?$AAr?$AA?9?$AAA?$AAE@
	DD	0380aH
	DD	FLAT:??_C@_1M@KBJALCPI@?$AAe?$AAs?$AA?9?$AAU?$AAY@
	DD	03c01H
	DD	FLAT:??_C@_1M@LLCCOAGA@?$AAa?$AAr?$AA?9?$AAB?$AAH@
	DD	03c0aH
	DD	FLAT:??_C@_1M@PBFNCDEL@?$AAe?$AAs?$AA?9?$AAP?$AAY@
	DD	04001H
	DD	FLAT:??_C@_1M@EDGINPNP@?$AAa?$AAr?$AA?9?$AAQ?$AAA@
	DD	0400aH
	DD	FLAT:??_C@_1M@MKDBIIJI@?$AAe?$AAs?$AA?9?$AAB?$AAO@
	DD	0440aH
	DD	FLAT:??_C@_1M@CPKKEBLD@?$AAe?$AAs?$AA?9?$AAS?$AAV@
	DD	0480aH
	DD	FLAT:??_C@_1M@NDBGMMJL@?$AAe?$AAs?$AA?9?$AAH?$AAN@
	DD	04c0aH
	DD	FLAT:??_C@_1M@JIJIBHDP@?$AAe?$AAs?$AA?9?$AAN?$AAI@
	DD	0500aH
	DD	FLAT:??_C@_1M@CGFMKEEK@?$AAe?$AAs?$AA?9?$AAP?$AAR@
	DD	07c04H
	DD	FLAT:??_C@_1O@ICJHKIIK@?$AAz?$AAh?$AA?9?$AAC?$AAH?$AAT@
	DD	07c1aH
	DD	FLAT:??_C@_15CLNEJCE@?$AAs?$AAr@
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
_IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT ??_C@_1DE@KEEBDKDC@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM@
CONST	SEGMENT
??_C@_1DE@KEEBDKDC@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM@ DB 'p'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, '-', 00H, '>', 00H
	DB	'p', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 'M', 00H, 'g', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, 't', 00H, 'h', 00H, 'i', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@IEBIBJEI@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BG@IEBIBJEI@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindowLic
CONST	SEGMENT
_IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT ??_C@_1OA@NFJNFLGL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OA@NFJNFLGL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 's', 00H, 't', 00H, 'r', 00H, '.', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CAtlStringMgr@ATL@@6B@
CONST	SEGMENT
??_7CAtlStringMgr@ATL@@6B@ DD FLAT:??_R4CAtlStringMgr@ATL@@6B@ ; ATL::CAtlStringMgr::`vftable'
	DD	FLAT:?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z
	DD	FLAT:?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z
	DD	FLAT:?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z
	DD	FLAT:?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ
	DD	FLAT:?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ
	DD	FLAT:??_ECAtlStringMgr@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT ??_C@_0ED@GFNHMOFC@ERROR?5?3?5Unable?5to?5initialize?5cr@
CONST	SEGMENT
??_C@_0ED@GFNHMOFC@ERROR?5?3?5Unable?5to?5initialize?5cr@ DB 'ERROR : Una'
	DB	'ble to initialize critical section in AtlWinModuleInit', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H
	DB	's', 00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'u', 00H, ' '
	DB	00H, '-', 00H, ' ', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'l', 00H
	DB	's', 00H, ' ', 00H, '-', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?m_nCategory@CTrace@ATL@@1IA
_DATA	SEGMENT
?m_nCategory@CTrace@ATL@@1IA DD 0ffffffffH		; ATL::CTrace::m_nCategory
_DATA	ENDS
;	COMDAT ??_C@_0O@KHOBHOBJ@atlTraceISAPI@
CONST	SEGMENT
??_C@_0O@KHOBHOBJ@atlTraceISAPI@ DB 'atlTraceISAPI', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KLPNCFEE@atlTraceSync@
CONST	SEGMENT
??_C@_0N@KLPNCFEE@atlTraceSync@ DB 'atlTraceSync', 00H	; `string'
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	_swprintf_s
PUBLIC	?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z		; ATL::CTrace::TraceV
PUBLIC	?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z		; ATL::CTrace::TraceV
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPBDI@Z		; ATL::CTrace::RegisterCategory
PUBLIC	?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>
PUBLIC	??1CPreserveLastError@ATL@@QAE@XZ		; ATL::CPreserveLastError::~CPreserveLastError
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	?_AtlRaiseException@ATL@@YAXKK@Z		; ATL::_AtlRaiseException
PUBLIC	?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
PUBLIC	?Init@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Init
PUBLIC	??0CWin32Heap@ATL@@QAE@PAX@Z			; ATL::CWin32Heap::CWin32Heap
PUBLIC	??1CWin32Heap@ATL@@UAE@XZ			; ATL::CWin32Heap::~CWin32Heap
PUBLIC	?AddRef@CStringData@ATL@@QAEXXZ			; ATL::CStringData::AddRef
PUBLIC	??0CNilStringData@ATL@@QAE@XZ			; ATL::CNilStringData::CNilStringData
PUBLIC	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
PUBLIC	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
PUBLIC	?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
PUBLIC	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
PUBLIC	??0CAtlComModule@ATL@@QAE@XZ			; ATL::CAtlComModule::CAtlComModule
PUBLIC	?Term@CAtlComModule@ATL@@QAEXXZ			; ATL::CAtlComModule::Term
PUBLIC	??0CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::CAtlWinModule
PUBLIC	??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z	; ATL::CAtlStringMgr::CAtlStringMgr
PUBLIC	??1CAtlStringMgr@ATL@@UAE@XZ			; ATL::CAtlStringMgr::~CAtlStringMgr
PUBLIC	?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ ; ATL::CAtlStringMgr::GetInstance
PUBLIC	??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap''
PUBLIC	??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr''
PUBLIC	?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
PUBLIC	?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
PUBLIC	?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
PUBLIC	?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
PUBLIC	?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
PUBLIC	?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
PUBLIC	?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
PUBLIC	?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
PUBLIC	?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
PUBLIC	?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
PUBLIC	?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
PUBLIC	?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
PUBLIC	?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
PUBLIC	?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
PUBLIC	?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
PUBLIC	?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
PUBLIC	?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
PUBLIC	?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
PUBLIC	?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
PUBLIC	?_AtlComModule@ATL@@3VCAtlComModule@1@A		; ATL::_AtlComModule
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
PUBLIC	?InitializeCAtlStringMgr@ATLImplementationDetails@ATL@@3UCAtlStringMgrStaticInitializer@12@A ; ATL::ATLImplementationDetails::InitializeCAtlStringMgr
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	___std_terminate:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__DecodePointer@4:PROC
EXTRN	__imp__RaiseException@16:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__SetLastError@4:PROC
EXTRN	__imp__HeapDestroy@4:PROC
EXTRN	__imp__HeapAlloc@12:PROC
EXTRN	__imp__HeapReAlloc@16:PROC
EXTRN	__imp__HeapFree@12:PROC
EXTRN	__imp__HeapSize@12:PROC
EXTRN	__imp__GetProcessHeap@0:PROC
EXTRN	__imp__InitializeCriticalSectionAndSpinCount@8:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__UnregisterClassA@8:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	__imp____stdio_common_vswprintf_s:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp____stdio_common_vsnprintf_s:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A
_BSS	SEGMENT
?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceGeneral
_BSS	ENDS
;	COMDAT ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A
_BSS	SEGMENT
?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCOM
_BSS	ENDS
;	COMDAT ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A
_BSS	SEGMENT
?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceQI
_BSS	ENDS
;	COMDAT ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A
_BSS	SEGMENT
?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRegistrar
_BSS	ENDS
;	COMDAT ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A
_BSS	SEGMENT
?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRefcount
_BSS	ENDS
;	COMDAT ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A
_BSS	SEGMENT
?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceWindowing
_BSS	ENDS
;	COMDAT ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A
_BSS	SEGMENT
?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceControls
_BSS	ENDS
;	COMDAT ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A
_BSS	SEGMENT
?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceHosting
_BSS	ENDS
;	COMDAT ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBClient
_BSS	ENDS
;	COMDAT ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBProvider
_BSS	ENDS
;	COMDAT ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSnapin
_BSS	ENDS
;	COMDAT ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceNotImpl
_BSS	ENDS
;	COMDAT ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceAllocation
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceTime
_BSS	ENDS
;	COMDAT ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCache
_BSS	ENDS
;	COMDAT ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceStencil
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceMap
_BSS	ENDS
;	COMDAT ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceUtil
_BSS	ENDS
;	COMDAT ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSecurity
_BSS	ENDS
;	COMDAT ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSync
_BSS	ENDS
;	COMDAT ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceISAPI
_BSS	ENDS
;	COMDAT ?_AtlComModule@ATL@@3VCAtlComModule@1@A
_BSS	SEGMENT
?_AtlComModule@ATL@@3VCAtlComModule@1@A DB 028H DUP (?)	; ATL::_AtlComModule
_BSS	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DB 02cH DUP (?)	; ATL::_AtlWinModule
_BSS	ENDS
;	COMDAT ?InitializeCAtlStringMgr@ATLImplementationDetails@ATL@@3UCAtlStringMgrStaticInitializer@12@A
_BSS	SEGMENT
?InitializeCAtlStringMgr@ATLImplementationDetails@ATL@@3UCAtlStringMgrStaticInitializer@12@A DB 01H DUP (?) ; ATL::ATLImplementationDetails::InitializeCAtlStringMgr
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceGeneral$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceGeneral@ATL@@YAXXZ ; ATL::atlTraceGeneral$initializer$
CRT$XCU	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??__F_AtlWinModule@ATL@@YAXXZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??__F_AtlWinModule@ATL@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??__F_AtlWinModule@ATL@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CAtlWinModule@ATL@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CAtlWinModule@ATL@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CAtlWinModule@ATL@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??__F_AtlComModule@ATL@@YAXXZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??__F_AtlComModule@ATL@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??__F_AtlComModule@ATL@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAtlComModule@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_ATL_WIN_MODULE70@ATL@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1_ATL_WIN_MODULE70@ATL@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ$0
__ehfuncinfo$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$1
__ehfuncinfo$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCOM$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceCOM@ATL@@YAXXZ ; ATL::atlTraceCOM$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceQI$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceQI@ATL@@YAXXZ ; ATL::atlTraceQI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRegistrar$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceRegistrar@ATL@@YAXXZ ; ATL::atlTraceRegistrar$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRefcount$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceRefcount@ATL@@YAXXZ ; ATL::atlTraceRefcount$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceWindowing$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceWindowing@ATL@@YAXXZ ; ATL::atlTraceWindowing$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceControls$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceControls@ATL@@YAXXZ ; ATL::atlTraceControls$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceHosting$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceHosting@ATL@@YAXXZ ; ATL::atlTraceHosting$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBClient$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceDBClient@ATL@@YAXXZ ; ATL::atlTraceDBClient$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBProvider$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceDBProvider@ATL@@YAXXZ ; ATL::atlTraceDBProvider$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSnapin$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSnapin@ATL@@YAXXZ ; ATL::atlTraceSnapin$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceNotImpl$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceNotImpl@ATL@@YAXXZ ; ATL::atlTraceNotImpl$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceAllocation$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceAllocation@ATL@@YAXXZ ; ATL::atlTraceAllocation$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceTime$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceTime@ATL@@YAXXZ ; ATL::atlTraceTime$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCache$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceCache@ATL@@YAXXZ ; ATL::atlTraceCache$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceStencil$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceStencil@ATL@@YAXXZ ; ATL::atlTraceStencil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceMap$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceMap@ATL@@YAXXZ ; ATL::atlTraceMap$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceUtil$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceUtil@ATL@@YAXXZ ; ATL::atlTraceUtil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSecurity$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSecurity@ATL@@YAXXZ ; ATL::atlTraceSecurity$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSync$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSync@ATL@@YAXXZ ; ATL::atlTraceSync$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceISAPI$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceISAPI@ATL@@YAXXZ ; ATL::atlTraceISAPI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlComModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlComModule@ATL@@YAXXZ ; ATL::_AtlComModule$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlWinModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlWinModule@ATL@@YAXXZ ; ATL::_AtlWinModule$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?InitializeCAtlStringMgr$initializer$@ATLImplementationDetails@ATL@@3P6AXXZA DD FLAT:??__EInitializeCAtlStringMgr@ATLImplementationDetails@ATL@@YAXXZ ; ATL::ATLImplementationDetails::InitializeCAtlStringMgr$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
;	COMDAT ??__EInitializeCAtlStringMgr@ATLImplementationDetails@ATL@@YAXXZ
text$di	SEGMENT
??__EInitializeCAtlStringMgr@ATLImplementationDetails@ATL@@YAXXZ PROC ; ATL::ATLImplementationDetails::`dynamic initializer for 'InitializeCAtlStringMgr'', COMDAT

; 160  : __declspec(selectany) CAtlStringMgrStaticInitializer InitializeCAtlStringMgr;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 157  : 	CAtlStringMgrStaticInitializer() { (void)CAtlStringMgr::GetInstance(); }

  00003	e8 00 00 00 00	 call	 ?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ ; ATL::CAtlStringMgr::GetInstance

; 160  : __declspec(selectany) CAtlStringMgrStaticInitializer InitializeCAtlStringMgr;

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
??__EInitializeCAtlStringMgr@ATLImplementationDetails@ATL@@YAXXZ ENDP ; ATL::ATLImplementationDetails::`dynamic initializer for 'InitializeCAtlStringMgr''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
;	COMDAT ??0CAtlStringMgrStaticInitializer@ATLImplementationDetails@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CAtlStringMgrStaticInitializer@ATLImplementationDetails@ATL@@QAE@XZ PROC ; ATL::ATLImplementationDetails::CAtlStringMgrStaticInitializer::CAtlStringMgrStaticInitializer, COMDAT
; _this$ = ecx

; 157  : 	CAtlStringMgrStaticInitializer() { (void)CAtlStringMgr::GetInstance(); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	e8 00 00 00 00	 call	 ?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ ; ATL::CAtlStringMgr::GetInstance
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??0CAtlStringMgrStaticInitializer@ATLImplementationDetails@ATL@@QAE@XZ ENDP ; ATL::ATLImplementationDetails::CAtlStringMgrStaticInitializer::CAtlStringMgrStaticInitializer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlmem.h
;	COMDAT ??$AtlAlignUp@H@ATL@@YGHHK@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
_nAlign$ = 12						; size = 4
??$AtlAlignUp@H@ATL@@YGHHK@Z PROC			; ATL::AtlAlignUp<int>, COMDAT

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 29   : 	return( N( (n+(nAlign-1))&~(N( nAlign )-1) ) );

  00003	8b 45 0c	 mov	 eax, DWORD PTR _nAlign$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _n$[ebp]
  00009	8d 44 01 ff	 lea	 eax, DWORD PTR [ecx+eax-1]
  0000d	8b 55 0c	 mov	 edx, DWORD PTR _nAlign$[ebp]
  00010	83 ea 01	 sub	 edx, 1
  00013	f7 d2		 not	 edx
  00015	23 c2		 and	 eax, edx

; 30   : }

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
??$AtlAlignUp@H@ATL@@YGHHK@Z ENDP			; ATL::AtlAlignUp<int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ
text$yd	SEGMENT
??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ PROC ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ENDP ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ
text$yd	SEGMENT
??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ PROC ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
  00008	e8 00 00 00 00	 call	 ??1CWin32Heap@ATL@@UAE@XZ ; ATL::CWin32Heap::~CWin32Heap
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ENDP ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GCAtlStringMgr@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCAtlStringMgr@ATL@@UAEPAXI@Z PROC			; ATL::CAtlStringMgr::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000a	83 e0 01	 and	 eax, 1
  0000d	74 0e		 je	 SHORT $LN2@scalar
  0000f	6a 1c		 push	 28			; 0000001cH
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCAtlStringMgr@ATL@@UAEPAXI@Z ENDP			; ATL::CAtlStringMgr::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
;	COMDAT ?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ PROC	; ATL::CAtlStringMgr::Clone, COMDAT
; _this$ = ecx

; 144  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 145  : 		return this;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 146  : 	}

  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ ENDP	; ATL::CAtlStringMgr::Clone
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
;	COMDAT ?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ PROC ; ATL::CAtlStringMgr::GetNilString, COMDAT
; _this$ = ecx

; 139  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 140  : 		m_nil.AddRef();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 08	 add	 ecx, 8
  0000d	e8 00 00 00 00	 call	 ?AddRef@CStringData@ATL@@QAEXXZ ; ATL::CStringData::AddRef

; 141  : 		return &m_nil;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	83 c0 08	 add	 eax, 8

; 142  : 	}

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ ENDP ; ATL::CAtlStringMgr::GetNilString
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlmem.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
;	COMDAT ?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z
_TEXT	SEGMENT
_i64Result$1 = -72					; size = 8
_nTotalSize$ = -64					; size = 4
$T2 = -60						; size = 4
_nDataBytes$ = -56					; size = 4
tv196 = -52						; size = 4
$T3 = -48						; size = 4
tv190 = -44						; size = 4
___atl_condVal$4 = -40					; size = 4
tv134 = -36						; size = 4
$T5 = -32						; size = 4
_tLeft$ = -28						; size = 4
tv179 = -24						; size = 4
___atl_condVal$6 = -20					; size = 4
tv65 = -16						; size = 4
_pNewData$ = -12					; size = 4
_nAlignedChars$ = -8					; size = 4
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_nChars$ = 12						; size = 4
_nCharSize$ = 16					; size = 4
?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z PROC ; ATL::CAtlStringMgr::Reallocate, COMDAT
; _this$ = ecx

; 108  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@Reallocate:

; 109  : 		ATLENSURE_RETURN_VAL( nChars>=0, NULL );

  00009	83 7d 0c 00	 cmp	 DWORD PTR _nChars$[ebp], 0
  0000d	7c 09		 jl	 SHORT $LN15@Reallocate
  0000f	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  00016	eb 07		 jmp	 SHORT $LN16@Reallocate
$LN15@Reallocate:
  00018	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN16@Reallocate:
  0001f	8b 45 f0	 mov	 eax, DWORD PTR tv65[ebp]
  00022	89 45 ec	 mov	 DWORD PTR ___atl_condVal$6[ebp], eax
  00025	83 7d ec 00	 cmp	 DWORD PTR ___atl_condVal$6[ebp], 0
  00029	75 24		 jne	 SHORT $LN17@Reallocate
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00035	6a 00		 push	 0
  00037	6a 6d		 push	 109			; 0000006dH
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NFJNFLGL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0003e	6a 02		 push	 2
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00046	83 c4 18	 add	 esp, 24			; 00000018H
  00049	83 f8 01	 cmp	 eax, 1
  0004c	75 01		 jne	 SHORT $LN17@Reallocate
  0004e	cc		 int	 3
$LN17@Reallocate:
  0004f	83 7d ec 00	 cmp	 DWORD PTR ___atl_condVal$6[ebp], 0
  00053	75 07		 jne	 SHORT $LN2@Reallocate
  00055	33 c0		 xor	 eax, eax
  00057	e9 f2 01 00 00	 jmp	 $LN1@Reallocate
$LN2@Reallocate:
  0005c	33 d2		 xor	 edx, edx
  0005e	75 a9		 jne	 SHORT $LN4@Reallocate

; 110  : 		ATLASSERT( pData->pStringMgr == this );

  00060	8b 45 08	 mov	 eax, DWORD PTR _pData$[ebp]
  00063	8b 08		 mov	 ecx, DWORD PTR [eax]
  00065	3b 4d fc	 cmp	 ecx, DWORD PTR _this$[ebp]
  00068	74 24		 je	 SHORT $LN18@Reallocate
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_1DE@KEEBDKDC@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM@
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00074	6a 00		 push	 0
  00076	6a 6e		 push	 110			; 0000006eH
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NFJNFLGL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0007d	6a 02		 push	 2
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00085	83 c4 18	 add	 esp, 24			; 00000018H
  00088	83 f8 01	 cmp	 eax, 1
  0008b	75 01		 jne	 SHORT $LN18@Reallocate
  0008d	cc		 int	 3
$LN18@Reallocate:

; 116  : 		if( FAILED(::ATL::AtlAdd(&nChars, nChars, 1)) )

  0008e	8b 45 0c	 mov	 eax, DWORD PTR _nChars$[ebp]
  00091	89 45 e4	 mov	 DWORD PTR _tLeft$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00094	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00099	2b 4d e4	 sub	 ecx, DWORD PTR _tLeft$[ebp]
  0009c	83 f9 01	 cmp	 ecx, 1
  0009f	7d 31		 jge	 SHORT $LN23@Reallocate
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  000a1	ba 16 02 00 00	 mov	 edx, 534		; 00000216H
  000a6	85 d2		 test	 edx, edx
  000a8	7f 09		 jg	 SHORT $LN27@Reallocate
  000aa	c7 45 e8 16 02
	00 00		 mov	 DWORD PTR tv179[ebp], 534 ; 00000216H
  000b1	eb 17		 jmp	 SHORT $LN25@Reallocate
$LN27@Reallocate:
  000b3	b8 16 02 00 00	 mov	 eax, 534		; 00000216H
  000b8	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000bd	0d 00 00 07 00	 or	 eax, 458752		; 00070000H
  000c2	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  000c7	89 45 e8	 mov	 DWORD PTR tv179[ebp], eax
$LN25@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 87   : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  000ca	8b 4d e8	 mov	 ecx, DWORD PTR tv179[ebp]
  000cd	89 4d e0	 mov	 DWORD PTR $T5[ebp], ecx
  000d0	eb 10		 jmp	 SHORT $LN22@Reallocate
$LN23@Reallocate:

; 88   : 	}
; 89   : 	*ptResult= tLeft + tRight;

  000d2	8b 55 e4	 mov	 edx, DWORD PTR _tLeft$[ebp]
  000d5	83 c2 01	 add	 edx, 1
  000d8	89 55 0c	 mov	 DWORD PTR _nChars$[ebp], edx

; 90   : 	return S_OK;

  000db	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T5[ebp], 0
$LN22@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h

; 116  : 		if( FAILED(::ATL::AtlAdd(&nChars, nChars, 1)) )

  000e2	83 7d e0 00	 cmp	 DWORD PTR $T5[ebp], 0
  000e6	7d 07		 jge	 SHORT $LN29@Reallocate

; 117  : 		{
; 118  : 			return NULL;

  000e8	33 c0		 xor	 eax, eax
  000ea	e9 5f 01 00 00	 jmp	 $LN1@Reallocate
$LN29@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlmem.h

; 29   : 	return( N( (n+(nAlign-1))&~(N( nAlign )-1) ) );

  000ef	b8 08 00 00 00	 mov	 eax, 8
  000f4	83 e8 01	 sub	 eax, 1
  000f7	f7 d0		 not	 eax
  000f9	b9 08 00 00 00	 mov	 ecx, 8
  000fe	83 e9 01	 sub	 ecx, 1
  00101	03 4d 0c	 add	 ecx, DWORD PTR _nChars$[ebp]
  00104	23 c8		 and	 ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h

; 121  : 		int nAlignedChars = ::ATL::AtlAlignUp( nChars, 8 );  // Prevent excessive reallocation.  The heap will usually round up anyway.

  00106	89 4d f8	 mov	 DWORD PTR _nAlignedChars$[ebp], ecx
$LN7@Reallocate:

; 122  : 		ATLENSURE_RETURN_VAL( nChars<=nAlignedChars, NULL );

  00109	8b 55 0c	 mov	 edx, DWORD PTR _nChars$[ebp]
  0010c	3b 55 f8	 cmp	 edx, DWORD PTR _nAlignedChars$[ebp]
  0010f	7f 09		 jg	 SHORT $LN19@Reallocate
  00111	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR tv134[ebp], 1
  00118	eb 07		 jmp	 SHORT $LN20@Reallocate
$LN19@Reallocate:
  0011a	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN20@Reallocate:
  00121	8b 45 dc	 mov	 eax, DWORD PTR tv134[ebp]
  00124	89 45 d8	 mov	 DWORD PTR ___atl_condVal$4[ebp], eax
  00127	83 7d d8 00	 cmp	 DWORD PTR ___atl_condVal$4[ebp], 0
  0012b	75 24		 jne	 SHORT $LN21@Reallocate
  0012d	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00137	6a 00		 push	 0
  00139	6a 7a		 push	 122			; 0000007aH
  0013b	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NFJNFLGL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00140	6a 02		 push	 2
  00142	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00148	83 c4 18	 add	 esp, 24			; 00000018H
  0014b	83 f8 01	 cmp	 eax, 1
  0014e	75 01		 jne	 SHORT $LN21@Reallocate
  00150	cc		 int	 3
$LN21@Reallocate:
  00151	83 7d d8 00	 cmp	 DWORD PTR ___atl_condVal$4[ebp], 0
  00155	75 07		 jne	 SHORT $LN5@Reallocate
  00157	33 c0		 xor	 eax, eax
  00159	e9 f0 00 00 00	 jmp	 $LN1@Reallocate
$LN5@Reallocate:
  0015e	33 d2		 xor	 edx, edx
  00160	75 a7		 jne	 SHORT $LN7@Reallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 166  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00162	8b 45 f8	 mov	 eax, DWORD PTR _nAlignedChars$[ebp]
  00165	f7 65 10	 mul	 DWORD PTR _nCharSize$[ebp]
  00168	89 45 b8	 mov	 DWORD PTR _i64Result$1[ebp], eax
  0016b	89 55 bc	 mov	 DWORD PTR _i64Result$1[ebp+4], edx

; 167  : 	if(i64Result>ULONG_MAX)

  0016e	83 7d bc 00	 cmp	 DWORD PTR _i64Result$1[ebp+4], 0
  00172	77 06		 ja	 SHORT $LN45@Reallocate
  00174	83 7d b8 ff	 cmp	 DWORD PTR _i64Result$1[ebp], -1
  00178	76 34		 jbe	 SHORT $LN32@Reallocate
$LN45@Reallocate:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0017a	b8 16 02 00 00	 mov	 eax, 534		; 00000216H
  0017f	85 c0		 test	 eax, eax
  00181	7f 09		 jg	 SHORT $LN36@Reallocate
  00183	c7 45 d4 16 02
	00 00		 mov	 DWORD PTR tv190[ebp], 534 ; 00000216H
  0018a	eb 1a		 jmp	 SHORT $LN34@Reallocate
$LN36@Reallocate:
  0018c	b9 16 02 00 00	 mov	 ecx, 534		; 00000216H
  00191	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00197	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  0019d	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  001a3	89 4d d4	 mov	 DWORD PTR tv190[ebp], ecx
$LN34@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 169  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  001a6	8b 55 d4	 mov	 edx, DWORD PTR tv190[ebp]
  001a9	89 55 d0	 mov	 DWORD PTR $T3[ebp], edx
  001ac	eb 0d		 jmp	 SHORT $LN31@Reallocate
$LN32@Reallocate:

; 170  : 	}
; 171  : 	*piResult=static_cast<unsigned long>(i64Result);

  001ae	8b 45 b8	 mov	 eax, DWORD PTR _i64Result$1[ebp]
  001b1	89 45 c8	 mov	 DWORD PTR _nDataBytes$[ebp], eax

; 172  : 	return S_OK;

  001b4	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp], 0
$LN31@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h

; 124  : 		if(	FAILED(::ATL::AtlMultiply(&nDataBytes, static_cast<ULONG>(nAlignedChars), static_cast<ULONG>(nCharSize))) ||

  001bb	83 7d d0 00	 cmp	 DWORD PTR $T3[ebp], 0
  001bf	7c 52		 jl	 SHORT $LN12@Reallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  001c1	83 c9 ff	 or	 ecx, -1
  001c4	83 e9 10	 sub	 ecx, 16			; 00000010H
  001c7	3b 4d c8	 cmp	 ecx, DWORD PTR _nDataBytes$[ebp]
  001ca	73 31		 jae	 SHORT $LN39@Reallocate
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  001cc	ba 16 02 00 00	 mov	 edx, 534		; 00000216H
  001d1	85 d2		 test	 edx, edx
  001d3	7f 09		 jg	 SHORT $LN43@Reallocate
  001d5	c7 45 cc 16 02
	00 00		 mov	 DWORD PTR tv196[ebp], 534 ; 00000216H
  001dc	eb 17		 jmp	 SHORT $LN41@Reallocate
$LN43@Reallocate:
  001de	b8 16 02 00 00	 mov	 eax, 534		; 00000216H
  001e3	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  001e8	0d 00 00 07 00	 or	 eax, 458752		; 00070000H
  001ed	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  001f2	89 45 cc	 mov	 DWORD PTR tv196[ebp], eax
$LN41@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 87   : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  001f5	8b 4d cc	 mov	 ecx, DWORD PTR tv196[ebp]
  001f8	89 4d c4	 mov	 DWORD PTR $T2[ebp], ecx
  001fb	eb 10		 jmp	 SHORT $LN38@Reallocate
$LN39@Reallocate:

; 88   : 	}
; 89   : 	*ptResult= tLeft + tRight;

  001fd	8b 55 c8	 mov	 edx, DWORD PTR _nDataBytes$[ebp]
  00200	83 c2 10	 add	 edx, 16			; 00000010H
  00203	89 55 c0	 mov	 DWORD PTR _nTotalSize$[ebp], edx

; 90   : 	return S_OK;

  00206	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
$LN38@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h

; 124  : 		if(	FAILED(::ATL::AtlMultiply(&nDataBytes, static_cast<ULONG>(nAlignedChars), static_cast<ULONG>(nCharSize))) ||

  0020d	83 7d c4 00	 cmp	 DWORD PTR $T2[ebp], 0
  00211	7d 04		 jge	 SHORT $LN11@Reallocate
$LN12@Reallocate:

; 125  : 			FAILED(::ATL::AtlAdd(&nTotalSize, static_cast<ULONG>(sizeof( CStringData )), nDataBytes)))
; 126  : 		{
; 127  : 			return NULL;

  00213	33 c0		 xor	 eax, eax
  00215	eb 37		 jmp	 SHORT $LN1@Reallocate
$LN11@Reallocate:

; 128  : 		}
; 129  : 		pNewData = static_cast< CStringData* >( m_pMemMgr->Reallocate( pData, nTotalSize ) );

  00217	8b 45 c0	 mov	 eax, DWORD PTR _nTotalSize$[ebp]
  0021a	50		 push	 eax
  0021b	8b 4d 08	 mov	 ecx, DWORD PTR _pData$[ebp]
  0021e	51		 push	 ecx
  0021f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00222	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00225	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00228	8b 10		 mov	 edx, DWORD PTR [eax]
  0022a	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0022d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00230	ff d0		 call	 eax
  00232	89 45 f4	 mov	 DWORD PTR _pNewData$[ebp], eax

; 130  : 		if( pNewData == NULL )

  00235	83 7d f4 00	 cmp	 DWORD PTR _pNewData$[ebp], 0
  00239	75 04		 jne	 SHORT $LN13@Reallocate

; 131  : 		{
; 132  : 			return NULL;

  0023b	33 c0		 xor	 eax, eax
  0023d	eb 0f		 jmp	 SHORT $LN1@Reallocate
$LN13@Reallocate:

; 133  : 		}
; 134  : 		pNewData->nAllocLength = nAlignedChars - 1;

  0023f	8b 4d f8	 mov	 ecx, DWORD PTR _nAlignedChars$[ebp]
  00242	83 e9 01	 sub	 ecx, 1
  00245	8b 55 f4	 mov	 edx, DWORD PTR _pNewData$[ebp]
  00248	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 135  : 
; 136  : 		return pNewData;

  0024b	8b 45 f4	 mov	 eax, DWORD PTR _pNewData$[ebp]
$LN1@Reallocate:

; 137  : 	}

  0024e	8b e5		 mov	 esp, ebp
  00250	5d		 pop	 ebp
  00251	c2 0c 00	 ret	 12			; 0000000cH
?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z ENDP ; ATL::CAtlStringMgr::Reallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
;	COMDAT ?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z PROC	; ATL::CAtlStringMgr::Free, COMDAT
; _this$ = ecx

; 98   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@Free:

; 99   : 		ATLASSUME(pData != NULL);

  00007	83 7d 08 00	 cmp	 DWORD PTR _pData$[ebp], 0
  0000b	75 24		 jne	 SHORT $LN2@Free
  0000d	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@IEBIBJEI@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00017	6a 00		 push	 0
  00019	6a 63		 push	 99			; 00000063H
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NFJNFLGL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00020	6a 02		 push	 2
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00028	83 c4 18	 add	 esp, 24			; 00000018H
  0002b	83 f8 01	 cmp	 eax, 1
  0002e	75 01		 jne	 SHORT $LN2@Free
  00030	cc		 int	 3
$LN2@Free:
  00031	33 c9		 xor	 ecx, ecx
  00033	75 d2		 jne	 SHORT $LN4@Free

; 100  : 		ATLASSERT(pData->pStringMgr == this);

  00035	8b 55 08	 mov	 edx, DWORD PTR _pData$[ebp]
  00038	8b 02		 mov	 eax, DWORD PTR [edx]
  0003a	3b 45 fc	 cmp	 eax, DWORD PTR _this$[ebp]
  0003d	74 24		 je	 SHORT $LN7@Free
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_1DE@KEEBDKDC@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM@
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00049	6a 00		 push	 0
  0004b	6a 64		 push	 100			; 00000064H
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NFJNFLGL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00052	6a 02		 push	 2
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0005a	83 c4 18	 add	 esp, 24			; 00000018H
  0005d	83 f8 01	 cmp	 eax, 1
  00060	75 01		 jne	 SHORT $LN7@Free
  00062	cc		 int	 3
$LN7@Free:

; 101  : 
; 102  : 		m_pMemMgr->Free( pData );

  00063	8b 55 08	 mov	 edx, DWORD PTR _pData$[ebp]
  00066	52		 push	 edx
  00067	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00070	8b 01		 mov	 eax, DWORD PTR [ecx]
  00072	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00075	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00078	ff d2		 call	 edx

; 103  : 	}

  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 04 00	 ret	 4
?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z ENDP	; ATL::CAtlStringMgr::Free
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlmem.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
;	COMDAT ?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z
_TEXT	SEGMENT
_i64Result$1 = -72					; size = 8
_nTotalSize$ = -64					; size = 4
$T2 = -60						; size = 4
_nDataBytes$ = -56					; size = 4
tv187 = -52						; size = 4
$T3 = -48						; size = 4
tv181 = -44						; size = 4
___atl_condVal$4 = -40					; size = 4
tv87 = -36						; size = 4
$T5 = -32						; size = 4
_tLeft$ = -28						; size = 4
tv170 = -24						; size = 4
___atl_condVal$6 = -20					; size = 4
tv65 = -16						; size = 4
_nAlignedChars$ = -12					; size = 4
_this$ = -8						; size = 4
_pData$ = -4						; size = 4
_nChars$ = 8						; size = 4
_nCharSize$ = 12					; size = 4
?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z PROC ; ATL::CAtlStringMgr::Allocate, COMDAT
; _this$ = ecx

; 65   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@Allocate:

; 66   : 		ATLENSURE_RETURN_VAL( nChars>=0, NULL );

  00009	83 7d 08 00	 cmp	 DWORD PTR _nChars$[ebp], 0
  0000d	7c 09		 jl	 SHORT $LN15@Allocate
  0000f	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  00016	eb 07		 jmp	 SHORT $LN16@Allocate
$LN15@Allocate:
  00018	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN16@Allocate:
  0001f	8b 45 f0	 mov	 eax, DWORD PTR tv65[ebp]
  00022	89 45 ec	 mov	 DWORD PTR ___atl_condVal$6[ebp], eax
  00025	83 7d ec 00	 cmp	 DWORD PTR ___atl_condVal$6[ebp], 0
  00029	75 24		 jne	 SHORT $LN17@Allocate
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00035	6a 00		 push	 0
  00037	6a 42		 push	 66			; 00000042H
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NFJNFLGL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0003e	6a 02		 push	 2
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00046	83 c4 18	 add	 esp, 24			; 00000018H
  00049	83 f8 01	 cmp	 eax, 1
  0004c	75 01		 jne	 SHORT $LN17@Allocate
  0004e	cc		 int	 3
$LN17@Allocate:
  0004f	83 7d ec 00	 cmp	 DWORD PTR ___atl_condVal$6[ebp], 0
  00053	75 07		 jne	 SHORT $LN2@Allocate
  00055	33 c0		 xor	 eax, eax
  00057	e9 db 01 00 00	 jmp	 $LN1@Allocate
$LN2@Allocate:
  0005c	33 d2		 xor	 edx, edx
  0005e	75 a9		 jne	 SHORT $LN4@Allocate

; 72   : 		if( FAILED(::ATL::AtlAdd(&nChars, nChars, 1)) )

  00060	8b 45 08	 mov	 eax, DWORD PTR _nChars$[ebp]
  00063	89 45 e4	 mov	 DWORD PTR _tLeft$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00066	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  0006b	2b 4d e4	 sub	 ecx, DWORD PTR _tLeft$[ebp]
  0006e	83 f9 01	 cmp	 ecx, 1
  00071	7d 31		 jge	 SHORT $LN22@Allocate
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00073	ba 16 02 00 00	 mov	 edx, 534		; 00000216H
  00078	85 d2		 test	 edx, edx
  0007a	7f 09		 jg	 SHORT $LN26@Allocate
  0007c	c7 45 e8 16 02
	00 00		 mov	 DWORD PTR tv170[ebp], 534 ; 00000216H
  00083	eb 17		 jmp	 SHORT $LN24@Allocate
$LN26@Allocate:
  00085	b8 16 02 00 00	 mov	 eax, 534		; 00000216H
  0008a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0008f	0d 00 00 07 00	 or	 eax, 458752		; 00070000H
  00094	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  00099	89 45 e8	 mov	 DWORD PTR tv170[ebp], eax
$LN24@Allocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 87   : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0009c	8b 4d e8	 mov	 ecx, DWORD PTR tv170[ebp]
  0009f	89 4d e0	 mov	 DWORD PTR $T5[ebp], ecx
  000a2	eb 10		 jmp	 SHORT $LN21@Allocate
$LN22@Allocate:

; 88   : 	}
; 89   : 	*ptResult= tLeft + tRight;

  000a4	8b 55 e4	 mov	 edx, DWORD PTR _tLeft$[ebp]
  000a7	83 c2 01	 add	 edx, 1
  000aa	89 55 08	 mov	 DWORD PTR _nChars$[ebp], edx

; 90   : 	return S_OK;

  000ad	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T5[ebp], 0
$LN21@Allocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h

; 72   : 		if( FAILED(::ATL::AtlAdd(&nChars, nChars, 1)) )

  000b4	83 7d e0 00	 cmp	 DWORD PTR $T5[ebp], 0
  000b8	7d 07		 jge	 SHORT $LN28@Allocate

; 73   : 		{
; 74   : 			return NULL;

  000ba	33 c0		 xor	 eax, eax
  000bc	e9 76 01 00 00	 jmp	 $LN1@Allocate
$LN28@Allocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlmem.h

; 29   : 	return( N( (n+(nAlign-1))&~(N( nAlign )-1) ) );

  000c1	b8 08 00 00 00	 mov	 eax, 8
  000c6	83 e8 01	 sub	 eax, 1
  000c9	f7 d0		 not	 eax
  000cb	b9 08 00 00 00	 mov	 ecx, 8
  000d0	83 e9 01	 sub	 ecx, 1
  000d3	03 4d 08	 add	 ecx, DWORD PTR _nChars$[ebp]
  000d6	23 c8		 and	 ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h

; 77   : 		int nAlignedChars = ::ATL::AtlAlignUp( nChars, 8 );  // Prevent excessive reallocation.  The heap will usually round up anyway.

  000d8	89 4d f4	 mov	 DWORD PTR _nAlignedChars$[ebp], ecx
$LN7@Allocate:

; 78   : 		ATLENSURE_RETURN_VAL( nChars<=nAlignedChars, NULL );

  000db	8b 55 08	 mov	 edx, DWORD PTR _nChars$[ebp]
  000de	3b 55 f4	 cmp	 edx, DWORD PTR _nAlignedChars$[ebp]
  000e1	7f 09		 jg	 SHORT $LN18@Allocate
  000e3	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR tv87[ebp], 1
  000ea	eb 07		 jmp	 SHORT $LN19@Allocate
$LN18@Allocate:
  000ec	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN19@Allocate:
  000f3	8b 45 dc	 mov	 eax, DWORD PTR tv87[ebp]
  000f6	89 45 d8	 mov	 DWORD PTR ___atl_condVal$4[ebp], eax
  000f9	83 7d d8 00	 cmp	 DWORD PTR ___atl_condVal$4[ebp], 0
  000fd	75 24		 jne	 SHORT $LN20@Allocate
  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl@
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00109	6a 00		 push	 0
  0010b	6a 4e		 push	 78			; 0000004eH
  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@NFJNFLGL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00112	6a 02		 push	 2
  00114	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0011a	83 c4 18	 add	 esp, 24			; 00000018H
  0011d	83 f8 01	 cmp	 eax, 1
  00120	75 01		 jne	 SHORT $LN20@Allocate
  00122	cc		 int	 3
$LN20@Allocate:
  00123	83 7d d8 00	 cmp	 DWORD PTR ___atl_condVal$4[ebp], 0
  00127	75 07		 jne	 SHORT $LN5@Allocate
  00129	33 c0		 xor	 eax, eax
  0012b	e9 07 01 00 00	 jmp	 $LN1@Allocate
$LN5@Allocate:
  00130	33 d2		 xor	 edx, edx
  00132	75 a7		 jne	 SHORT $LN7@Allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 136  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00134	8b 45 f4	 mov	 eax, DWORD PTR _nAlignedChars$[ebp]
  00137	f7 65 0c	 mul	 DWORD PTR _nCharSize$[ebp]
  0013a	89 45 b8	 mov	 DWORD PTR _i64Result$1[ebp], eax
  0013d	89 55 bc	 mov	 DWORD PTR _i64Result$1[ebp+4], edx

; 137  : 	if(i64Result>UINT_MAX)

  00140	83 7d bc 00	 cmp	 DWORD PTR _i64Result$1[ebp+4], 0
  00144	77 06		 ja	 SHORT $LN44@Allocate
  00146	83 7d b8 ff	 cmp	 DWORD PTR _i64Result$1[ebp], -1
  0014a	76 34		 jbe	 SHORT $LN31@Allocate
$LN44@Allocate:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0014c	b8 16 02 00 00	 mov	 eax, 534		; 00000216H
  00151	85 c0		 test	 eax, eax
  00153	7f 09		 jg	 SHORT $LN35@Allocate
  00155	c7 45 d4 16 02
	00 00		 mov	 DWORD PTR tv181[ebp], 534 ; 00000216H
  0015c	eb 1a		 jmp	 SHORT $LN33@Allocate
$LN35@Allocate:
  0015e	b9 16 02 00 00	 mov	 ecx, 534		; 00000216H
  00163	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00169	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  0016f	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  00175	89 4d d4	 mov	 DWORD PTR tv181[ebp], ecx
$LN33@Allocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 139  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00178	8b 55 d4	 mov	 edx, DWORD PTR tv181[ebp]
  0017b	89 55 d0	 mov	 DWORD PTR $T3[ebp], edx
  0017e	eb 0d		 jmp	 SHORT $LN30@Allocate
$LN31@Allocate:

; 140  : 	}
; 141  : 	*piResult=static_cast<unsigned int>(i64Result);

  00180	8b 45 b8	 mov	 eax, DWORD PTR _i64Result$1[ebp]
  00183	89 45 c8	 mov	 DWORD PTR _nDataBytes$[ebp], eax

; 142  : 	return S_OK;

  00186	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp], 0
$LN30@Allocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h

; 80   : 		if(	FAILED(::ATL::AtlMultiply(&nDataBytes, static_cast<size_t>(nAlignedChars), static_cast<size_t>(nCharSize))) ||

  0018d	83 7d d0 00	 cmp	 DWORD PTR $T3[ebp], 0
  00191	7c 52		 jl	 SHORT $LN12@Allocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00193	83 c9 ff	 or	 ecx, -1
  00196	83 e9 10	 sub	 ecx, 16			; 00000010H
  00199	3b 4d c8	 cmp	 ecx, DWORD PTR _nDataBytes$[ebp]
  0019c	73 31		 jae	 SHORT $LN38@Allocate
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0019e	ba 16 02 00 00	 mov	 edx, 534		; 00000216H
  001a3	85 d2		 test	 edx, edx
  001a5	7f 09		 jg	 SHORT $LN42@Allocate
  001a7	c7 45 cc 16 02
	00 00		 mov	 DWORD PTR tv187[ebp], 534 ; 00000216H
  001ae	eb 17		 jmp	 SHORT $LN40@Allocate
$LN42@Allocate:
  001b0	b8 16 02 00 00	 mov	 eax, 534		; 00000216H
  001b5	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  001ba	0d 00 00 07 00	 or	 eax, 458752		; 00070000H
  001bf	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  001c4	89 45 cc	 mov	 DWORD PTR tv187[ebp], eax
$LN40@Allocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 87   : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  001c7	8b 4d cc	 mov	 ecx, DWORD PTR tv187[ebp]
  001ca	89 4d c4	 mov	 DWORD PTR $T2[ebp], ecx
  001cd	eb 10		 jmp	 SHORT $LN37@Allocate
$LN38@Allocate:

; 88   : 	}
; 89   : 	*ptResult= tLeft + tRight;

  001cf	8b 55 c8	 mov	 edx, DWORD PTR _nDataBytes$[ebp]
  001d2	83 c2 10	 add	 edx, 16			; 00000010H
  001d5	89 55 c0	 mov	 DWORD PTR _nTotalSize$[ebp], edx

; 90   : 	return S_OK;

  001d8	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
$LN37@Allocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h

; 80   : 		if(	FAILED(::ATL::AtlMultiply(&nDataBytes, static_cast<size_t>(nAlignedChars), static_cast<size_t>(nCharSize))) ||

  001df	83 7d c4 00	 cmp	 DWORD PTR $T2[ebp], 0
  001e3	7d 04		 jge	 SHORT $LN11@Allocate
$LN12@Allocate:

; 81   : 			FAILED(::ATL::AtlAdd(&nTotalSize, static_cast<size_t>(sizeof( CStringData )), nDataBytes)))
; 82   : 		{
; 83   : 			return NULL;

  001e5	33 c0		 xor	 eax, eax
  001e7	eb 4e		 jmp	 SHORT $LN1@Allocate
$LN11@Allocate:

; 84   : 		}
; 85   : 		pData = static_cast< CStringData* >( m_pMemMgr->Allocate( nTotalSize ) );

  001e9	8b 45 c0	 mov	 eax, DWORD PTR _nTotalSize$[ebp]
  001ec	50		 push	 eax
  001ed	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001f0	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001f3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001f6	8b 12		 mov	 edx, DWORD PTR [edx]
  001f8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001fb	8b 02		 mov	 eax, DWORD PTR [edx]
  001fd	ff d0		 call	 eax
  001ff	89 45 fc	 mov	 DWORD PTR _pData$[ebp], eax

; 86   : 		if( pData == NULL )

  00202	83 7d fc 00	 cmp	 DWORD PTR _pData$[ebp], 0
  00206	75 04		 jne	 SHORT $LN13@Allocate

; 87   : 		{
; 88   : 			return( NULL );

  00208	33 c0		 xor	 eax, eax
  0020a	eb 2b		 jmp	 SHORT $LN1@Allocate
$LN13@Allocate:

; 89   : 		}
; 90   : 		pData->pStringMgr = this;

  0020c	8b 4d fc	 mov	 ecx, DWORD PTR _pData$[ebp]
  0020f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00212	89 11		 mov	 DWORD PTR [ecx], edx

; 91   : 		pData->nRefs = 1;

  00214	8b 45 fc	 mov	 eax, DWORD PTR _pData$[ebp]
  00217	c7 40 0c 01 00
	00 00		 mov	 DWORD PTR [eax+12], 1

; 92   : 		pData->nAllocLength = nAlignedChars - 1;

  0021e	8b 4d f4	 mov	 ecx, DWORD PTR _nAlignedChars$[ebp]
  00221	83 e9 01	 sub	 ecx, 1
  00224	8b 55 fc	 mov	 edx, DWORD PTR _pData$[ebp]
  00227	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 93   : 		pData->nDataLength = 0;

  0022a	8b 45 fc	 mov	 eax, DWORD PTR _pData$[ebp]
  0022d	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 94   : 
; 95   : 		return( pData );

  00234	8b 45 fc	 mov	 eax, DWORD PTR _pData$[ebp]
$LN1@Allocate:

; 96   : 	}

  00237	8b e5		 mov	 esp, ebp
  00239	5d		 pop	 ebp
  0023a	c2 08 00	 ret	 8
?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z ENDP ; ATL::CAtlStringMgr::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
;	COMDAT ?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ PROC ; ATL::CAtlStringMgr::GetInstance, COMDAT

; 51   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 52   : #pragma warning(push)
; 53   : #pragma warning(disable: 4640) // will always be initialized on entry thread by CImageStaticInitializer
; 54   : 		static CWin32Heap strHeap( ::GetProcessHeap() );

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR __tls_index
  00008	64 8b 0d 00 00
	00 00		 mov	 ecx, DWORD PTR fs:__tls_array
  0000f	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00017	3b 82 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[edx]
  0001d	7e 41		 jle	 SHORT $LN2@GetInstanc
  0001f	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00024	e8 00 00 00 00	 call	 __Init_thread_header
  00029	83 c4 04	 add	 esp, 4
  0002c	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA, -1 ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00033	75 2b		 jne	 SHORT $LN2@GetInstanc
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcessHeap@0
  0003b	50		 push	 eax
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
  00041	e8 00 00 00 00	 call	 ??0CWin32Heap@ATL@@QAE@PAX@Z ; ATL::CWin32Heap::CWin32Heap
  00046	68 00 00 00 00	 push	 OFFSET ??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap''
  0004b	e8 00 00 00 00	 call	 _atexit
  00050	83 c4 04	 add	 esp, 4
  00053	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00058	e8 00 00 00 00	 call	 __Init_thread_footer
  0005d	83 c4 04	 add	 esp, 4
$LN2@GetInstanc:

; 55   : 		static CAtlStringMgr strMgr(&strHeap);

  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  00066	64 8b 15 00 00
	00 00		 mov	 edx, DWORD PTR fs:__tls_array
  0006d	8b 04 8a	 mov	 eax, DWORD PTR [edx+ecx*4]
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00076	3b 88 00 00 00
	00		 cmp	 ecx, DWORD PTR __Init_thread_epoch[eax]
  0007c	7e 3f		 jle	 SHORT $LN3@GetInstanc
  0007e	68 00 00 00 00	 push	 OFFSET ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00083	e8 00 00 00 00	 call	 __Init_thread_header
  00088	83 c4 04	 add	 esp, 4
  0008b	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA, -1 ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00092	75 29		 jne	 SHORT $LN3@GetInstanc
  00094	68 00 00 00 00	 push	 OFFSET ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
  00099	b9 00 00 00 00	 mov	 ecx, OFFSET ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr
  0009e	e8 00 00 00 00	 call	 ??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z ; ATL::CAtlStringMgr::CAtlStringMgr
  000a3	68 00 00 00 00	 push	 OFFSET ??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr''
  000a8	e8 00 00 00 00	 call	 _atexit
  000ad	83 c4 04	 add	 esp, 4
  000b0	68 00 00 00 00	 push	 OFFSET ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  000b5	e8 00 00 00 00	 call	 __Init_thread_footer
  000ba	83 c4 04	 add	 esp, 4
$LN3@GetInstanc:

; 56   : #pragma warning(pop)
; 57   : 
; 58   : 		return &strMgr;

  000bd	b8 00 00 00 00	 mov	 eax, OFFSET ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr

; 59   : 	}

  000c2	5d		 pop	 ebp
  000c3	c3		 ret	 0
?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ ENDP ; ATL::CAtlStringMgr::GetInstance
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
;	COMDAT ??1CAtlStringMgr@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAtlStringMgr@ATL@@UAE@XZ PROC			; ATL::CAtlStringMgr::~CAtlStringMgr, COMDAT
; _this$ = ecx

; 151  : };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
??1CAtlStringMgr@ATL@@UAE@XZ ENDP			; ATL::CAtlStringMgr::~CAtlStringMgr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpstr.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h
;	COMDAT ??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_this$ = -4						; size = 4
_pMemMgr$ = 8						; size = 4
??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z PROC	; ATL::CAtlStringMgr::CAtlStringMgr, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAtlStringMgr@ATL@@6B@

; 39   : 		m_pMemMgr( pMemMgr )

  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 55 08	 mov	 edx, DWORD PTR _pMemMgr$[ebp]
  00018	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 40   : 	{

  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	83 c1 08	 add	 ecx, 8
  00021	e8 00 00 00 00	 call	 ??0CNilStringData@ATL@@QAE@XZ ; ATL::CNilStringData::CNilStringData

; 41   : 		m_nil.SetManager( this );

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c0 08	 add	 eax, 8
  0002c	89 45 f8	 mov	 DWORD PTR _this$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpstr.h

; 124  : 		ATLASSERT( pStringMgr == NULL );

  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00035	74 24		 je	 SHORT $LN7@CAtlString
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@MEFFJNJ@?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00041	6a 00		 push	 0
  00043	6a 7c		 push	 124			; 0000007cH
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_1OI@LKICOBAJ@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0004a	6a 02		 push	 2
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00052	83 c4 18	 add	 esp, 24			; 00000018H
  00055	83 f8 01	 cmp	 eax, 1
  00058	75 01		 jne	 SHORT $LN7@CAtlString
  0005a	cc		 int	 3
$LN7@CAtlString:

; 125  : 		pStringMgr = pMgr;

  0005b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	89 08		 mov	 DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlstr.h

; 42   : 	}

  00063	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z ENDP	; ATL::CAtlStringMgr::CAtlStringMgr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h
;	COMDAT ??__F_AtlWinModule@ATL@@YAXXZ
text$yd	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??__F_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlWinModule'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??__F_AtlWinModule@ATL@@YAXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h

; 290  : 		return m_hInst;

  00023	a1 04 00 00 00	 mov	 eax, DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
  00028	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h

; 2957 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

  0002b	8b 4d f0	 mov	 ecx, DWORD PTR $T2[ebp]
  0002e	51		 push	 ecx
  0002f	68 00 00 00 00	 push	 OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
  00034	e8 00 00 00 00	 call	 ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h

; 310  : {

  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 311  : 	RemoveAll();

  00040	b9 20 00 00 00	 mov	 ecx, OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+32
  00045	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 312  : }

  0004a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00051	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00054	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005b	59		 pop	 ecx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
text$yd	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??__F_AtlWinModule@ATL@@YAXXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??__F_AtlWinModule@ATL@@YAXXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??__F_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlWinModule''
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlWinModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlWinModule'', COMDAT

; 2972 : __declspec(selectany) CAtlWinModule _AtlWinModule;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  00008	e8 00 00 00 00	 call	 ??0CAtlWinModule@ATL@@QAE@XZ ; ATL::CAtlWinModule::CAtlWinModule
  0000d	68 00 00 00 00	 push	 OFFSET ??__F_AtlWinModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlWinModule''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??__E_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlWinModule''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlWinModule@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
?Term@CAtlWinModule@ATL@@QAEXXZ PROC			; ATL::CAtlWinModule::Term, COMDAT
; _this$ = ecx

; 2956 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h

; 290  : 		return m_hInst;

  00009	a1 04 00 00 00	 mov	 eax, DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
  0000e	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h

; 2957 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

  00011	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00014	51		 push	 ecx
  00015	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00018	52		 push	 edx
  00019	e8 00 00 00 00	 call	 ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm

; 2958 : 	}

  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?Term@CAtlWinModule@ATL@@QAEXXZ ENDP			; ATL::CAtlWinModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CAtlWinModule@ATL@@QAE@XZ PROC			; ATL::CAtlWinModule::~CAtlWinModule, COMDAT
; _this$ = ecx

; 2951 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CAtlWinModule@ATL@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h

; 290  : 		return m_hInst;

  00028	a1 04 00 00 00	 mov	 eax, DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
  0002d	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h

; 2957 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

  00030	8b 4d ec	 mov	 ecx, DWORD PTR $T2[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h

; 310  : {

  0003d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	83 c1 20	 add	 ecx, 32			; 00000020H

; 311  : 	RemoveAll();

  0004a	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 312  : }

  0004f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h

; 2953 : 	}

  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAtlWinModule@ATL@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CAtlWinModule@ATL@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::~CAtlWinModule
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_this$ = -12						; size = 4
_this$ = -8						; size = 4
_this$ = -4						; size = 4
??0CAtlWinModule@ATL@@QAE@XZ PROC			; ATL::CAtlWinModule::CAtlWinModule, COMDAT
; _this$ = ecx

; 2937 : 	CAtlWinModule()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 f4	 mov	 DWORD PTR _this$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h

; 125  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  00012	33 c9		 xor	 ecx, ecx
  00014	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00017	89 0a		 mov	 DWORD PTR [edx], ecx
  00019	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0001c	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  0001f	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  00022	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
  00025	89 4a 14	 mov	 DWORD PTR [edx+20], ecx
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c0 20	 add	 eax, 32			; 00000020H
  0002e	89 45 f8	 mov	 DWORD PTR _this$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

  00031	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0003a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00044	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00047	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h

; 2939 : 		cbSize = sizeof(_ATL_WIN_MODULE);

  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	c7 01 2c 00 00
	00		 mov	 DWORD PTR [ecx], 44	; 0000002cH

; 2940 : 		HRESULT hr = AtlWinModuleInit(this);

  00057	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005a	52		 push	 edx
  0005b	e8 00 00 00 00	 call	 ?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
  00060	89 45 f0	 mov	 DWORD PTR _hr$[ebp], eax

; 2941 : 		if (FAILED(hr))

  00063	83 7d f0 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00067	7d 3b		 jge	 SHORT $LN1@CAtlWinMod

; 2942 : 		{
; 2943 : 			ATLASSERT(0);

  00069	33 c0		 xor	 eax, eax
  0006b	75 27		 jne	 SHORT $LN4@CAtlWinMod
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00077	6a 00		 push	 0
  00079	68 7f 0b 00 00	 push	 2943			; 00000b7fH
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@KJBACLGD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00083	6a 02		 push	 2
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0008b	83 c4 18	 add	 esp, 24			; 00000018H
  0008e	83 f8 01	 cmp	 eax, 1
  00091	75 01		 jne	 SHORT $LN4@CAtlWinMod
  00093	cc		 int	 3
$LN4@CAtlWinMod:

; 2944 : 			CAtlBaseModule::m_bInitFailed = true;

  00094	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2945 : 			cbSize = 0;

  0009b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0009e	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
$LN1@CAtlWinMod:

; 2946 : 			return;
; 2947 : 		}
; 2948 : 	}

  000a4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
??0CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
;	COMDAT ??__F_AtlComModule@ATL@@YAXXZ
text$yd	SEGMENT
__$EHRec$ = -12						; size = 12
??__F_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlComModule'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??__F_AtlComModule@ATL@@YAXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 2607 : 	{

  00022	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2608 : 		Term();

  00029	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  0002e	e8 00 00 00 00	 call	 ?Term@CAtlComModule@ATL@@QAEXXZ ; ATL::CAtlComModule::Term

; 2609 : 	}

  00033	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0003a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00044	59		 pop	 ecx
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
text$yd	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??__F_AtlComModule@ATL@@YAXXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??__F_AtlComModule@ATL@@YAXXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??__F_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlComModule''
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlComModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlComModule'', COMDAT

; 2716 : __declspec(selectany) CAtlComModule _AtlComModule;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  00008	e8 00 00 00 00	 call	 ??0CAtlComModule@ATL@@QAE@XZ ; ATL::CAtlComModule::CAtlComModule
  0000d	68 00 00 00 00	 push	 OFFSET ??__F_AtlComModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlComModule''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??__E_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlComModule''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlComModule@ATL@@QAEXXZ
_TEXT	SEGMENT
_factory$1 = -16					; size = 4
_pCache$2 = -12						; size = 4
_this$ = -8						; size = 4
_ppEntry$3 = -4						; size = 4
?Term@CAtlComModule@ATL@@QAEXXZ PROC			; ATL::CAtlComModule::Term, COMDAT
; _this$ = ecx

; 2613 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2614 : 		if (cbSize == 0)

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000f	75 02		 jne	 SHORT $LN5@Term

; 2615 : 			return;

  00011	eb 78		 jmp	 SHORT $LN1@Term
$LN5@Term:

; 2616 : 
; 2617 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

  00013	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00019	89 55 fc	 mov	 DWORD PTR _ppEntry$3[ebp], edx
  0001c	eb 09		 jmp	 SHORT $LN4@Term
$LN2@Term:
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _ppEntry$3[ebp]
  00021	83 c0 04	 add	 eax, 4
  00024	89 45 fc	 mov	 DWORD PTR _ppEntry$3[ebp], eax
$LN4@Term:
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _ppEntry$3[ebp]
  0002d	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00030	73 43		 jae	 SHORT $LN3@Term

; 2618 : 		{
; 2619 : 			if (*ppEntry != NULL)

  00032	8b 45 fc	 mov	 eax, DWORD PTR _ppEntry$3[ebp]
  00035	83 38 00	 cmp	 DWORD PTR [eax], 0
  00038	74 39		 je	 SHORT $LN6@Term

; 2620 : 			{
; 2621 : 				_ATL_OBJMAP_CACHE* pCache = (**ppEntry).pCache;

  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _ppEntry$3[ebp]
  0003d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003f	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00042	89 45 f4	 mov	 DWORD PTR _pCache$2[ebp], eax

; 2622 : 
; 2623 : 				if (pCache->pCF != NULL)

  00045	8b 4d f4	 mov	 ecx, DWORD PTR _pCache$2[ebp]
  00048	83 39 00	 cmp	 DWORD PTR [ecx], 0
  0004b	74 26		 je	 SHORT $LN6@Term

; 2624 : 				{
; 2625 : 					// Decode factory pointer if it's not null
; 2626 : 					IUnknown *factory = reinterpret_cast<IUnknown*>(::DecodePointer(pCache->pCF));

  0004d	8b 55 f4	 mov	 edx, DWORD PTR _pCache$2[ebp]
  00050	8b 02		 mov	 eax, DWORD PTR [edx]
  00052	50		 push	 eax
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DecodePointer@4
  00059	89 45 f0	 mov	 DWORD PTR _factory$1[ebp], eax

; 2627 : 					_Analysis_assume_(factory != nullptr);
; 2628 : 					factory->Release();

  0005c	8b 4d f0	 mov	 ecx, DWORD PTR _factory$1[ebp]
  0005f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00061	8b 45 f0	 mov	 eax, DWORD PTR _factory$1[ebp]
  00064	50		 push	 eax
  00065	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00068	ff d1		 call	 ecx

; 2629 : 					pCache->pCF = NULL;

  0006a	8b 55 f4	 mov	 edx, DWORD PTR _pCache$2[ebp]
  0006d	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
$LN6@Term:

; 2630 : 				}
; 2631 : 			}
; 2632 : 		}

  00073	eb a9		 jmp	 SHORT $LN2@Term
$LN3@Term:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h

; 155  : 		DeleteCriticalSection(&m_sec);

  00075	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00078	83 c0 10	 add	 eax, 16			; 00000010H
  0007b	50		 push	 eax
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h

; 2637 : 		cbSize = 0;

  00082	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$LN1@Term:

; 2638 : 	}

  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0
?Term@CAtlComModule@ATL@@QAEXXZ ENDP			; ATL::CAtlComModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CAtlComModule@ATL@@QAE@XZ PROC			; ATL::CAtlComModule::~CAtlComModule, COMDAT
; _this$ = ecx

; 2607 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CAtlComModule@ATL@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 2608 : 		Term();

  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?Term@CAtlComModule@ATL@@QAEXXZ ; ATL::CAtlComModule::Term

; 2609 : 	}

  0002e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00031	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00038	59		 pop	 ecx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAtlComModule@ATL@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CAtlComModule@ATL@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CAtlComModule@ATL@@QAE@XZ ENDP			; ATL::CAtlComModule::~CAtlComModule
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 8
_this$ = -8						; size = 4
_this$ = -4						; size = 4
??0CAtlComModule@ATL@@QAE@XZ PROC			; ATL::CAtlComModule::CAtlComModule, COMDAT
; _this$ = ecx

; 2586 : 	CAtlComModule() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	89 45 f8	 mov	 DWORD PTR _this$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h

; 125  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  00012	33 c9		 xor	 ecx, ecx
  00014	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00017	89 0a		 mov	 DWORD PTR [edx], ecx
  00019	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0001c	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  0001f	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  00022	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
  00025	89 4a 14	 mov	 DWORD PTR [edx+20], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h

; 2588 : 		cbSize = 0;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 2589 : 
; 2590 : 		m_hInstTypeLib = reinterpret_cast<HINSTANCE>(&__ImageBase);

  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ___ImageBase

; 2591 : 
; 2592 : 		m_ppAutoObjMapFirst = &__pobjMapEntryFirst + 1;

  0003b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	c7 42 08 04 00
	00 00		 mov	 DWORD PTR [edx+8], OFFSET ___pobjMapEntryFirst+4

; 2593 : 		m_ppAutoObjMapLast = &__pobjMapEntryLast;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ___pobjMapEntryLast

; 2594 : 
; 2595 : 		if (FAILED(m_csObjMap.Init()))

  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	83 c1 10	 add	 ecx, 16			; 00000010H
  00055	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Init
  0005a	85 c0		 test	 eax, eax
  0005c	7d 57		 jge	 SHORT $LN2@CAtlComMod
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  0005e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], OFFSET ??_C@_0HB@FHIMFEIJ@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00065	c7 45 f4 25 0a
	00 00		 mov	 DWORD PTR $T1[ebp+4], 2597 ; 00000a25H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h

; 2597 : 			ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to initialize critical section in CAtlComModule\n"));

  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@EJEMLPD@ERROR?5?3?5Unable?5to?5initialize?5cr@
  00071	6a 00		 push	 0
  00073	6a 02		 push	 2
  00075	8d 4d f0	 lea	 ecx, DWORD PTR $T1[ebp]
  00078	51		 push	 ecx
  00079	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
  0007e	83 c4 10	 add	 esp, 16			; 00000010H

; 2598 : 			ATLASSERT(0);

  00081	33 d2		 xor	 edx, edx
  00083	75 27		 jne	 SHORT $LN4@CAtlComMod
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0008f	6a 00		 push	 0
  00091	68 26 0a 00 00	 push	 2598			; 00000a26H
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@KJBACLGD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0009b	6a 02		 push	 2
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  000a3	83 c4 18	 add	 esp, 24			; 00000018H
  000a6	83 f8 01	 cmp	 eax, 1
  000a9	75 01		 jne	 SHORT $LN4@CAtlComMod
  000ab	cc		 int	 3
$LN4@CAtlComMod:

; 2599 : 			CAtlBaseModule::m_bInitFailed = true;

  000ac	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2600 : 			return;

  000b3	eb 09		 jmp	 SHORT $LN1@CAtlComMod
$LN2@CAtlComMod:

; 2601 : 		}
; 2602 : 		// Set cbSize on success.
; 2603 : 		cbSize = sizeof(_ATL_COM_MODULE);

  000b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	c7 01 28 00 00
	00		 mov	 DWORD PTR [ecx], 40	; 00000028H
$LN1@CAtlComMod:

; 2604 : 	}

  000be	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c3		 ret	 0
??0CAtlComModule@ATL@@QAE@XZ ENDP			; ATL::CAtlComModule::CAtlComModule
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_i$2 = -4						; size = 4
_pWinModule$ = 8					; size = 4
_hInst$ = 12						; size = 4
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z PROC ; ATL::AtlWinModuleTerm, COMDAT

; 7652 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 7653 : 	if (pWinModule == NULL)

  00006	83 7d 08 00	 cmp	 DWORD PTR _pWinModule$[ebp], 0
  0000a	75 0a		 jne	 SHORT $LN5@AtlWinModu

; 7654 : 		return E_INVALIDARG;

  0000c	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00011	e9 80 00 00 00	 jmp	 $LN1@AtlWinModu
$LN5@AtlWinModu:

; 7655 : 	if (pWinModule->cbSize == 0)

  00016	8b 45 08	 mov	 eax, DWORD PTR _pWinModule$[ebp]
  00019	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001c	75 04		 jne	 SHORT $LN6@AtlWinModu

; 7656 : 		return S_OK;

  0001e	33 c0		 xor	 eax, eax
  00020	eb 74		 jmp	 SHORT $LN1@AtlWinModu
$LN6@AtlWinModu:

; 7657 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  00022	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  00025	83 39 2c	 cmp	 DWORD PTR [ecx], 44	; 0000002cH
  00028	74 07		 je	 SHORT $LN7@AtlWinModu

; 7658 : 		return E_INVALIDARG;

  0002a	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  0002f	eb 65		 jmp	 SHORT $LN1@AtlWinModu
$LN7@AtlWinModu:

; 7660 : 	for (int i = 0; i < pWinModule->m_rgWindowClassAtoms.GetSize(); i++)

  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00038	eb 09		 jmp	 SHORT $LN4@AtlWinModu
$LN2@AtlWinModu:
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _i$2[ebp]
  0003d	83 c2 01	 add	 edx, 1
  00040	89 55 fc	 mov	 DWORD PTR _i$2[ebp], edx
$LN4@AtlWinModu:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h

; 161  : 		return m_nSize;

  00043	8b 45 08	 mov	 eax, DWORD PTR _pWinModule$[ebp]
  00046	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00049	89 4d f8	 mov	 DWORD PTR $T1[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h

; 7660 : 	for (int i = 0; i < pWinModule->m_rgWindowClassAtoms.GetSize(); i++)

  0004c	8b 55 fc	 mov	 edx, DWORD PTR _i$2[ebp]
  0004f	3b 55 f8	 cmp	 edx, DWORD PTR $T1[ebp]
  00052	7d 1f		 jge	 SHORT $LN3@AtlWinModu

; 7661 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

  00054	8b 45 0c	 mov	 eax, DWORD PTR _hInst$[ebp]
  00057	50		 push	 eax
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _i$2[ebp]
  0005b	51		 push	 ecx
  0005c	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  0005f	83 c1 20	 add	 ecx, 32			; 00000020H
  00062	e8 00 00 00 00	 call	 ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
  00067	0f b7 10	 movzx	 edx, WORD PTR [eax]
  0006a	52		 push	 edx
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UnregisterClassA@8
  00071	eb c7		 jmp	 SHORT $LN2@AtlWinModu
$LN3@AtlWinModu:

; 7662 : 	pWinModule->m_rgWindowClassAtoms.RemoveAll();

  00073	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  00076	83 c1 20	 add	 ecx, 32			; 00000020H
  00079	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h

; 155  : 		DeleteCriticalSection(&m_sec);

  0007e	8b 45 08	 mov	 eax, DWORD PTR _pWinModule$[ebp]
  00081	83 c0 04	 add	 eax, 4
  00084	50		 push	 eax
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h

; 7664 : 	pWinModule->cbSize = 0;

  0008b	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  0008e	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 7665 : 	return S_OK;

  00094	33 c0		 xor	 eax, eax
$LN1@AtlWinModu:

; 7666 : }

  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c2 08 00	 ret	 8
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ENDP ; ATL::AtlWinModuleTerm
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_hr$ = -4						; size = 4
_pWinModule$ = 8					; size = 4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z PROC ; ATL::AtlWinModuleInit, COMDAT

; 8396 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 8397 : 	if (pWinModule == NULL)

  00006	83 7d 08 00	 cmp	 DWORD PTR _pWinModule$[ebp], 0
  0000a	75 07		 jne	 SHORT $LN2@AtlWinModu

; 8398 : 		return E_INVALIDARG;

  0000c	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00011	eb 7e		 jmp	 SHORT $LN1@AtlWinModu
$LN2@AtlWinModu:

; 8399 : 
; 8400 : 	// check only in the DLL
; 8401 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  00013	8b 45 08	 mov	 eax, DWORD PTR _pWinModule$[ebp]
  00016	83 38 2c	 cmp	 DWORD PTR [eax], 44	; 0000002cH
  00019	74 07		 je	 SHORT $LN3@AtlWinModu

; 8402 : 		return E_INVALIDARG;

  0001b	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00020	eb 6f		 jmp	 SHORT $LN1@AtlWinModu
$LN3@AtlWinModu:

; 8403 : 
; 8404 : 	pWinModule->m_pCreateWndList = NULL;

  00022	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  00025	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 8405 : 
; 8406 : 	HRESULT hr = pWinModule->m_csWindowCreate.Init();

  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  0002f	83 c1 04	 add	 ecx, 4
  00032	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Init
  00037	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 8407 : 	if (FAILED(hr))

  0003a	83 7d fc 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0003e	7d 4e		 jge	 SHORT $LN4@AtlWinModu
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  00040	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], OFFSET ??_C@_0HB@FHIMFEIJ@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00047	c7 45 f8 d9 20
	00 00		 mov	 DWORD PTR $T1[ebp+4], 8409 ; 000020d9H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlbase.h

; 8409 : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to initialize critical section in AtlWinModuleInit\n"));

  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@GFNHMOFC@ERROR?5?3?5Unable?5to?5initialize?5cr@
  00053	6a 00		 push	 0
  00055	6a 20		 push	 32			; 00000020H
  00057	8d 55 f4	 lea	 edx, DWORD PTR $T1[ebp]
  0005a	52		 push	 edx
  0005b	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ ; ATL::CTraceFileAndLineInfo::operator()
  00060	83 c4 10	 add	 esp, 16			; 00000010H

; 8410 : 		ATLASSERT(0);

  00063	33 c0		 xor	 eax, eax
  00065	75 27		 jne	 SHORT $LN4@AtlWinModu
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0@
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00071	6a 00		 push	 0
  00073	68 da 20 00 00	 push	 8410			; 000020daH
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_1OC@KJBACLGD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0007d	6a 02		 push	 2
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00085	83 c4 18	 add	 esp, 24			; 00000018H
  00088	83 f8 01	 cmp	 eax, 1
  0008b	75 01		 jne	 SHORT $LN4@AtlWinModu
  0008d	cc		 int	 3
$LN4@AtlWinModu:

; 8411 : 	}
; 8412 : 	return hr;

  0008e	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
$LN1@AtlWinModu:

; 8413 : }

  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 04 00	 ret	 4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ENDP ; ATL::AtlWinModuleInit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 310  : {

  00026	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	83 c1 20	 add	 ecx, 32			; 00000020H

; 311  : 	RemoveAll();

  00033	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 312  : }

  00038	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00042	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00049	59		 pop	 ecx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_ATL_WIN_MODULE70@ATL@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_this$ = -8						; size = 4
_this$ = -4						; size = 4
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 f4	 mov	 DWORD PTR _this$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h

; 125  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  00012	33 c9		 xor	 ecx, ecx
  00014	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00017	89 0a		 mov	 DWORD PTR [edx], ecx
  00019	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0001c	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  0001f	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  00022	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
  00025	89 4a 14	 mov	 DWORD PTR [edx+20], ecx
  00028	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c0 20	 add	 eax, 32			; 00000020H
  0002e	89 45 fc	 mov	 DWORD PTR _this$[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  0004e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[], COMDAT
; _this$ = ecx

; 236  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 237  : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);

  00007	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0000b	7c 0b		 jl	 SHORT $LN5@operator
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00013	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00016	7c 27		 jl	 SHORT $LN6@operator
$LN5@operator:
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00022	6a 00		 push	 0
  00024	68 ed 00 00 00	 push	 237			; 000000edH
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_1OK@GILLOEON@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0002e	6a 02		 push	 2
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00036	83 c4 18	 add	 esp, 24			; 00000018H
  00039	83 f8 01	 cmp	 eax, 1
  0003c	75 01		 jne	 SHORT $LN6@operator
  0003e	cc		 int	 3
$LN6@operator:

; 238  : 		if(nIndex < 0 || nIndex >= m_nSize)

  0003f	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  00043	7c 0b		 jl	 SHORT $LN3@operator
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0004b	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0004e	7c 0c		 jl	 SHORT $LN2@operator
$LN3@operator:

; 239  : 		{
; 240  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);

  00050	6a 01		 push	 1
  00052	68 8c 00 00 c0	 push	 -1073741684		; c000008cH
  00057	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN2@operator:

; 241  : 		}
; 242  : 		return m_aT[nIndex];

  0005c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005f	8b 02		 mov	 eax, DWORD PTR [edx]
  00061	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00064	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
$LN4@operator:

; 243  : 	}

  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 04 00	 ret	 4
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll, COMDAT
; _this$ = ecx

; 215  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 216  : 		if(m_aT != NULL)

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000f	74 37		 je	 SHORT $LN5@RemoveAll

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)

  00011	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00018	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0001d	83 c1 01	 add	 ecx, 1
  00020	89 4d f8	 mov	 DWORD PTR _i$1[ebp], ecx
$LN4@RemoveAll:
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00029	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  0002c	7d 02		 jge	 SHORT $LN3@RemoveAll

; 219  : 				m_aT[i].~T();

  0002e	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 220  : 			free(m_aT);

  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	52		 push	 edx
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0003c	83 c4 04	 add	 esp, 4

; 221  : 			m_aT = NULL;

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN5@RemoveAll:

; 222  : 		}
; 223  : 		m_nSize = 0;

  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 224  : 		m_nAllocSize = 0;

  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 225  :     }

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize, COMDAT
; _this$ = ecx

; 160  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 161  : 		return m_nSize;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 162  : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 310  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 311  : 	RemoveAll();

  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 312  : }

  0002e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00031	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00038	59		 pop	 ecx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 120  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 121  : 	}

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_ATL_COM_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
??1_ATL_COM_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
;	COMDAT ??0_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_this$ = -4						; size = 4
??0_ATL_COM_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	89 45 f8	 mov	 DWORD PTR _this$[ebp], eax

; 125  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  00012	33 c9		 xor	 ecx, ecx
  00014	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00017	89 0a		 mov	 DWORD PTR [edx], ecx
  00019	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0001c	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  0001f	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  00022	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
  00025	89 4a 14	 mov	 DWORD PTR [edx+20], ecx
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??0_ATL_COM_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\afx.inl
;	COMDAT ?_AfxInitManaged@@YAHXZ
_TEXT	SEGMENT
?_AfxInitManaged@@YAHXZ PROC				; _AfxInitManaged, COMDAT

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 77   : 	return 0;

  00003	33 c0		 xor	 eax, eax

; 78   : }

  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
?_AfxInitManaged@@YAHXZ ENDP				; _AfxInitManaged
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpstr.h
;	COMDAT ?SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMgr$ = 8						; size = 4
?SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@2@@Z PROC ; ATL::CNilStringData::SetManager, COMDAT
; _this$ = ecx

; 123  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 124  : 		ATLASSERT( pStringMgr == NULL );

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000d	74 24		 je	 SHORT $LN3@SetManager
  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@MEFFJNJ@?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00019	6a 00		 push	 0
  0001b	6a 7c		 push	 124			; 0000007cH
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_1OI@LKICOBAJ@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00022	6a 02		 push	 2
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0002a	83 c4 18	 add	 esp, 24			; 00000018H
  0002d	83 f8 01	 cmp	 eax, 1
  00030	75 01		 jne	 SHORT $LN3@SetManager
  00032	cc		 int	 3
$LN3@SetManager:

; 125  : 		pStringMgr = pMgr;

  00033	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 45 08	 mov	 eax, DWORD PTR _pMgr$[ebp]
  00039	89 02		 mov	 DWORD PTR [edx], eax

; 126  : 	}

  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
?SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@2@@Z ENDP ; ATL::CNilStringData::SetManager
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpstr.h
;	COMDAT ??0CNilStringData@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CNilStringData@ATL@@QAE@XZ PROC			; ATL::CNilStringData::CNilStringData, COMDAT
; _this$ = ecx

; 112  : 	CNilStringData() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 113  : 	{
; 114  : 		pStringMgr = NULL;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 115  : 		nRefs = 2;  // Never gets freed by IAtlStringMgr

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 0c 02 00
	00 00		 mov	 DWORD PTR [ecx+12], 2

; 116  : 		nDataLength = 0;

  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0

; 117  : 		nAllocLength = 0;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 118  : 		achNil[0] = 0;

  0002e	b9 02 00 00 00	 mov	 ecx, 2
  00033	6b d1 00	 imul	 edx, ecx, 0
  00036	33 c0		 xor	 eax, eax
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	66 89 44 11 10	 mov	 WORD PTR [ecx+edx+16], ax

; 119  : 		achNil[1] = 0;

  00040	ba 02 00 00 00	 mov	 edx, 2
  00045	c1 e2 00	 shl	 edx, 0
  00048	33 c0		 xor	 eax, eax
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	66 89 44 11 10	 mov	 WORD PTR [ecx+edx+16], ax

; 120  : 	}

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
??0CNilStringData@ATL@@QAE@XZ ENDP			; ATL::CNilStringData::CNilStringData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlsimpstr.h
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AddRef@CStringData@ATL@@QAEXXZ PROC			; ATL::CStringData::AddRef, COMDAT
; _this$ = ecx

; 63   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 64   : 		ATLASSERT(nRefs > 0);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0000e	7f 24		 jg	 SHORT $LN3@AddRef
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@BLGCOAPB@?$AAn?$AAR?$AAe?$AAf?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0@
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0001a	6a 00		 push	 0
  0001c	6a 40		 push	 64			; 00000040H
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_1OI@LKICOBAJ@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00023	6a 02		 push	 2
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0002b	83 c4 18	 add	 esp, 24			; 00000018H
  0002e	83 f8 01	 cmp	 eax, 1
  00031	75 01		 jne	 SHORT $LN3@AddRef
  00033	cc		 int	 3
$LN3@AddRef:

; 65   : 		_InterlockedIncrement(&nRefs);

  00034	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00037	83 c2 0c	 add	 edx, 12			; 0000000cH
  0003a	f0 ff 02	 lock	  inc	 DWORD PTR [edx]

; 66   : 	}

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?AddRef@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlAdd@H@ATL@@YAJPAHHH@Z
_TEXT	SEGMENT
tv73 = -4						; size = 4
_ptResult$ = 8						; size = 4
_tLeft$ = 12						; size = 4
_tRight$ = 16						; size = 4
??$AtlAdd@H@ATL@@YAJPAHHH@Z PROC			; ATL::AtlAdd<int>, COMDAT

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00004	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00009	2b 45 0c	 sub	 eax, DWORD PTR _tLeft$[ebp]
  0000c	3b 45 10	 cmp	 eax, DWORD PTR _tRight$[ebp]
  0000f	7d 31		 jge	 SHORT $LN2@AtlAdd
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00011	b9 16 02 00 00	 mov	 ecx, 534		; 00000216H
  00016	85 c9		 test	 ecx, ecx
  00018	7f 09		 jg	 SHORT $LN6@AtlAdd
  0001a	c7 45 fc 16 02
	00 00		 mov	 DWORD PTR tv73[ebp], 534 ; 00000216H
  00021	eb 1a		 jmp	 SHORT $LN4@AtlAdd
$LN6@AtlAdd:
  00023	ba 16 02 00 00	 mov	 edx, 534		; 00000216H
  00028	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  0002e	81 ca 00 00 07
	00		 or	 edx, 458752		; 00070000H
  00034	81 ca 00 00 00
	80		 or	 edx, -2147483648	; 80000000H
  0003a	89 55 fc	 mov	 DWORD PTR tv73[ebp], edx
$LN4@AtlAdd:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 87   : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0003d	8b 45 fc	 mov	 eax, DWORD PTR tv73[ebp]
  00040	eb 0d		 jmp	 SHORT $LN1@AtlAdd
$LN2@AtlAdd:

; 88   : 	}
; 89   : 	*ptResult= tLeft + tRight;

  00042	8b 45 0c	 mov	 eax, DWORD PTR _tLeft$[ebp]
  00045	03 45 10	 add	 eax, DWORD PTR _tRight$[ebp]
  00048	8b 4d 08	 mov	 ecx, DWORD PTR _ptResult$[ebp]
  0004b	89 01		 mov	 DWORD PTR [ecx], eax

; 90   : 	return S_OK;

  0004d	33 c0		 xor	 eax, eax
$LN1@AtlAdd:

; 91   : }

  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$AtlAdd@H@ATL@@YAJPAHHH@Z ENDP			; ATL::AtlAdd<int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlAdd@I@ATL@@YAJPAIII@Z
_TEXT	SEGMENT
tv73 = -4						; size = 4
_ptResult$ = 8						; size = 4
_tLeft$ = 12						; size = 4
_tRight$ = 16						; size = 4
??$AtlAdd@I@ATL@@YAJPAIII@Z PROC			; ATL::AtlAdd<unsigned int>, COMDAT

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00004	83 c8 ff	 or	 eax, -1
  00007	2b 45 0c	 sub	 eax, DWORD PTR _tLeft$[ebp]
  0000a	3b 45 10	 cmp	 eax, DWORD PTR _tRight$[ebp]
  0000d	73 31		 jae	 SHORT $LN2@AtlAdd
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0000f	b9 16 02 00 00	 mov	 ecx, 534		; 00000216H
  00014	85 c9		 test	 ecx, ecx
  00016	7f 09		 jg	 SHORT $LN6@AtlAdd
  00018	c7 45 fc 16 02
	00 00		 mov	 DWORD PTR tv73[ebp], 534 ; 00000216H
  0001f	eb 1a		 jmp	 SHORT $LN4@AtlAdd
$LN6@AtlAdd:
  00021	ba 16 02 00 00	 mov	 edx, 534		; 00000216H
  00026	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  0002c	81 ca 00 00 07
	00		 or	 edx, 458752		; 00070000H
  00032	81 ca 00 00 00
	80		 or	 edx, -2147483648	; 80000000H
  00038	89 55 fc	 mov	 DWORD PTR tv73[ebp], edx
$LN4@AtlAdd:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 87   : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR tv73[ebp]
  0003e	eb 0d		 jmp	 SHORT $LN1@AtlAdd
$LN2@AtlAdd:

; 88   : 	}
; 89   : 	*ptResult= tLeft + tRight;

  00040	8b 45 0c	 mov	 eax, DWORD PTR _tLeft$[ebp]
  00043	03 45 10	 add	 eax, DWORD PTR _tRight$[ebp]
  00046	8b 4d 08	 mov	 ecx, DWORD PTR _ptResult$[ebp]
  00049	89 01		 mov	 DWORD PTR [ecx], eax

; 90   : 	return S_OK;

  0004b	33 c0		 xor	 eax, eax
$LN1@AtlAdd:

; 91   : }

  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??$AtlAdd@I@ATL@@YAJPAIII@Z ENDP			; ATL::AtlAdd<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GCWin32Heap@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCWin32Heap@ATL@@UAEPAXI@Z PROC			; ATL::CWin32Heap::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWin32Heap@ATL@@UAE@XZ ; ATL::CWin32Heap::~CWin32Heap
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0e		 je	 SHORT $LN2@scalar
  00017	6a 0c		 push	 12			; 0000000cH
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCWin32Heap@ATL@@UAEPAXI@Z ENDP			; ATL::CWin32Heap::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlmem.h
;	COMDAT ?GetSize@CWin32Heap@ATL@@UAEIPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?GetSize@CWin32Heap@ATL@@UAEIPAX@Z PROC			; ATL::CWin32Heap::GetSize, COMDAT
; _this$ = ecx

; 175  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 176  : 		return( ::HeapSize( m_hHeap, 0, p ) );

  00007	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00013	52		 push	 edx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapSize@12

; 177  : 	}

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?GetSize@CWin32Heap@ATL@@UAEIPAX@Z ENDP			; ATL::CWin32Heap::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlmem.h
;	COMDAT ?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
_nBytes$ = 12						; size = 4
?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z PROC		; ATL::CWin32Heap::Reallocate, COMDAT
; _this$ = ecx

; 160  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 161  : 		if( p == NULL )

  00007	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  0000b	75 12		 jne	 SHORT $LN2@Reallocate

; 162  : 		{
; 163  : 			return( Allocate( nBytes ) );

  0000d	8b 45 0c	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	8b 02		 mov	 eax, DWORD PTR [edx]
  0001b	ff d0		 call	 eax
  0001d	eb 32		 jmp	 SHORT $LN1@Reallocate
$LN2@Reallocate:

; 164  : 		}
; 165  : 
; 166  : 		if (nBytes==0)

  0001f	83 7d 0c 00	 cmp	 DWORD PTR _nBytes$[ebp], 0
  00023	75 15		 jne	 SHORT $LN3@Reallocate

; 167  : 		{
; 168  : 			  Free(p);

  00025	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00028	51		 push	 ecx
  00029	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002c	8b 02		 mov	 eax, DWORD PTR [edx]
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00034	ff d2		 call	 edx

; 169  : 			  return NULL;

  00036	33 c0		 xor	 eax, eax
  00038	eb 17		 jmp	 SHORT $LN1@Reallocate
$LN3@Reallocate:

; 170  : 		}
; 171  : 
; 172  : 		return( ::HeapReAlloc( m_hHeap, 0, p, nBytes ) );

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _nBytes$[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00041	51		 push	 ecx
  00042	6a 00		 push	 0
  00044	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00047	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004a	50		 push	 eax
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapReAlloc@16
$LN1@Reallocate:

; 173  : 	}

  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 08 00	 ret	 8
?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z ENDP		; ATL::CWin32Heap::Reallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlmem.h
;	COMDAT ?Free@CWin32Heap@ATL@@UAEXPAX@Z
_TEXT	SEGMENT
_bSuccess$1 = -8					; size = 4
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?Free@CWin32Heap@ATL@@UAEXPAX@Z PROC			; ATL::CWin32Heap::Free, COMDAT
; _this$ = ecx

; 148  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 149  : 		if( p != NULL )

  00009	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  0000d	74 43		 je	 SHORT $LN1@Free

; 150  : 		{
; 151  : 			BOOL bSuccess;
; 152  : 
; 153  : 			bSuccess = ::HeapFree( m_hHeap, 0, p );

  0000f	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001b	52		 push	 edx
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12
  00022	89 45 f8	 mov	 DWORD PTR _bSuccess$1[ebp], eax

; 154  : 			ATLASSERT( bSuccess );

  00025	83 7d f8 00	 cmp	 DWORD PTR _bSuccess$1[ebp], 0
  00029	75 27		 jne	 SHORT $LN1@Free
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@PMINONJG@?$AAb?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs@
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00035	6a 00		 push	 0
  00037	68 9a 00 00 00	 push	 154			; 0000009aH
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@FNEDKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00041	6a 02		 push	 2
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00049	83 c4 18	 add	 esp, 24			; 00000018H
  0004c	83 f8 01	 cmp	 eax, 1
  0004f	75 01		 jne	 SHORT $LN1@Free
  00051	cc		 int	 3
$LN1@Free:

; 155  : 		}
; 156  : 	}

  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?Free@CWin32Heap@ATL@@UAEXPAX@Z ENDP			; ATL::CWin32Heap::Free
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlmem.h
;	COMDAT ?Allocate@CWin32Heap@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?Allocate@CWin32Heap@ATL@@UAEPAXI@Z PROC		; ATL::CWin32Heap::Allocate, COMDAT
; _this$ = ecx

; 144  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 145  : 		return( ::HeapAlloc( m_hHeap, 0, nBytes ) );

  00007	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00013	52		 push	 edx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapAlloc@12

; 146  : 	}

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?Allocate@CWin32Heap@ATL@@UAEPAXI@Z ENDP		; ATL::CWin32Heap::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlmem.h
;	COMDAT ??1CWin32Heap@ATL@@UAE@XZ
_TEXT	SEGMENT
_bSuccess$1 = -8					; size = 4
_this$ = -4						; size = 4
??1CWin32Heap@ATL@@UAE@XZ PROC				; ATL::CWin32Heap::~CWin32Heap, COMDAT
; _this$ = ecx

; 109  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CWin32Heap@ATL@@6B@

; 110  : #ifdef _ATL_USE_WINAPI_FAMILY_DESKTOP_APP
; 111  : 		if( m_bOwnHeap && (m_hHeap != NULL) )

  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	0f b6 51 08	 movzx	 edx, BYTE PTR [ecx+8]
  00019	85 d2		 test	 edx, edx
  0001b	74 43		 je	 SHORT $LN1@CWin32Heap
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00024	74 3a		 je	 SHORT $LN1@CWin32Heap

; 112  : 		{
; 113  : 			BOOL bSuccess;
; 114  : 
; 115  : 			bSuccess = ::HeapDestroy( m_hHeap );

  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002c	52		 push	 edx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapDestroy@4
  00033	89 45 f8	 mov	 DWORD PTR _bSuccess$1[ebp], eax

; 116  : 			ATLASSERT( bSuccess );

  00036	83 7d f8 00	 cmp	 DWORD PTR _bSuccess$1[ebp], 0
  0003a	75 24		 jne	 SHORT $LN1@CWin32Heap
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@PMINONJG@?$AAb?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00046	6a 00		 push	 0
  00048	6a 74		 push	 116			; 00000074H
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@FNEDKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0004f	6a 02		 push	 2
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00057	83 c4 18	 add	 esp, 24			; 00000018H
  0005a	83 f8 01	 cmp	 eax, 1
  0005d	75 01		 jne	 SHORT $LN1@CWin32Heap
  0005f	cc		 int	 3
$LN1@CWin32Heap:

; 117  : 		}
; 118  : #endif
; 119  : 	}

  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
??1CWin32Heap@ATL@@UAE@XZ ENDP				; ATL::CWin32Heap::~CWin32Heap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlmem.h
;	COMDAT ??0CWin32Heap@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hHeap$ = 8						; size = 4
??0CWin32Heap@ATL@@QAE@PAX@Z PROC			; ATL::CWin32Heap::CWin32Heap, COMDAT
; _this$ = ecx

; 89   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CWin32Heap@ATL@@6B@

; 87   : 		m_hHeap( hHeap ),

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 55 08	 mov	 edx, DWORD PTR _hHeap$[ebp]
  00016	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 88   : 		m_bOwnHeap( false )

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c6 40 08 00	 mov	 BYTE PTR [eax+8], 0

; 90   : 		ATLASSERT( hHeap != NULL );

  00020	83 7d 08 00	 cmp	 DWORD PTR _hHeap$[ebp], 0
  00024	75 24		 jne	 SHORT $LN1@CWin32Heap
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@CLPBKBHG@?$AAh?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00030	6a 00		 push	 0
  00032	6a 5a		 push	 90			; 0000005aH
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_1OA@FNEDKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN1@CWin32Heap
  00049	cc		 int	 3
$LN1@CWin32Heap:

; 91   : 	}

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 04 00	 ret	 4
??0CWin32Heap@ATL@@QAE@PAX@Z ENDP			; ATL::CWin32Heap::CWin32Heap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ PROC ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT
; _this$ = ecx

; 289  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 290  : 		return m_hInst;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 291  : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Term@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Term, COMDAT
; _this$ = ecx

; 154  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 155  : 		DeleteCriticalSection(&m_sec);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4

; 156  : 		return S_OK;

  00011	33 c0		 xor	 eax, eax

; 157  : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Term@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Term
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlwinverapi.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
;	COMDAT ?Init@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
_hRes$ = -12						; size = 4
tv77 = -8						; size = 4
_x$ = -4						; size = 4
?Init@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Init, COMDAT
; _this$ = ecx

; 143  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 144  : 		HRESULT hRes = S_OK;

  00009	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlwinverapi.h

; 735  : 	return ::InitializeCriticalSectionAndSpinCount(lpCriticalSection, dwSpinCount);

  00010	6a 00		 push	 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h

; 145  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

  00012	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlwinverapi.h

; 735  : 	return ::InitializeCriticalSectionAndSpinCount(lpCriticalSection, dwSpinCount);

  00015	50		 push	 eax
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionAndSpinCount@8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h

; 145  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

  0001c	85 c0		 test	 eax, eax
  0001e	75 35		 jne	 SHORT $LN2@Init

; 147  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00026	89 45 fc	 mov	 DWORD PTR _x$[ebp], eax
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00029	83 7d fc 00	 cmp	 DWORD PTR _x$[ebp], 0
  0002d	7f 08		 jg	 SHORT $LN8@Init
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _x$[ebp]
  00032	89 4d f8	 mov	 DWORD PTR tv77[ebp], ecx
  00035	eb 18		 jmp	 SHORT $LN6@Init
$LN8@Init:
  00037	8b 55 fc	 mov	 edx, DWORD PTR _x$[ebp]
  0003a	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00040	81 ca 00 00 07
	00		 or	 edx, 458752		; 00070000H
  00046	81 ca 00 00 00
	80		 or	 edx, -2147483648	; 80000000H
  0004c	89 55 f8	 mov	 DWORD PTR tv77[ebp], edx
$LN6@Init:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h

; 147  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

  0004f	8b 45 f8	 mov	 eax, DWORD PTR tv77[ebp]
  00052	89 45 f4	 mov	 DWORD PTR _hRes$[ebp], eax
$LN2@Init:

; 148  : 		}
; 149  : 
; 150  : 		return hRes;

  00055	8b 45 f4	 mov	 eax, DWORD PTR _hRes$[ebp]

; 151  : 	}

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?Init@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Init
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
;	COMDAT ??1CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::~CComCriticalSection, COMDAT
; _this$ = ecx

; 129  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 130  : 	}

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
??1CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::~CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlcore.h
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::CComCriticalSection, COMDAT
; _this$ = ecx

; 123  : 	CComCriticalSection() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 124  : 	{
; 125  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  00007	33 c0		 xor	 eax, eax
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax
  0000e	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00011	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00014	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  00017	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  0001a	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 126  : 	}

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??0CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlwinverapi.h
;	COMDAT ?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z
_TEXT	SEGMENT
_lpCriticalSection$ = 8					; size = 4
_dwSpinCount$ = 12					; size = 4
_Flags$ = 16						; size = 4
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z PROC ; ATL::_AtlInitializeCriticalSectionEx, COMDAT

; 727  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 728  : #if (NTDDI_VERSION >= NTDDI_VISTA) && !defined(_USING_V110_SDK71_) && !defined(_ATL_XP_TARGETING)
; 729  : 	// InitializeCriticalSectionEx is available in Vista or later, desktop or store apps
; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);
; 731  : #else
; 732  : 	UNREFERENCED_PARAMETER(Flags);
; 733  : 
; 734  : 	// ...otherwise fall back to using InitializeCriticalSectionAndSpinCount.
; 735  : 	return ::InitializeCriticalSectionAndSpinCount(lpCriticalSection, dwSpinCount);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _dwSpinCount$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _lpCriticalSection$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionAndSpinCount@8

; 736  : #endif
; 737  : }

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ENDP ; ATL::_AtlInitializeCriticalSectionEx
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlexcept.h
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT
_dwExceptionCode$ = 8					; size = 4
_dwExceptionFlags$ = 12					; size = 4
?_AtlRaiseException@ATL@@YAXKK@Z PROC			; ATL::_AtlRaiseException, COMDAT

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	RaiseException( dwExceptionCode, dwExceptionFlags, 0, NULL );

  00003	6a 00		 push	 0
  00005	6a 00		 push	 0
  00007	8b 45 0c	 mov	 eax, DWORD PTR _dwExceptionFlags$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _dwExceptionCode$[ebp]
  0000e	51		 push	 ecx
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RaiseException@16

; 32   : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?_AtlRaiseException@ATL@@YAXKK@Z ENDP			; ATL::_AtlRaiseException
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
_TEXT	SEGMENT
_ple$ = -20						; size = 4
_ptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ PROC		; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 421  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 392  : 		m_dwLastError = GetLastError();

  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0002b	89 45 ec	 mov	 DWORD PTR _ple$[ebp], eax

; 422  : 		CPreserveLastError ple;

  0002e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 423  : 		va_list ptr; va_start(ptr, pszFmt);

  00035	8d 45 18	 lea	 eax, DWORD PTR _pszFmt$[ebp+4]
  00038	89 45 f0	 mov	 DWORD PTR _ptr$[ebp], eax

; 424  : 		ATL::CTrace::TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

  0003b	8b 4d f0	 mov	 ecx, DWORD PTR _ptr$[ebp]
  0003e	51		 push	 ecx
  0003f	8b 55 14	 mov	 edx, DWORD PTR _pszFmt$[ebp]
  00042	52		 push	 edx
  00043	8b 45 10	 mov	 eax, DWORD PTR _nLevel$[ebp]
  00046	50		 push	 eax
  00047	8b 4d 0c	 mov	 ecx, DWORD PTR _dwCategory$[ebp]
  0004a	51		 push	 ecx
  0004b	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0004e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00051	50		 push	 eax
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	8b 11		 mov	 edx, DWORD PTR [ecx]
  00057	52		 push	 edx
  00058	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z ; ATL::CTrace::TraceV
  0005d	83 c4 18	 add	 esp, 24			; 00000018H

; 425  : 		va_end(ptr);

  00060	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _ptr$[ebp], 0

; 426  : 	}

  00067	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 397  : 		SetLastError(m_dwLastError);

  0006e	8b 45 ec	 mov	 eax, DWORD PTR _ple$[ebp]
  00071	50		 push	 eax
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetLastError@4

; 426  : 	}

  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR _ple$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CPreserveLastError@ATL@@QAE@XZ ; ATL::CPreserveLastError::~CPreserveLastError
__ehhandler$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??RCTraceFileAndLineInfo@ATL@@QBAXHIPBDZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 411  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _nLineNo$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 412  : 	}

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??1CPreserveLastError@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPreserveLastError@ATL@@QAE@XZ PROC			; ATL::CPreserveLastError::~CPreserveLastError, COMDAT
; _this$ = ecx

; 396  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 397  : 		SetLastError(m_dwLastError);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetLastError@4

; 398  : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??1CPreserveLastError@ATL@@QAE@XZ ENDP			; ATL::CPreserveLastError::~CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0CPreserveLastError@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPreserveLastError@ATL@@QAE@XZ PROC			; ATL::CPreserveLastError::CPreserveLastError, COMDAT
; _this$ = ecx

; 390  : 	CPreserveLastError()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 391  : 	{
; 392  : 		m_dwLastError = GetLastError();

  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	89 01		 mov	 DWORD PTR [ecx], eax

; 393  : 	}

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??0CPreserveLastError@ATL@@QAE@XZ ENDP			; ATL::CPreserveLastError::CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_p$1 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d f8	 mov	 DWORD PTR _p$1[ebp], ecx

; 267  : 		free(p);

  00011	8b 55 f8	 mov	 edx, DWORD PTR _p$1[ebp]
  00014	52		 push	 edx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0001b	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_i64Result$1 = -24					; size = 8
_this$ = -16						; size = 4
_nBytes$ = -12						; size = 4
$T2 = -8						; size = 4
tv87 = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 455  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 456  : 		size_t nBytes=0;

  00009	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nBytes$[ebp], 0

; 136  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00010	b9 01 00 00 00	 mov	 ecx, 1
  00015	8b 45 08	 mov	 eax, DWORD PTR _nElements$[ebp]
  00018	f7 e1		 mul	 ecx
  0001a	89 45 e8	 mov	 DWORD PTR _i64Result$1[ebp], eax
  0001d	89 55 ec	 mov	 DWORD PTR _i64Result$1[ebp+4], edx

; 137  : 	if(i64Result>UINT_MAX)

  00020	83 7d ec 00	 cmp	 DWORD PTR _i64Result$1[ebp+4], 0
  00024	77 06		 ja	 SHORT $LN17@Allocate
  00026	83 7d e8 ff	 cmp	 DWORD PTR _i64Result$1[ebp], -1
  0002a	76 31		 jbe	 SHORT $LN5@Allocate
$LN17@Allocate:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0002c	ba 16 02 00 00	 mov	 edx, 534		; 00000216H
  00031	85 d2		 test	 edx, edx
  00033	7f 09		 jg	 SHORT $LN9@Allocate
  00035	c7 45 fc 16 02
	00 00		 mov	 DWORD PTR tv87[ebp], 534 ; 00000216H
  0003c	eb 17		 jmp	 SHORT $LN7@Allocate
$LN9@Allocate:
  0003e	b8 16 02 00 00	 mov	 eax, 534		; 00000216H
  00043	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00048	0d 00 00 07 00	 or	 eax, 458752		; 00070000H
  0004d	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  00052	89 45 fc	 mov	 DWORD PTR tv87[ebp], eax
$LN7@Allocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 139  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00055	8b 4d fc	 mov	 ecx, DWORD PTR tv87[ebp]
  00058	89 4d f8	 mov	 DWORD PTR $T2[ebp], ecx
  0005b	eb 0d		 jmp	 SHORT $LN4@Allocate
$LN5@Allocate:

; 140  : 	}
; 141  : 	*piResult=static_cast<unsigned int>(i64Result);

  0005d	8b 55 e8	 mov	 edx, DWORD PTR _i64Result$1[ebp]
  00060	89 55 f4	 mov	 DWORD PTR _nBytes$[ebp], edx

; 142  : 	return S_OK;

  00063	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
$LN4@Allocate:

; 457  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))

  0006a	83 7d f8 00	 cmp	 DWORD PTR $T2[ebp], 0
  0006e	7d 04		 jge	 SHORT $LN2@Allocate

; 458  : 		{
; 459  : 			return false;

  00070	32 c0		 xor	 al, al
  00072	eb 0c		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 460  : 		}
; 461  : 		return this->AllocateBytes(nBytes);

  00074	8b 45 f4	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00077	50		 push	 eax
  00078	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:

; 462  : 	}

  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 434  : 	CHeapPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		m_pData(NULL)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 435  : 	{
; 436  : 	}

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free, COMDAT
; _this$ = ecx

; 407  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d f8	 mov	 DWORD PTR _p$[ebp], ecx

; 267  : 		free(p);

  00011	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  00014	52		 push	 edx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0001b	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 410  : 	}

  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 381  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 382  : 		ATLASSERT(m_pData == NULL);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000d	74 27		 je	 SHORT $LN5@AllocateBy
  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00019	6a 00		 push	 0
  0001b	68 7e 01 00 00	 push	 382			; 0000017eH
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00025	6a 02		 push	 2
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0002d	83 c4 18	 add	 esp, 24			; 00000018H
  00030	83 f8 01	 cmp	 eax, 1
  00033	75 01		 jne	 SHORT $LN5@AllocateBy
  00035	cc		 int	 3
$LN5@AllocateBy:

; 262  : 		return malloc(nBytes);

  00036	8b 55 08	 mov	 edx, DWORD PTR _nBytes$[ebp]
  00039	52		 push	 edx
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00040	83 c4 04	 add	 esp, 4

; 383  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	89 01		 mov	 DWORD PTR [ecx], eax

; 384  : 		if (m_pData == NULL)

  00048	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0004e	75 04		 jne	 SHORT $LN2@AllocateBy

; 385  : 			return false;

  00050	32 c0		 xor	 al, al
  00052	eb 02		 jmp	 SHORT $LN1@AllocateBy
$LN2@AllocateBy:

; 386  : 
; 387  : 		return true;

  00054	b0 01		 mov	 al, 1
$LN1@AllocateBy:

; 388  : 	}

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *, COMDAT
; _this$ = ecx

; 363  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 364  : 		return m_pData;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]

; 365  : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QBEPADXZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 349  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d f8	 mov	 DWORD PTR _p$[ebp], ecx

; 267  : 		free(p);

  00011	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  00014	52		 push	 edx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0001b	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 350  : 		Free();
; 351  : 	}

  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 336  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		m_pData(NULL)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 337  : 	}

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IAE@XZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_p$1 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d f8	 mov	 DWORD PTR _p$1[ebp], ecx

; 267  : 		free(p);

  00011	8b 55 f8	 mov	 edx, DWORD PTR _p$1[ebp]
  00014	52		 push	 edx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0001b	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_i64Result$1 = -24					; size = 8
_this$ = -16						; size = 4
_nBytes$ = -12						; size = 4
$T2 = -8						; size = 4
tv87 = -4						; size = 4
_nElements$ = 8						; size = 4
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 455  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 456  : 		size_t nBytes=0;

  00009	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _nBytes$[ebp], 0

; 136  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00010	b9 02 00 00 00	 mov	 ecx, 2
  00015	8b 45 08	 mov	 eax, DWORD PTR _nElements$[ebp]
  00018	f7 e1		 mul	 ecx
  0001a	89 45 e8	 mov	 DWORD PTR _i64Result$1[ebp], eax
  0001d	89 55 ec	 mov	 DWORD PTR _i64Result$1[ebp+4], edx

; 137  : 	if(i64Result>UINT_MAX)

  00020	83 7d ec 00	 cmp	 DWORD PTR _i64Result$1[ebp+4], 0
  00024	77 06		 ja	 SHORT $LN17@Allocate
  00026	83 7d e8 ff	 cmp	 DWORD PTR _i64Result$1[ebp], -1
  0002a	76 31		 jbe	 SHORT $LN5@Allocate
$LN17@Allocate:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0002c	ba 16 02 00 00	 mov	 edx, 534		; 00000216H
  00031	85 d2		 test	 edx, edx
  00033	7f 09		 jg	 SHORT $LN9@Allocate
  00035	c7 45 fc 16 02
	00 00		 mov	 DWORD PTR tv87[ebp], 534 ; 00000216H
  0003c	eb 17		 jmp	 SHORT $LN7@Allocate
$LN9@Allocate:
  0003e	b8 16 02 00 00	 mov	 eax, 534		; 00000216H
  00043	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00048	0d 00 00 07 00	 or	 eax, 458752		; 00070000H
  0004d	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  00052	89 45 fc	 mov	 DWORD PTR tv87[ebp], eax
$LN7@Allocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 139  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00055	8b 4d fc	 mov	 ecx, DWORD PTR tv87[ebp]
  00058	89 4d f8	 mov	 DWORD PTR $T2[ebp], ecx
  0005b	eb 0d		 jmp	 SHORT $LN4@Allocate
$LN5@Allocate:

; 140  : 	}
; 141  : 	*piResult=static_cast<unsigned int>(i64Result);

  0005d	8b 55 e8	 mov	 edx, DWORD PTR _i64Result$1[ebp]
  00060	89 55 f4	 mov	 DWORD PTR _nBytes$[ebp], edx

; 142  : 	return S_OK;

  00063	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
$LN4@Allocate:

; 457  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))

  0006a	83 7d f8 00	 cmp	 DWORD PTR $T2[ebp], 0
  0006e	7d 04		 jge	 SHORT $LN2@Allocate

; 458  : 		{
; 459  : 			return false;

  00070	32 c0		 xor	 al, al
  00072	eb 0c		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 460  : 		}
; 461  : 		return this->AllocateBytes(nBytes);

  00074	8b 45 f4	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00077	50		 push	 eax
  00078	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:

; 462  : 	}

  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 434  : 	CHeapPtr() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		m_pData(NULL)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 435  : 	{
; 436  : 	}

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free, COMDAT
; _this$ = ecx

; 407  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d f8	 mov	 DWORD PTR _p$[ebp], ecx

; 267  : 		free(p);

  00011	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  00014	52		 push	 edx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0001b	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 410  : 	}

  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 381  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 382  : 		ATLASSERT(m_pData == NULL);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000d	74 27		 je	 SHORT $LN5@AllocateBy
  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00019	6a 00		 push	 0
  0001b	68 7e 01 00 00	 push	 382			; 0000017eH
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@IAPLKPHI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00025	6a 02		 push	 2
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0002d	83 c4 18	 add	 esp, 24			; 00000018H
  00030	83 f8 01	 cmp	 eax, 1
  00033	75 01		 jne	 SHORT $LN5@AllocateBy
  00035	cc		 int	 3
$LN5@AllocateBy:

; 262  : 		return malloc(nBytes);

  00036	8b 55 08	 mov	 edx, DWORD PTR _nBytes$[ebp]
  00039	52		 push	 edx
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00040	83 c4 04	 add	 esp, 4

; 383  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	89 01		 mov	 DWORD PTR [ecx], eax

; 384  : 		if (m_pData == NULL)

  00048	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0004e	75 04		 jne	 SHORT $LN2@AllocateBy

; 385  : 			return false;

  00050	32 c0		 xor	 al, al
  00052	eb 02		 jmp	 SHORT $LN1@AllocateBy
$LN2@AllocateBy:

; 386  : 
; 387  : 		return true;

  00054	b0 01		 mov	 al, 1
$LN1@AllocateBy:

; 388  : 	}

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *, COMDAT
; _this$ = ecx

; 363  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 364  : 		return m_pData;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]

; 365  : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_p$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 349  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 		Allocator::Free(m_pData);

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d f8	 mov	 DWORD PTR _p$[ebp], ecx

; 267  : 		free(p);

  00011	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  00014	52		 push	 edx
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0001b	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 350  : 		Free();
; 351  : 	}

  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 336  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 335  : 		m_pData(NULL)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 337  : 	}

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z
_TEXT	SEGMENT
_buffer$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 330  : 		if (pszCategory == nullptr)

  00013	83 7d 08 00	 cmp	 DWORD PTR _pszCategory$[ebp], 0
  00017	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  00019	e9 a9 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  0001e	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00025	72 2d		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  00027	33 c0		 xor	 eax, eax
  00029	75 27		 jne	 SHORT $LN5@RegisterCa
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00035	6a 00		 push	 0
  00037	68 51 01 00 00	 push	 337			; 00000151H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1OE@PDFAMNPL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00041	6a 02		 push	 2
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00049	83 c4 18	 add	 esp, 24			; 00000018H
  0004c	83 f8 01	 cmp	 eax, 1
  0004f	75 01		 jne	 SHORT $LN5@RegisterCa
  00051	cc		 int	 3
$LN5@RegisterCa:

; 338  : 			return;

  00052	eb 73		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  00054	69 15 00 00 00
	00 04 01 00 00	 imul	 edx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  0005e	8b 45 0c	 mov	 eax, DWORD PTR _nCategory$[ebp]
  00061	89 82 00 00 00
	00		 mov	 DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[edx], eax

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);
; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	

  00067	68 00 01 00 00	 push	 256			; 00000100H
  0006c	6a 00		 push	 0
  0006e	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 _memset
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);

  0007d	8b 55 08	 mov	 edx, DWORD PTR _pszCategory$[ebp]
  00080	52		 push	 edx
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  00086	6a 7f		 push	 127			; 0000007fH
  00088	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 _swprintf_s
  00094	83 c4 10	 add	 esp, 16			; 00000010H

; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);

  00097	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  0009d	51		 push	 ecx
  0009e	6a 7f		 push	 127			; 0000007fH
  000a0	69 15 00 00 00
	00 04 01 00 00	 imul	 edx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  000aa	81 c2 04 00 00
	00		 add	 edx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  000b0	52		 push	 edx
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000b7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000bf	83 c0 01	 add	 eax, 1
  000c2	a3 00 00 00 00	 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  000c7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ca	33 cd		 xor	 ecx, ebp
  000cc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
_TEXT	SEGMENT
_p$2 = -96						; size = 4
_p$3 = -92						; size = 4
$T4 = -88						; size = 4
_p$5 = -84						; size = 4
_p$6 = -80						; size = 4
$T7 = -76						; size = 4
$T8 = -72						; size = 4
$T9 = -68						; size = 4
_p$10 = -64						; size = 4
_p$11 = -60						; size = 4
_p$12 = -56						; size = 4
$T13 = -52						; size = 4
$T14 = -48						; size = 4
_p$15 = -44						; size = 4
tv236 = -40						; size = 4
__Result$16 = -36					; size = 4
tv202 = -32						; size = 4
__Result$17 = -28					; size = 4
_cchNeeded$ = -24					; size = 4
_wszBuf$ = -20						; size = 4
_szBuf$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
_dwCategory$ = 16					; size = 4
_nLevel$ = 20						; size = 4
_pszFmt$ = 24						; size = 4
_args$ = 28						; size = 4
?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 238  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 54	 sub	 esp, 84			; 00000054H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h

; 1659 :         int const _Result = __stdio_common_vsprintf(

  00025	8b 45 1c	 mov	 eax, DWORD PTR _args$[ebp]
  00028	50		 push	 eax
  00029	6a 00		 push	 0
  0002b	8b 4d 18	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  0002e	51		 push	 ecx
  0002f	6a 00		 push	 0
  00031	6a 00		 push	 0
  00033	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00038	8b 10		 mov	 edx, DWORD PTR [eax]
  0003a	83 ca 02	 or	 edx, 2
  0003d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00040	50		 push	 eax
  00041	52		 push	 edx
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00048	83 c4 1c	 add	 esp, 28			; 0000001cH
  0004b	89 45 e4	 mov	 DWORD PTR __Result$17[ebp], eax

; 1660 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1661 :             NULL, 0, _Format, _Locale, _ArgList);
; 1662 : 
; 1663 :         return _Result < 0 ? -1 : _Result;

  0004e	83 7d e4 00	 cmp	 DWORD PTR __Result$17[ebp], 0
  00052	7d 09		 jge	 SHORT $LN14@TraceV
  00054	c7 45 e0 ff ff
	ff ff		 mov	 DWORD PTR tv202[ebp], -1
  0005b	eb 06		 jmp	 SHORT $LN10@TraceV
$LN14@TraceV:
  0005d	8b 4d e4	 mov	 ecx, DWORD PTR __Result$17[ebp]
  00060	89 4d e0	 mov	 DWORD PTR tv202[ebp], ecx
$LN10@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 239  : 		int cchNeeded = _vscprintf(pszFmt, args);

  00063	8b 55 e0	 mov	 edx, DWORD PTR tv202[ebp]
  00066	89 55 e8	 mov	 DWORD PTR _cchNeeded$[ebp], edx

; 240  : 		if (cchNeeded < 0)

  00069	83 7d e8 00	 cmp	 DWORD PTR _cchNeeded$[ebp], 0
  0006d	7d 05		 jge	 SHORT $LN2@TraceV

; 241  : 		{
; 242  : 			return;

  0006f	e9 20 02 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 335  : 		m_pData(NULL)

  00074	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _szBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 245  : 		CHeapPtr<char> szBuf;

  0007b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 246  : 		if (!szBuf.Allocate(cchNeeded + 1))

  00082	8b 45 e8	 mov	 eax, DWORD PTR _cchNeeded$[ebp]
  00085	83 c0 01	 add	 eax, 1
  00088	50		 push	 eax
  00089	8d 4d f0	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  0008c	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
  00091	0f b6 c8	 movzx	 ecx, al
  00094	85 c9		 test	 ecx, ecx
  00096	75 26		 jne	 SHORT $LN3@TraceV

; 248  : 			return;

  00098	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  0009f	8b 55 f0	 mov	 edx, DWORD PTR _szBuf$[ebp]
  000a2	89 55 d4	 mov	 DWORD PTR _p$15[ebp], edx

; 267  : 		free(p);

  000a5	8b 45 d4	 mov	 eax, DWORD PTR _p$15[ebp]
  000a8	50		 push	 eax
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  000af	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  000b2	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _szBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 248  : 			return;

  000b9	e9 d6 01 00 00	 jmp	 $LN1@TraceV
$LN3@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  000be	8b 4d f0	 mov	 ecx, DWORD PTR _szBuf$[ebp]
  000c1	89 4d d0	 mov	 DWORD PTR $T14[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 251  : 		szBuf[0] = '\0';

  000c4	ba 01 00 00 00	 mov	 edx, 1
  000c9	6b c2 00	 imul	 eax, edx, 0
  000cc	8b 4d d0	 mov	 ecx, DWORD PTR $T14[ebp]
  000cf	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  000d3	8b 55 f0	 mov	 edx, DWORD PTR _szBuf$[ebp]
  000d6	89 55 cc	 mov	 DWORD PTR $T13[ebp], edx
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  000d9	8b 45 1c	 mov	 eax, DWORD PTR _args$[ebp]
  000dc	50		 push	 eax
  000dd	6a 00		 push	 0
  000df	8b 4d 18	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  000e2	51		 push	 ecx
  000e3	8b 55 e8	 mov	 edx, DWORD PTR _cchNeeded$[ebp]
  000e6	52		 push	 edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 253  : 		if (_vsnprintf_s(szBuf, cchNeeded + 1, cchNeeded, pszFmt, args) == -1)

  000e7	8b 45 e8	 mov	 eax, DWORD PTR _cchNeeded$[ebp]
  000ea	83 c0 01	 add	 eax, 1
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  000ed	50		 push	 eax
  000ee	8b 4d cc	 mov	 ecx, DWORD PTR $T13[ebp]
  000f1	51		 push	 ecx
  000f2	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  000f7	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000fa	52		 push	 edx
  000fb	8b 00		 mov	 eax, DWORD PTR [eax]
  000fd	50		 push	 eax
  000fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsnprintf_s
  00104	83 c4 20	 add	 esp, 32			; 00000020H
  00107	89 45 dc	 mov	 DWORD PTR __Result$16[ebp], eax

; 1586 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1587 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1588 : 
; 1589 :         return _Result < 0 ? -1 : _Result;

  0010a	83 7d dc 00	 cmp	 DWORD PTR __Result$16[ebp], 0
  0010e	7d 09		 jge	 SHORT $LN47@TraceV
  00110	c7 45 d8 ff ff
	ff ff		 mov	 DWORD PTR tv236[ebp], -1
  00117	eb 06		 jmp	 SHORT $LN43@TraceV
$LN47@TraceV:
  00119	8b 4d dc	 mov	 ecx, DWORD PTR __Result$16[ebp]
  0011c	89 4d d8	 mov	 DWORD PTR tv236[ebp], ecx
$LN43@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 253  : 		if (_vsnprintf_s(szBuf, cchNeeded + 1, cchNeeded, pszFmt, args) == -1)

  0011f	83 7d d8 ff	 cmp	 DWORD PTR tv236[ebp], -1
  00123	75 26		 jne	 SHORT $LN4@TraceV

; 255  : 			return;

  00125	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  0012c	8b 55 f0	 mov	 edx, DWORD PTR _szBuf$[ebp]
  0012f	89 55 c8	 mov	 DWORD PTR _p$12[ebp], edx

; 267  : 		free(p);

  00132	8b 45 c8	 mov	 eax, DWORD PTR _p$12[ebp]
  00135	50		 push	 eax
  00136	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0013c	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0013f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _szBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 255  : 			return;

  00146	e9 49 01 00 00	 jmp	 $LN1@TraceV
$LN4@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 335  : 		m_pData(NULL)

  0014b	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 258  : 		CHeapPtr<wchar_t> wszBuf;

  00152	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 259  : 		if (!wszBuf.Allocate(cchNeeded + 1))

  00156	8b 4d e8	 mov	 ecx, DWORD PTR _cchNeeded$[ebp]
  00159	83 c1 01	 add	 ecx, 1
  0015c	51		 push	 ecx
  0015d	8d 4d ec	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00160	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  00165	0f b6 d0	 movzx	 edx, al
  00168	85 d2		 test	 edx, edx
  0016a	75 44		 jne	 SHORT $LN5@TraceV

; 261  : 			return;

  0016c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  00170	8b 45 ec	 mov	 eax, DWORD PTR _wszBuf$[ebp]
  00173	89 45 c4	 mov	 DWORD PTR _p$11[ebp], eax

; 267  : 		free(p);

  00176	8b 4d c4	 mov	 ecx, DWORD PTR _p$11[ebp]
  00179	51		 push	 ecx
  0017a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00180	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  00183	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 261  : 			return;

  0018a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  00191	8b 55 f0	 mov	 edx, DWORD PTR _szBuf$[ebp]
  00194	89 55 c0	 mov	 DWORD PTR _p$10[ebp], edx

; 267  : 		free(p);

  00197	8b 45 c0	 mov	 eax, DWORD PTR _p$10[ebp]
  0019a	50		 push	 eax
  0019b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  001a1	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  001a4	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _szBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 261  : 			return;

  001ab	e9 e4 00 00 00	 jmp	 $LN1@TraceV
$LN5@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  001b0	8b 4d ec	 mov	 ecx, DWORD PTR _wszBuf$[ebp]
  001b3	89 4d bc	 mov	 DWORD PTR $T9[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 264  : 		wszBuf[0] = '\0';

  001b6	ba 02 00 00 00	 mov	 edx, 2
  001bb	6b c2 00	 imul	 eax, edx, 0
  001be	33 c9		 xor	 ecx, ecx
  001c0	8b 55 bc	 mov	 edx, DWORD PTR $T9[ebp]
  001c3	66 89 0c 02	 mov	 WORD PTR [edx+eax], cx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  001c7	8b 45 ec	 mov	 eax, DWORD PTR _wszBuf$[ebp]
  001ca	89 45 b8	 mov	 DWORD PTR $T8[ebp], eax
  001cd	8b 4d f0	 mov	 ecx, DWORD PTR _szBuf$[ebp]
  001d0	89 4d b4	 mov	 DWORD PTR $T7[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 266  : 		if (::MultiByteToWideChar(CP_ACP, 0, szBuf, -1, wszBuf, cchNeeded + 1) == 0)

  001d3	8b 55 e8	 mov	 edx, DWORD PTR _cchNeeded$[ebp]
  001d6	83 c2 01	 add	 edx, 1
  001d9	52		 push	 edx
  001da	8b 45 b8	 mov	 eax, DWORD PTR $T8[ebp]
  001dd	50		 push	 eax
  001de	6a ff		 push	 -1
  001e0	8b 4d b4	 mov	 ecx, DWORD PTR $T7[ebp]
  001e3	51		 push	 ecx
  001e4	6a 00		 push	 0
  001e6	6a 00		 push	 0
  001e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  001ee	85 c0		 test	 eax, eax
  001f0	75 41		 jne	 SHORT $LN6@TraceV

; 268  : 			return;

  001f2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  001f6	8b 55 ec	 mov	 edx, DWORD PTR _wszBuf$[ebp]
  001f9	89 55 b0	 mov	 DWORD PTR _p$6[ebp], edx

; 267  : 		free(p);

  001fc	8b 45 b0	 mov	 eax, DWORD PTR _p$6[ebp]
  001ff	50		 push	 eax
  00200	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00206	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  00209	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 268  : 			return;

  00210	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  00217	8b 4d f0	 mov	 ecx, DWORD PTR _szBuf$[ebp]
  0021a	89 4d ac	 mov	 DWORD PTR _p$5[ebp], ecx

; 267  : 		free(p);

  0021d	8b 55 ac	 mov	 edx, DWORD PTR _p$5[ebp]
  00220	52		 push	 edx
  00221	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00227	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0022a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _szBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 268  : 			return;

  00231	eb 61		 jmp	 SHORT $LN1@TraceV
$LN6@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  00233	8b 45 ec	 mov	 eax, DWORD PTR _wszBuf$[ebp]
  00236	89 45 a8	 mov	 DWORD PTR $T4[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 271  : 		TraceV(pszFileName, nLine, dwCategory, nLevel, wszBuf);

  00239	8b 4d a8	 mov	 ecx, DWORD PTR $T4[ebp]
  0023c	51		 push	 ecx
  0023d	8b 55 14	 mov	 edx, DWORD PTR _nLevel$[ebp]
  00240	52		 push	 edx
  00241	8b 45 10	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  00244	50		 push	 eax
  00245	8b 4d 0c	 mov	 ecx, DWORD PTR _nLine$[ebp]
  00248	51		 push	 ecx
  00249	8b 55 08	 mov	 edx, DWORD PTR _pszFileName$[ebp]
  0024c	52		 push	 edx
  0024d	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z ; ATL::CTrace::TraceV
  00252	83 c4 14	 add	 esp, 20			; 00000014H

; 272  : 	}

  00255	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  00259	8b 45 ec	 mov	 eax, DWORD PTR _wszBuf$[ebp]
  0025c	89 45 a4	 mov	 DWORD PTR _p$3[ebp], eax

; 267  : 		free(p);

  0025f	8b 4d a4	 mov	 ecx, DWORD PTR _p$3[ebp]
  00262	51		 push	 ecx
  00263	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00269	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0026c	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 272  : 	}

  00273	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  0027a	8b 55 f0	 mov	 edx, DWORD PTR _szBuf$[ebp]
  0027d	89 55 a0	 mov	 DWORD PTR _p$2[ebp], edx

; 267  : 		free(p);

  00280	8b 45 a0	 mov	 eax, DWORD PTR _p$2[ebp]
  00283	50		 push	 eax
  00284	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0028a	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0028d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _szBuf$[ebp], 0
$LN1@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 272  : 	}

  00294	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00297	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0029e	59		 pop	 ecx
  0029f	8b e5		 mov	 esp, ebp
  002a1	5d		 pop	 ebp
  002a2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$0:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _szBuf$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QAE@XZ
__unwindfunclet$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z$1:
  00008	8d 4d ec	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
__ehhandler$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?TraceV@CTrace@ATL@@SAXPBDHII0PAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z
_TEXT	SEGMENT
_p$1 = -2636						; size = 4
$T2 = -2632						; size = 4
_p$3 = -2628						; size = 4
_p$4 = -2624						; size = 4
$T5 = -2620						; size = 4
$T6 = -2616						; size = 4
_p$7 = -2612						; size = 4
tv88 = -2608						; size = 4
tv246 = -2604						; size = 4
_chCount$ = -2600					; size = 4
_pwszCategoryName$ = -2596				; size = 4
tv249 = -2590						; size = 2
_categoryLength$ = -2588				; size = 4
tv243 = -2584						; size = 4
_i$8 = -2580						; size = 4
_wszBuf$ = -2576					; size = 4
_wszCategory$ = -2572					; size = 2048
_fileName$ = -524					; size = 520
__$ArrayPad$ = -4					; size = 4
_pszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
_dwCategory$ = 16					; size = 4
_nLevel$ = 20						; size = 4
_pwszMessage$ = 24					; size = 4
?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 150  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 4c 0a 00
	00		 sub	 esp, 2636		; 00000a4cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 151  : 		if (CTrace::m_nLevel == CTrace::DisableTracing || CTrace::m_nLevel < nLevel || (CTrace::m_nCategory & dwCategory) == 0)

  00013	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?m_nLevel@CTrace@ATL@@1IA, -1 ; ATL::CTrace::m_nLevel
  0001a	74 15		 je	 SHORT $LN3@TraceV
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLevel@CTrace@ATL@@1IA ; ATL::CTrace::m_nLevel
  00021	3b 45 14	 cmp	 eax, DWORD PTR _nLevel$[ebp]
  00024	72 0b		 jb	 SHORT $LN3@TraceV
  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nCategory
  0002c	23 4d 10	 and	 ecx, DWORD PTR _dwCategory$[ebp]
  0002f	75 05		 jne	 SHORT $LN2@TraceV
$LN3@TraceV:

; 152  : 		{
; 153  : 			return;

  00031	e9 db 02 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 154  : 		}
; 155  : 
; 156  : 		wchar_t wszCategory[TraceBufferSize] = {'\0'};

  00036	68 00 08 00 00	 push	 2048			; 00000800H
  0003b	6a 00		 push	 0
  0003d	8d 95 f4 f5 ff
	ff		 lea	 edx, DWORD PTR _wszCategory$[ebp]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 _memset
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH

; 157  : 		int categoryLength = 0;

  0004c	c7 85 e4 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _categoryLength$[ebp], 0

; 133  : 		for(unsigned int i = 0; i < m_nLastCategory; i++) 

  00056	c7 85 ec f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$8[ebp], 0
  00060	eb 0f		 jmp	 SHORT $LN16@TraceV
$LN14@TraceV:
  00062	8b 85 ec f5 ff
	ff		 mov	 eax, DWORD PTR _i$8[ebp]
  00068	83 c0 01	 add	 eax, 1
  0006b	89 85 ec f5 ff
	ff		 mov	 DWORD PTR _i$8[ebp], eax
$LN16@TraceV:
  00071	8b 8d ec f5 ff
	ff		 mov	 ecx, DWORD PTR _i$8[ebp]
  00077	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  0007d	73 2f		 jae	 SHORT $LN15@TraceV

; 134  : 		{
; 135  : 			if (m_nMap[i].nCategory == nCategory)

  0007f	69 95 ec f5 ff
	ff 04 01 00 00	 imul	 edx, DWORD PTR _i$8[ebp], 260
  00089	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[edx]
  0008f	3b 45 10	 cmp	 eax, DWORD PTR _dwCategory$[ebp]
  00092	75 18		 jne	 SHORT $LN17@TraceV

; 136  : 			{
; 137  : 				return m_nMap[i].categryName;

  00094	69 8d ec f5 ff
	ff 04 01 00 00	 imul	 ecx, DWORD PTR _i$8[ebp], 260
  0009e	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  000a4	89 8d dc f5 ff
	ff		 mov	 DWORD PTR _pwszCategoryName$[ebp], ecx
  000aa	eb 0c		 jmp	 SHORT $LN13@TraceV
$LN17@TraceV:

; 138  : 			}
; 139  : 		}

  000ac	eb b4		 jmp	 SHORT $LN14@TraceV
$LN15@TraceV:

; 140  : 
; 141  : 		return nullptr;

  000ae	c7 85 dc f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _pwszCategoryName$[ebp], 0
$LN13@TraceV:

; 158  : 		const wchar_t *const pwszCategoryName = GetCategoryName(dwCategory);
; 159  : 		if (pwszCategoryName != nullptr)

  000b8	83 bd dc f5 ff
	ff 00		 cmp	 DWORD PTR _pwszCategoryName$[ebp], 0
  000bf	74 36		 je	 SHORT $LN4@TraceV

; 160  : 		{
; 161  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%ls - ", pwszCategoryName)) == -1)

  000c1	8b 95 dc f5 ff
	ff		 mov	 edx, DWORD PTR _pwszCategoryName$[ebp]
  000c7	52		 push	 edx
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
  000cd	68 00 04 00 00	 push	 1024			; 00000400H
  000d2	8d 85 f4 f5 ff
	ff		 lea	 eax, DWORD PTR _wszCategory$[ebp]
  000d8	50		 push	 eax
  000d9	e8 00 00 00 00	 call	 _swprintf_s
  000de	83 c4 10	 add	 esp, 16			; 00000010H
  000e1	89 85 e4 f5 ff
	ff		 mov	 DWORD PTR _categoryLength$[ebp], eax
  000e7	83 bd e4 f5 ff
	ff ff		 cmp	 DWORD PTR _categoryLength$[ebp], -1
  000ee	75 05		 jne	 SHORT $LN6@TraceV

; 162  : 			{
; 163  : 				return;

  000f0	e9 1c 02 00 00	 jmp	 $LN1@TraceV
$LN6@TraceV:

; 164  : 			}
; 165  : 		}
; 166  : 		else

  000f5	eb 31		 jmp	 SHORT $LN5@TraceV
$LN4@TraceV:

; 167  : 		{
; 168  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%u - ", dwCategory)) == -1)

  000f7	8b 4d 10	 mov	 ecx, DWORD PTR _dwCategory$[ebp]
  000fa	51		 push	 ecx
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
  00100	68 00 04 00 00	 push	 1024			; 00000400H
  00105	8d 95 f4 f5 ff
	ff		 lea	 edx, DWORD PTR _wszCategory$[ebp]
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 _swprintf_s
  00111	83 c4 10	 add	 esp, 16			; 00000010H
  00114	89 85 e4 f5 ff
	ff		 mov	 DWORD PTR _categoryLength$[ebp], eax
  0011a	83 bd e4 f5 ff
	ff ff		 cmp	 DWORD PTR _categoryLength$[ebp], -1
  00121	75 05		 jne	 SHORT $LN5@TraceV

; 169  : 			{
; 170  : 				return;

  00123	e9 e9 01 00 00	 jmp	 $LN1@TraceV
$LN5@TraceV:

; 171  : 			}
; 172  : 		}
; 173  : 
; 174  : 		int chCount = (int)wcslen(pwszMessage) + categoryLength + 1;

  00128	8b 45 18	 mov	 eax, DWORD PTR _pwszMessage$[ebp]
  0012b	89 85 e8 f5 ff
	ff		 mov	 DWORD PTR tv243[ebp], eax
  00131	8b 8d e8 f5 ff
	ff		 mov	 ecx, DWORD PTR tv243[ebp]
  00137	83 c1 02	 add	 ecx, 2
  0013a	89 8d d4 f5 ff
	ff		 mov	 DWORD PTR tv246[ebp], ecx
$LL81@TraceV:
  00140	8b 95 e8 f5 ff
	ff		 mov	 edx, DWORD PTR tv243[ebp]
  00146	66 8b 02	 mov	 ax, WORD PTR [edx]
  00149	66 89 85 e2 f5
	ff ff		 mov	 WORD PTR tv249[ebp], ax
  00150	83 85 e8 f5 ff
	ff 02		 add	 DWORD PTR tv243[ebp], 2
  00157	66 83 bd e2 f5
	ff ff 00	 cmp	 WORD PTR tv249[ebp], 0
  0015f	75 df		 jne	 SHORT $LL81@TraceV
  00161	8b 8d e8 f5 ff
	ff		 mov	 ecx, DWORD PTR tv243[ebp]
  00167	2b 8d d4 f5 ff
	ff		 sub	 ecx, DWORD PTR tv246[ebp]
  0016d	d1 f9		 sar	 ecx, 1
  0016f	89 8d d0 f5 ff
	ff		 mov	 DWORD PTR tv88[ebp], ecx
  00175	8b 95 e4 f5 ff
	ff		 mov	 edx, DWORD PTR _categoryLength$[ebp]
  0017b	8b 85 d0 f5 ff
	ff		 mov	 eax, DWORD PTR tv88[ebp]
  00181	8d 4c 10 01	 lea	 ecx, DWORD PTR [eax+edx+1]
  00185	89 8d d8 f5 ff
	ff		 mov	 DWORD PTR _chCount$[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 335  : 		m_pData(NULL)

  0018b	c7 85 f0 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 176  : 		if (!wszBuf.Allocate(chCount))

  00195	8b 95 d8 f5 ff
	ff		 mov	 edx, DWORD PTR _chCount$[ebp]
  0019b	52		 push	 edx
  0019c	8d 8d f0 f5 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  001a2	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  001a7	0f b6 c0	 movzx	 eax, al
  001aa	85 c0		 test	 eax, eax
  001ac	75 2b		 jne	 SHORT $LN8@TraceV
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  001ae	8b 8d f0 f5 ff
	ff		 mov	 ecx, DWORD PTR _wszBuf$[ebp]
  001b4	89 8d cc f5 ff
	ff		 mov	 DWORD PTR _p$7[ebp], ecx

; 267  : 		free(p);

  001ba	8b 95 cc f5 ff
	ff		 mov	 edx, DWORD PTR _p$7[ebp]
  001c0	52		 push	 edx
  001c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  001c7	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  001ca	c7 85 f0 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 178  : 			return;

  001d4	e9 38 01 00 00	 jmp	 $LN1@TraceV
$LN8@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  001d9	8b 85 f0 f5 ff
	ff		 mov	 eax, DWORD PTR _wszBuf$[ebp]
  001df	89 85 c8 f5 ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 181  : 		wszBuf[0] = '\0';

  001e5	b9 02 00 00 00	 mov	 ecx, 2
  001ea	6b d1 00	 imul	 edx, ecx, 0
  001ed	33 c0		 xor	 eax, eax
  001ef	8b 8d c8 f5 ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
  001f5	66 89 04 11	 mov	 WORD PTR [ecx+edx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  001f9	8b 95 f0 f5 ff
	ff		 mov	 edx, DWORD PTR _wszBuf$[ebp]
  001ff	89 95 c4 f5 ff
	ff		 mov	 DWORD PTR $T5[ebp], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 183  : 		if (swprintf_s(wszBuf, chCount, L"%ls%ls", wszCategory, pwszMessage) == -1)

  00205	8b 45 18	 mov	 eax, DWORD PTR _pwszMessage$[ebp]
  00208	50		 push	 eax
  00209	8d 8d f4 f5 ff
	ff		 lea	 ecx, DWORD PTR _wszCategory$[ebp]
  0020f	51		 push	 ecx
  00210	68 00 00 00 00	 push	 OFFSET ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
  00215	8b 95 d8 f5 ff
	ff		 mov	 edx, DWORD PTR _chCount$[ebp]
  0021b	52		 push	 edx
  0021c	8b 85 c4 f5 ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  00222	50		 push	 eax
  00223	e8 00 00 00 00	 call	 _swprintf_s
  00228	83 c4 14	 add	 esp, 20			; 00000014H
  0022b	83 f8 ff	 cmp	 eax, -1
  0022e	75 2b		 jne	 SHORT $LN9@TraceV
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  00230	8b 8d f0 f5 ff
	ff		 mov	 ecx, DWORD PTR _wszBuf$[ebp]
  00236	89 8d c0 f5 ff
	ff		 mov	 DWORD PTR _p$4[ebp], ecx

; 267  : 		free(p);

  0023c	8b 95 c0 f5 ff
	ff		 mov	 edx, DWORD PTR _p$4[ebp]
  00242	52		 push	 edx
  00243	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00249	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  0024c	c7 85 f0 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 185  : 			return;

  00256	e9 b6 00 00 00	 jmp	 $LN1@TraceV
$LN9@TraceV:

; 186  : 		}
; 187  : 
; 188  : 		wchar_t fileName[_MAX_PATH] = {'\0'};	

  0025b	68 08 02 00 00	 push	 520			; 00000208H
  00260	6a 00		 push	 0
  00262	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _fileName$[ebp]
  00268	50		 push	 eax
  00269	e8 00 00 00 00	 call	 _memset
  0026e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 189  : #if _MSC_VER < 1900
; 190  : 		if (swprintf_s(fileName, _MAX_PATH, L"%S", pszFileName) == -1)
; 191  : #else
; 192  : 		if (swprintf_s(fileName, _MAX_PATH, L"%hs", pszFileName) == -1)

  00271	8b 4d 08	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  00274	51		 push	 ecx
  00275	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  0027a	68 04 01 00 00	 push	 260			; 00000104H
  0027f	8d 95 f4 fd ff
	ff		 lea	 edx, DWORD PTR _fileName$[ebp]
  00285	52		 push	 edx
  00286	e8 00 00 00 00	 call	 _swprintf_s
  0028b	83 c4 10	 add	 esp, 16			; 00000010H
  0028e	83 f8 ff	 cmp	 eax, -1
  00291	75 28		 jne	 SHORT $LN10@TraceV
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  00293	8b 85 f0 f5 ff
	ff		 mov	 eax, DWORD PTR _wszBuf$[ebp]
  00299	89 85 bc f5 ff
	ff		 mov	 DWORD PTR _p$3[ebp], eax

; 267  : 		free(p);

  0029f	8b 8d bc f5 ff
	ff		 mov	 ecx, DWORD PTR _p$3[ebp]
  002a5	51		 push	 ecx
  002a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  002ac	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  002af	c7 85 f0 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _wszBuf$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 195  : 			return;

  002b9	eb 56		 jmp	 SHORT $LN1@TraceV
$LN10@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 364  : 		return m_pData;

  002bb	8b 95 f0 f5 ff
	ff		 mov	 edx, DWORD PTR _wszBuf$[ebp]
  002c1	89 95 b8 f5 ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 198  : 		_CrtDbgReportW(_CRT_WARN, fileName, nLine, nullptr, L"%ls", static_cast<const wchar_t*>(wszBuf));

  002c7	8b 85 b8 f5 ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  002cd	50		 push	 eax
  002ce	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  002d3	6a 00		 push	 0
  002d5	8b 4d 0c	 mov	 ecx, DWORD PTR _nLine$[ebp]
  002d8	51		 push	 ecx
  002d9	8d 95 f4 fd ff
	ff		 lea	 edx, DWORD PTR _fileName$[ebp]
  002df	52		 push	 edx
  002e0	6a 00		 push	 0
  002e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  002e8	83 c4 18	 add	 esp, 24			; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 408  : 		Allocator::Free(m_pData);

  002eb	8b 85 f0 f5 ff
	ff		 mov	 eax, DWORD PTR _wszBuf$[ebp]
  002f1	89 85 b4 f5 ff
	ff		 mov	 DWORD PTR _p$1[ebp], eax

; 267  : 		free(p);

  002f7	8b 8d b4 f5 ff
	ff		 mov	 ecx, DWORD PTR _p$1[ebp]
  002fd	51		 push	 ecx
  002fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00304	83 c4 04	 add	 esp, 4

; 409  : 		m_pData = NULL;

  00307	c7 85 f0 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _wszBuf$[ebp], 0
$LN1@TraceV:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h

; 199  : 	}

  00311	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00314	33 cd		 xor	 ecx, ebp
  00316	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0031b	8b e5		 mov	 esp, ebp
  0031d	5d		 pop	 ebp
  0031e	c3		 ret	 0
?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ?GetCategoryName@CTrace@ATL@@CAPA_WI@Z
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_nCategory$ = 8						; size = 4
?GetCategoryName@CTrace@ATL@@CAPA_WI@Z PROC		; ATL::CTrace::GetCategoryName, COMDAT

; 132  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 133  : 		for(unsigned int i = 0; i < m_nLastCategory; i++) 

  00004	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0000b	eb 09		 jmp	 SHORT $LN4@GetCategor
$LN2@GetCategor:
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  00010	83 c0 01	 add	 eax, 1
  00013	89 45 fc	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@GetCategor:
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _i$1[ebp]
  00019	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  0001f	73 22		 jae	 SHORT $LN3@GetCategor

; 134  : 		{
; 135  : 			if (m_nMap[i].nCategory == nCategory)

  00021	69 55 fc 04 01
	00 00		 imul	 edx, DWORD PTR _i$1[ebp], 260
  00028	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[edx]
  0002e	3b 45 08	 cmp	 eax, DWORD PTR _nCategory$[ebp]
  00031	75 0e		 jne	 SHORT $LN5@GetCategor

; 136  : 			{
; 137  : 				return m_nMap[i].categryName;

  00033	69 45 fc 04 01
	00 00		 imul	 eax, DWORD PTR _i$1[ebp], 260
  0003a	05 04 00 00 00	 add	 eax, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  0003f	eb 04		 jmp	 SHORT $LN1@GetCategor
$LN5@GetCategor:

; 138  : 			}
; 139  : 		}

  00041	eb ca		 jmp	 SHORT $LN2@GetCategor
$LN3@GetCategor:

; 140  : 
; 141  : 		return nullptr;

  00043	33 c0		 xor	 eax, eax
$LN1@GetCategor:

; 142  : 	}

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
?GetCategoryName@CTrace@ATL@@CAPA_WI@Z ENDP		; ATL::CTrace::GetCategoryName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceISAPI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceISAPI@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceISAPI'', COMDAT

; 119  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceISAPI> atlTraceISAPI(_T("atlTraceISAPI"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 00 40 00	 push	 4194304			; 00400000H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KHOBHOBJ@atlTraceISAPI@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 119  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceISAPI> atlTraceISAPI(_T("atlTraceISAPI"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceISAPI@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceISAPI''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 00 40 00	 push	 4194304			; 00400000H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSync@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSync@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSync'', COMDAT

; 118  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSync> atlTraceSync(_T("atlTraceSync"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 00 20 00	 push	 2097152			; 00200000H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KLPNCFEE@atlTraceSync@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 118  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSync> atlTraceSync(_T("atlTraceSync"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceSync@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSync''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 00 20 00	 push	 2097152			; 00200000H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSecurity@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSecurity@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSecurity'', COMDAT

; 117  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSecurity> atlTraceSecurity(_T("atlTraceSecurity"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 00 10 00	 push	 1048576			; 00100000H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DNJDADMG@atlTraceSecurity@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 117  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSecurity> atlTraceSecurity(_T("atlTraceSecurity"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceSecurity@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSecurity''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 00 10 00	 push	 1048576			; 00100000H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceUtil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceUtil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceUtil'', COMDAT

; 116  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceUtil> atlTraceUtil(_T("atlTraceUtil"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 00 08 00	 push	 524288			; 00080000H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FEAAACHD@atlTraceUtil@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 116  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceUtil> atlTraceUtil(_T("atlTraceUtil"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceUtil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceUtil''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceMap@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceMap@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceMap'', COMDAT

; 115  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceMap> atlTraceMap(_T("atlTraceMap"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 00 04 00	 push	 262144			; 00040000H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IOBBMAHG@atlTraceMap@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 115  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceMap> atlTraceMap(_T("atlTraceMap"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceMap@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceMap''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 00 04 00	 push	 262144			; 00040000H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 00 02 00	 push	 131072			; 00020000H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MBNHGHMI@atlTraceString@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 00 02 00	 push	 131072			; 00020000H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceStencil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceStencil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceStencil'', COMDAT

; 113  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceStencil> atlTraceStencil(_T("atlTraceStencil"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 00 01 00	 push	 65536			; 00010000H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IDBKCKK@atlTraceStencil@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 113  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceStencil> atlTraceStencil(_T("atlTraceStencil"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceStencil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceStencil''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 00 01 00	 push	 65536			; 00010000H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCache@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCache@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCache'', COMDAT

; 112  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCache> atlTraceCache(_T("atlTraceCache"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 80 00 00	 push	 32768			; 00008000H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MEOJAOKK@atlTraceCache@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 112  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCache> atlTraceCache(_T("atlTraceCache"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceCache@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCache''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 80 00 00	 push	 32768			; 00008000H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceTime@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceTime@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceTime'', COMDAT

; 111  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceTime> atlTraceTime(_T("atlTraceTime"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 40 00 00	 push	 16384			; 00004000H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BNNILHBE@atlTraceTime@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 111  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceTime> atlTraceTime(_T("atlTraceTime"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceTime@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceTime''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 40 00 00	 push	 16384			; 00004000H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 20 00 00	 push	 8192			; 00002000H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PGMFNIFA@atlTraceException@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 20 00 00	 push	 8192			; 00002000H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceAllocation@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceAllocation@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceAllocation'', COMDAT

; 109  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceAllocation> atlTraceAllocation(_T("atlTraceAllocation"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 10 00 00	 push	 4096			; 00001000H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@PJPCCAKP@atlTraceAllocation@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 109  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceAllocation> atlTraceAllocation(_T("atlTraceAllocation"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceAllocation@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceAllocation''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 10 00 00	 push	 4096			; 00001000H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceNotImpl@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceNotImpl@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceNotImpl'', COMDAT

; 108  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceNotImpl> atlTraceNotImpl(_T("atlTraceNotImpl"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 08 00 00	 push	 2048			; 00000800H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@MCBFIDIC@atlTraceNotImpl@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 108  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceNotImpl> atlTraceNotImpl(_T("atlTraceNotImpl"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceNotImpl@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceNotImpl''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 08 00 00	 push	 2048			; 00000800H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSnapin@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSnapin@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSnapin'', COMDAT

; 107  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSnapin> atlTraceSnapin(_T("atlTraceSnapin"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 04 00 00	 push	 1024			; 00000400H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LNEGBOLO@atlTraceSnapin@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 107  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSnapin> atlTraceSnapin(_T("atlTraceSnapin"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceSnapin@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSnapin''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 04 00 00	 push	 1024			; 00000400H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBProvider@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBProvider@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBProvider'', COMDAT

; 106  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBProvider> atlTraceDBProvider(_T("atlTraceDBProvider"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 02 00 00	 push	 512			; 00000200H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KOADKDIA@atlTraceDBProvider@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 106  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBProvider> atlTraceDBProvider(_T("atlTraceDBProvider"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceDBProvider@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBProvider''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 02 00 00	 push	 512			; 00000200H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBClient@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBClient@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBClient'', COMDAT

; 105  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBClient> atlTraceDBClient(_T("atlTraceDBClient"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 00 01 00 00	 push	 256			; 00000100H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BEBMGMDO@atlTraceDBClient@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 105  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBClient> atlTraceDBClient(_T("atlTraceDBClient"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceDBClient@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBClient''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 01 00 00	 push	 256			; 00000100H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceHosting@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceHosting@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceHosting'', COMDAT

; 104  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceHosting> atlTraceHosting(_T("atlTraceHosting"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	68 80 00 00 00	 push	 128			; 00000080H
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DKOAAGGM@atlTraceHosting@
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 104  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceHosting> atlTraceHosting(_T("atlTraceHosting"));

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
??__EatlTraceHosting@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceHosting''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 80 00 00 00	 push	 128			; 00000080H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceControls@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceControls@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceControls'', COMDAT

; 103  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceControls> atlTraceControls(_T("atlTraceControls"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	6a 40		 push	 64			; 00000040H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GHKJKKIE@atlTraceControls@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 103  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceControls> atlTraceControls(_T("atlTraceControls"));

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceControls@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceControls''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	6a 40		 push	 64			; 00000040H
  00009	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 482  : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceWindowing@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceWindowing@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceWindowing'', COMDAT

; 102  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceWindowing> atlTraceWindowing(_T("atlTraceWindowing"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	6a 20		 push	 32			; 00000020H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DGHHNKDC@atlTraceWindowing@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 102  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceWindowing> atlTraceWindowing(_T("atlTraceWindowing"));

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceWindowing@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceWindowing''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ PROC	; ATL::CTraceCategoryEx<32,0>::operator unsigned int, COMDAT
; _this$ = ecx

; 79   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  00007	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ ENDP	; ATL::CTraceCategoryEx<32,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	6a 20		 push	 32			; 00000020H
  00009	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 482  : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRefcount@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRefcount@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRefcount'', COMDAT

; 101  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRefcount> atlTraceRefcount(_T("atlTraceRefcount"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	6a 10		 push	 16			; 00000010H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@ILPPDKFL@atlTraceRefcount@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 101  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRefcount> atlTraceRefcount(_T("atlTraceRefcount"));

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceRefcount@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRefcount''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	6a 10		 push	 16			; 00000010H
  00009	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 482  : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRegistrar@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRegistrar@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRegistrar'', COMDAT

; 100  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRegistrar> atlTraceRegistrar(_T("atlTraceRegistrar"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	6a 08		 push	 8
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MALHFBAO@atlTraceRegistrar@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 100  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRegistrar> atlTraceRegistrar(_T("atlTraceRegistrar"));

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceRegistrar@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRegistrar''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	6a 08		 push	 8
  00009	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 482  : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceQI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceQI@ATL@@YAXXZ PROC				; ATL::`dynamic initializer for 'atlTraceQI'', COMDAT

; 99   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceQI> atlTraceQI(_T("atlTraceQI"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	6a 04		 push	 4
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LHELAKBP@atlTraceQI@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 99   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceQI> atlTraceQI(_T("atlTraceQI"));

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceQI@ATL@@YAXXZ ENDP				; ATL::`dynamic initializer for 'atlTraceQI''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	6a 04		 push	 4
  00009	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 482  : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCOM@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCOM@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCOM'', COMDAT

; 98   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCom> atlTraceCOM(_T("atlTraceCOM"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	6a 02		 push	 2
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DGPFJEBB@atlTraceCOM@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 98   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCom> atlTraceCOM(_T("atlTraceCOM"));

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceCOM@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCOM''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ PROC		; ATL::CTraceCategoryEx<2,0>::operator unsigned int, COMDAT
; _this$ = ecx

; 79   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  00007	b8 02 00 00 00	 mov	 eax, 2

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ENDP		; ATL::CTraceCategoryEx<2,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	6a 02		 push	 2
  00009	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 482  : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceGeneral@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceGeneral@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceGeneral'', COMDAT

; 97   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceGeneral> atlTraceGeneral(_T("atlTraceGeneral"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00003	6a 01		 push	 1
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@MKMIKKJB@atlTraceGeneral@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 97   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceGeneral> atlTraceGeneral(_T("atlTraceGeneral"));

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceGeneral@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceGeneral''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	6a 01		 push	 1
  00009	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00012	83 c4 08	 add	 esp, 8

; 482  : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00007	68 00 00 08 00	 push	 524288			; 00080000H
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  00015	83 c4 08	 add	 esp, 8

; 482  : }

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlAdd@K@ATL@@YAJPAKKK@Z
_TEXT	SEGMENT
tv73 = -4						; size = 4
_ptResult$ = 8						; size = 4
_tLeft$ = 12						; size = 4
_tRight$ = 16						; size = 4
??$AtlAdd@K@ATL@@YAJPAKKK@Z PROC			; ATL::AtlAdd<unsigned long>, COMDAT

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 85   : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00004	83 c8 ff	 or	 eax, -1
  00007	2b 45 0c	 sub	 eax, DWORD PTR _tLeft$[ebp]
  0000a	3b 45 10	 cmp	 eax, DWORD PTR _tRight$[ebp]
  0000d	73 31		 jae	 SHORT $LN2@AtlAdd
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0000f	b9 16 02 00 00	 mov	 ecx, 534		; 00000216H
  00014	85 c9		 test	 ecx, ecx
  00016	7f 09		 jg	 SHORT $LN6@AtlAdd
  00018	c7 45 fc 16 02
	00 00		 mov	 DWORD PTR tv73[ebp], 534 ; 00000216H
  0001f	eb 1a		 jmp	 SHORT $LN4@AtlAdd
$LN6@AtlAdd:
  00021	ba 16 02 00 00	 mov	 edx, 534		; 00000216H
  00026	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  0002c	81 ca 00 00 07
	00		 or	 edx, 458752		; 00070000H
  00032	81 ca 00 00 00
	80		 or	 edx, -2147483648	; 80000000H
  00038	89 55 fc	 mov	 DWORD PTR tv73[ebp], edx
$LN4@AtlAdd:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 87   : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0003b	8b 45 fc	 mov	 eax, DWORD PTR tv73[ebp]
  0003e	eb 0d		 jmp	 SHORT $LN1@AtlAdd
$LN2@AtlAdd:

; 88   : 	}
; 89   : 	*ptResult= tLeft + tRight;

  00040	8b 45 0c	 mov	 eax, DWORD PTR _tLeft$[ebp]
  00043	03 45 10	 add	 eax, DWORD PTR _tRight$[ebp]
  00046	8b 4d 08	 mov	 ecx, DWORD PTR _ptResult$[ebp]
  00049	89 01		 mov	 DWORD PTR [ecx], eax

; 90   : 	return S_OK;

  0004b	33 c0		 xor	 eax, eax
$LN1@AtlAdd:

; 91   : }

  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??$AtlAdd@K@ATL@@YAJPAKKK@Z ENDP			; ATL::AtlAdd<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CCRTAllocator@ATL@@SAXPAX@Z PROC			; ATL::CCRTAllocator::Free, COMDAT

; 266  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 267  : 		free(p);

  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	50		 push	 eax
  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0000d	83 c4 04	 add	 esp, 4

; 268  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Free@CCRTAllocator@ATL@@SAXPAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z PROC		; ATL::CCRTAllocator::Allocate, COMDAT

; 261  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  : 		return malloc(nBytes);

  00003	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00006	50		 push	 eax
  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  0000d	83 c4 04	 add	 esp, 4

; 263  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@K@ATL@@YAJPAKKK@Z
_TEXT	SEGMENT
_i64Result$ = -12					; size = 8
tv75 = -4						; size = 4
_piResult$ = 8						; size = 4
_iLeft$ = 12						; size = 4
_iRight$ = 16						; size = 4
??$AtlMultiply@K@ATL@@YAJPAKKK@Z PROC			; ATL::AtlMultiply<unsigned long>, COMDAT

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 166  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00006	8b 45 0c	 mov	 eax, DWORD PTR _iLeft$[ebp]
  00009	f7 65 10	 mul	 DWORD PTR _iRight$[ebp]
  0000c	89 45 f4	 mov	 DWORD PTR _i64Result$[ebp], eax
  0000f	89 55 f8	 mov	 DWORD PTR _i64Result$[ebp+4], edx

; 167  : 	if(i64Result>ULONG_MAX)

  00012	83 7d f8 00	 cmp	 DWORD PTR _i64Result$[ebp+4], 0
  00016	77 06		 ja	 SHORT $LN8@AtlMultipl
  00018	83 7d f4 ff	 cmp	 DWORD PTR _i64Result$[ebp], -1
  0001c	76 31		 jbe	 SHORT $LN2@AtlMultipl
$LN8@AtlMultipl:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0001e	b8 16 02 00 00	 mov	 eax, 534		; 00000216H
  00023	85 c0		 test	 eax, eax
  00025	7f 09		 jg	 SHORT $LN6@AtlMultipl
  00027	c7 45 fc 16 02
	00 00		 mov	 DWORD PTR tv75[ebp], 534 ; 00000216H
  0002e	eb 1a		 jmp	 SHORT $LN4@AtlMultipl
$LN6@AtlMultipl:
  00030	b9 16 02 00 00	 mov	 ecx, 534		; 00000216H
  00035	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0003b	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  00041	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  00047	89 4d fc	 mov	 DWORD PTR tv75[ebp], ecx
$LN4@AtlMultipl:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 169  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0004a	8b 45 fc	 mov	 eax, DWORD PTR tv75[ebp]
  0004d	eb 0a		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 170  : 	}
; 171  : 	*piResult=static_cast<unsigned long>(i64Result);

  0004f	8b 55 f4	 mov	 edx, DWORD PTR _i64Result$[ebp]
  00052	8b 45 08	 mov	 eax, DWORD PTR _piResult$[ebp]
  00055	89 10		 mov	 DWORD PTR [eax], edx

; 172  : 	return S_OK;

  00057	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 173  : }

  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$AtlMultiply@K@ATL@@YAJPAKKK@Z ENDP			; ATL::AtlMultiply<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@I@ATL@@YAJPAIII@Z
_TEXT	SEGMENT
_i64Result$ = -12					; size = 8
tv75 = -4						; size = 4
_piResult$ = 8						; size = 4
_iLeft$ = 12						; size = 4
_iRight$ = 16						; size = 4
??$AtlMultiply@I@ATL@@YAJPAIII@Z PROC			; ATL::AtlMultiply<unsigned int>, COMDAT

; 135  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 136  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00006	8b 45 0c	 mov	 eax, DWORD PTR _iLeft$[ebp]
  00009	f7 65 10	 mul	 DWORD PTR _iRight$[ebp]
  0000c	89 45 f4	 mov	 DWORD PTR _i64Result$[ebp], eax
  0000f	89 55 f8	 mov	 DWORD PTR _i64Result$[ebp+4], edx

; 137  : 	if(i64Result>UINT_MAX)

  00012	83 7d f8 00	 cmp	 DWORD PTR _i64Result$[ebp+4], 0
  00016	77 06		 ja	 SHORT $LN8@AtlMultipl
  00018	83 7d f4 ff	 cmp	 DWORD PTR _i64Result$[ebp], -1
  0001c	76 31		 jbe	 SHORT $LN2@AtlMultipl
$LN8@AtlMultipl:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0001e	b8 16 02 00 00	 mov	 eax, 534		; 00000216H
  00023	85 c0		 test	 eax, eax
  00025	7f 09		 jg	 SHORT $LN6@AtlMultipl
  00027	c7 45 fc 16 02
	00 00		 mov	 DWORD PTR tv75[ebp], 534 ; 00000216H
  0002e	eb 1a		 jmp	 SHORT $LN4@AtlMultipl
$LN6@AtlMultipl:
  00030	b9 16 02 00 00	 mov	 ecx, 534		; 00000216H
  00035	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0003b	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  00041	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  00047	89 4d fc	 mov	 DWORD PTR tv75[ebp], ecx
$LN4@AtlMultipl:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\atlmfc\include\atlalloc.h

; 139  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0004a	8b 45 fc	 mov	 eax, DWORD PTR tv75[ebp]
  0004d	eb 0a		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 140  : 	}
; 141  : 	*piResult=static_cast<unsigned int>(i64Result);

  0004f	8b 55 f4	 mov	 edx, DWORD PTR _i64Result$[ebp]
  00052	8b 45 08	 mov	 eax, DWORD PTR _piResult$[ebp]
  00055	89 10		 mov	 DWORD PTR [eax], edx

; 142  : 	return S_OK;

  00057	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 143  : }

  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$AtlMultiply@I@ATL@@YAJPAIII@Z ENDP			; ATL::AtlMultiply<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vscprintf
_TEXT	SEGMENT
tv78 = -8						; size = 4
__Result$1 = -4						; size = 4
__Format$ = 8						; size = 4
__ArgList$ = 12						; size = 4
__vscprintf PROC					; COMDAT

; 1675 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1659 :         int const _Result = __stdio_common_vsprintf(

  00006	8b 45 0c	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Format$[ebp]
  0000f	51		 push	 ecx
  00010	6a 00		 push	 0
  00012	6a 00		 push	 0
  00014	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00019	8b 10		 mov	 edx, DWORD PTR [eax]
  0001b	83 ca 02	 or	 edx, 2
  0001e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00021	50		 push	 eax
  00022	52		 push	 edx
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00029	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002c	89 45 fc	 mov	 DWORD PTR __Result$1[ebp], eax

; 1660 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1661 :             NULL, 0, _Format, _Locale, _ArgList);
; 1662 : 
; 1663 :         return _Result < 0 ? -1 : _Result;

  0002f	83 7d fc 00	 cmp	 DWORD PTR __Result$1[ebp], 0
  00033	7d 09		 jge	 SHORT $LN5@vscprintf
  00035	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv78[ebp], -1
  0003c	eb 06		 jmp	 SHORT $LN3@vscprintf
$LN5@vscprintf:
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR __Result$1[ebp]
  00041	89 4d f8	 mov	 DWORD PTR tv78[ebp], ecx
$LN3@vscprintf:

; 1676 :         return _vscprintf_l(_Format, NULL, _ArgList);

  00044	8b 45 f8	 mov	 eax, DWORD PTR tv78[ebp]

; 1677 :     }

  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
__vscprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vscprintf_l
_TEXT	SEGMENT
tv74 = -8						; size = 4
__Result$ = -4						; size = 4
__Format$ = 8						; size = 4
__Locale$ = 12						; size = 4
__ArgList$ = 16						; size = 4
__vscprintf_l PROC					; COMDAT

; 1658 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1659 :         int const _Result = __stdio_common_vsprintf(

  00006	8b 45 10	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Locale$[ebp]
  0000d	51		 push	 ecx
  0000e	8b 55 08	 mov	 edx, DWORD PTR __Format$[ebp]
  00011	52		 push	 edx
  00012	6a 00		 push	 0
  00014	6a 00		 push	 0
  00016	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001d	83 c9 02	 or	 ecx, 2
  00020	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00023	52		 push	 edx
  00024	51		 push	 ecx
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  0002b	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002e	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1660 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1661 :             NULL, 0, _Format, _Locale, _ArgList);
; 1662 : 
; 1663 :         return _Result < 0 ? -1 : _Result;

  00031	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00035	7d 09		 jge	 SHORT $LN3@vscprintf_
  00037	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  0003e	eb 06		 jmp	 SHORT $LN4@vscprintf_
$LN3@vscprintf_:
  00040	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00043	89 45 f8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vscprintf_:
  00046	8b 45 f8	 mov	 eax, DWORD PTR tv74[ebp]

; 1664 :     }

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
__vscprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s
_TEXT	SEGMENT
tv81 = -8						; size = 4
__Result$1 = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_s PROC					; COMDAT

; 1605 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  00006	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR __Format$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 10	 mov	 edx, DWORD PTR __MaxCount$[ebp]
  00013	52		 push	 edx
  00014	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00021	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00024	52		 push	 edx
  00025	8b 00		 mov	 eax, DWORD PTR [eax]
  00027	50		 push	 eax
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsnprintf_s
  0002e	83 c4 20	 add	 esp, 32			; 00000020H
  00031	89 45 fc	 mov	 DWORD PTR __Result$1[ebp], eax

; 1586 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1587 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1588 : 
; 1589 :         return _Result < 0 ? -1 : _Result;

  00034	83 7d fc 00	 cmp	 DWORD PTR __Result$1[ebp], 0
  00038	7d 09		 jge	 SHORT $LN5@vsnprintf_
  0003a	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv81[ebp], -1
  00041	eb 06		 jmp	 SHORT $LN3@vsnprintf_
$LN5@vsnprintf_:
  00043	8b 4d fc	 mov	 ecx, DWORD PTR __Result$1[ebp]
  00046	89 4d f8	 mov	 DWORD PTR tv81[ebp], ecx
$LN3@vsnprintf_:

; 1606 :         return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);

  00049	8b 45 f8	 mov	 eax, DWORD PTR tv81[ebp]

; 1607 :     }

  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
__vsnprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_s_l
_TEXT	SEGMENT
tv74 = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__MaxCount$ = 16					; size = 4
__Format$ = 20						; size = 4
__Locale$ = 24						; size = 4
__ArgList$ = 28						; size = 4
__vsnprintf_s_l PROC					; COMDAT

; 1584 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  00006	8b 45 1c	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 18	 mov	 ecx, DWORD PTR __Locale$[ebp]
  0000d	51		 push	 ecx
  0000e	8b 55 14	 mov	 edx, DWORD PTR __Format$[ebp]
  00011	52		 push	 edx
  00012	8b 45 10	 mov	 eax, DWORD PTR __MaxCount$[ebp]
  00015	50		 push	 eax
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR __BufferCount$[ebp]
  00019	51		 push	 ecx
  0001a	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00023	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00026	51		 push	 ecx
  00027	8b 10		 mov	 edx, DWORD PTR [eax]
  00029	52		 push	 edx
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsnprintf_s
  00030	83 c4 20	 add	 esp, 32			; 00000020H
  00033	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1586 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1587 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1588 : 
; 1589 :         return _Result < 0 ? -1 : _Result;

  00036	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003a	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003c	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00043	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00045	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00048	89 45 f8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004b	8b 45 f8	 mov	 eax, DWORD PTR tv74[ebp]

; 1590 :     }

  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
__vsnprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT _swprintf_s
_TEXT	SEGMENT
__Result$ = -20						; size = 4
__Format$ = -16						; size = 4
__ArgList$ = -12					; size = 4
tv80 = -8						; size = 4
__Result$1 = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf_s PROC					; COMDAT

; 1538 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 1539 :             int _Result;
; 1540 :             va_list _ArgList;
; 1541 :             __crt_va_start(_ArgList, _Format);

  00006	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00009	89 45 f4	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0000c	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  0000f	89 4d f0	 mov	 DWORD PTR __Format$[ebp], ecx

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  00012	8b 55 f4	 mov	 edx, DWORD PTR __ArgList$[ebp]
  00015	52		 push	 edx
  00016	6a 00		 push	 0
  00018	8b 45 f0	 mov	 eax, DWORD PTR __Format$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR __BufferCount$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00023	52		 push	 edx
  00024	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00029	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002c	51		 push	 ecx
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	52		 push	 edx
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s
  00036	83 c4 1c	 add	 esp, 28			; 0000001cH
  00039	89 45 fc	 mov	 DWORD PTR __Result$1[ebp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  0003c	83 7d fc 00	 cmp	 DWORD PTR __Result$1[ebp], 0
  00040	7d 09		 jge	 SHORT $LN5@swprintf_s
  00042	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv80[ebp], -1
  00049	eb 06		 jmp	 SHORT $LN3@swprintf_s
$LN5@swprintf_s:
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Result$1[ebp]
  0004e	89 45 f8	 mov	 DWORD PTR tv80[ebp], eax
$LN3@swprintf_s:

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  00051	8b 4d f8	 mov	 ecx, DWORD PTR tv80[ebp]
  00054	89 4d ec	 mov	 DWORD PTR __Result$[ebp], ecx

; 1543 :             __crt_va_end(_ArgList);

  00057	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1544 :             return _Result;

  0005e	8b 45 ec	 mov	 eax, DWORD PTR __Result$[ebp]

; 1545 :         }

  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
_swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
;	COMDAT __vswprintf_s_l
_TEXT	SEGMENT
tv73 = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_s_l PROC					; COMDAT

; 1264 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  00006	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00009	50		 push	 eax
  0000a	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  0000d	51		 push	 ecx
  0000e	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00011	52		 push	 edx
  00012	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00015	50		 push	 eax
  00016	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001f	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00022	52		 push	 edx
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
  00025	50		 push	 eax
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s
  0002c	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002f	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  00032	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00036	7d 09		 jge	 SHORT $LN3@vswprintf_
  00038	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
  0003f	eb 06		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00041	8b 4d fc	 mov	 ecx, DWORD PTR __Result$[ebp]
  00044	89 4d f8	 mov	 DWORD PTR tv73[ebp], ecx
$LN4@vswprintf_:
  00047	8b 45 f8	 mov	 eax, DWORD PTR tv73[ebp]

; 1270 :     }

  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
__vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\shared\winerror.h
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT

; 28640: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00008	7f 08		 jg	 SHORT $LN3@HRESULT_FR
  0000a	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  0000d	89 45 fc	 mov	 DWORD PTR tv68[ebp], eax
  00010	eb 18		 jmp	 SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  00015	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0001b	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  00021	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  00027	89 4d fc	 mov	 DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR tv68[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\stdafx.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File g:\网狐\happygamewh\服务端\系统模块\服务器组件\内核引擎\stdafx.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
$LN2@vector:
  00004	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  0000d	83 e9 01	 sub	 ecx, 1
  00010	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00013	83 7d fc 00	 cmp	 DWORD PTR tv66[ebp], 0
  00017	76 11		 jbe	 SHORT $LN1@vector
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  0001c	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001f	8b 55 08	 mov	 edx, DWORD PTR ___t$[ebp]
  00022	03 55 0c	 add	 edx, DWORD PTR ___s$[ebp]
  00025	89 55 08	 mov	 DWORD PTR ___t$[ebp], edx
  00028	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
