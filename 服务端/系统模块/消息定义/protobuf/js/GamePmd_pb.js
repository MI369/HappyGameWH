/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var NullPmd_pb = require('./NullPmd_pb.js');
goog.exportSymbol('proto.GamePmd.tagGameNode_s2c', null, global);
goog.exportSymbol('proto.GamePmd.tagGamePage_s2c', null, global);
goog.exportSymbol('proto.GamePmd.tagGameServer_s2c', null, global);
goog.exportSymbol('proto.GamePmd.taggamekind_s2c', null, global);
goog.exportSymbol('proto.GamePmd.taggametype_s2c', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePmd.taggametype_s2c = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePmd.taggametype_s2c, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePmd.taggametype_s2c.displayName = 'proto.GamePmd.taggametype_s2c';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePmd.taggametype_s2c.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePmd.taggametype_s2c.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePmd.taggametype_s2c} msg The msg instance to transform.
 * @return {!Object}
 */
proto.GamePmd.taggametype_s2c.toObject = function(includeInstance, msg) {
  var f, obj = {
    wjoinid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    wsortid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    wtypeid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    sztypename: jspb.Message.getFieldWithDefault(msg, 4, ""),
    respcmd: (f = msg.getRespcmd()) && NullPmd_pb.response.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePmd.taggametype_s2c}
 */
proto.GamePmd.taggametype_s2c.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePmd.taggametype_s2c;
  return proto.GamePmd.taggametype_s2c.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePmd.taggametype_s2c} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePmd.taggametype_s2c}
 */
proto.GamePmd.taggametype_s2c.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWjoinid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWsortid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWtypeid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSztypename(value);
      break;
    case 5:
      var value = new NullPmd_pb.response;
      reader.readMessage(value,NullPmd_pb.response.deserializeBinaryFromReader);
      msg.setRespcmd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePmd.taggametype_s2c.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePmd.taggametype_s2c.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePmd.taggametype_s2c} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.GamePmd.taggametype_s2c.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWjoinid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getWsortid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getWtypeid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSztypename();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRespcmd();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      NullPmd_pb.response.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 wjoinid = 1;
 * @return {number}
 */
proto.GamePmd.taggametype_s2c.prototype.getWjoinid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.GamePmd.taggametype_s2c.prototype.setWjoinid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 wsortid = 2;
 * @return {number}
 */
proto.GamePmd.taggametype_s2c.prototype.getWsortid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePmd.taggametype_s2c.prototype.setWsortid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 wtypeid = 3;
 * @return {number}
 */
proto.GamePmd.taggametype_s2c.prototype.getWtypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.GamePmd.taggametype_s2c.prototype.setWtypeid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string sztypename = 4;
 * @return {string}
 */
proto.GamePmd.taggametype_s2c.prototype.getSztypename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.GamePmd.taggametype_s2c.prototype.setSztypename = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional NullPmd.response respcmd = 5;
 * @return {?proto.NullPmd.response}
 */
proto.GamePmd.taggametype_s2c.prototype.getRespcmd = function() {
  return /** @type{?proto.NullPmd.response} */ (
    jspb.Message.getWrapperField(this, NullPmd_pb.response, 5));
};


/** @param {?proto.NullPmd.response|undefined} value */
proto.GamePmd.taggametype_s2c.prototype.setRespcmd = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.GamePmd.taggametype_s2c.prototype.clearRespcmd = function() {
  this.setRespcmd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.GamePmd.taggametype_s2c.prototype.hasRespcmd = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePmd.taggamekind_s2c = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePmd.taggamekind_s2c, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePmd.taggamekind_s2c.displayName = 'proto.GamePmd.taggamekind_s2c';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePmd.taggamekind_s2c.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePmd.taggamekind_s2c.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePmd.taggamekind_s2c} msg The msg instance to transform.
 * @return {!Object}
 */
proto.GamePmd.taggamekind_s2c.toObject = function(includeInstance, msg) {
  var f, obj = {
    wtypeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    wjoinid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    wsortid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    wkindid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    wgameid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    wrecommend: jspb.Message.getFieldWithDefault(msg, 6, 0),
    wgameflag: jspb.Message.getFieldWithDefault(msg, 7, 0),
    dwonlinecount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    dwandroidcount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    dwsetcount: jspb.Message.getFieldWithDefault(msg, 10, 0),
    dwfullcount: jspb.Message.getFieldWithDefault(msg, 11, 0),
    szkindname: jspb.Message.getFieldWithDefault(msg, 12, ""),
    szprocessname: jspb.Message.getFieldWithDefault(msg, 13, ""),
    respcmd: (f = msg.getRespcmd()) && NullPmd_pb.response.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePmd.taggamekind_s2c}
 */
proto.GamePmd.taggamekind_s2c.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePmd.taggamekind_s2c;
  return proto.GamePmd.taggamekind_s2c.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePmd.taggamekind_s2c} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePmd.taggamekind_s2c}
 */
proto.GamePmd.taggamekind_s2c.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWtypeid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWjoinid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWsortid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWkindid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWgameid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWrecommend(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWgameflag(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDwonlinecount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDwandroidcount(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDwsetcount(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDwfullcount(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSzkindname(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSzprocessname(value);
      break;
    case 14:
      var value = new NullPmd_pb.response;
      reader.readMessage(value,NullPmd_pb.response.deserializeBinaryFromReader);
      msg.setRespcmd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePmd.taggamekind_s2c.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePmd.taggamekind_s2c.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePmd.taggamekind_s2c} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.GamePmd.taggamekind_s2c.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWtypeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getWjoinid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getWsortid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getWkindid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getWgameid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getWrecommend();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getWgameflag();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getDwonlinecount();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getDwandroidcount();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getDwsetcount();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getDwfullcount();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getSzkindname();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSzprocessname();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getRespcmd();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      NullPmd_pb.response.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 wtypeid = 1;
 * @return {number}
 */
proto.GamePmd.taggamekind_s2c.prototype.getWtypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.GamePmd.taggamekind_s2c.prototype.setWtypeid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 wjoinid = 2;
 * @return {number}
 */
proto.GamePmd.taggamekind_s2c.prototype.getWjoinid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePmd.taggamekind_s2c.prototype.setWjoinid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 wsortid = 3;
 * @return {number}
 */
proto.GamePmd.taggamekind_s2c.prototype.getWsortid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.GamePmd.taggamekind_s2c.prototype.setWsortid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 wkindid = 4;
 * @return {number}
 */
proto.GamePmd.taggamekind_s2c.prototype.getWkindid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.GamePmd.taggamekind_s2c.prototype.setWkindid = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 wgameid = 5;
 * @return {number}
 */
proto.GamePmd.taggamekind_s2c.prototype.getWgameid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.GamePmd.taggamekind_s2c.prototype.setWgameid = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int32 wrecommend = 6;
 * @return {number}
 */
proto.GamePmd.taggamekind_s2c.prototype.getWrecommend = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.GamePmd.taggamekind_s2c.prototype.setWrecommend = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional int32 wgameflag = 7;
 * @return {number}
 */
proto.GamePmd.taggamekind_s2c.prototype.getWgameflag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.GamePmd.taggamekind_s2c.prototype.setWgameflag = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional uint64 dwonlinecount = 8;
 * @return {number}
 */
proto.GamePmd.taggamekind_s2c.prototype.getDwonlinecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.GamePmd.taggamekind_s2c.prototype.setDwonlinecount = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional uint64 dwandroidcount = 9;
 * @return {number}
 */
proto.GamePmd.taggamekind_s2c.prototype.getDwandroidcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.GamePmd.taggamekind_s2c.prototype.setDwandroidcount = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional uint64 dwsetcount = 10;
 * @return {number}
 */
proto.GamePmd.taggamekind_s2c.prototype.getDwsetcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.GamePmd.taggamekind_s2c.prototype.setDwsetcount = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional uint64 dwfullcount = 11;
 * @return {number}
 */
proto.GamePmd.taggamekind_s2c.prototype.getDwfullcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.GamePmd.taggamekind_s2c.prototype.setDwfullcount = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional string szkindname = 12;
 * @return {string}
 */
proto.GamePmd.taggamekind_s2c.prototype.getSzkindname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.GamePmd.taggamekind_s2c.prototype.setSzkindname = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional string szprocessname = 13;
 * @return {string}
 */
proto.GamePmd.taggamekind_s2c.prototype.getSzprocessname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.GamePmd.taggamekind_s2c.prototype.setSzprocessname = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * optional NullPmd.response respcmd = 14;
 * @return {?proto.NullPmd.response}
 */
proto.GamePmd.taggamekind_s2c.prototype.getRespcmd = function() {
  return /** @type{?proto.NullPmd.response} */ (
    jspb.Message.getWrapperField(this, NullPmd_pb.response, 14));
};


/** @param {?proto.NullPmd.response|undefined} value */
proto.GamePmd.taggamekind_s2c.prototype.setRespcmd = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.GamePmd.taggamekind_s2c.prototype.clearRespcmd = function() {
  this.setRespcmd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.GamePmd.taggamekind_s2c.prototype.hasRespcmd = function() {
  return jspb.Message.getField(this, 14) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePmd.tagGamePage_s2c = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePmd.tagGamePage_s2c, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePmd.tagGamePage_s2c.displayName = 'proto.GamePmd.tagGamePage_s2c';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePmd.tagGamePage_s2c.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePmd.tagGamePage_s2c.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePmd.tagGamePage_s2c} msg The msg instance to transform.
 * @return {!Object}
 */
proto.GamePmd.tagGamePage_s2c.toObject = function(includeInstance, msg) {
  var f, obj = {
    wpageid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    wkindid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    wnodeid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    wsortid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    woperatetype: jspb.Message.getFieldWithDefault(msg, 5, 0),
    szdisplayname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    respcmd: (f = msg.getRespcmd()) && NullPmd_pb.response.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePmd.tagGamePage_s2c}
 */
proto.GamePmd.tagGamePage_s2c.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePmd.tagGamePage_s2c;
  return proto.GamePmd.tagGamePage_s2c.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePmd.tagGamePage_s2c} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePmd.tagGamePage_s2c}
 */
proto.GamePmd.tagGamePage_s2c.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWpageid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWkindid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWnodeid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWsortid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWoperatetype(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSzdisplayname(value);
      break;
    case 7:
      var value = new NullPmd_pb.response;
      reader.readMessage(value,NullPmd_pb.response.deserializeBinaryFromReader);
      msg.setRespcmd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePmd.tagGamePage_s2c.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePmd.tagGamePage_s2c.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePmd.tagGamePage_s2c} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.GamePmd.tagGamePage_s2c.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWpageid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getWkindid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getWnodeid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getWsortid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getWoperatetype();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSzdisplayname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRespcmd();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      NullPmd_pb.response.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 wpageid = 1;
 * @return {number}
 */
proto.GamePmd.tagGamePage_s2c.prototype.getWpageid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.GamePmd.tagGamePage_s2c.prototype.setWpageid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 wkindid = 2;
 * @return {number}
 */
proto.GamePmd.tagGamePage_s2c.prototype.getWkindid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePmd.tagGamePage_s2c.prototype.setWkindid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 wnodeid = 3;
 * @return {number}
 */
proto.GamePmd.tagGamePage_s2c.prototype.getWnodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.GamePmd.tagGamePage_s2c.prototype.setWnodeid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 wsortid = 4;
 * @return {number}
 */
proto.GamePmd.tagGamePage_s2c.prototype.getWsortid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.GamePmd.tagGamePage_s2c.prototype.setWsortid = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 woperatetype = 5;
 * @return {number}
 */
proto.GamePmd.tagGamePage_s2c.prototype.getWoperatetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.GamePmd.tagGamePage_s2c.prototype.setWoperatetype = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string szdisplayname = 6;
 * @return {string}
 */
proto.GamePmd.tagGamePage_s2c.prototype.getSzdisplayname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.GamePmd.tagGamePage_s2c.prototype.setSzdisplayname = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional NullPmd.response respcmd = 7;
 * @return {?proto.NullPmd.response}
 */
proto.GamePmd.tagGamePage_s2c.prototype.getRespcmd = function() {
  return /** @type{?proto.NullPmd.response} */ (
    jspb.Message.getWrapperField(this, NullPmd_pb.response, 7));
};


/** @param {?proto.NullPmd.response|undefined} value */
proto.GamePmd.tagGamePage_s2c.prototype.setRespcmd = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.GamePmd.tagGamePage_s2c.prototype.clearRespcmd = function() {
  this.setRespcmd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.GamePmd.tagGamePage_s2c.prototype.hasRespcmd = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePmd.tagGameNode_s2c = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePmd.tagGameNode_s2c, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePmd.tagGameNode_s2c.displayName = 'proto.GamePmd.tagGameNode_s2c';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePmd.tagGameNode_s2c.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePmd.tagGameNode_s2c.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePmd.tagGameNode_s2c} msg The msg instance to transform.
 * @return {!Object}
 */
proto.GamePmd.tagGameNode_s2c.toObject = function(includeInstance, msg) {
  var f, obj = {
    wkindid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    wjoinid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    wsortid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    wnodeid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    sznodename: jspb.Message.getFieldWithDefault(msg, 5, ""),
    respcmd: (f = msg.getRespcmd()) && NullPmd_pb.response.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePmd.tagGameNode_s2c}
 */
proto.GamePmd.tagGameNode_s2c.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePmd.tagGameNode_s2c;
  return proto.GamePmd.tagGameNode_s2c.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePmd.tagGameNode_s2c} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePmd.tagGameNode_s2c}
 */
proto.GamePmd.tagGameNode_s2c.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWkindid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWjoinid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWsortid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWnodeid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSznodename(value);
      break;
    case 6:
      var value = new NullPmd_pb.response;
      reader.readMessage(value,NullPmd_pb.response.deserializeBinaryFromReader);
      msg.setRespcmd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePmd.tagGameNode_s2c.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePmd.tagGameNode_s2c.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePmd.tagGameNode_s2c} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.GamePmd.tagGameNode_s2c.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWkindid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getWjoinid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getWsortid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getWnodeid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getSznodename();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRespcmd();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      NullPmd_pb.response.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 wkindid = 1;
 * @return {number}
 */
proto.GamePmd.tagGameNode_s2c.prototype.getWkindid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameNode_s2c.prototype.setWkindid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 wjoinid = 2;
 * @return {number}
 */
proto.GamePmd.tagGameNode_s2c.prototype.getWjoinid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameNode_s2c.prototype.setWjoinid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 wsortid = 3;
 * @return {number}
 */
proto.GamePmd.tagGameNode_s2c.prototype.getWsortid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameNode_s2c.prototype.setWsortid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 wnodeid = 4;
 * @return {number}
 */
proto.GamePmd.tagGameNode_s2c.prototype.getWnodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameNode_s2c.prototype.setWnodeid = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string sznodename = 5;
 * @return {string}
 */
proto.GamePmd.tagGameNode_s2c.prototype.getSznodename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.GamePmd.tagGameNode_s2c.prototype.setSznodename = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional NullPmd.response respcmd = 6;
 * @return {?proto.NullPmd.response}
 */
proto.GamePmd.tagGameNode_s2c.prototype.getRespcmd = function() {
  return /** @type{?proto.NullPmd.response} */ (
    jspb.Message.getWrapperField(this, NullPmd_pb.response, 6));
};


/** @param {?proto.NullPmd.response|undefined} value */
proto.GamePmd.tagGameNode_s2c.prototype.setRespcmd = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.GamePmd.tagGameNode_s2c.prototype.clearRespcmd = function() {
  this.setRespcmd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.GamePmd.tagGameNode_s2c.prototype.hasRespcmd = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GamePmd.tagGameServer_s2c = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GamePmd.tagGameServer_s2c, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.GamePmd.tagGameServer_s2c.displayName = 'proto.GamePmd.tagGameServer_s2c';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GamePmd.tagGameServer_s2c.prototype.toObject = function(opt_includeInstance) {
  return proto.GamePmd.tagGameServer_s2c.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GamePmd.tagGameServer_s2c} msg The msg instance to transform.
 * @return {!Object}
 */
proto.GamePmd.tagGameServer_s2c.toObject = function(includeInstance, msg) {
  var f, obj = {
    wkindid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    wnodeid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    wsortid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    wserverid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    wserverkind: jspb.Message.getFieldWithDefault(msg, 5, 0),
    wservertype: jspb.Message.getFieldWithDefault(msg, 6, 0),
    wserverlevel: jspb.Message.getFieldWithDefault(msg, 7, 0),
    wserverport: jspb.Message.getFieldWithDefault(msg, 8, 0),
    lcellscore: jspb.Message.getFieldWithDefault(msg, 9, 0),
    cbentermember: jspb.Message.getFieldWithDefault(msg, 10, 0),
    lenterscore: jspb.Message.getFieldWithDefault(msg, 11, 0),
    dwserverrule: jspb.Message.getFieldWithDefault(msg, 12, 0),
    dwonlinecount: jspb.Message.getFieldWithDefault(msg, 13, 0),
    dwandroidcount: jspb.Message.getFieldWithDefault(msg, 14, 0),
    dwfullcount: jspb.Message.getFieldWithDefault(msg, 15, 0),
    szserveraddr: jspb.Message.getFieldWithDefault(msg, 16, ""),
    szservername: jspb.Message.getFieldWithDefault(msg, 17, ""),
    dwsurporttype: jspb.Message.getFieldWithDefault(msg, 18, 0),
    wtablecount: jspb.Message.getFieldWithDefault(msg, 19, 0),
    dwsetplayercount: jspb.Message.getFieldWithDefault(msg, 20, 0),
    szgameinfomation: jspb.Message.getFieldWithDefault(msg, 21, ""),
    respcmd: (f = msg.getRespcmd()) && NullPmd_pb.response.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GamePmd.tagGameServer_s2c}
 */
proto.GamePmd.tagGameServer_s2c.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GamePmd.tagGameServer_s2c;
  return proto.GamePmd.tagGameServer_s2c.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GamePmd.tagGameServer_s2c} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GamePmd.tagGameServer_s2c}
 */
proto.GamePmd.tagGameServer_s2c.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWkindid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWnodeid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWsortid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWserverid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWserverkind(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWservertype(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWserverlevel(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWserverport(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLcellscore(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCbentermember(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLenterscore(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDwserverrule(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDwonlinecount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDwandroidcount(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDwfullcount(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSzserveraddr(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setSzservername(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDwsurporttype(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWtablecount(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDwsetplayercount(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setSzgameinfomation(value);
      break;
    case 22:
      var value = new NullPmd_pb.response;
      reader.readMessage(value,NullPmd_pb.response.deserializeBinaryFromReader);
      msg.setRespcmd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GamePmd.tagGameServer_s2c.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GamePmd.tagGameServer_s2c.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GamePmd.tagGameServer_s2c} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.GamePmd.tagGameServer_s2c.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWkindid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getWnodeid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getWsortid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getWserverid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getWserverkind();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getWservertype();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getWserverlevel();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getWserverport();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getLcellscore();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getCbentermember();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getLenterscore();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getDwserverrule();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getDwonlinecount();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getDwandroidcount();
  if (f !== 0) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getDwfullcount();
  if (f !== 0) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getSzserveraddr();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getSzservername();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getDwsurporttype();
  if (f !== 0) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = message.getWtablecount();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getDwsetplayercount();
  if (f !== 0) {
    writer.writeUint64(
      20,
      f
    );
  }
  f = message.getSzgameinfomation();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getRespcmd();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      NullPmd_pb.response.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 wKindID = 1;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getWkindid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setWkindid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 wNodeID = 2;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getWnodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setWnodeid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 wSortID = 3;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getWsortid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setWsortid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 wServerID = 4;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getWserverid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setWserverid = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 wServerKind = 5;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getWserverkind = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setWserverkind = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int32 wServerType = 6;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getWservertype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setWservertype = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional int32 wServerLevel = 7;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getWserverlevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setWserverlevel = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional int32 wServerPort = 8;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getWserverport = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setWserverport = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional uint64 lCellScore = 9;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getLcellscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setLcellscore = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional int32 cbEnterMember = 10;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getCbentermember = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setCbentermember = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional uint64 lEnterScore = 11;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getLenterscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setLenterscore = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional uint64 dwServerRule = 12;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getDwserverrule = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setDwserverrule = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional uint64 dwOnLineCount = 13;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getDwonlinecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setDwonlinecount = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * optional uint64 dwAndroidCount = 14;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getDwandroidcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setDwandroidcount = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional uint64 dwFullCount = 15;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getDwfullcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setDwfullcount = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * optional string szServerAddr = 16;
 * @return {string}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getSzserveraddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.GamePmd.tagGameServer_s2c.prototype.setSzserveraddr = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * optional string szServerName = 17;
 * @return {string}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getSzservername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.GamePmd.tagGameServer_s2c.prototype.setSzservername = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * optional uint64 dwSurportType = 18;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getDwsurporttype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setDwsurporttype = function(value) {
  jspb.Message.setField(this, 18, value);
};


/**
 * optional int32 wTableCount = 19;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getWtablecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setWtablecount = function(value) {
  jspb.Message.setField(this, 19, value);
};


/**
 * optional uint64 dwSetPlayerCount = 20;
 * @return {number}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getDwsetplayercount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.GamePmd.tagGameServer_s2c.prototype.setDwsetplayercount = function(value) {
  jspb.Message.setField(this, 20, value);
};


/**
 * optional string szGameInfomation = 21;
 * @return {string}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getSzgameinfomation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.GamePmd.tagGameServer_s2c.prototype.setSzgameinfomation = function(value) {
  jspb.Message.setField(this, 21, value);
};


/**
 * optional NullPmd.response respcmd = 22;
 * @return {?proto.NullPmd.response}
 */
proto.GamePmd.tagGameServer_s2c.prototype.getRespcmd = function() {
  return /** @type{?proto.NullPmd.response} */ (
    jspb.Message.getWrapperField(this, NullPmd_pb.response, 22));
};


/** @param {?proto.NullPmd.response|undefined} value */
proto.GamePmd.tagGameServer_s2c.prototype.setRespcmd = function(value) {
  jspb.Message.setWrapperField(this, 22, value);
};


proto.GamePmd.tagGameServer_s2c.prototype.clearRespcmd = function() {
  this.setRespcmd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.GamePmd.tagGameServer_s2c.prototype.hasRespcmd = function() {
  return jspb.Message.getField(this, 22) != null;
};


goog.object.extend(exports, proto.GamePmd);
