// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LoginPmd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "LoginPmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace LoginPmd {
class loginbyid_c2sDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<loginbyid_c2s> {
} _loginbyid_c2s_default_instance_;
class loginbyaccounts_c2sDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<loginbyaccounts_c2s> {
} _loginbyaccounts_c2s_default_instance_;
class logonOtherPlatform_c2sDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<logonOtherPlatform_c2s> {
} _logonOtherPlatform_c2s_default_instance_;
class loginbyvisitor_c2sDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<loginbyvisitor_c2s> {
} _loginbyvisitor_c2s_default_instance_;
class loginsuccess_s2cDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<loginsuccess_s2c> {
} _loginsuccess_s2c_default_instance_;
class loginfinish_s2cDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<loginfinish_s2c> {
} _loginfinish_s2c_default_instance_;
class loginfailure_s2cDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<loginfailure_s2c> {
} _loginfailure_s2c_default_instance_;

namespace protobuf_LoginPmd_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyid_c2s, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyid_c2s, reqcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyid_c2s, dwplazaversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyid_c2s, szmachineid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyid_c2s, dwgameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyid_c2s, szpassword_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyid_c2s, cbvalidateflags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyaccounts_c2s, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyaccounts_c2s, reqcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyaccounts_c2s, dwplazaversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyaccounts_c2s, szmachineid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyaccounts_c2s, szpassword_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyaccounts_c2s, szaccounts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyaccounts_c2s, szpassportid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyaccounts_c2s, cbvalidateflags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logonOtherPlatform_c2s, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logonOtherPlatform_c2s, reqcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logonOtherPlatform_c2s, wmoduleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logonOtherPlatform_c2s, dwplazaversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logonOtherPlatform_c2s, cbdevicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logonOtherPlatform_c2s, cbgender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logonOtherPlatform_c2s, cbplatformid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logonOtherPlatform_c2s, szuseruin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logonOtherPlatform_c2s, sznickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logonOtherPlatform_c2s, szcompellation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logonOtherPlatform_c2s, szmachineid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logonOtherPlatform_c2s, szmobilephone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logonOtherPlatform_c2s, szdevicetoken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logonOtherPlatform_c2s, strfaceurl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyvisitor_c2s, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyvisitor_c2s, reqcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyvisitor_c2s, dwplazaversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyvisitor_c2s, szmachineid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginbyvisitor_c2s, cbvalidateflags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginsuccess_s2c, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginsuccess_s2c, respcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginsuccess_s2c, personinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginfinish_s2c, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginfinish_s2c, respcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginfinish_s2c, wintermittime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginfinish_s2c, wonlinecounttime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginfailure_s2c, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginfailure_s2c, respcmd_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(loginbyid_c2s)},
  { 10, -1, sizeof(loginbyaccounts_c2s)},
  { 21, -1, sizeof(logonOtherPlatform_c2s)},
  { 38, -1, sizeof(loginbyvisitor_c2s)},
  { 46, -1, sizeof(loginsuccess_s2c)},
  { 52, -1, sizeof(loginfinish_s2c)},
  { 59, -1, sizeof(loginfailure_s2c)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_loginbyid_c2s_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_loginbyaccounts_c2s_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_logonOtherPlatform_c2s_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_loginbyvisitor_c2s_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_loginsuccess_s2c_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_loginfinish_s2c_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_loginfailure_s2c_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "LoginPmd.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace

void TableStruct::Shutdown() {
  _loginbyid_c2s_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _loginbyaccounts_c2s_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _logonOtherPlatform_c2s_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _loginbyvisitor_c2s_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _loginsuccess_s2c_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _loginfinish_s2c_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _loginfailure_s2c_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::NullPmd::protobuf_NullPmd_2eproto::InitDefaults();
  ::CommonPmd::protobuf_CommonPmd_2eproto::InitDefaults();
  _loginbyid_c2s_default_instance_.DefaultConstruct();
  _loginbyaccounts_c2s_default_instance_.DefaultConstruct();
  _logonOtherPlatform_c2s_default_instance_.DefaultConstruct();
  _loginbyvisitor_c2s_default_instance_.DefaultConstruct();
  _loginsuccess_s2c_default_instance_.DefaultConstruct();
  _loginfinish_s2c_default_instance_.DefaultConstruct();
  _loginfailure_s2c_default_instance_.DefaultConstruct();
  _loginbyid_c2s_default_instance_.get_mutable()->reqcmd_ = const_cast< ::NullPmd::request*>(
      ::NullPmd::request::internal_default_instance());
  _loginbyaccounts_c2s_default_instance_.get_mutable()->reqcmd_ = const_cast< ::NullPmd::request*>(
      ::NullPmd::request::internal_default_instance());
  _logonOtherPlatform_c2s_default_instance_.get_mutable()->reqcmd_ = const_cast< ::NullPmd::request*>(
      ::NullPmd::request::internal_default_instance());
  _loginbyvisitor_c2s_default_instance_.get_mutable()->reqcmd_ = const_cast< ::NullPmd::request*>(
      ::NullPmd::request::internal_default_instance());
  _loginsuccess_s2c_default_instance_.get_mutable()->respcmd_ = const_cast< ::NullPmd::response*>(
      ::NullPmd::response::internal_default_instance());
  _loginsuccess_s2c_default_instance_.get_mutable()->personinfo_ = const_cast< ::CommonPmd::personinfo*>(
      ::CommonPmd::personinfo::internal_default_instance());
  _loginfinish_s2c_default_instance_.get_mutable()->respcmd_ = const_cast< ::NullPmd::response*>(
      ::NullPmd::response::internal_default_instance());
  _loginfailure_s2c_default_instance_.get_mutable()->respcmd_ = const_cast< ::NullPmd::response*>(
      ::NullPmd::response::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016LoginPmd.proto\022\010LoginPmd\032\rNullPmd.prot"
      "o\032\017CommonPmd.proto\"\235\001\n\rloginbyid_c2s\022 \n\006"
      "reqcmd\030\001 \001(\0132\020.NullPmd.request\022\026\n\016dwplaz"
      "aversion\030\002 \001(\004\022\023\n\013szmachineid\030\003 \001(\t\022\020\n\010d"
      "wgameid\030\004 \001(\004\022\022\n\nszpassword\030\005 \001(\t\022\027\n\017cbv"
      "alidateflags\030\006 \001(\005\"\273\001\n\023loginbyaccounts_c"
      "2s\022 \n\006reqcmd\030\001 \001(\0132\020.NullPmd.request\022\026\n\016"
      "dwplazaversion\030\002 \001(\004\022\023\n\013szmachineid\030\003 \001("
      "\t\022\022\n\nszpassword\030\004 \001(\t\022\022\n\nszaccounts\030\005 \001("
      "\t\022\024\n\014szpassportid\030\006 \001(\t\022\027\n\017cbvalidatefla"
      "gs\030\007 \001(\005\"\271\002\n\026logonOtherPlatform_c2s\022 \n\006r"
      "eqcmd\030\001 \001(\0132\020.NullPmd.request\022\021\n\twmodule"
      "id\030\002 \001(\005\022\026\n\016dwplazaversion\030\003 \001(\004\022\024\n\014cbde"
      "vicetype\030\004 \001(\005\022\020\n\010cbgender\030\005 \001(\005\022\024\n\014cbpl"
      "atformid\030\006 \001(\005\022\021\n\tszuseruin\030\007 \001(\t\022\022\n\nszn"
      "ickname\030\010 \001(\t\022\026\n\016szcompellation\030\t \001(\t\022\023\n"
      "\013szmachineid\030\n \001(\t\022\025\n\rszmobilephone\030\013 \001("
      "\t\022\025\n\rszdevicetoken\030\014 \001(\t\022\022\n\nstrfaceurl\030\r"
      " \001(\t\"|\n\022loginbyvisitor_c2s\022 \n\006reqcmd\030\001 \001"
      "(\0132\020.NullPmd.request\022\026\n\016dwplazaversion\030\002"
      " \001(\004\022\023\n\013szmachineid\030\003 \001(\t\022\027\n\017cbvalidatef"
      "lags\030\004 \001(\005\"a\n\020loginsuccess_s2c\022\"\n\007respcm"
      "d\030\001 \001(\0132\021.NullPmd.response\022)\n\npersoninfo"
      "\030\002 \001(\0132\025.CommonPmd.personinfo\"f\n\017loginfi"
      "nish_s2c\022\"\n\007respcmd\030\001 \001(\0132\021.NullPmd.resp"
      "onse\022\025\n\rwIntermitTime\030\002 \001(\005\022\030\n\020wOnLineCo"
      "untTime\030\003 \001(\005\"6\n\020loginfailure_s2c\022\"\n\007res"
      "pcmd\030\001 \001(\0132\021.NullPmd.responseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1117);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LoginPmd.proto", &protobuf_RegisterTypes);
  ::NullPmd::protobuf_NullPmd_2eproto::AddDescriptors();
  ::CommonPmd::protobuf_CommonPmd_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_LoginPmd_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int loginbyid_c2s::kReqcmdFieldNumber;
const int loginbyid_c2s::kDwplazaversionFieldNumber;
const int loginbyid_c2s::kSzmachineidFieldNumber;
const int loginbyid_c2s::kDwgameidFieldNumber;
const int loginbyid_c2s::kSzpasswordFieldNumber;
const int loginbyid_c2s::kCbvalidateflagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

loginbyid_c2s::loginbyid_c2s()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LoginPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginPmd.loginbyid_c2s)
}
loginbyid_c2s::loginbyid_c2s(const loginbyid_c2s& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szmachineid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szmachineid().size() > 0) {
    szmachineid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szmachineid_);
  }
  szpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szpassword().size() > 0) {
    szpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szpassword_);
  }
  if (from.has_reqcmd()) {
    reqcmd_ = new ::NullPmd::request(*from.reqcmd_);
  } else {
    reqcmd_ = NULL;
  }
  ::memcpy(&dwplazaversion_, &from.dwplazaversion_,
    reinterpret_cast<char*>(&cbvalidateflags_) -
    reinterpret_cast<char*>(&dwplazaversion_) + sizeof(cbvalidateflags_));
  // @@protoc_insertion_point(copy_constructor:LoginPmd.loginbyid_c2s)
}

void loginbyid_c2s::SharedCtor() {
  szmachineid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reqcmd_, 0, reinterpret_cast<char*>(&cbvalidateflags_) -
    reinterpret_cast<char*>(&reqcmd_) + sizeof(cbvalidateflags_));
  _cached_size_ = 0;
}

loginbyid_c2s::~loginbyid_c2s() {
  // @@protoc_insertion_point(destructor:LoginPmd.loginbyid_c2s)
  SharedDtor();
}

void loginbyid_c2s::SharedDtor() {
  szmachineid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete reqcmd_;
  }
}

void loginbyid_c2s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* loginbyid_c2s::descriptor() {
  protobuf_LoginPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LoginPmd_2eproto::file_level_metadata[0].descriptor;
}

const loginbyid_c2s& loginbyid_c2s::default_instance() {
  protobuf_LoginPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

loginbyid_c2s* loginbyid_c2s::New(::google::protobuf::Arena* arena) const {
  loginbyid_c2s* n = new loginbyid_c2s;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void loginbyid_c2s::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginPmd.loginbyid_c2s)
  szmachineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && reqcmd_ != NULL) {
    delete reqcmd_;
  }
  reqcmd_ = NULL;
  ::memset(&dwplazaversion_, 0, reinterpret_cast<char*>(&cbvalidateflags_) -
    reinterpret_cast<char*>(&dwplazaversion_) + sizeof(cbvalidateflags_));
}

bool loginbyid_c2s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginPmd.loginbyid_c2s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NullPmd.request reqcmd = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reqcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwplazaversion = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwplazaversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szmachineid = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szmachineid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szmachineid().data(), this->szmachineid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginPmd.loginbyid_c2s.szmachineid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwgameid = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwgameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szpassword = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szpassword().data(), this->szpassword().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginPmd.loginbyid_c2s.szpassword"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cbvalidateflags = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbvalidateflags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginPmd.loginbyid_c2s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginPmd.loginbyid_c2s)
  return false;
#undef DO_
}

void loginbyid_c2s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginPmd.loginbyid_c2s)
  // .NullPmd.request reqcmd = 1;
  if (this->has_reqcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->reqcmd_, output);
  }

  // uint64 dwplazaversion = 2;
  if (this->dwplazaversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dwplazaversion(), output);
  }

  // string szmachineid = 3;
  if (this->szmachineid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szmachineid().data(), this->szmachineid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.loginbyid_c2s.szmachineid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->szmachineid(), output);
  }

  // uint64 dwgameid = 4;
  if (this->dwgameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->dwgameid(), output);
  }

  // string szpassword = 5;
  if (this->szpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szpassword().data(), this->szpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.loginbyid_c2s.szpassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->szpassword(), output);
  }

  // int32 cbvalidateflags = 6;
  if (this->cbvalidateflags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cbvalidateflags(), output);
  }

  // @@protoc_insertion_point(serialize_end:LoginPmd.loginbyid_c2s)
}

::google::protobuf::uint8* loginbyid_c2s::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginPmd.loginbyid_c2s)
  // .NullPmd.request reqcmd = 1;
  if (this->has_reqcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->reqcmd_, false, target);
  }

  // uint64 dwplazaversion = 2;
  if (this->dwplazaversion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dwplazaversion(), target);
  }

  // string szmachineid = 3;
  if (this->szmachineid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szmachineid().data(), this->szmachineid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.loginbyid_c2s.szmachineid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->szmachineid(), target);
  }

  // uint64 dwgameid = 4;
  if (this->dwgameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->dwgameid(), target);
  }

  // string szpassword = 5;
  if (this->szpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szpassword().data(), this->szpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.loginbyid_c2s.szpassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->szpassword(), target);
  }

  // int32 cbvalidateflags = 6;
  if (this->cbvalidateflags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cbvalidateflags(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LoginPmd.loginbyid_c2s)
  return target;
}

size_t loginbyid_c2s::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginPmd.loginbyid_c2s)
  size_t total_size = 0;

  // string szmachineid = 3;
  if (this->szmachineid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szmachineid());
  }

  // string szpassword = 5;
  if (this->szpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szpassword());
  }

  // .NullPmd.request reqcmd = 1;
  if (this->has_reqcmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->reqcmd_);
  }

  // uint64 dwplazaversion = 2;
  if (this->dwplazaversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwplazaversion());
  }

  // uint64 dwgameid = 4;
  if (this->dwgameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwgameid());
  }

  // int32 cbvalidateflags = 6;
  if (this->cbvalidateflags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbvalidateflags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void loginbyid_c2s::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginPmd.loginbyid_c2s)
  GOOGLE_DCHECK_NE(&from, this);
  const loginbyid_c2s* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const loginbyid_c2s>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginPmd.loginbyid_c2s)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginPmd.loginbyid_c2s)
    MergeFrom(*source);
  }
}

void loginbyid_c2s::MergeFrom(const loginbyid_c2s& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginPmd.loginbyid_c2s)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.szmachineid().size() > 0) {

    szmachineid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szmachineid_);
  }
  if (from.szpassword().size() > 0) {

    szpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szpassword_);
  }
  if (from.has_reqcmd()) {
    mutable_reqcmd()->::NullPmd::request::MergeFrom(from.reqcmd());
  }
  if (from.dwplazaversion() != 0) {
    set_dwplazaversion(from.dwplazaversion());
  }
  if (from.dwgameid() != 0) {
    set_dwgameid(from.dwgameid());
  }
  if (from.cbvalidateflags() != 0) {
    set_cbvalidateflags(from.cbvalidateflags());
  }
}

void loginbyid_c2s::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginPmd.loginbyid_c2s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void loginbyid_c2s::CopyFrom(const loginbyid_c2s& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginPmd.loginbyid_c2s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loginbyid_c2s::IsInitialized() const {
  return true;
}

void loginbyid_c2s::Swap(loginbyid_c2s* other) {
  if (other == this) return;
  InternalSwap(other);
}
void loginbyid_c2s::InternalSwap(loginbyid_c2s* other) {
  szmachineid_.Swap(&other->szmachineid_);
  szpassword_.Swap(&other->szpassword_);
  std::swap(reqcmd_, other->reqcmd_);
  std::swap(dwplazaversion_, other->dwplazaversion_);
  std::swap(dwgameid_, other->dwgameid_);
  std::swap(cbvalidateflags_, other->cbvalidateflags_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata loginbyid_c2s::GetMetadata() const {
  protobuf_LoginPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LoginPmd_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// loginbyid_c2s

// .NullPmd.request reqcmd = 1;
bool loginbyid_c2s::has_reqcmd() const {
  return this != internal_default_instance() && reqcmd_ != NULL;
}
void loginbyid_c2s::clear_reqcmd() {
  if (GetArenaNoVirtual() == NULL && reqcmd_ != NULL) delete reqcmd_;
  reqcmd_ = NULL;
}
const ::NullPmd::request& loginbyid_c2s::reqcmd() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyid_c2s.reqcmd)
  return reqcmd_ != NULL ? *reqcmd_
                         : *::NullPmd::request::internal_default_instance();
}
::NullPmd::request* loginbyid_c2s::mutable_reqcmd() {
  
  if (reqcmd_ == NULL) {
    reqcmd_ = new ::NullPmd::request;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyid_c2s.reqcmd)
  return reqcmd_;
}
::NullPmd::request* loginbyid_c2s::release_reqcmd() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyid_c2s.reqcmd)
  
  ::NullPmd::request* temp = reqcmd_;
  reqcmd_ = NULL;
  return temp;
}
void loginbyid_c2s::set_allocated_reqcmd(::NullPmd::request* reqcmd) {
  delete reqcmd_;
  reqcmd_ = reqcmd;
  if (reqcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyid_c2s.reqcmd)
}

// uint64 dwplazaversion = 2;
void loginbyid_c2s::clear_dwplazaversion() {
  dwplazaversion_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 loginbyid_c2s::dwplazaversion() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyid_c2s.dwplazaversion)
  return dwplazaversion_;
}
void loginbyid_c2s::set_dwplazaversion(::google::protobuf::uint64 value) {
  
  dwplazaversion_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyid_c2s.dwplazaversion)
}

// string szmachineid = 3;
void loginbyid_c2s::clear_szmachineid() {
  szmachineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& loginbyid_c2s::szmachineid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyid_c2s.szmachineid)
  return szmachineid_.GetNoArena();
}
void loginbyid_c2s::set_szmachineid(const ::std::string& value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyid_c2s.szmachineid)
}
#if LANG_CXX11
void loginbyid_c2s::set_szmachineid(::std::string&& value) {
  
  szmachineid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.loginbyid_c2s.szmachineid)
}
#endif
void loginbyid_c2s::set_szmachineid(const char* value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.loginbyid_c2s.szmachineid)
}
void loginbyid_c2s::set_szmachineid(const char* value, size_t size) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.loginbyid_c2s.szmachineid)
}
::std::string* loginbyid_c2s::mutable_szmachineid() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyid_c2s.szmachineid)
  return szmachineid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* loginbyid_c2s::release_szmachineid() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyid_c2s.szmachineid)
  
  return szmachineid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void loginbyid_c2s::set_allocated_szmachineid(::std::string* szmachineid) {
  if (szmachineid != NULL) {
    
  } else {
    
  }
  szmachineid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szmachineid);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyid_c2s.szmachineid)
}

// uint64 dwgameid = 4;
void loginbyid_c2s::clear_dwgameid() {
  dwgameid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 loginbyid_c2s::dwgameid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyid_c2s.dwgameid)
  return dwgameid_;
}
void loginbyid_c2s::set_dwgameid(::google::protobuf::uint64 value) {
  
  dwgameid_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyid_c2s.dwgameid)
}

// string szpassword = 5;
void loginbyid_c2s::clear_szpassword() {
  szpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& loginbyid_c2s::szpassword() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyid_c2s.szpassword)
  return szpassword_.GetNoArena();
}
void loginbyid_c2s::set_szpassword(const ::std::string& value) {
  
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyid_c2s.szpassword)
}
#if LANG_CXX11
void loginbyid_c2s::set_szpassword(::std::string&& value) {
  
  szpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.loginbyid_c2s.szpassword)
}
#endif
void loginbyid_c2s::set_szpassword(const char* value) {
  
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.loginbyid_c2s.szpassword)
}
void loginbyid_c2s::set_szpassword(const char* value, size_t size) {
  
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.loginbyid_c2s.szpassword)
}
::std::string* loginbyid_c2s::mutable_szpassword() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyid_c2s.szpassword)
  return szpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* loginbyid_c2s::release_szpassword() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyid_c2s.szpassword)
  
  return szpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void loginbyid_c2s::set_allocated_szpassword(::std::string* szpassword) {
  if (szpassword != NULL) {
    
  } else {
    
  }
  szpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szpassword);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyid_c2s.szpassword)
}

// int32 cbvalidateflags = 6;
void loginbyid_c2s::clear_cbvalidateflags() {
  cbvalidateflags_ = 0;
}
::google::protobuf::int32 loginbyid_c2s::cbvalidateflags() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyid_c2s.cbvalidateflags)
  return cbvalidateflags_;
}
void loginbyid_c2s::set_cbvalidateflags(::google::protobuf::int32 value) {
  
  cbvalidateflags_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyid_c2s.cbvalidateflags)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int loginbyaccounts_c2s::kReqcmdFieldNumber;
const int loginbyaccounts_c2s::kDwplazaversionFieldNumber;
const int loginbyaccounts_c2s::kSzmachineidFieldNumber;
const int loginbyaccounts_c2s::kSzpasswordFieldNumber;
const int loginbyaccounts_c2s::kSzaccountsFieldNumber;
const int loginbyaccounts_c2s::kSzpassportidFieldNumber;
const int loginbyaccounts_c2s::kCbvalidateflagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

loginbyaccounts_c2s::loginbyaccounts_c2s()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LoginPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginPmd.loginbyaccounts_c2s)
}
loginbyaccounts_c2s::loginbyaccounts_c2s(const loginbyaccounts_c2s& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szmachineid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szmachineid().size() > 0) {
    szmachineid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szmachineid_);
  }
  szpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szpassword().size() > 0) {
    szpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szpassword_);
  }
  szaccounts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szaccounts().size() > 0) {
    szaccounts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szaccounts_);
  }
  szpassportid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szpassportid().size() > 0) {
    szpassportid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szpassportid_);
  }
  if (from.has_reqcmd()) {
    reqcmd_ = new ::NullPmd::request(*from.reqcmd_);
  } else {
    reqcmd_ = NULL;
  }
  ::memcpy(&dwplazaversion_, &from.dwplazaversion_,
    reinterpret_cast<char*>(&cbvalidateflags_) -
    reinterpret_cast<char*>(&dwplazaversion_) + sizeof(cbvalidateflags_));
  // @@protoc_insertion_point(copy_constructor:LoginPmd.loginbyaccounts_c2s)
}

void loginbyaccounts_c2s::SharedCtor() {
  szmachineid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szaccounts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szpassportid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reqcmd_, 0, reinterpret_cast<char*>(&cbvalidateflags_) -
    reinterpret_cast<char*>(&reqcmd_) + sizeof(cbvalidateflags_));
  _cached_size_ = 0;
}

loginbyaccounts_c2s::~loginbyaccounts_c2s() {
  // @@protoc_insertion_point(destructor:LoginPmd.loginbyaccounts_c2s)
  SharedDtor();
}

void loginbyaccounts_c2s::SharedDtor() {
  szmachineid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szaccounts_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szpassportid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete reqcmd_;
  }
}

void loginbyaccounts_c2s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* loginbyaccounts_c2s::descriptor() {
  protobuf_LoginPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LoginPmd_2eproto::file_level_metadata[1].descriptor;
}

const loginbyaccounts_c2s& loginbyaccounts_c2s::default_instance() {
  protobuf_LoginPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

loginbyaccounts_c2s* loginbyaccounts_c2s::New(::google::protobuf::Arena* arena) const {
  loginbyaccounts_c2s* n = new loginbyaccounts_c2s;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void loginbyaccounts_c2s::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginPmd.loginbyaccounts_c2s)
  szmachineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szaccounts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szpassportid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && reqcmd_ != NULL) {
    delete reqcmd_;
  }
  reqcmd_ = NULL;
  ::memset(&dwplazaversion_, 0, reinterpret_cast<char*>(&cbvalidateflags_) -
    reinterpret_cast<char*>(&dwplazaversion_) + sizeof(cbvalidateflags_));
}

bool loginbyaccounts_c2s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginPmd.loginbyaccounts_c2s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NullPmd.request reqcmd = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reqcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwplazaversion = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwplazaversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szmachineid = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szmachineid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szmachineid().data(), this->szmachineid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginPmd.loginbyaccounts_c2s.szmachineid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szpassword = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szpassword().data(), this->szpassword().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginPmd.loginbyaccounts_c2s.szpassword"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szaccounts = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szaccounts()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szaccounts().data(), this->szaccounts().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginPmd.loginbyaccounts_c2s.szaccounts"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szpassportid = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szpassportid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szpassportid().data(), this->szpassportid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginPmd.loginbyaccounts_c2s.szpassportid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cbvalidateflags = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbvalidateflags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginPmd.loginbyaccounts_c2s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginPmd.loginbyaccounts_c2s)
  return false;
#undef DO_
}

void loginbyaccounts_c2s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginPmd.loginbyaccounts_c2s)
  // .NullPmd.request reqcmd = 1;
  if (this->has_reqcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->reqcmd_, output);
  }

  // uint64 dwplazaversion = 2;
  if (this->dwplazaversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dwplazaversion(), output);
  }

  // string szmachineid = 3;
  if (this->szmachineid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szmachineid().data(), this->szmachineid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.loginbyaccounts_c2s.szmachineid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->szmachineid(), output);
  }

  // string szpassword = 4;
  if (this->szpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szpassword().data(), this->szpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.loginbyaccounts_c2s.szpassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->szpassword(), output);
  }

  // string szaccounts = 5;
  if (this->szaccounts().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szaccounts().data(), this->szaccounts().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.loginbyaccounts_c2s.szaccounts");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->szaccounts(), output);
  }

  // string szpassportid = 6;
  if (this->szpassportid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szpassportid().data(), this->szpassportid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.loginbyaccounts_c2s.szpassportid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->szpassportid(), output);
  }

  // int32 cbvalidateflags = 7;
  if (this->cbvalidateflags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->cbvalidateflags(), output);
  }

  // @@protoc_insertion_point(serialize_end:LoginPmd.loginbyaccounts_c2s)
}

::google::protobuf::uint8* loginbyaccounts_c2s::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginPmd.loginbyaccounts_c2s)
  // .NullPmd.request reqcmd = 1;
  if (this->has_reqcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->reqcmd_, false, target);
  }

  // uint64 dwplazaversion = 2;
  if (this->dwplazaversion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dwplazaversion(), target);
  }

  // string szmachineid = 3;
  if (this->szmachineid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szmachineid().data(), this->szmachineid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.loginbyaccounts_c2s.szmachineid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->szmachineid(), target);
  }

  // string szpassword = 4;
  if (this->szpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szpassword().data(), this->szpassword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.loginbyaccounts_c2s.szpassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->szpassword(), target);
  }

  // string szaccounts = 5;
  if (this->szaccounts().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szaccounts().data(), this->szaccounts().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.loginbyaccounts_c2s.szaccounts");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->szaccounts(), target);
  }

  // string szpassportid = 6;
  if (this->szpassportid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szpassportid().data(), this->szpassportid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.loginbyaccounts_c2s.szpassportid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->szpassportid(), target);
  }

  // int32 cbvalidateflags = 7;
  if (this->cbvalidateflags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->cbvalidateflags(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LoginPmd.loginbyaccounts_c2s)
  return target;
}

size_t loginbyaccounts_c2s::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginPmd.loginbyaccounts_c2s)
  size_t total_size = 0;

  // string szmachineid = 3;
  if (this->szmachineid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szmachineid());
  }

  // string szpassword = 4;
  if (this->szpassword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szpassword());
  }

  // string szaccounts = 5;
  if (this->szaccounts().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szaccounts());
  }

  // string szpassportid = 6;
  if (this->szpassportid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szpassportid());
  }

  // .NullPmd.request reqcmd = 1;
  if (this->has_reqcmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->reqcmd_);
  }

  // uint64 dwplazaversion = 2;
  if (this->dwplazaversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwplazaversion());
  }

  // int32 cbvalidateflags = 7;
  if (this->cbvalidateflags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbvalidateflags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void loginbyaccounts_c2s::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginPmd.loginbyaccounts_c2s)
  GOOGLE_DCHECK_NE(&from, this);
  const loginbyaccounts_c2s* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const loginbyaccounts_c2s>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginPmd.loginbyaccounts_c2s)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginPmd.loginbyaccounts_c2s)
    MergeFrom(*source);
  }
}

void loginbyaccounts_c2s::MergeFrom(const loginbyaccounts_c2s& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginPmd.loginbyaccounts_c2s)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.szmachineid().size() > 0) {

    szmachineid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szmachineid_);
  }
  if (from.szpassword().size() > 0) {

    szpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szpassword_);
  }
  if (from.szaccounts().size() > 0) {

    szaccounts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szaccounts_);
  }
  if (from.szpassportid().size() > 0) {

    szpassportid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szpassportid_);
  }
  if (from.has_reqcmd()) {
    mutable_reqcmd()->::NullPmd::request::MergeFrom(from.reqcmd());
  }
  if (from.dwplazaversion() != 0) {
    set_dwplazaversion(from.dwplazaversion());
  }
  if (from.cbvalidateflags() != 0) {
    set_cbvalidateflags(from.cbvalidateflags());
  }
}

void loginbyaccounts_c2s::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginPmd.loginbyaccounts_c2s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void loginbyaccounts_c2s::CopyFrom(const loginbyaccounts_c2s& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginPmd.loginbyaccounts_c2s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loginbyaccounts_c2s::IsInitialized() const {
  return true;
}

void loginbyaccounts_c2s::Swap(loginbyaccounts_c2s* other) {
  if (other == this) return;
  InternalSwap(other);
}
void loginbyaccounts_c2s::InternalSwap(loginbyaccounts_c2s* other) {
  szmachineid_.Swap(&other->szmachineid_);
  szpassword_.Swap(&other->szpassword_);
  szaccounts_.Swap(&other->szaccounts_);
  szpassportid_.Swap(&other->szpassportid_);
  std::swap(reqcmd_, other->reqcmd_);
  std::swap(dwplazaversion_, other->dwplazaversion_);
  std::swap(cbvalidateflags_, other->cbvalidateflags_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata loginbyaccounts_c2s::GetMetadata() const {
  protobuf_LoginPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LoginPmd_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// loginbyaccounts_c2s

// .NullPmd.request reqcmd = 1;
bool loginbyaccounts_c2s::has_reqcmd() const {
  return this != internal_default_instance() && reqcmd_ != NULL;
}
void loginbyaccounts_c2s::clear_reqcmd() {
  if (GetArenaNoVirtual() == NULL && reqcmd_ != NULL) delete reqcmd_;
  reqcmd_ = NULL;
}
const ::NullPmd::request& loginbyaccounts_c2s::reqcmd() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyaccounts_c2s.reqcmd)
  return reqcmd_ != NULL ? *reqcmd_
                         : *::NullPmd::request::internal_default_instance();
}
::NullPmd::request* loginbyaccounts_c2s::mutable_reqcmd() {
  
  if (reqcmd_ == NULL) {
    reqcmd_ = new ::NullPmd::request;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyaccounts_c2s.reqcmd)
  return reqcmd_;
}
::NullPmd::request* loginbyaccounts_c2s::release_reqcmd() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyaccounts_c2s.reqcmd)
  
  ::NullPmd::request* temp = reqcmd_;
  reqcmd_ = NULL;
  return temp;
}
void loginbyaccounts_c2s::set_allocated_reqcmd(::NullPmd::request* reqcmd) {
  delete reqcmd_;
  reqcmd_ = reqcmd;
  if (reqcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyaccounts_c2s.reqcmd)
}

// uint64 dwplazaversion = 2;
void loginbyaccounts_c2s::clear_dwplazaversion() {
  dwplazaversion_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 loginbyaccounts_c2s::dwplazaversion() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyaccounts_c2s.dwplazaversion)
  return dwplazaversion_;
}
void loginbyaccounts_c2s::set_dwplazaversion(::google::protobuf::uint64 value) {
  
  dwplazaversion_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyaccounts_c2s.dwplazaversion)
}

// string szmachineid = 3;
void loginbyaccounts_c2s::clear_szmachineid() {
  szmachineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& loginbyaccounts_c2s::szmachineid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyaccounts_c2s.szmachineid)
  return szmachineid_.GetNoArena();
}
void loginbyaccounts_c2s::set_szmachineid(const ::std::string& value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyaccounts_c2s.szmachineid)
}
#if LANG_CXX11
void loginbyaccounts_c2s::set_szmachineid(::std::string&& value) {
  
  szmachineid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.loginbyaccounts_c2s.szmachineid)
}
#endif
void loginbyaccounts_c2s::set_szmachineid(const char* value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.loginbyaccounts_c2s.szmachineid)
}
void loginbyaccounts_c2s::set_szmachineid(const char* value, size_t size) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.loginbyaccounts_c2s.szmachineid)
}
::std::string* loginbyaccounts_c2s::mutable_szmachineid() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyaccounts_c2s.szmachineid)
  return szmachineid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* loginbyaccounts_c2s::release_szmachineid() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyaccounts_c2s.szmachineid)
  
  return szmachineid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void loginbyaccounts_c2s::set_allocated_szmachineid(::std::string* szmachineid) {
  if (szmachineid != NULL) {
    
  } else {
    
  }
  szmachineid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szmachineid);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyaccounts_c2s.szmachineid)
}

// string szpassword = 4;
void loginbyaccounts_c2s::clear_szpassword() {
  szpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& loginbyaccounts_c2s::szpassword() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyaccounts_c2s.szpassword)
  return szpassword_.GetNoArena();
}
void loginbyaccounts_c2s::set_szpassword(const ::std::string& value) {
  
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyaccounts_c2s.szpassword)
}
#if LANG_CXX11
void loginbyaccounts_c2s::set_szpassword(::std::string&& value) {
  
  szpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.loginbyaccounts_c2s.szpassword)
}
#endif
void loginbyaccounts_c2s::set_szpassword(const char* value) {
  
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.loginbyaccounts_c2s.szpassword)
}
void loginbyaccounts_c2s::set_szpassword(const char* value, size_t size) {
  
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.loginbyaccounts_c2s.szpassword)
}
::std::string* loginbyaccounts_c2s::mutable_szpassword() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyaccounts_c2s.szpassword)
  return szpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* loginbyaccounts_c2s::release_szpassword() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyaccounts_c2s.szpassword)
  
  return szpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void loginbyaccounts_c2s::set_allocated_szpassword(::std::string* szpassword) {
  if (szpassword != NULL) {
    
  } else {
    
  }
  szpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szpassword);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyaccounts_c2s.szpassword)
}

// string szaccounts = 5;
void loginbyaccounts_c2s::clear_szaccounts() {
  szaccounts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& loginbyaccounts_c2s::szaccounts() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyaccounts_c2s.szaccounts)
  return szaccounts_.GetNoArena();
}
void loginbyaccounts_c2s::set_szaccounts(const ::std::string& value) {
  
  szaccounts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyaccounts_c2s.szaccounts)
}
#if LANG_CXX11
void loginbyaccounts_c2s::set_szaccounts(::std::string&& value) {
  
  szaccounts_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.loginbyaccounts_c2s.szaccounts)
}
#endif
void loginbyaccounts_c2s::set_szaccounts(const char* value) {
  
  szaccounts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.loginbyaccounts_c2s.szaccounts)
}
void loginbyaccounts_c2s::set_szaccounts(const char* value, size_t size) {
  
  szaccounts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.loginbyaccounts_c2s.szaccounts)
}
::std::string* loginbyaccounts_c2s::mutable_szaccounts() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyaccounts_c2s.szaccounts)
  return szaccounts_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* loginbyaccounts_c2s::release_szaccounts() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyaccounts_c2s.szaccounts)
  
  return szaccounts_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void loginbyaccounts_c2s::set_allocated_szaccounts(::std::string* szaccounts) {
  if (szaccounts != NULL) {
    
  } else {
    
  }
  szaccounts_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szaccounts);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyaccounts_c2s.szaccounts)
}

// string szpassportid = 6;
void loginbyaccounts_c2s::clear_szpassportid() {
  szpassportid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& loginbyaccounts_c2s::szpassportid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyaccounts_c2s.szpassportid)
  return szpassportid_.GetNoArena();
}
void loginbyaccounts_c2s::set_szpassportid(const ::std::string& value) {
  
  szpassportid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyaccounts_c2s.szpassportid)
}
#if LANG_CXX11
void loginbyaccounts_c2s::set_szpassportid(::std::string&& value) {
  
  szpassportid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.loginbyaccounts_c2s.szpassportid)
}
#endif
void loginbyaccounts_c2s::set_szpassportid(const char* value) {
  
  szpassportid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.loginbyaccounts_c2s.szpassportid)
}
void loginbyaccounts_c2s::set_szpassportid(const char* value, size_t size) {
  
  szpassportid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.loginbyaccounts_c2s.szpassportid)
}
::std::string* loginbyaccounts_c2s::mutable_szpassportid() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyaccounts_c2s.szpassportid)
  return szpassportid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* loginbyaccounts_c2s::release_szpassportid() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyaccounts_c2s.szpassportid)
  
  return szpassportid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void loginbyaccounts_c2s::set_allocated_szpassportid(::std::string* szpassportid) {
  if (szpassportid != NULL) {
    
  } else {
    
  }
  szpassportid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szpassportid);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyaccounts_c2s.szpassportid)
}

// int32 cbvalidateflags = 7;
void loginbyaccounts_c2s::clear_cbvalidateflags() {
  cbvalidateflags_ = 0;
}
::google::protobuf::int32 loginbyaccounts_c2s::cbvalidateflags() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyaccounts_c2s.cbvalidateflags)
  return cbvalidateflags_;
}
void loginbyaccounts_c2s::set_cbvalidateflags(::google::protobuf::int32 value) {
  
  cbvalidateflags_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyaccounts_c2s.cbvalidateflags)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int logonOtherPlatform_c2s::kReqcmdFieldNumber;
const int logonOtherPlatform_c2s::kWmoduleidFieldNumber;
const int logonOtherPlatform_c2s::kDwplazaversionFieldNumber;
const int logonOtherPlatform_c2s::kCbdevicetypeFieldNumber;
const int logonOtherPlatform_c2s::kCbgenderFieldNumber;
const int logonOtherPlatform_c2s::kCbplatformidFieldNumber;
const int logonOtherPlatform_c2s::kSzuseruinFieldNumber;
const int logonOtherPlatform_c2s::kSznicknameFieldNumber;
const int logonOtherPlatform_c2s::kSzcompellationFieldNumber;
const int logonOtherPlatform_c2s::kSzmachineidFieldNumber;
const int logonOtherPlatform_c2s::kSzmobilephoneFieldNumber;
const int logonOtherPlatform_c2s::kSzdevicetokenFieldNumber;
const int logonOtherPlatform_c2s::kStrfaceurlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

logonOtherPlatform_c2s::logonOtherPlatform_c2s()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LoginPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginPmd.logonOtherPlatform_c2s)
}
logonOtherPlatform_c2s::logonOtherPlatform_c2s(const logonOtherPlatform_c2s& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szuseruin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szuseruin().size() > 0) {
    szuseruin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szuseruin_);
  }
  sznickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sznickname().size() > 0) {
    sznickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sznickname_);
  }
  szcompellation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szcompellation().size() > 0) {
    szcompellation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szcompellation_);
  }
  szmachineid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szmachineid().size() > 0) {
    szmachineid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szmachineid_);
  }
  szmobilephone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szmobilephone().size() > 0) {
    szmobilephone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szmobilephone_);
  }
  szdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szdevicetoken().size() > 0) {
    szdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szdevicetoken_);
  }
  strfaceurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfaceurl().size() > 0) {
    strfaceurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfaceurl_);
  }
  if (from.has_reqcmd()) {
    reqcmd_ = new ::NullPmd::request(*from.reqcmd_);
  } else {
    reqcmd_ = NULL;
  }
  ::memcpy(&dwplazaversion_, &from.dwplazaversion_,
    reinterpret_cast<char*>(&cbplatformid_) -
    reinterpret_cast<char*>(&dwplazaversion_) + sizeof(cbplatformid_));
  // @@protoc_insertion_point(copy_constructor:LoginPmd.logonOtherPlatform_c2s)
}

void logonOtherPlatform_c2s::SharedCtor() {
  szuseruin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sznickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcompellation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szmachineid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szmobilephone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szdevicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfaceurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reqcmd_, 0, reinterpret_cast<char*>(&cbplatformid_) -
    reinterpret_cast<char*>(&reqcmd_) + sizeof(cbplatformid_));
  _cached_size_ = 0;
}

logonOtherPlatform_c2s::~logonOtherPlatform_c2s() {
  // @@protoc_insertion_point(destructor:LoginPmd.logonOtherPlatform_c2s)
  SharedDtor();
}

void logonOtherPlatform_c2s::SharedDtor() {
  szuseruin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sznickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcompellation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szmachineid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szmobilephone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szdevicetoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfaceurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete reqcmd_;
  }
}

void logonOtherPlatform_c2s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* logonOtherPlatform_c2s::descriptor() {
  protobuf_LoginPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LoginPmd_2eproto::file_level_metadata[2].descriptor;
}

const logonOtherPlatform_c2s& logonOtherPlatform_c2s::default_instance() {
  protobuf_LoginPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

logonOtherPlatform_c2s* logonOtherPlatform_c2s::New(::google::protobuf::Arena* arena) const {
  logonOtherPlatform_c2s* n = new logonOtherPlatform_c2s;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void logonOtherPlatform_c2s::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginPmd.logonOtherPlatform_c2s)
  szuseruin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sznickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szcompellation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szmachineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szmobilephone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szdevicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfaceurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && reqcmd_ != NULL) {
    delete reqcmd_;
  }
  reqcmd_ = NULL;
  ::memset(&dwplazaversion_, 0, reinterpret_cast<char*>(&cbplatformid_) -
    reinterpret_cast<char*>(&dwplazaversion_) + sizeof(cbplatformid_));
}

bool logonOtherPlatform_c2s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginPmd.logonOtherPlatform_c2s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NullPmd.request reqcmd = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reqcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 wmoduleid = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wmoduleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwplazaversion = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwplazaversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cbdevicetype = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbdevicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cbgender = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbgender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cbplatformid = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbplatformid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szuseruin = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szuseruin()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szuseruin().data(), this->szuseruin().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginPmd.logonOtherPlatform_c2s.szuseruin"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sznickname = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sznickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sznickname().data(), this->sznickname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginPmd.logonOtherPlatform_c2s.sznickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szcompellation = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szcompellation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szcompellation().data(), this->szcompellation().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginPmd.logonOtherPlatform_c2s.szcompellation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szmachineid = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szmachineid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szmachineid().data(), this->szmachineid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginPmd.logonOtherPlatform_c2s.szmachineid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szmobilephone = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szmobilephone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szmobilephone().data(), this->szmobilephone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginPmd.logonOtherPlatform_c2s.szmobilephone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szdevicetoken = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szdevicetoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szdevicetoken().data(), this->szdevicetoken().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginPmd.logonOtherPlatform_c2s.szdevicetoken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strfaceurl = 13;
      case 13: {
        if (tag == 106u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfaceurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfaceurl().data(), this->strfaceurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginPmd.logonOtherPlatform_c2s.strfaceurl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginPmd.logonOtherPlatform_c2s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginPmd.logonOtherPlatform_c2s)
  return false;
#undef DO_
}

void logonOtherPlatform_c2s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginPmd.logonOtherPlatform_c2s)
  // .NullPmd.request reqcmd = 1;
  if (this->has_reqcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->reqcmd_, output);
  }

  // int32 wmoduleid = 2;
  if (this->wmoduleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->wmoduleid(), output);
  }

  // uint64 dwplazaversion = 3;
  if (this->dwplazaversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->dwplazaversion(), output);
  }

  // int32 cbdevicetype = 4;
  if (this->cbdevicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cbdevicetype(), output);
  }

  // int32 cbgender = 5;
  if (this->cbgender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cbgender(), output);
  }

  // int32 cbplatformid = 6;
  if (this->cbplatformid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cbplatformid(), output);
  }

  // string szuseruin = 7;
  if (this->szuseruin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szuseruin().data(), this->szuseruin().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.logonOtherPlatform_c2s.szuseruin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->szuseruin(), output);
  }

  // string sznickname = 8;
  if (this->sznickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sznickname().data(), this->sznickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.logonOtherPlatform_c2s.sznickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->sznickname(), output);
  }

  // string szcompellation = 9;
  if (this->szcompellation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szcompellation().data(), this->szcompellation().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.logonOtherPlatform_c2s.szcompellation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->szcompellation(), output);
  }

  // string szmachineid = 10;
  if (this->szmachineid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szmachineid().data(), this->szmachineid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.logonOtherPlatform_c2s.szmachineid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->szmachineid(), output);
  }

  // string szmobilephone = 11;
  if (this->szmobilephone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szmobilephone().data(), this->szmobilephone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.logonOtherPlatform_c2s.szmobilephone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->szmobilephone(), output);
  }

  // string szdevicetoken = 12;
  if (this->szdevicetoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szdevicetoken().data(), this->szdevicetoken().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.logonOtherPlatform_c2s.szdevicetoken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->szdevicetoken(), output);
  }

  // string strfaceurl = 13;
  if (this->strfaceurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfaceurl().data(), this->strfaceurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.logonOtherPlatform_c2s.strfaceurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->strfaceurl(), output);
  }

  // @@protoc_insertion_point(serialize_end:LoginPmd.logonOtherPlatform_c2s)
}

::google::protobuf::uint8* logonOtherPlatform_c2s::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginPmd.logonOtherPlatform_c2s)
  // .NullPmd.request reqcmd = 1;
  if (this->has_reqcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->reqcmd_, false, target);
  }

  // int32 wmoduleid = 2;
  if (this->wmoduleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->wmoduleid(), target);
  }

  // uint64 dwplazaversion = 3;
  if (this->dwplazaversion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->dwplazaversion(), target);
  }

  // int32 cbdevicetype = 4;
  if (this->cbdevicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cbdevicetype(), target);
  }

  // int32 cbgender = 5;
  if (this->cbgender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cbgender(), target);
  }

  // int32 cbplatformid = 6;
  if (this->cbplatformid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cbplatformid(), target);
  }

  // string szuseruin = 7;
  if (this->szuseruin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szuseruin().data(), this->szuseruin().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.logonOtherPlatform_c2s.szuseruin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->szuseruin(), target);
  }

  // string sznickname = 8;
  if (this->sznickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sznickname().data(), this->sznickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.logonOtherPlatform_c2s.sznickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->sznickname(), target);
  }

  // string szcompellation = 9;
  if (this->szcompellation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szcompellation().data(), this->szcompellation().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.logonOtherPlatform_c2s.szcompellation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->szcompellation(), target);
  }

  // string szmachineid = 10;
  if (this->szmachineid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szmachineid().data(), this->szmachineid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.logonOtherPlatform_c2s.szmachineid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->szmachineid(), target);
  }

  // string szmobilephone = 11;
  if (this->szmobilephone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szmobilephone().data(), this->szmobilephone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.logonOtherPlatform_c2s.szmobilephone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->szmobilephone(), target);
  }

  // string szdevicetoken = 12;
  if (this->szdevicetoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szdevicetoken().data(), this->szdevicetoken().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.logonOtherPlatform_c2s.szdevicetoken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->szdevicetoken(), target);
  }

  // string strfaceurl = 13;
  if (this->strfaceurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfaceurl().data(), this->strfaceurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.logonOtherPlatform_c2s.strfaceurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->strfaceurl(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LoginPmd.logonOtherPlatform_c2s)
  return target;
}

size_t logonOtherPlatform_c2s::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginPmd.logonOtherPlatform_c2s)
  size_t total_size = 0;

  // string szuseruin = 7;
  if (this->szuseruin().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szuseruin());
  }

  // string sznickname = 8;
  if (this->sznickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sznickname());
  }

  // string szcompellation = 9;
  if (this->szcompellation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szcompellation());
  }

  // string szmachineid = 10;
  if (this->szmachineid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szmachineid());
  }

  // string szmobilephone = 11;
  if (this->szmobilephone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szmobilephone());
  }

  // string szdevicetoken = 12;
  if (this->szdevicetoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szdevicetoken());
  }

  // string strfaceurl = 13;
  if (this->strfaceurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfaceurl());
  }

  // .NullPmd.request reqcmd = 1;
  if (this->has_reqcmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->reqcmd_);
  }

  // uint64 dwplazaversion = 3;
  if (this->dwplazaversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwplazaversion());
  }

  // int32 wmoduleid = 2;
  if (this->wmoduleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wmoduleid());
  }

  // int32 cbdevicetype = 4;
  if (this->cbdevicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbdevicetype());
  }

  // int32 cbgender = 5;
  if (this->cbgender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbgender());
  }

  // int32 cbplatformid = 6;
  if (this->cbplatformid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbplatformid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void logonOtherPlatform_c2s::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginPmd.logonOtherPlatform_c2s)
  GOOGLE_DCHECK_NE(&from, this);
  const logonOtherPlatform_c2s* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const logonOtherPlatform_c2s>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginPmd.logonOtherPlatform_c2s)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginPmd.logonOtherPlatform_c2s)
    MergeFrom(*source);
  }
}

void logonOtherPlatform_c2s::MergeFrom(const logonOtherPlatform_c2s& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginPmd.logonOtherPlatform_c2s)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.szuseruin().size() > 0) {

    szuseruin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szuseruin_);
  }
  if (from.sznickname().size() > 0) {

    sznickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sznickname_);
  }
  if (from.szcompellation().size() > 0) {

    szcompellation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szcompellation_);
  }
  if (from.szmachineid().size() > 0) {

    szmachineid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szmachineid_);
  }
  if (from.szmobilephone().size() > 0) {

    szmobilephone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szmobilephone_);
  }
  if (from.szdevicetoken().size() > 0) {

    szdevicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szdevicetoken_);
  }
  if (from.strfaceurl().size() > 0) {

    strfaceurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfaceurl_);
  }
  if (from.has_reqcmd()) {
    mutable_reqcmd()->::NullPmd::request::MergeFrom(from.reqcmd());
  }
  if (from.dwplazaversion() != 0) {
    set_dwplazaversion(from.dwplazaversion());
  }
  if (from.wmoduleid() != 0) {
    set_wmoduleid(from.wmoduleid());
  }
  if (from.cbdevicetype() != 0) {
    set_cbdevicetype(from.cbdevicetype());
  }
  if (from.cbgender() != 0) {
    set_cbgender(from.cbgender());
  }
  if (from.cbplatformid() != 0) {
    set_cbplatformid(from.cbplatformid());
  }
}

void logonOtherPlatform_c2s::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginPmd.logonOtherPlatform_c2s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void logonOtherPlatform_c2s::CopyFrom(const logonOtherPlatform_c2s& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginPmd.logonOtherPlatform_c2s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool logonOtherPlatform_c2s::IsInitialized() const {
  return true;
}

void logonOtherPlatform_c2s::Swap(logonOtherPlatform_c2s* other) {
  if (other == this) return;
  InternalSwap(other);
}
void logonOtherPlatform_c2s::InternalSwap(logonOtherPlatform_c2s* other) {
  szuseruin_.Swap(&other->szuseruin_);
  sznickname_.Swap(&other->sznickname_);
  szcompellation_.Swap(&other->szcompellation_);
  szmachineid_.Swap(&other->szmachineid_);
  szmobilephone_.Swap(&other->szmobilephone_);
  szdevicetoken_.Swap(&other->szdevicetoken_);
  strfaceurl_.Swap(&other->strfaceurl_);
  std::swap(reqcmd_, other->reqcmd_);
  std::swap(dwplazaversion_, other->dwplazaversion_);
  std::swap(wmoduleid_, other->wmoduleid_);
  std::swap(cbdevicetype_, other->cbdevicetype_);
  std::swap(cbgender_, other->cbgender_);
  std::swap(cbplatformid_, other->cbplatformid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata logonOtherPlatform_c2s::GetMetadata() const {
  protobuf_LoginPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LoginPmd_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// logonOtherPlatform_c2s

// .NullPmd.request reqcmd = 1;
bool logonOtherPlatform_c2s::has_reqcmd() const {
  return this != internal_default_instance() && reqcmd_ != NULL;
}
void logonOtherPlatform_c2s::clear_reqcmd() {
  if (GetArenaNoVirtual() == NULL && reqcmd_ != NULL) delete reqcmd_;
  reqcmd_ = NULL;
}
const ::NullPmd::request& logonOtherPlatform_c2s::reqcmd() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.reqcmd)
  return reqcmd_ != NULL ? *reqcmd_
                         : *::NullPmd::request::internal_default_instance();
}
::NullPmd::request* logonOtherPlatform_c2s::mutable_reqcmd() {
  
  if (reqcmd_ == NULL) {
    reqcmd_ = new ::NullPmd::request;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.reqcmd)
  return reqcmd_;
}
::NullPmd::request* logonOtherPlatform_c2s::release_reqcmd() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.reqcmd)
  
  ::NullPmd::request* temp = reqcmd_;
  reqcmd_ = NULL;
  return temp;
}
void logonOtherPlatform_c2s::set_allocated_reqcmd(::NullPmd::request* reqcmd) {
  delete reqcmd_;
  reqcmd_ = reqcmd;
  if (reqcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.reqcmd)
}

// int32 wmoduleid = 2;
void logonOtherPlatform_c2s::clear_wmoduleid() {
  wmoduleid_ = 0;
}
::google::protobuf::int32 logonOtherPlatform_c2s::wmoduleid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.wmoduleid)
  return wmoduleid_;
}
void logonOtherPlatform_c2s::set_wmoduleid(::google::protobuf::int32 value) {
  
  wmoduleid_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.wmoduleid)
}

// uint64 dwplazaversion = 3;
void logonOtherPlatform_c2s::clear_dwplazaversion() {
  dwplazaversion_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 logonOtherPlatform_c2s::dwplazaversion() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.dwplazaversion)
  return dwplazaversion_;
}
void logonOtherPlatform_c2s::set_dwplazaversion(::google::protobuf::uint64 value) {
  
  dwplazaversion_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.dwplazaversion)
}

// int32 cbdevicetype = 4;
void logonOtherPlatform_c2s::clear_cbdevicetype() {
  cbdevicetype_ = 0;
}
::google::protobuf::int32 logonOtherPlatform_c2s::cbdevicetype() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.cbdevicetype)
  return cbdevicetype_;
}
void logonOtherPlatform_c2s::set_cbdevicetype(::google::protobuf::int32 value) {
  
  cbdevicetype_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.cbdevicetype)
}

// int32 cbgender = 5;
void logonOtherPlatform_c2s::clear_cbgender() {
  cbgender_ = 0;
}
::google::protobuf::int32 logonOtherPlatform_c2s::cbgender() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.cbgender)
  return cbgender_;
}
void logonOtherPlatform_c2s::set_cbgender(::google::protobuf::int32 value) {
  
  cbgender_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.cbgender)
}

// int32 cbplatformid = 6;
void logonOtherPlatform_c2s::clear_cbplatformid() {
  cbplatformid_ = 0;
}
::google::protobuf::int32 logonOtherPlatform_c2s::cbplatformid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.cbplatformid)
  return cbplatformid_;
}
void logonOtherPlatform_c2s::set_cbplatformid(::google::protobuf::int32 value) {
  
  cbplatformid_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.cbplatformid)
}

// string szuseruin = 7;
void logonOtherPlatform_c2s::clear_szuseruin() {
  szuseruin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& logonOtherPlatform_c2s::szuseruin() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.szuseruin)
  return szuseruin_.GetNoArena();
}
void logonOtherPlatform_c2s::set_szuseruin(const ::std::string& value) {
  
  szuseruin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.szuseruin)
}
#if LANG_CXX11
void logonOtherPlatform_c2s::set_szuseruin(::std::string&& value) {
  
  szuseruin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.logonOtherPlatform_c2s.szuseruin)
}
#endif
void logonOtherPlatform_c2s::set_szuseruin(const char* value) {
  
  szuseruin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.logonOtherPlatform_c2s.szuseruin)
}
void logonOtherPlatform_c2s::set_szuseruin(const char* value, size_t size) {
  
  szuseruin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.logonOtherPlatform_c2s.szuseruin)
}
::std::string* logonOtherPlatform_c2s::mutable_szuseruin() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.szuseruin)
  return szuseruin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* logonOtherPlatform_c2s::release_szuseruin() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.szuseruin)
  
  return szuseruin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void logonOtherPlatform_c2s::set_allocated_szuseruin(::std::string* szuseruin) {
  if (szuseruin != NULL) {
    
  } else {
    
  }
  szuseruin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szuseruin);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.szuseruin)
}

// string sznickname = 8;
void logonOtherPlatform_c2s::clear_sznickname() {
  sznickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& logonOtherPlatform_c2s::sznickname() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.sznickname)
  return sznickname_.GetNoArena();
}
void logonOtherPlatform_c2s::set_sznickname(const ::std::string& value) {
  
  sznickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.sznickname)
}
#if LANG_CXX11
void logonOtherPlatform_c2s::set_sznickname(::std::string&& value) {
  
  sznickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.logonOtherPlatform_c2s.sznickname)
}
#endif
void logonOtherPlatform_c2s::set_sznickname(const char* value) {
  
  sznickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.logonOtherPlatform_c2s.sznickname)
}
void logonOtherPlatform_c2s::set_sznickname(const char* value, size_t size) {
  
  sznickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.logonOtherPlatform_c2s.sznickname)
}
::std::string* logonOtherPlatform_c2s::mutable_sznickname() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.sznickname)
  return sznickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* logonOtherPlatform_c2s::release_sznickname() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.sznickname)
  
  return sznickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void logonOtherPlatform_c2s::set_allocated_sznickname(::std::string* sznickname) {
  if (sznickname != NULL) {
    
  } else {
    
  }
  sznickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sznickname);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.sznickname)
}

// string szcompellation = 9;
void logonOtherPlatform_c2s::clear_szcompellation() {
  szcompellation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& logonOtherPlatform_c2s::szcompellation() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.szcompellation)
  return szcompellation_.GetNoArena();
}
void logonOtherPlatform_c2s::set_szcompellation(const ::std::string& value) {
  
  szcompellation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.szcompellation)
}
#if LANG_CXX11
void logonOtherPlatform_c2s::set_szcompellation(::std::string&& value) {
  
  szcompellation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.logonOtherPlatform_c2s.szcompellation)
}
#endif
void logonOtherPlatform_c2s::set_szcompellation(const char* value) {
  
  szcompellation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.logonOtherPlatform_c2s.szcompellation)
}
void logonOtherPlatform_c2s::set_szcompellation(const char* value, size_t size) {
  
  szcompellation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.logonOtherPlatform_c2s.szcompellation)
}
::std::string* logonOtherPlatform_c2s::mutable_szcompellation() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.szcompellation)
  return szcompellation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* logonOtherPlatform_c2s::release_szcompellation() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.szcompellation)
  
  return szcompellation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void logonOtherPlatform_c2s::set_allocated_szcompellation(::std::string* szcompellation) {
  if (szcompellation != NULL) {
    
  } else {
    
  }
  szcompellation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szcompellation);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.szcompellation)
}

// string szmachineid = 10;
void logonOtherPlatform_c2s::clear_szmachineid() {
  szmachineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& logonOtherPlatform_c2s::szmachineid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.szmachineid)
  return szmachineid_.GetNoArena();
}
void logonOtherPlatform_c2s::set_szmachineid(const ::std::string& value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.szmachineid)
}
#if LANG_CXX11
void logonOtherPlatform_c2s::set_szmachineid(::std::string&& value) {
  
  szmachineid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.logonOtherPlatform_c2s.szmachineid)
}
#endif
void logonOtherPlatform_c2s::set_szmachineid(const char* value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.logonOtherPlatform_c2s.szmachineid)
}
void logonOtherPlatform_c2s::set_szmachineid(const char* value, size_t size) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.logonOtherPlatform_c2s.szmachineid)
}
::std::string* logonOtherPlatform_c2s::mutable_szmachineid() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.szmachineid)
  return szmachineid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* logonOtherPlatform_c2s::release_szmachineid() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.szmachineid)
  
  return szmachineid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void logonOtherPlatform_c2s::set_allocated_szmachineid(::std::string* szmachineid) {
  if (szmachineid != NULL) {
    
  } else {
    
  }
  szmachineid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szmachineid);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.szmachineid)
}

// string szmobilephone = 11;
void logonOtherPlatform_c2s::clear_szmobilephone() {
  szmobilephone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& logonOtherPlatform_c2s::szmobilephone() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
  return szmobilephone_.GetNoArena();
}
void logonOtherPlatform_c2s::set_szmobilephone(const ::std::string& value) {
  
  szmobilephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
}
#if LANG_CXX11
void logonOtherPlatform_c2s::set_szmobilephone(::std::string&& value) {
  
  szmobilephone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
}
#endif
void logonOtherPlatform_c2s::set_szmobilephone(const char* value) {
  
  szmobilephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
}
void logonOtherPlatform_c2s::set_szmobilephone(const char* value, size_t size) {
  
  szmobilephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
}
::std::string* logonOtherPlatform_c2s::mutable_szmobilephone() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
  return szmobilephone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* logonOtherPlatform_c2s::release_szmobilephone() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
  
  return szmobilephone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void logonOtherPlatform_c2s::set_allocated_szmobilephone(::std::string* szmobilephone) {
  if (szmobilephone != NULL) {
    
  } else {
    
  }
  szmobilephone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szmobilephone);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
}

// string szdevicetoken = 12;
void logonOtherPlatform_c2s::clear_szdevicetoken() {
  szdevicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& logonOtherPlatform_c2s::szdevicetoken() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
  return szdevicetoken_.GetNoArena();
}
void logonOtherPlatform_c2s::set_szdevicetoken(const ::std::string& value) {
  
  szdevicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
}
#if LANG_CXX11
void logonOtherPlatform_c2s::set_szdevicetoken(::std::string&& value) {
  
  szdevicetoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
}
#endif
void logonOtherPlatform_c2s::set_szdevicetoken(const char* value) {
  
  szdevicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
}
void logonOtherPlatform_c2s::set_szdevicetoken(const char* value, size_t size) {
  
  szdevicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
}
::std::string* logonOtherPlatform_c2s::mutable_szdevicetoken() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
  return szdevicetoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* logonOtherPlatform_c2s::release_szdevicetoken() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
  
  return szdevicetoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void logonOtherPlatform_c2s::set_allocated_szdevicetoken(::std::string* szdevicetoken) {
  if (szdevicetoken != NULL) {
    
  } else {
    
  }
  szdevicetoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szdevicetoken);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
}

// string strfaceurl = 13;
void logonOtherPlatform_c2s::clear_strfaceurl() {
  strfaceurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& logonOtherPlatform_c2s::strfaceurl() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
  return strfaceurl_.GetNoArena();
}
void logonOtherPlatform_c2s::set_strfaceurl(const ::std::string& value) {
  
  strfaceurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
}
#if LANG_CXX11
void logonOtherPlatform_c2s::set_strfaceurl(::std::string&& value) {
  
  strfaceurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
}
#endif
void logonOtherPlatform_c2s::set_strfaceurl(const char* value) {
  
  strfaceurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
}
void logonOtherPlatform_c2s::set_strfaceurl(const char* value, size_t size) {
  
  strfaceurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
}
::std::string* logonOtherPlatform_c2s::mutable_strfaceurl() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
  return strfaceurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* logonOtherPlatform_c2s::release_strfaceurl() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
  
  return strfaceurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void logonOtherPlatform_c2s::set_allocated_strfaceurl(::std::string* strfaceurl) {
  if (strfaceurl != NULL) {
    
  } else {
    
  }
  strfaceurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfaceurl);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int loginbyvisitor_c2s::kReqcmdFieldNumber;
const int loginbyvisitor_c2s::kDwplazaversionFieldNumber;
const int loginbyvisitor_c2s::kSzmachineidFieldNumber;
const int loginbyvisitor_c2s::kCbvalidateflagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

loginbyvisitor_c2s::loginbyvisitor_c2s()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LoginPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginPmd.loginbyvisitor_c2s)
}
loginbyvisitor_c2s::loginbyvisitor_c2s(const loginbyvisitor_c2s& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szmachineid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szmachineid().size() > 0) {
    szmachineid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szmachineid_);
  }
  if (from.has_reqcmd()) {
    reqcmd_ = new ::NullPmd::request(*from.reqcmd_);
  } else {
    reqcmd_ = NULL;
  }
  ::memcpy(&dwplazaversion_, &from.dwplazaversion_,
    reinterpret_cast<char*>(&cbvalidateflags_) -
    reinterpret_cast<char*>(&dwplazaversion_) + sizeof(cbvalidateflags_));
  // @@protoc_insertion_point(copy_constructor:LoginPmd.loginbyvisitor_c2s)
}

void loginbyvisitor_c2s::SharedCtor() {
  szmachineid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reqcmd_, 0, reinterpret_cast<char*>(&cbvalidateflags_) -
    reinterpret_cast<char*>(&reqcmd_) + sizeof(cbvalidateflags_));
  _cached_size_ = 0;
}

loginbyvisitor_c2s::~loginbyvisitor_c2s() {
  // @@protoc_insertion_point(destructor:LoginPmd.loginbyvisitor_c2s)
  SharedDtor();
}

void loginbyvisitor_c2s::SharedDtor() {
  szmachineid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete reqcmd_;
  }
}

void loginbyvisitor_c2s::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* loginbyvisitor_c2s::descriptor() {
  protobuf_LoginPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LoginPmd_2eproto::file_level_metadata[3].descriptor;
}

const loginbyvisitor_c2s& loginbyvisitor_c2s::default_instance() {
  protobuf_LoginPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

loginbyvisitor_c2s* loginbyvisitor_c2s::New(::google::protobuf::Arena* arena) const {
  loginbyvisitor_c2s* n = new loginbyvisitor_c2s;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void loginbyvisitor_c2s::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginPmd.loginbyvisitor_c2s)
  szmachineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && reqcmd_ != NULL) {
    delete reqcmd_;
  }
  reqcmd_ = NULL;
  ::memset(&dwplazaversion_, 0, reinterpret_cast<char*>(&cbvalidateflags_) -
    reinterpret_cast<char*>(&dwplazaversion_) + sizeof(cbvalidateflags_));
}

bool loginbyvisitor_c2s::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginPmd.loginbyvisitor_c2s)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NullPmd.request reqcmd = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reqcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwplazaversion = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwplazaversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szmachineid = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szmachineid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szmachineid().data(), this->szmachineid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LoginPmd.loginbyvisitor_c2s.szmachineid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cbvalidateflags = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbvalidateflags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginPmd.loginbyvisitor_c2s)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginPmd.loginbyvisitor_c2s)
  return false;
#undef DO_
}

void loginbyvisitor_c2s::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginPmd.loginbyvisitor_c2s)
  // .NullPmd.request reqcmd = 1;
  if (this->has_reqcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->reqcmd_, output);
  }

  // uint64 dwplazaversion = 2;
  if (this->dwplazaversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dwplazaversion(), output);
  }

  // string szmachineid = 3;
  if (this->szmachineid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szmachineid().data(), this->szmachineid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.loginbyvisitor_c2s.szmachineid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->szmachineid(), output);
  }

  // int32 cbvalidateflags = 4;
  if (this->cbvalidateflags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cbvalidateflags(), output);
  }

  // @@protoc_insertion_point(serialize_end:LoginPmd.loginbyvisitor_c2s)
}

::google::protobuf::uint8* loginbyvisitor_c2s::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginPmd.loginbyvisitor_c2s)
  // .NullPmd.request reqcmd = 1;
  if (this->has_reqcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->reqcmd_, false, target);
  }

  // uint64 dwplazaversion = 2;
  if (this->dwplazaversion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dwplazaversion(), target);
  }

  // string szmachineid = 3;
  if (this->szmachineid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szmachineid().data(), this->szmachineid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LoginPmd.loginbyvisitor_c2s.szmachineid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->szmachineid(), target);
  }

  // int32 cbvalidateflags = 4;
  if (this->cbvalidateflags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cbvalidateflags(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LoginPmd.loginbyvisitor_c2s)
  return target;
}

size_t loginbyvisitor_c2s::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginPmd.loginbyvisitor_c2s)
  size_t total_size = 0;

  // string szmachineid = 3;
  if (this->szmachineid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szmachineid());
  }

  // .NullPmd.request reqcmd = 1;
  if (this->has_reqcmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->reqcmd_);
  }

  // uint64 dwplazaversion = 2;
  if (this->dwplazaversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwplazaversion());
  }

  // int32 cbvalidateflags = 4;
  if (this->cbvalidateflags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbvalidateflags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void loginbyvisitor_c2s::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginPmd.loginbyvisitor_c2s)
  GOOGLE_DCHECK_NE(&from, this);
  const loginbyvisitor_c2s* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const loginbyvisitor_c2s>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginPmd.loginbyvisitor_c2s)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginPmd.loginbyvisitor_c2s)
    MergeFrom(*source);
  }
}

void loginbyvisitor_c2s::MergeFrom(const loginbyvisitor_c2s& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginPmd.loginbyvisitor_c2s)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.szmachineid().size() > 0) {

    szmachineid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szmachineid_);
  }
  if (from.has_reqcmd()) {
    mutable_reqcmd()->::NullPmd::request::MergeFrom(from.reqcmd());
  }
  if (from.dwplazaversion() != 0) {
    set_dwplazaversion(from.dwplazaversion());
  }
  if (from.cbvalidateflags() != 0) {
    set_cbvalidateflags(from.cbvalidateflags());
  }
}

void loginbyvisitor_c2s::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginPmd.loginbyvisitor_c2s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void loginbyvisitor_c2s::CopyFrom(const loginbyvisitor_c2s& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginPmd.loginbyvisitor_c2s)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loginbyvisitor_c2s::IsInitialized() const {
  return true;
}

void loginbyvisitor_c2s::Swap(loginbyvisitor_c2s* other) {
  if (other == this) return;
  InternalSwap(other);
}
void loginbyvisitor_c2s::InternalSwap(loginbyvisitor_c2s* other) {
  szmachineid_.Swap(&other->szmachineid_);
  std::swap(reqcmd_, other->reqcmd_);
  std::swap(dwplazaversion_, other->dwplazaversion_);
  std::swap(cbvalidateflags_, other->cbvalidateflags_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata loginbyvisitor_c2s::GetMetadata() const {
  protobuf_LoginPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LoginPmd_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// loginbyvisitor_c2s

// .NullPmd.request reqcmd = 1;
bool loginbyvisitor_c2s::has_reqcmd() const {
  return this != internal_default_instance() && reqcmd_ != NULL;
}
void loginbyvisitor_c2s::clear_reqcmd() {
  if (GetArenaNoVirtual() == NULL && reqcmd_ != NULL) delete reqcmd_;
  reqcmd_ = NULL;
}
const ::NullPmd::request& loginbyvisitor_c2s::reqcmd() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyvisitor_c2s.reqcmd)
  return reqcmd_ != NULL ? *reqcmd_
                         : *::NullPmd::request::internal_default_instance();
}
::NullPmd::request* loginbyvisitor_c2s::mutable_reqcmd() {
  
  if (reqcmd_ == NULL) {
    reqcmd_ = new ::NullPmd::request;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyvisitor_c2s.reqcmd)
  return reqcmd_;
}
::NullPmd::request* loginbyvisitor_c2s::release_reqcmd() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyvisitor_c2s.reqcmd)
  
  ::NullPmd::request* temp = reqcmd_;
  reqcmd_ = NULL;
  return temp;
}
void loginbyvisitor_c2s::set_allocated_reqcmd(::NullPmd::request* reqcmd) {
  delete reqcmd_;
  reqcmd_ = reqcmd;
  if (reqcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyvisitor_c2s.reqcmd)
}

// uint64 dwplazaversion = 2;
void loginbyvisitor_c2s::clear_dwplazaversion() {
  dwplazaversion_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 loginbyvisitor_c2s::dwplazaversion() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyvisitor_c2s.dwplazaversion)
  return dwplazaversion_;
}
void loginbyvisitor_c2s::set_dwplazaversion(::google::protobuf::uint64 value) {
  
  dwplazaversion_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyvisitor_c2s.dwplazaversion)
}

// string szmachineid = 3;
void loginbyvisitor_c2s::clear_szmachineid() {
  szmachineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& loginbyvisitor_c2s::szmachineid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyvisitor_c2s.szmachineid)
  return szmachineid_.GetNoArena();
}
void loginbyvisitor_c2s::set_szmachineid(const ::std::string& value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyvisitor_c2s.szmachineid)
}
#if LANG_CXX11
void loginbyvisitor_c2s::set_szmachineid(::std::string&& value) {
  
  szmachineid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.loginbyvisitor_c2s.szmachineid)
}
#endif
void loginbyvisitor_c2s::set_szmachineid(const char* value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.loginbyvisitor_c2s.szmachineid)
}
void loginbyvisitor_c2s::set_szmachineid(const char* value, size_t size) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.loginbyvisitor_c2s.szmachineid)
}
::std::string* loginbyvisitor_c2s::mutable_szmachineid() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyvisitor_c2s.szmachineid)
  return szmachineid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* loginbyvisitor_c2s::release_szmachineid() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyvisitor_c2s.szmachineid)
  
  return szmachineid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void loginbyvisitor_c2s::set_allocated_szmachineid(::std::string* szmachineid) {
  if (szmachineid != NULL) {
    
  } else {
    
  }
  szmachineid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szmachineid);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyvisitor_c2s.szmachineid)
}

// int32 cbvalidateflags = 4;
void loginbyvisitor_c2s::clear_cbvalidateflags() {
  cbvalidateflags_ = 0;
}
::google::protobuf::int32 loginbyvisitor_c2s::cbvalidateflags() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyvisitor_c2s.cbvalidateflags)
  return cbvalidateflags_;
}
void loginbyvisitor_c2s::set_cbvalidateflags(::google::protobuf::int32 value) {
  
  cbvalidateflags_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyvisitor_c2s.cbvalidateflags)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int loginsuccess_s2c::kRespcmdFieldNumber;
const int loginsuccess_s2c::kPersoninfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

loginsuccess_s2c::loginsuccess_s2c()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LoginPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginPmd.loginsuccess_s2c)
}
loginsuccess_s2c::loginsuccess_s2c(const loginsuccess_s2c& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_respcmd()) {
    respcmd_ = new ::NullPmd::response(*from.respcmd_);
  } else {
    respcmd_ = NULL;
  }
  if (from.has_personinfo()) {
    personinfo_ = new ::CommonPmd::personinfo(*from.personinfo_);
  } else {
    personinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:LoginPmd.loginsuccess_s2c)
}

void loginsuccess_s2c::SharedCtor() {
  ::memset(&respcmd_, 0, reinterpret_cast<char*>(&personinfo_) -
    reinterpret_cast<char*>(&respcmd_) + sizeof(personinfo_));
  _cached_size_ = 0;
}

loginsuccess_s2c::~loginsuccess_s2c() {
  // @@protoc_insertion_point(destructor:LoginPmd.loginsuccess_s2c)
  SharedDtor();
}

void loginsuccess_s2c::SharedDtor() {
  if (this != internal_default_instance()) {
    delete respcmd_;
  }
  if (this != internal_default_instance()) {
    delete personinfo_;
  }
}

void loginsuccess_s2c::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* loginsuccess_s2c::descriptor() {
  protobuf_LoginPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LoginPmd_2eproto::file_level_metadata[4].descriptor;
}

const loginsuccess_s2c& loginsuccess_s2c::default_instance() {
  protobuf_LoginPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

loginsuccess_s2c* loginsuccess_s2c::New(::google::protobuf::Arena* arena) const {
  loginsuccess_s2c* n = new loginsuccess_s2c;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void loginsuccess_s2c::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginPmd.loginsuccess_s2c)
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) {
    delete respcmd_;
  }
  respcmd_ = NULL;
  if (GetArenaNoVirtual() == NULL && personinfo_ != NULL) {
    delete personinfo_;
  }
  personinfo_ = NULL;
}

bool loginsuccess_s2c::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginPmd.loginsuccess_s2c)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NullPmd.response respcmd = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_respcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CommonPmd.personinfo personinfo = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_personinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginPmd.loginsuccess_s2c)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginPmd.loginsuccess_s2c)
  return false;
#undef DO_
}

void loginsuccess_s2c::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginPmd.loginsuccess_s2c)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->respcmd_, output);
  }

  // .CommonPmd.personinfo personinfo = 2;
  if (this->has_personinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->personinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:LoginPmd.loginsuccess_s2c)
}

::google::protobuf::uint8* loginsuccess_s2c::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginPmd.loginsuccess_s2c)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->respcmd_, false, target);
  }

  // .CommonPmd.personinfo personinfo = 2;
  if (this->has_personinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->personinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LoginPmd.loginsuccess_s2c)
  return target;
}

size_t loginsuccess_s2c::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginPmd.loginsuccess_s2c)
  size_t total_size = 0;

  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->respcmd_);
  }

  // .CommonPmd.personinfo personinfo = 2;
  if (this->has_personinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->personinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void loginsuccess_s2c::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginPmd.loginsuccess_s2c)
  GOOGLE_DCHECK_NE(&from, this);
  const loginsuccess_s2c* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const loginsuccess_s2c>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginPmd.loginsuccess_s2c)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginPmd.loginsuccess_s2c)
    MergeFrom(*source);
  }
}

void loginsuccess_s2c::MergeFrom(const loginsuccess_s2c& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginPmd.loginsuccess_s2c)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_respcmd()) {
    mutable_respcmd()->::NullPmd::response::MergeFrom(from.respcmd());
  }
  if (from.has_personinfo()) {
    mutable_personinfo()->::CommonPmd::personinfo::MergeFrom(from.personinfo());
  }
}

void loginsuccess_s2c::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginPmd.loginsuccess_s2c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void loginsuccess_s2c::CopyFrom(const loginsuccess_s2c& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginPmd.loginsuccess_s2c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loginsuccess_s2c::IsInitialized() const {
  return true;
}

void loginsuccess_s2c::Swap(loginsuccess_s2c* other) {
  if (other == this) return;
  InternalSwap(other);
}
void loginsuccess_s2c::InternalSwap(loginsuccess_s2c* other) {
  std::swap(respcmd_, other->respcmd_);
  std::swap(personinfo_, other->personinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata loginsuccess_s2c::GetMetadata() const {
  protobuf_LoginPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LoginPmd_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// loginsuccess_s2c

// .NullPmd.response respcmd = 1;
bool loginsuccess_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
void loginsuccess_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
const ::NullPmd::response& loginsuccess_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginsuccess_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
::NullPmd::response* loginsuccess_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginsuccess_s2c.respcmd)
  return respcmd_;
}
::NullPmd::response* loginsuccess_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginsuccess_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
void loginsuccess_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginsuccess_s2c.respcmd)
}

// .CommonPmd.personinfo personinfo = 2;
bool loginsuccess_s2c::has_personinfo() const {
  return this != internal_default_instance() && personinfo_ != NULL;
}
void loginsuccess_s2c::clear_personinfo() {
  if (GetArenaNoVirtual() == NULL && personinfo_ != NULL) delete personinfo_;
  personinfo_ = NULL;
}
const ::CommonPmd::personinfo& loginsuccess_s2c::personinfo() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginsuccess_s2c.personinfo)
  return personinfo_ != NULL ? *personinfo_
                         : *::CommonPmd::personinfo::internal_default_instance();
}
::CommonPmd::personinfo* loginsuccess_s2c::mutable_personinfo() {
  
  if (personinfo_ == NULL) {
    personinfo_ = new ::CommonPmd::personinfo;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginsuccess_s2c.personinfo)
  return personinfo_;
}
::CommonPmd::personinfo* loginsuccess_s2c::release_personinfo() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginsuccess_s2c.personinfo)
  
  ::CommonPmd::personinfo* temp = personinfo_;
  personinfo_ = NULL;
  return temp;
}
void loginsuccess_s2c::set_allocated_personinfo(::CommonPmd::personinfo* personinfo) {
  delete personinfo_;
  personinfo_ = personinfo;
  if (personinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginsuccess_s2c.personinfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int loginfinish_s2c::kRespcmdFieldNumber;
const int loginfinish_s2c::kWIntermitTimeFieldNumber;
const int loginfinish_s2c::kWOnLineCountTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

loginfinish_s2c::loginfinish_s2c()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LoginPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginPmd.loginfinish_s2c)
}
loginfinish_s2c::loginfinish_s2c(const loginfinish_s2c& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_respcmd()) {
    respcmd_ = new ::NullPmd::response(*from.respcmd_);
  } else {
    respcmd_ = NULL;
  }
  ::memcpy(&wintermittime_, &from.wintermittime_,
    reinterpret_cast<char*>(&wonlinecounttime_) -
    reinterpret_cast<char*>(&wintermittime_) + sizeof(wonlinecounttime_));
  // @@protoc_insertion_point(copy_constructor:LoginPmd.loginfinish_s2c)
}

void loginfinish_s2c::SharedCtor() {
  ::memset(&respcmd_, 0, reinterpret_cast<char*>(&wonlinecounttime_) -
    reinterpret_cast<char*>(&respcmd_) + sizeof(wonlinecounttime_));
  _cached_size_ = 0;
}

loginfinish_s2c::~loginfinish_s2c() {
  // @@protoc_insertion_point(destructor:LoginPmd.loginfinish_s2c)
  SharedDtor();
}

void loginfinish_s2c::SharedDtor() {
  if (this != internal_default_instance()) {
    delete respcmd_;
  }
}

void loginfinish_s2c::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* loginfinish_s2c::descriptor() {
  protobuf_LoginPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LoginPmd_2eproto::file_level_metadata[5].descriptor;
}

const loginfinish_s2c& loginfinish_s2c::default_instance() {
  protobuf_LoginPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

loginfinish_s2c* loginfinish_s2c::New(::google::protobuf::Arena* arena) const {
  loginfinish_s2c* n = new loginfinish_s2c;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void loginfinish_s2c::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginPmd.loginfinish_s2c)
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) {
    delete respcmd_;
  }
  respcmd_ = NULL;
  ::memset(&wintermittime_, 0, reinterpret_cast<char*>(&wonlinecounttime_) -
    reinterpret_cast<char*>(&wintermittime_) + sizeof(wonlinecounttime_));
}

bool loginfinish_s2c::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginPmd.loginfinish_s2c)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NullPmd.response respcmd = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_respcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 wIntermitTime = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wintermittime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 wOnLineCountTime = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wonlinecounttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginPmd.loginfinish_s2c)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginPmd.loginfinish_s2c)
  return false;
#undef DO_
}

void loginfinish_s2c::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginPmd.loginfinish_s2c)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->respcmd_, output);
  }

  // int32 wIntermitTime = 2;
  if (this->wintermittime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->wintermittime(), output);
  }

  // int32 wOnLineCountTime = 3;
  if (this->wonlinecounttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->wonlinecounttime(), output);
  }

  // @@protoc_insertion_point(serialize_end:LoginPmd.loginfinish_s2c)
}

::google::protobuf::uint8* loginfinish_s2c::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginPmd.loginfinish_s2c)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->respcmd_, false, target);
  }

  // int32 wIntermitTime = 2;
  if (this->wintermittime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->wintermittime(), target);
  }

  // int32 wOnLineCountTime = 3;
  if (this->wonlinecounttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->wonlinecounttime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LoginPmd.loginfinish_s2c)
  return target;
}

size_t loginfinish_s2c::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginPmd.loginfinish_s2c)
  size_t total_size = 0;

  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->respcmd_);
  }

  // int32 wIntermitTime = 2;
  if (this->wintermittime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wintermittime());
  }

  // int32 wOnLineCountTime = 3;
  if (this->wonlinecounttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wonlinecounttime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void loginfinish_s2c::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginPmd.loginfinish_s2c)
  GOOGLE_DCHECK_NE(&from, this);
  const loginfinish_s2c* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const loginfinish_s2c>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginPmd.loginfinish_s2c)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginPmd.loginfinish_s2c)
    MergeFrom(*source);
  }
}

void loginfinish_s2c::MergeFrom(const loginfinish_s2c& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginPmd.loginfinish_s2c)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_respcmd()) {
    mutable_respcmd()->::NullPmd::response::MergeFrom(from.respcmd());
  }
  if (from.wintermittime() != 0) {
    set_wintermittime(from.wintermittime());
  }
  if (from.wonlinecounttime() != 0) {
    set_wonlinecounttime(from.wonlinecounttime());
  }
}

void loginfinish_s2c::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginPmd.loginfinish_s2c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void loginfinish_s2c::CopyFrom(const loginfinish_s2c& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginPmd.loginfinish_s2c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loginfinish_s2c::IsInitialized() const {
  return true;
}

void loginfinish_s2c::Swap(loginfinish_s2c* other) {
  if (other == this) return;
  InternalSwap(other);
}
void loginfinish_s2c::InternalSwap(loginfinish_s2c* other) {
  std::swap(respcmd_, other->respcmd_);
  std::swap(wintermittime_, other->wintermittime_);
  std::swap(wonlinecounttime_, other->wonlinecounttime_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata loginfinish_s2c::GetMetadata() const {
  protobuf_LoginPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LoginPmd_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// loginfinish_s2c

// .NullPmd.response respcmd = 1;
bool loginfinish_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
void loginfinish_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
const ::NullPmd::response& loginfinish_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginfinish_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
::NullPmd::response* loginfinish_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginfinish_s2c.respcmd)
  return respcmd_;
}
::NullPmd::response* loginfinish_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginfinish_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
void loginfinish_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginfinish_s2c.respcmd)
}

// int32 wIntermitTime = 2;
void loginfinish_s2c::clear_wintermittime() {
  wintermittime_ = 0;
}
::google::protobuf::int32 loginfinish_s2c::wintermittime() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginfinish_s2c.wIntermitTime)
  return wintermittime_;
}
void loginfinish_s2c::set_wintermittime(::google::protobuf::int32 value) {
  
  wintermittime_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginfinish_s2c.wIntermitTime)
}

// int32 wOnLineCountTime = 3;
void loginfinish_s2c::clear_wonlinecounttime() {
  wonlinecounttime_ = 0;
}
::google::protobuf::int32 loginfinish_s2c::wonlinecounttime() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginfinish_s2c.wOnLineCountTime)
  return wonlinecounttime_;
}
void loginfinish_s2c::set_wonlinecounttime(::google::protobuf::int32 value) {
  
  wonlinecounttime_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginfinish_s2c.wOnLineCountTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int loginfailure_s2c::kRespcmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

loginfailure_s2c::loginfailure_s2c()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LoginPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginPmd.loginfailure_s2c)
}
loginfailure_s2c::loginfailure_s2c(const loginfailure_s2c& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_respcmd()) {
    respcmd_ = new ::NullPmd::response(*from.respcmd_);
  } else {
    respcmd_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:LoginPmd.loginfailure_s2c)
}

void loginfailure_s2c::SharedCtor() {
  respcmd_ = NULL;
  _cached_size_ = 0;
}

loginfailure_s2c::~loginfailure_s2c() {
  // @@protoc_insertion_point(destructor:LoginPmd.loginfailure_s2c)
  SharedDtor();
}

void loginfailure_s2c::SharedDtor() {
  if (this != internal_default_instance()) {
    delete respcmd_;
  }
}

void loginfailure_s2c::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* loginfailure_s2c::descriptor() {
  protobuf_LoginPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LoginPmd_2eproto::file_level_metadata[6].descriptor;
}

const loginfailure_s2c& loginfailure_s2c::default_instance() {
  protobuf_LoginPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

loginfailure_s2c* loginfailure_s2c::New(::google::protobuf::Arena* arena) const {
  loginfailure_s2c* n = new loginfailure_s2c;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void loginfailure_s2c::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginPmd.loginfailure_s2c)
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) {
    delete respcmd_;
  }
  respcmd_ = NULL;
}

bool loginfailure_s2c::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginPmd.loginfailure_s2c)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NullPmd.response respcmd = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_respcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginPmd.loginfailure_s2c)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginPmd.loginfailure_s2c)
  return false;
#undef DO_
}

void loginfailure_s2c::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginPmd.loginfailure_s2c)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->respcmd_, output);
  }

  // @@protoc_insertion_point(serialize_end:LoginPmd.loginfailure_s2c)
}

::google::protobuf::uint8* loginfailure_s2c::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginPmd.loginfailure_s2c)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->respcmd_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LoginPmd.loginfailure_s2c)
  return target;
}

size_t loginfailure_s2c::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginPmd.loginfailure_s2c)
  size_t total_size = 0;

  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->respcmd_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void loginfailure_s2c::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginPmd.loginfailure_s2c)
  GOOGLE_DCHECK_NE(&from, this);
  const loginfailure_s2c* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const loginfailure_s2c>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginPmd.loginfailure_s2c)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginPmd.loginfailure_s2c)
    MergeFrom(*source);
  }
}

void loginfailure_s2c::MergeFrom(const loginfailure_s2c& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginPmd.loginfailure_s2c)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_respcmd()) {
    mutable_respcmd()->::NullPmd::response::MergeFrom(from.respcmd());
  }
}

void loginfailure_s2c::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginPmd.loginfailure_s2c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void loginfailure_s2c::CopyFrom(const loginfailure_s2c& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginPmd.loginfailure_s2c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loginfailure_s2c::IsInitialized() const {
  return true;
}

void loginfailure_s2c::Swap(loginfailure_s2c* other) {
  if (other == this) return;
  InternalSwap(other);
}
void loginfailure_s2c::InternalSwap(loginfailure_s2c* other) {
  std::swap(respcmd_, other->respcmd_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata loginfailure_s2c::GetMetadata() const {
  protobuf_LoginPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LoginPmd_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// loginfailure_s2c

// .NullPmd.response respcmd = 1;
bool loginfailure_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
void loginfailure_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
const ::NullPmd::response& loginfailure_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginfailure_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
::NullPmd::response* loginfailure_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginfailure_s2c.respcmd)
  return respcmd_;
}
::NullPmd::response* loginfailure_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginfailure_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
void loginfailure_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginfailure_s2c.respcmd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace LoginPmd

// @@protoc_insertion_point(global_scope)
