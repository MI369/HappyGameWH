// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VideoPmd.proto

#ifndef PROTOBUF_VideoPmd_2eproto__INCLUDED
#define PROTOBUF_VideoPmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "NullPmd.pb.h"
// @@protoc_insertion_point(includes)
namespace NullPmd {
class command;
class commandDefaultTypeInternal;
extern commandDefaultTypeInternal _command_default_instance_;
class head;
class headDefaultTypeInternal;
extern headDefaultTypeInternal _head_default_instance_;
class indication;
class indicationDefaultTypeInternal;
extern indicationDefaultTypeInternal _indication_default_instance_;
class info;
class infoDefaultTypeInternal;
extern infoDefaultTypeInternal _info_default_instance_;
class message;
class messageDefaultTypeInternal;
extern messageDefaultTypeInternal _message_default_instance_;
class request;
class requestDefaultTypeInternal;
extern requestDefaultTypeInternal _request_default_instance_;
class response;
class responseDefaultTypeInternal;
extern responseDefaultTypeInternal _response_default_instance_;
}  // namespace NullPmd
namespace VideoPmd {
class tagAVServerOption_s2c;
class tagAVServerOption_s2cDefaultTypeInternal;
extern tagAVServerOption_s2cDefaultTypeInternal _tagAVServerOption_s2c_default_instance_;
}  // namespace VideoPmd

namespace VideoPmd {

namespace protobuf_VideoPmd_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_VideoPmd_2eproto

// ===================================================================

class tagAVServerOption_s2c : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VideoPmd.tagAVServerOption_s2c) */ {
 public:
  tagAVServerOption_s2c();
  virtual ~tagAVServerOption_s2c();

  tagAVServerOption_s2c(const tagAVServerOption_s2c& from);

  inline tagAVServerOption_s2c& operator=(const tagAVServerOption_s2c& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagAVServerOption_s2c& default_instance();

  static inline const tagAVServerOption_s2c* internal_default_instance() {
    return reinterpret_cast<const tagAVServerOption_s2c*>(
               &_tagAVServerOption_s2c_default_instance_);
  }

  void Swap(tagAVServerOption_s2c* other);

  // implements Message ----------------------------------------------

  inline tagAVServerOption_s2c* New() const PROTOBUF_FINAL { return New(NULL); }

  tagAVServerOption_s2c* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagAVServerOption_s2c& from);
  void MergeFrom(const tagAVServerOption_s2c& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagAVServerOption_s2c* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NullPmd.response respcmd = 1;
  bool has_respcmd() const;
  void clear_respcmd();
  static const int kRespcmdFieldNumber = 1;
  const ::NullPmd::response& respcmd() const;
  ::NullPmd::response* mutable_respcmd();
  ::NullPmd::response* release_respcmd();
  void set_allocated_respcmd(::NullPmd::response* respcmd);

  // uint64 dwavserveraddr = 3;
  void clear_dwavserveraddr();
  static const int kDwavserveraddrFieldNumber = 3;
  ::google::protobuf::uint64 dwavserveraddr() const;
  void set_dwavserveraddr(::google::protobuf::uint64 value);

  // int32 wavserverport = 2;
  void clear_wavserverport();
  static const int kWavserverportFieldNumber = 2;
  ::google::protobuf::int32 wavserverport() const;
  void set_wavserverport(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:VideoPmd.tagAVServerOption_s2c)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NullPmd::response* respcmd_;
  ::google::protobuf::uint64 dwavserveraddr_;
  ::google::protobuf::int32 wavserverport_;
  mutable int _cached_size_;
  friend struct  protobuf_VideoPmd_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// tagAVServerOption_s2c

// .NullPmd.response respcmd = 1;
inline bool tagAVServerOption_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
inline void tagAVServerOption_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
inline const ::NullPmd::response& tagAVServerOption_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:VideoPmd.tagAVServerOption_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
inline ::NullPmd::response* tagAVServerOption_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:VideoPmd.tagAVServerOption_s2c.respcmd)
  return respcmd_;
}
inline ::NullPmd::response* tagAVServerOption_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:VideoPmd.tagAVServerOption_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
inline void tagAVServerOption_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:VideoPmd.tagAVServerOption_s2c.respcmd)
}

// int32 wavserverport = 2;
inline void tagAVServerOption_s2c::clear_wavserverport() {
  wavserverport_ = 0;
}
inline ::google::protobuf::int32 tagAVServerOption_s2c::wavserverport() const {
  // @@protoc_insertion_point(field_get:VideoPmd.tagAVServerOption_s2c.wavserverport)
  return wavserverport_;
}
inline void tagAVServerOption_s2c::set_wavserverport(::google::protobuf::int32 value) {
  
  wavserverport_ = value;
  // @@protoc_insertion_point(field_set:VideoPmd.tagAVServerOption_s2c.wavserverport)
}

// uint64 dwavserveraddr = 3;
inline void tagAVServerOption_s2c::clear_dwavserveraddr() {
  dwavserveraddr_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagAVServerOption_s2c::dwavserveraddr() const {
  // @@protoc_insertion_point(field_get:VideoPmd.tagAVServerOption_s2c.dwavserveraddr)
  return dwavserveraddr_;
}
inline void tagAVServerOption_s2c::set_dwavserveraddr(::google::protobuf::uint64 value) {
  
  dwavserveraddr_ = value;
  // @@protoc_insertion_point(field_set:VideoPmd.tagAVServerOption_s2c.dwavserveraddr)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace VideoPmd

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_VideoPmd_2eproto__INCLUDED
