syntax = "proto3";    //指定proto版本3.x

import "NullPmd.proto";
import "CommonPmd.proto";

package GamePmd; 

message taggametype
{
	int32  wjoinid		= 1;       //挂接索引
	int32  wsortid		= 2;       //排序索引
	int32  wtypeid		= 3;       //类型索引
	string sztypename 	= 4;       //种类名字
}

message taggamekind
{
	int32	wtypeid		= 1;		//类型索引
	int32	wjoinid		= 2;		//挂接索引
	int32	wsortid		= 3;		//排序索引
	int32	wkindid		= 4;		//类型索引
	int32	wgameid		= 5;		//模块索引
	int32	wrecommend	= 6;		//推荐游戏
	int32	wgameflag	= 7;		//游戏标志
	uint64	dwonlinecount	= 8;	//在线人数
	uint64	dwandroidcount  = 9;	//在线人数
	uint64	dwsetcount		= 10;	//在线人数
	uint64	dwfullcount		= 11;	//满员人数
	string	szkindname		= 12;	//游戏名字
	string	szprocessname	= 13;	//进程名字
}

message tagGameNode
{
	int32	wkindid		= 1;	//名称索引
	int32	wjoinid		= 2;	//挂接索引
	int32	wsortid		= 3;	//排序索引
	int32	wnodeid		= 4;	//节点索引
	string	sznodename	= 5;	//节点名称
};

message tagGamePage
{
	int32  wpageid		= 1;     //页面索引
	int32  wkindid		= 2;     //名称索引
	int32  wnodeid		= 3;     //节点索引
	int32  wsortid		= 4;     //排序索引
	int32  woperatetype	= 5;     //控制类型
	string szdisplayname	= 6; //显示名称
}

message tagGameServer
{
	int32	wkindid			= 1;		//名称索引
	int32	wnodeid			= 2;		//节点索引
	int32	wsortid			= 3;		//排序索引
	int32	wserverid		= 4;		//房间索引
	int32   wserverkind		= 5;        //房间类型
	int32	wservertype		= 6;		//房间类型
	int32	wserverlevel	= 7;		//房间等级
	int32	wserverport		= 8;		//房间端口
	uint64	lcellscore		= 9;		//单元积分
	int32	cbentermember	= 10;		//进入会员
	uint64	lenterscore		= 11;		//进入积分
	uint64	dwserverrule	= 12;		//房间规则
	uint64	dwonlinecount	= 13;		//在线人数
	uint64	dwandroidcount	= 14;		//机器人数
	uint64	dwfullcount		= 15;		//满员人数
	string	szserveraddr	= 16;		//房间名称
	string	szservername	= 17;		//房间名称
	//私人房添加
	uint64	dwsurporttype	= 18;		//支持类型
	int32	wtablecount		= 19;		//桌子数目

	//配置属性
	uint64	dwsetplayercount= 20;		//设置人数
	string	szgameinfomation= 21;		//游戏说明
};


//游戏类型
message taggametype_s2c
{
	NullPmd.response respcmd			= 1;
	repeated taggametype taggametype	= 3;	
}

//游戏种类
message taggamekind_s2c
{
	NullPmd.response respcmd			= 1;
	repeated taggamekind taggamekind	= 2;	
}

//定制类型
message tagGamePage_s2c
{
	NullPmd.response respcmd			= 1;
	repeated tagGamePage tagGamePage	= 2;	
}


//游戏节点
message tagGameNode_s2c
{
	NullPmd.response respcmd			= 1;
	repeated tagGameNode tagGameNode	= 2;	
};

//游戏房间
message tagGameServer_s2c
{
	NullPmd.response respcmd				= 1;
	repeated tagGameServer tagGameServer	= 2;	
};

//私人房间参数
message personalParameter_c2s
{
	NullPmd.response respcmd				= 1;
	uint64	dwkindid						= 2;	//游戏标识
};

//私人房间配置
message tagPersonalTableFeeList
{
	uint64	dwdrawtimelimit					= 1;	//时间限制
	uint64	dwdrawcountlimit				= 2;	//局数限制
	uint64	liniscore						= 3;	//初始分数
	uint64	lfeescore						= 4;	//创建费用
	int32	waapayfee						= 5;	//AA费用
	int32	cbgamemode						= 6;	//游戏模式
};

message tagPersonalTableFeeList_s2c
{
	NullPmd.response respcmd				= 1;
	repeated tagPersonalTableFeeList tagPersonalTableFeeList = 2;
};

message tagPersonalCellScore_s2c
{
	NullPmd.response respcmd				= 1;
	repeated int32 ncellscore				= 2;
};

//私人定制配置
message tagGetPersonalRule_s2c
{
	NullPmd.response respcmd				= 1;
	string	cbpersonalrule   				= 2;				//私人定制配置
};

//私人房配置选项
message tagPersonalRoomOption_s2c
{
	NullPmd.response respcmd				= 1;
	int32			cbisjoingame			= 2;				// 0 表示不参与游戏  1 标识参与游戏	
	int32			cbminpeople				= 3;				//房间最小人数	
	int32			cbmaxpeople				= 4;				//房间最大人数	
	uint64			lmaxcellscore			= 5;				//私人房的最大底分

	uint64			lpersonalroomtax		= 6;				//私人房税收
	CommonPmd.consumptionType bconsumptiontype		= 7;				//消费类型

	int32			wcancreatecount			= 8;				//玩家能够创建的私人房的最大数目
	uint64			dwplayturncount			= 9; 				//私人放进行游戏的最大局数
	uint64			dwplaytimelimit			= 10;				//私人房进行游戏的最大时间 单位秒

	uint64			dwtimeafterbegincount	= 11;				//一局开始多长时间后解散桌子 单位秒
	uint64			dwtimeofflinecount		= 12;				//掉线多长时间后解散桌子  单位秒
	uint64			dwtimenotbegingame		= 13;				//多长时间未开始游戏解散桌子	 单位秒
	uint64			dwtimeaftercreateroom	= 14;				//私人房创建多长时间后无人坐桌解散桌子
	
	int32			wbeginfreetime			= 15;				//免费时段开始
	int32			wendfreetime			= 16;				//免费时段结束
};
