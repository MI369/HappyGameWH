// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: propertyPmd.proto

#ifndef PROTOBUF_propertyPmd_2eproto__INCLUDED
#define PROTOBUF_propertyPmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "NullPmd.pb.h"
// @@protoc_insertion_point(includes)
namespace NullPmd {
class command;
class commandDefaultTypeInternal;
extern commandDefaultTypeInternal _command_default_instance_;
class head;
class headDefaultTypeInternal;
extern headDefaultTypeInternal _head_default_instance_;
class indication;
class indicationDefaultTypeInternal;
extern indicationDefaultTypeInternal _indication_default_instance_;
class info;
class infoDefaultTypeInternal;
extern infoDefaultTypeInternal _info_default_instance_;
class message;
class messageDefaultTypeInternal;
extern messageDefaultTypeInternal _message_default_instance_;
class request;
class requestDefaultTypeInternal;
extern requestDefaultTypeInternal _request_default_instance_;
class response;
class responseDefaultTypeInternal;
extern responseDefaultTypeInternal _response_default_instance_;
}  // namespace NullPmd
namespace propertyPmd {
class tagPropertyItem;
class tagPropertyItemDefaultTypeInternal;
extern tagPropertyItemDefaultTypeInternal _tagPropertyItem_default_instance_;
class tagPropertyItem_s2c;
class tagPropertyItem_s2cDefaultTypeInternal;
extern tagPropertyItem_s2cDefaultTypeInternal _tagPropertyItem_s2c_default_instance_;
class tagPropertyRelatItem;
class tagPropertyRelatItemDefaultTypeInternal;
extern tagPropertyRelatItemDefaultTypeInternal _tagPropertyRelatItem_default_instance_;
class tagPropertyRelatItem_s2c;
class tagPropertyRelatItem_s2cDefaultTypeInternal;
extern tagPropertyRelatItem_s2cDefaultTypeInternal _tagPropertyRelatItem_s2c_default_instance_;
class tagPropertySubItem;
class tagPropertySubItemDefaultTypeInternal;
extern tagPropertySubItemDefaultTypeInternal _tagPropertySubItem_default_instance_;
class tagPropertySubItem_s2c;
class tagPropertySubItem_s2cDefaultTypeInternal;
extern tagPropertySubItem_s2cDefaultTypeInternal _tagPropertySubItem_s2c_default_instance_;
class tagPropertyTypeItem;
class tagPropertyTypeItemDefaultTypeInternal;
extern tagPropertyTypeItemDefaultTypeInternal _tagPropertyTypeItem_default_instance_;
class tagPropertyTypeItem_s2c;
class tagPropertyTypeItem_s2cDefaultTypeInternal;
extern tagPropertyTypeItem_s2cDefaultTypeInternal _tagPropertyTypeItem_s2c_default_instance_;
}  // namespace propertyPmd

namespace propertyPmd {

namespace protobuf_propertyPmd_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_propertyPmd_2eproto

// ===================================================================

class tagPropertyTypeItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:propertyPmd.tagPropertyTypeItem) */ {
 public:
  tagPropertyTypeItem();
  virtual ~tagPropertyTypeItem();

  tagPropertyTypeItem(const tagPropertyTypeItem& from);

  inline tagPropertyTypeItem& operator=(const tagPropertyTypeItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagPropertyTypeItem& default_instance();

  static inline const tagPropertyTypeItem* internal_default_instance() {
    return reinterpret_cast<const tagPropertyTypeItem*>(
               &_tagPropertyTypeItem_default_instance_);
  }

  void Swap(tagPropertyTypeItem* other);

  // implements Message ----------------------------------------------

  inline tagPropertyTypeItem* New() const PROTOBUF_FINAL { return New(NULL); }

  tagPropertyTypeItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagPropertyTypeItem& from);
  void MergeFrom(const tagPropertyTypeItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagPropertyTypeItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sztypename = 3;
  void clear_sztypename();
  static const int kSztypenameFieldNumber = 3;
  const ::std::string& sztypename() const;
  void set_sztypename(const ::std::string& value);
  #if LANG_CXX11
  void set_sztypename(::std::string&& value);
  #endif
  void set_sztypename(const char* value);
  void set_sztypename(const char* value, size_t size);
  ::std::string* mutable_sztypename();
  ::std::string* release_sztypename();
  void set_allocated_sztypename(::std::string* sztypename);

  // uint64 dwtypeid = 1;
  void clear_dwtypeid();
  static const int kDwtypeidFieldNumber = 1;
  ::google::protobuf::uint64 dwtypeid() const;
  void set_dwtypeid(::google::protobuf::uint64 value);

  // uint64 dwsortid = 2;
  void clear_dwsortid();
  static const int kDwsortidFieldNumber = 2;
  ::google::protobuf::uint64 dwsortid() const;
  void set_dwsortid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:propertyPmd.tagPropertyTypeItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sztypename_;
  ::google::protobuf::uint64 dwtypeid_;
  ::google::protobuf::uint64 dwsortid_;
  mutable int _cached_size_;
  friend struct  protobuf_propertyPmd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagPropertyRelatItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:propertyPmd.tagPropertyRelatItem) */ {
 public:
  tagPropertyRelatItem();
  virtual ~tagPropertyRelatItem();

  tagPropertyRelatItem(const tagPropertyRelatItem& from);

  inline tagPropertyRelatItem& operator=(const tagPropertyRelatItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagPropertyRelatItem& default_instance();

  static inline const tagPropertyRelatItem* internal_default_instance() {
    return reinterpret_cast<const tagPropertyRelatItem*>(
               &_tagPropertyRelatItem_default_instance_);
  }

  void Swap(tagPropertyRelatItem* other);

  // implements Message ----------------------------------------------

  inline tagPropertyRelatItem* New() const PROTOBUF_FINAL { return New(NULL); }

  tagPropertyRelatItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagPropertyRelatItem& from);
  void MergeFrom(const tagPropertyRelatItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagPropertyRelatItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NullPmd.response respcmd = 1;
  bool has_respcmd() const;
  void clear_respcmd();
  static const int kRespcmdFieldNumber = 1;
  const ::NullPmd::response& respcmd() const;
  ::NullPmd::response* mutable_respcmd();
  ::NullPmd::response* release_respcmd();
  void set_allocated_respcmd(::NullPmd::response* respcmd);

  // uint64 dwpropertyid = 2;
  void clear_dwpropertyid();
  static const int kDwpropertyidFieldNumber = 2;
  ::google::protobuf::uint64 dwpropertyid() const;
  void set_dwpropertyid(::google::protobuf::uint64 value);

  // uint64 dwtypeid = 3;
  void clear_dwtypeid();
  static const int kDwtypeidFieldNumber = 3;
  ::google::protobuf::uint64 dwtypeid() const;
  void set_dwtypeid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:propertyPmd.tagPropertyRelatItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NullPmd::response* respcmd_;
  ::google::protobuf::uint64 dwpropertyid_;
  ::google::protobuf::uint64 dwtypeid_;
  mutable int _cached_size_;
  friend struct  protobuf_propertyPmd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagPropertyItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:propertyPmd.tagPropertyItem) */ {
 public:
  tagPropertyItem();
  virtual ~tagPropertyItem();

  tagPropertyItem(const tagPropertyItem& from);

  inline tagPropertyItem& operator=(const tagPropertyItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagPropertyItem& default_instance();

  static inline const tagPropertyItem* internal_default_instance() {
    return reinterpret_cast<const tagPropertyItem*>(
               &_tagPropertyItem_default_instance_);
  }

  void Swap(tagPropertyItem* other);

  // implements Message ----------------------------------------------

  inline tagPropertyItem* New() const PROTOBUF_FINAL { return New(NULL); }

  tagPropertyItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagPropertyItem& from);
  void MergeFrom(const tagPropertyItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagPropertyItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string szname = 19;
  void clear_szname();
  static const int kSznameFieldNumber = 19;
  const ::std::string& szname() const;
  void set_szname(const ::std::string& value);
  #if LANG_CXX11
  void set_szname(::std::string&& value);
  #endif
  void set_szname(const char* value);
  void set_szname(const char* value, size_t size);
  ::std::string* mutable_szname();
  ::std::string* release_szname();
  void set_allocated_szname(::std::string* szname);

  // string szregulationsinfo = 20;
  void clear_szregulationsinfo();
  static const int kSzregulationsinfoFieldNumber = 20;
  const ::std::string& szregulationsinfo() const;
  void set_szregulationsinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_szregulationsinfo(::std::string&& value);
  #endif
  void set_szregulationsinfo(const char* value);
  void set_szregulationsinfo(const char* value, size_t size);
  ::std::string* mutable_szregulationsinfo();
  ::std::string* release_szregulationsinfo();
  void set_allocated_szregulationsinfo(::std::string* szregulationsinfo);

  // uint64 dwpropertyid = 1;
  void clear_dwpropertyid();
  static const int kDwpropertyidFieldNumber = 1;
  ::google::protobuf::uint64 dwpropertyid() const;
  void set_dwpropertyid(::google::protobuf::uint64 value);

  // uint64 dwpropertykind = 2;
  void clear_dwpropertykind();
  static const int kDwpropertykindFieldNumber = 2;
  ::google::protobuf::uint64 dwpropertykind() const;
  void set_dwpropertykind(::google::protobuf::uint64 value);

  // int32 cbusearea = 3;
  void clear_cbusearea();
  static const int kCbuseareaFieldNumber = 3;
  ::google::protobuf::int32 cbusearea() const;
  void set_cbusearea(::google::protobuf::int32 value);

  // int32 cbservicearea = 4;
  void clear_cbservicearea();
  static const int kCbserviceareaFieldNumber = 4;
  ::google::protobuf::int32 cbservicearea() const;
  void set_cbservicearea(::google::protobuf::int32 value);

  // uint64 dwexchangeratio = 6;
  void clear_dwexchangeratio();
  static const int kDwexchangeratioFieldNumber = 6;
  ::google::protobuf::uint64 dwexchangeratio() const;
  void set_dwexchangeratio(::google::protobuf::uint64 value);

  // uint64 lpropertydiamond = 7;
  void clear_lpropertydiamond();
  static const int kLpropertydiamondFieldNumber = 7;
  ::google::protobuf::uint64 lpropertydiamond() const;
  void set_lpropertydiamond(::google::protobuf::uint64 value);

  // uint64 lpropertygold = 8;
  void clear_lpropertygold();
  static const int kLpropertygoldFieldNumber = 8;
  ::google::protobuf::uint64 lpropertygold() const;
  void set_lpropertygold(::google::protobuf::uint64 value);

  // double dpropertycash = 9;
  void clear_dpropertycash();
  static const int kDpropertycashFieldNumber = 9;
  double dpropertycash() const;
  void set_dpropertycash(double value);

  // uint64 lpropertyusermedal = 10;
  void clear_lpropertyusermedal();
  static const int kLpropertyusermedalFieldNumber = 10;
  ::google::protobuf::uint64 lpropertyusermedal() const;
  void set_lpropertyusermedal(::google::protobuf::uint64 value);

  // uint64 lpropertyloveliness = 11;
  void clear_lpropertyloveliness();
  static const int kLpropertylovelinessFieldNumber = 11;
  ::google::protobuf::uint64 lpropertyloveliness() const;
  void set_lpropertyloveliness(::google::protobuf::uint64 value);

  // uint64 lsendloveliness = 12;
  void clear_lsendloveliness();
  static const int kLsendlovelinessFieldNumber = 12;
  ::google::protobuf::uint64 lsendloveliness() const;
  void set_lsendloveliness(::google::protobuf::uint64 value);

  // uint64 lrecvloveliness = 13;
  void clear_lrecvloveliness();
  static const int kLrecvlovelinessFieldNumber = 13;
  ::google::protobuf::uint64 lrecvloveliness() const;
  void set_lrecvloveliness(::google::protobuf::uint64 value);

  // uint64 luseresultsgold = 14;
  void clear_luseresultsgold();
  static const int kLuseresultsgoldFieldNumber = 14;
  ::google::protobuf::uint64 luseresultsgold() const;
  void set_luseresultsgold(::google::protobuf::uint64 value);

  // uint64 dwuseresultsvalidtime = 15;
  void clear_dwuseresultsvalidtime();
  static const int kDwuseresultsvalidtimeFieldNumber = 15;
  ::google::protobuf::uint64 dwuseresultsvalidtime() const;
  void set_dwuseresultsvalidtime(::google::protobuf::uint64 value);

  // uint64 dwuseresultsvalidtimescoremultiple = 16;
  void clear_dwuseresultsvalidtimescoremultiple();
  static const int kDwuseresultsvalidtimescoremultipleFieldNumber = 16;
  ::google::protobuf::uint64 dwuseresultsvalidtimescoremultiple() const;
  void set_dwuseresultsvalidtimescoremultiple(::google::protobuf::uint64 value);

  // uint64 dwuseresultsgiftpackage = 17;
  void clear_dwuseresultsgiftpackage();
  static const int kDwuseresultsgiftpackageFieldNumber = 17;
  ::google::protobuf::uint64 dwuseresultsgiftpackage() const;
  void set_dwuseresultsgiftpackage(::google::protobuf::uint64 value);

  // uint64 dwsortid = 18;
  void clear_dwsortid();
  static const int kDwsortidFieldNumber = 18;
  ::google::protobuf::uint64 dwsortid() const;
  void set_dwsortid(::google::protobuf::uint64 value);

  // int32 cbrecommend = 5;
  void clear_cbrecommend();
  static const int kCbrecommendFieldNumber = 5;
  ::google::protobuf::int32 cbrecommend() const;
  void set_cbrecommend(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:propertyPmd.tagPropertyItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr szname_;
  ::google::protobuf::internal::ArenaStringPtr szregulationsinfo_;
  ::google::protobuf::uint64 dwpropertyid_;
  ::google::protobuf::uint64 dwpropertykind_;
  ::google::protobuf::int32 cbusearea_;
  ::google::protobuf::int32 cbservicearea_;
  ::google::protobuf::uint64 dwexchangeratio_;
  ::google::protobuf::uint64 lpropertydiamond_;
  ::google::protobuf::uint64 lpropertygold_;
  double dpropertycash_;
  ::google::protobuf::uint64 lpropertyusermedal_;
  ::google::protobuf::uint64 lpropertyloveliness_;
  ::google::protobuf::uint64 lsendloveliness_;
  ::google::protobuf::uint64 lrecvloveliness_;
  ::google::protobuf::uint64 luseresultsgold_;
  ::google::protobuf::uint64 dwuseresultsvalidtime_;
  ::google::protobuf::uint64 dwuseresultsvalidtimescoremultiple_;
  ::google::protobuf::uint64 dwuseresultsgiftpackage_;
  ::google::protobuf::uint64 dwsortid_;
  ::google::protobuf::int32 cbrecommend_;
  mutable int _cached_size_;
  friend struct  protobuf_propertyPmd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagPropertySubItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:propertyPmd.tagPropertySubItem) */ {
 public:
  tagPropertySubItem();
  virtual ~tagPropertySubItem();

  tagPropertySubItem(const tagPropertySubItem& from);

  inline tagPropertySubItem& operator=(const tagPropertySubItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagPropertySubItem& default_instance();

  static inline const tagPropertySubItem* internal_default_instance() {
    return reinterpret_cast<const tagPropertySubItem*>(
               &_tagPropertySubItem_default_instance_);
  }

  void Swap(tagPropertySubItem* other);

  // implements Message ----------------------------------------------

  inline tagPropertySubItem* New() const PROTOBUF_FINAL { return New(NULL); }

  tagPropertySubItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagPropertySubItem& from);
  void MergeFrom(const tagPropertySubItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagPropertySubItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 dwpropertyid = 1;
  void clear_dwpropertyid();
  static const int kDwpropertyidFieldNumber = 1;
  ::google::protobuf::uint64 dwpropertyid() const;
  void set_dwpropertyid(::google::protobuf::uint64 value);

  // uint64 dwownerpropertyid = 2;
  void clear_dwownerpropertyid();
  static const int kDwownerpropertyidFieldNumber = 2;
  ::google::protobuf::uint64 dwownerpropertyid() const;
  void set_dwownerpropertyid(::google::protobuf::uint64 value);

  // uint64 dwpropertycount = 3;
  void clear_dwpropertycount();
  static const int kDwpropertycountFieldNumber = 3;
  ::google::protobuf::uint64 dwpropertycount() const;
  void set_dwpropertycount(::google::protobuf::uint64 value);

  // uint64 dwsortid = 4;
  void clear_dwsortid();
  static const int kDwsortidFieldNumber = 4;
  ::google::protobuf::uint64 dwsortid() const;
  void set_dwsortid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:propertyPmd.tagPropertySubItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 dwpropertyid_;
  ::google::protobuf::uint64 dwownerpropertyid_;
  ::google::protobuf::uint64 dwpropertycount_;
  ::google::protobuf::uint64 dwsortid_;
  mutable int _cached_size_;
  friend struct  protobuf_propertyPmd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagPropertyTypeItem_s2c : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:propertyPmd.tagPropertyTypeItem_s2c) */ {
 public:
  tagPropertyTypeItem_s2c();
  virtual ~tagPropertyTypeItem_s2c();

  tagPropertyTypeItem_s2c(const tagPropertyTypeItem_s2c& from);

  inline tagPropertyTypeItem_s2c& operator=(const tagPropertyTypeItem_s2c& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagPropertyTypeItem_s2c& default_instance();

  static inline const tagPropertyTypeItem_s2c* internal_default_instance() {
    return reinterpret_cast<const tagPropertyTypeItem_s2c*>(
               &_tagPropertyTypeItem_s2c_default_instance_);
  }

  void Swap(tagPropertyTypeItem_s2c* other);

  // implements Message ----------------------------------------------

  inline tagPropertyTypeItem_s2c* New() const PROTOBUF_FINAL { return New(NULL); }

  tagPropertyTypeItem_s2c* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagPropertyTypeItem_s2c& from);
  void MergeFrom(const tagPropertyTypeItem_s2c& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagPropertyTypeItem_s2c* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .propertyPmd.tagPropertyTypeItem tagPropertyTypeItem = 2;
  int tagpropertytypeitem_size() const;
  void clear_tagpropertytypeitem();
  static const int kTagPropertyTypeItemFieldNumber = 2;
  const ::propertyPmd::tagPropertyTypeItem& tagpropertytypeitem(int index) const;
  ::propertyPmd::tagPropertyTypeItem* mutable_tagpropertytypeitem(int index);
  ::propertyPmd::tagPropertyTypeItem* add_tagpropertytypeitem();
  ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyTypeItem >*
      mutable_tagpropertytypeitem();
  const ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyTypeItem >&
      tagpropertytypeitem() const;

  // .NullPmd.response respcmd = 1;
  bool has_respcmd() const;
  void clear_respcmd();
  static const int kRespcmdFieldNumber = 1;
  const ::NullPmd::response& respcmd() const;
  ::NullPmd::response* mutable_respcmd();
  ::NullPmd::response* release_respcmd();
  void set_allocated_respcmd(::NullPmd::response* respcmd);

  // @@protoc_insertion_point(class_scope:propertyPmd.tagPropertyTypeItem_s2c)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyTypeItem > tagpropertytypeitem_;
  ::NullPmd::response* respcmd_;
  mutable int _cached_size_;
  friend struct  protobuf_propertyPmd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagPropertyRelatItem_s2c : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:propertyPmd.tagPropertyRelatItem_s2c) */ {
 public:
  tagPropertyRelatItem_s2c();
  virtual ~tagPropertyRelatItem_s2c();

  tagPropertyRelatItem_s2c(const tagPropertyRelatItem_s2c& from);

  inline tagPropertyRelatItem_s2c& operator=(const tagPropertyRelatItem_s2c& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagPropertyRelatItem_s2c& default_instance();

  static inline const tagPropertyRelatItem_s2c* internal_default_instance() {
    return reinterpret_cast<const tagPropertyRelatItem_s2c*>(
               &_tagPropertyRelatItem_s2c_default_instance_);
  }

  void Swap(tagPropertyRelatItem_s2c* other);

  // implements Message ----------------------------------------------

  inline tagPropertyRelatItem_s2c* New() const PROTOBUF_FINAL { return New(NULL); }

  tagPropertyRelatItem_s2c* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagPropertyRelatItem_s2c& from);
  void MergeFrom(const tagPropertyRelatItem_s2c& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagPropertyRelatItem_s2c* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .propertyPmd.tagPropertyRelatItem tagPropertyRelatItem = 2;
  int tagpropertyrelatitem_size() const;
  void clear_tagpropertyrelatitem();
  static const int kTagPropertyRelatItemFieldNumber = 2;
  const ::propertyPmd::tagPropertyRelatItem& tagpropertyrelatitem(int index) const;
  ::propertyPmd::tagPropertyRelatItem* mutable_tagpropertyrelatitem(int index);
  ::propertyPmd::tagPropertyRelatItem* add_tagpropertyrelatitem();
  ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyRelatItem >*
      mutable_tagpropertyrelatitem();
  const ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyRelatItem >&
      tagpropertyrelatitem() const;

  // .NullPmd.response respcmd = 1;
  bool has_respcmd() const;
  void clear_respcmd();
  static const int kRespcmdFieldNumber = 1;
  const ::NullPmd::response& respcmd() const;
  ::NullPmd::response* mutable_respcmd();
  ::NullPmd::response* release_respcmd();
  void set_allocated_respcmd(::NullPmd::response* respcmd);

  // @@protoc_insertion_point(class_scope:propertyPmd.tagPropertyRelatItem_s2c)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyRelatItem > tagpropertyrelatitem_;
  ::NullPmd::response* respcmd_;
  mutable int _cached_size_;
  friend struct  protobuf_propertyPmd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagPropertyItem_s2c : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:propertyPmd.tagPropertyItem_s2c) */ {
 public:
  tagPropertyItem_s2c();
  virtual ~tagPropertyItem_s2c();

  tagPropertyItem_s2c(const tagPropertyItem_s2c& from);

  inline tagPropertyItem_s2c& operator=(const tagPropertyItem_s2c& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagPropertyItem_s2c& default_instance();

  static inline const tagPropertyItem_s2c* internal_default_instance() {
    return reinterpret_cast<const tagPropertyItem_s2c*>(
               &_tagPropertyItem_s2c_default_instance_);
  }

  void Swap(tagPropertyItem_s2c* other);

  // implements Message ----------------------------------------------

  inline tagPropertyItem_s2c* New() const PROTOBUF_FINAL { return New(NULL); }

  tagPropertyItem_s2c* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagPropertyItem_s2c& from);
  void MergeFrom(const tagPropertyItem_s2c& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagPropertyItem_s2c* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .propertyPmd.tagPropertyItem tagPropertyItem = 2;
  int tagpropertyitem_size() const;
  void clear_tagpropertyitem();
  static const int kTagPropertyItemFieldNumber = 2;
  const ::propertyPmd::tagPropertyItem& tagpropertyitem(int index) const;
  ::propertyPmd::tagPropertyItem* mutable_tagpropertyitem(int index);
  ::propertyPmd::tagPropertyItem* add_tagpropertyitem();
  ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyItem >*
      mutable_tagpropertyitem();
  const ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyItem >&
      tagpropertyitem() const;

  // .NullPmd.response respcmd = 1;
  bool has_respcmd() const;
  void clear_respcmd();
  static const int kRespcmdFieldNumber = 1;
  const ::NullPmd::response& respcmd() const;
  ::NullPmd::response* mutable_respcmd();
  ::NullPmd::response* release_respcmd();
  void set_allocated_respcmd(::NullPmd::response* respcmd);

  // @@protoc_insertion_point(class_scope:propertyPmd.tagPropertyItem_s2c)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyItem > tagpropertyitem_;
  ::NullPmd::response* respcmd_;
  mutable int _cached_size_;
  friend struct  protobuf_propertyPmd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagPropertySubItem_s2c : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:propertyPmd.tagPropertySubItem_s2c) */ {
 public:
  tagPropertySubItem_s2c();
  virtual ~tagPropertySubItem_s2c();

  tagPropertySubItem_s2c(const tagPropertySubItem_s2c& from);

  inline tagPropertySubItem_s2c& operator=(const tagPropertySubItem_s2c& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagPropertySubItem_s2c& default_instance();

  static inline const tagPropertySubItem_s2c* internal_default_instance() {
    return reinterpret_cast<const tagPropertySubItem_s2c*>(
               &_tagPropertySubItem_s2c_default_instance_);
  }

  void Swap(tagPropertySubItem_s2c* other);

  // implements Message ----------------------------------------------

  inline tagPropertySubItem_s2c* New() const PROTOBUF_FINAL { return New(NULL); }

  tagPropertySubItem_s2c* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagPropertySubItem_s2c& from);
  void MergeFrom(const tagPropertySubItem_s2c& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagPropertySubItem_s2c* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .propertyPmd.tagPropertySubItem tagPropertySubItem = 2;
  int tagpropertysubitem_size() const;
  void clear_tagpropertysubitem();
  static const int kTagPropertySubItemFieldNumber = 2;
  const ::propertyPmd::tagPropertySubItem& tagpropertysubitem(int index) const;
  ::propertyPmd::tagPropertySubItem* mutable_tagpropertysubitem(int index);
  ::propertyPmd::tagPropertySubItem* add_tagpropertysubitem();
  ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertySubItem >*
      mutable_tagpropertysubitem();
  const ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertySubItem >&
      tagpropertysubitem() const;

  // .NullPmd.response respcmd = 1;
  bool has_respcmd() const;
  void clear_respcmd();
  static const int kRespcmdFieldNumber = 1;
  const ::NullPmd::response& respcmd() const;
  ::NullPmd::response* mutable_respcmd();
  ::NullPmd::response* release_respcmd();
  void set_allocated_respcmd(::NullPmd::response* respcmd);

  // @@protoc_insertion_point(class_scope:propertyPmd.tagPropertySubItem_s2c)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertySubItem > tagpropertysubitem_;
  ::NullPmd::response* respcmd_;
  mutable int _cached_size_;
  friend struct  protobuf_propertyPmd_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// tagPropertyTypeItem

// uint64 dwtypeid = 1;
inline void tagPropertyTypeItem::clear_dwtypeid() {
  dwtypeid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyTypeItem::dwtypeid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyTypeItem.dwtypeid)
  return dwtypeid_;
}
inline void tagPropertyTypeItem::set_dwtypeid(::google::protobuf::uint64 value) {
  
  dwtypeid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyTypeItem.dwtypeid)
}

// uint64 dwsortid = 2;
inline void tagPropertyTypeItem::clear_dwsortid() {
  dwsortid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyTypeItem::dwsortid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyTypeItem.dwsortid)
  return dwsortid_;
}
inline void tagPropertyTypeItem::set_dwsortid(::google::protobuf::uint64 value) {
  
  dwsortid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyTypeItem.dwsortid)
}

// string sztypename = 3;
inline void tagPropertyTypeItem::clear_sztypename() {
  sztypename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tagPropertyTypeItem::sztypename() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyTypeItem.sztypename)
  return sztypename_.GetNoArena();
}
inline void tagPropertyTypeItem::set_sztypename(const ::std::string& value) {
  
  sztypename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyTypeItem.sztypename)
}
#if LANG_CXX11
inline void tagPropertyTypeItem::set_sztypename(::std::string&& value) {
  
  sztypename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:propertyPmd.tagPropertyTypeItem.sztypename)
}
#endif
inline void tagPropertyTypeItem::set_sztypename(const char* value) {
  
  sztypename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:propertyPmd.tagPropertyTypeItem.sztypename)
}
inline void tagPropertyTypeItem::set_sztypename(const char* value, size_t size) {
  
  sztypename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:propertyPmd.tagPropertyTypeItem.sztypename)
}
inline ::std::string* tagPropertyTypeItem::mutable_sztypename() {
  
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyTypeItem.sztypename)
  return sztypename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tagPropertyTypeItem::release_sztypename() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertyTypeItem.sztypename)
  
  return sztypename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tagPropertyTypeItem::set_allocated_sztypename(::std::string* sztypename) {
  if (sztypename != NULL) {
    
  } else {
    
  }
  sztypename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sztypename);
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertyTypeItem.sztypename)
}

// -------------------------------------------------------------------

// tagPropertyRelatItem

// .NullPmd.response respcmd = 1;
inline bool tagPropertyRelatItem::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
inline void tagPropertyRelatItem::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
inline const ::NullPmd::response& tagPropertyRelatItem::respcmd() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyRelatItem.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
inline ::NullPmd::response* tagPropertyRelatItem::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyRelatItem.respcmd)
  return respcmd_;
}
inline ::NullPmd::response* tagPropertyRelatItem::release_respcmd() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertyRelatItem.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
inline void tagPropertyRelatItem::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertyRelatItem.respcmd)
}

// uint64 dwpropertyid = 2;
inline void tagPropertyRelatItem::clear_dwpropertyid() {
  dwpropertyid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyRelatItem::dwpropertyid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyRelatItem.dwpropertyid)
  return dwpropertyid_;
}
inline void tagPropertyRelatItem::set_dwpropertyid(::google::protobuf::uint64 value) {
  
  dwpropertyid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyRelatItem.dwpropertyid)
}

// uint64 dwtypeid = 3;
inline void tagPropertyRelatItem::clear_dwtypeid() {
  dwtypeid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyRelatItem::dwtypeid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyRelatItem.dwtypeid)
  return dwtypeid_;
}
inline void tagPropertyRelatItem::set_dwtypeid(::google::protobuf::uint64 value) {
  
  dwtypeid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyRelatItem.dwtypeid)
}

// -------------------------------------------------------------------

// tagPropertyItem

// uint64 dwpropertyid = 1;
inline void tagPropertyItem::clear_dwpropertyid() {
  dwpropertyid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyItem::dwpropertyid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dwpropertyid)
  return dwpropertyid_;
}
inline void tagPropertyItem::set_dwpropertyid(::google::protobuf::uint64 value) {
  
  dwpropertyid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dwpropertyid)
}

// uint64 dwpropertykind = 2;
inline void tagPropertyItem::clear_dwpropertykind() {
  dwpropertykind_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyItem::dwpropertykind() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dwpropertykind)
  return dwpropertykind_;
}
inline void tagPropertyItem::set_dwpropertykind(::google::protobuf::uint64 value) {
  
  dwpropertykind_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dwpropertykind)
}

// int32 cbusearea = 3;
inline void tagPropertyItem::clear_cbusearea() {
  cbusearea_ = 0;
}
inline ::google::protobuf::int32 tagPropertyItem::cbusearea() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.cbusearea)
  return cbusearea_;
}
inline void tagPropertyItem::set_cbusearea(::google::protobuf::int32 value) {
  
  cbusearea_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.cbusearea)
}

// int32 cbservicearea = 4;
inline void tagPropertyItem::clear_cbservicearea() {
  cbservicearea_ = 0;
}
inline ::google::protobuf::int32 tagPropertyItem::cbservicearea() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.cbservicearea)
  return cbservicearea_;
}
inline void tagPropertyItem::set_cbservicearea(::google::protobuf::int32 value) {
  
  cbservicearea_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.cbservicearea)
}

// int32 cbrecommend = 5;
inline void tagPropertyItem::clear_cbrecommend() {
  cbrecommend_ = 0;
}
inline ::google::protobuf::int32 tagPropertyItem::cbrecommend() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.cbrecommend)
  return cbrecommend_;
}
inline void tagPropertyItem::set_cbrecommend(::google::protobuf::int32 value) {
  
  cbrecommend_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.cbrecommend)
}

// uint64 dwexchangeratio = 6;
inline void tagPropertyItem::clear_dwexchangeratio() {
  dwexchangeratio_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyItem::dwexchangeratio() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dwexchangeratio)
  return dwexchangeratio_;
}
inline void tagPropertyItem::set_dwexchangeratio(::google::protobuf::uint64 value) {
  
  dwexchangeratio_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dwexchangeratio)
}

// uint64 lpropertydiamond = 7;
inline void tagPropertyItem::clear_lpropertydiamond() {
  lpropertydiamond_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyItem::lpropertydiamond() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.lpropertydiamond)
  return lpropertydiamond_;
}
inline void tagPropertyItem::set_lpropertydiamond(::google::protobuf::uint64 value) {
  
  lpropertydiamond_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.lpropertydiamond)
}

// uint64 lpropertygold = 8;
inline void tagPropertyItem::clear_lpropertygold() {
  lpropertygold_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyItem::lpropertygold() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.lpropertygold)
  return lpropertygold_;
}
inline void tagPropertyItem::set_lpropertygold(::google::protobuf::uint64 value) {
  
  lpropertygold_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.lpropertygold)
}

// double dpropertycash = 9;
inline void tagPropertyItem::clear_dpropertycash() {
  dpropertycash_ = 0;
}
inline double tagPropertyItem::dpropertycash() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dpropertycash)
  return dpropertycash_;
}
inline void tagPropertyItem::set_dpropertycash(double value) {
  
  dpropertycash_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dpropertycash)
}

// uint64 lpropertyusermedal = 10;
inline void tagPropertyItem::clear_lpropertyusermedal() {
  lpropertyusermedal_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyItem::lpropertyusermedal() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.lpropertyusermedal)
  return lpropertyusermedal_;
}
inline void tagPropertyItem::set_lpropertyusermedal(::google::protobuf::uint64 value) {
  
  lpropertyusermedal_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.lpropertyusermedal)
}

// uint64 lpropertyloveliness = 11;
inline void tagPropertyItem::clear_lpropertyloveliness() {
  lpropertyloveliness_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyItem::lpropertyloveliness() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.lpropertyloveliness)
  return lpropertyloveliness_;
}
inline void tagPropertyItem::set_lpropertyloveliness(::google::protobuf::uint64 value) {
  
  lpropertyloveliness_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.lpropertyloveliness)
}

// uint64 lsendloveliness = 12;
inline void tagPropertyItem::clear_lsendloveliness() {
  lsendloveliness_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyItem::lsendloveliness() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.lsendloveliness)
  return lsendloveliness_;
}
inline void tagPropertyItem::set_lsendloveliness(::google::protobuf::uint64 value) {
  
  lsendloveliness_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.lsendloveliness)
}

// uint64 lrecvloveliness = 13;
inline void tagPropertyItem::clear_lrecvloveliness() {
  lrecvloveliness_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyItem::lrecvloveliness() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.lrecvloveliness)
  return lrecvloveliness_;
}
inline void tagPropertyItem::set_lrecvloveliness(::google::protobuf::uint64 value) {
  
  lrecvloveliness_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.lrecvloveliness)
}

// uint64 luseresultsgold = 14;
inline void tagPropertyItem::clear_luseresultsgold() {
  luseresultsgold_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyItem::luseresultsgold() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.luseresultsgold)
  return luseresultsgold_;
}
inline void tagPropertyItem::set_luseresultsgold(::google::protobuf::uint64 value) {
  
  luseresultsgold_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.luseresultsgold)
}

// uint64 dwuseresultsvalidtime = 15;
inline void tagPropertyItem::clear_dwuseresultsvalidtime() {
  dwuseresultsvalidtime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyItem::dwuseresultsvalidtime() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dwuseresultsvalidtime)
  return dwuseresultsvalidtime_;
}
inline void tagPropertyItem::set_dwuseresultsvalidtime(::google::protobuf::uint64 value) {
  
  dwuseresultsvalidtime_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dwuseresultsvalidtime)
}

// uint64 dwuseresultsvalidtimescoremultiple = 16;
inline void tagPropertyItem::clear_dwuseresultsvalidtimescoremultiple() {
  dwuseresultsvalidtimescoremultiple_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyItem::dwuseresultsvalidtimescoremultiple() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dwuseresultsvalidtimescoremultiple)
  return dwuseresultsvalidtimescoremultiple_;
}
inline void tagPropertyItem::set_dwuseresultsvalidtimescoremultiple(::google::protobuf::uint64 value) {
  
  dwuseresultsvalidtimescoremultiple_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dwuseresultsvalidtimescoremultiple)
}

// uint64 dwuseresultsgiftpackage = 17;
inline void tagPropertyItem::clear_dwuseresultsgiftpackage() {
  dwuseresultsgiftpackage_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyItem::dwuseresultsgiftpackage() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dwuseresultsgiftpackage)
  return dwuseresultsgiftpackage_;
}
inline void tagPropertyItem::set_dwuseresultsgiftpackage(::google::protobuf::uint64 value) {
  
  dwuseresultsgiftpackage_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dwuseresultsgiftpackage)
}

// uint64 dwsortid = 18;
inline void tagPropertyItem::clear_dwsortid() {
  dwsortid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertyItem::dwsortid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dwsortid)
  return dwsortid_;
}
inline void tagPropertyItem::set_dwsortid(::google::protobuf::uint64 value) {
  
  dwsortid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dwsortid)
}

// string szname = 19;
inline void tagPropertyItem::clear_szname() {
  szname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tagPropertyItem::szname() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.szname)
  return szname_.GetNoArena();
}
inline void tagPropertyItem::set_szname(const ::std::string& value) {
  
  szname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.szname)
}
#if LANG_CXX11
inline void tagPropertyItem::set_szname(::std::string&& value) {
  
  szname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:propertyPmd.tagPropertyItem.szname)
}
#endif
inline void tagPropertyItem::set_szname(const char* value) {
  
  szname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:propertyPmd.tagPropertyItem.szname)
}
inline void tagPropertyItem::set_szname(const char* value, size_t size) {
  
  szname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:propertyPmd.tagPropertyItem.szname)
}
inline ::std::string* tagPropertyItem::mutable_szname() {
  
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyItem.szname)
  return szname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tagPropertyItem::release_szname() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertyItem.szname)
  
  return szname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tagPropertyItem::set_allocated_szname(::std::string* szname) {
  if (szname != NULL) {
    
  } else {
    
  }
  szname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szname);
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertyItem.szname)
}

// string szregulationsinfo = 20;
inline void tagPropertyItem::clear_szregulationsinfo() {
  szregulationsinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tagPropertyItem::szregulationsinfo() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.szregulationsinfo)
  return szregulationsinfo_.GetNoArena();
}
inline void tagPropertyItem::set_szregulationsinfo(const ::std::string& value) {
  
  szregulationsinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.szregulationsinfo)
}
#if LANG_CXX11
inline void tagPropertyItem::set_szregulationsinfo(::std::string&& value) {
  
  szregulationsinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:propertyPmd.tagPropertyItem.szregulationsinfo)
}
#endif
inline void tagPropertyItem::set_szregulationsinfo(const char* value) {
  
  szregulationsinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:propertyPmd.tagPropertyItem.szregulationsinfo)
}
inline void tagPropertyItem::set_szregulationsinfo(const char* value, size_t size) {
  
  szregulationsinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:propertyPmd.tagPropertyItem.szregulationsinfo)
}
inline ::std::string* tagPropertyItem::mutable_szregulationsinfo() {
  
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyItem.szregulationsinfo)
  return szregulationsinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tagPropertyItem::release_szregulationsinfo() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertyItem.szregulationsinfo)
  
  return szregulationsinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tagPropertyItem::set_allocated_szregulationsinfo(::std::string* szregulationsinfo) {
  if (szregulationsinfo != NULL) {
    
  } else {
    
  }
  szregulationsinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szregulationsinfo);
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertyItem.szregulationsinfo)
}

// -------------------------------------------------------------------

// tagPropertySubItem

// uint64 dwpropertyid = 1;
inline void tagPropertySubItem::clear_dwpropertyid() {
  dwpropertyid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertySubItem::dwpropertyid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertySubItem.dwpropertyid)
  return dwpropertyid_;
}
inline void tagPropertySubItem::set_dwpropertyid(::google::protobuf::uint64 value) {
  
  dwpropertyid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertySubItem.dwpropertyid)
}

// uint64 dwownerpropertyid = 2;
inline void tagPropertySubItem::clear_dwownerpropertyid() {
  dwownerpropertyid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertySubItem::dwownerpropertyid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertySubItem.dwownerpropertyid)
  return dwownerpropertyid_;
}
inline void tagPropertySubItem::set_dwownerpropertyid(::google::protobuf::uint64 value) {
  
  dwownerpropertyid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertySubItem.dwownerpropertyid)
}

// uint64 dwpropertycount = 3;
inline void tagPropertySubItem::clear_dwpropertycount() {
  dwpropertycount_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertySubItem::dwpropertycount() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertySubItem.dwpropertycount)
  return dwpropertycount_;
}
inline void tagPropertySubItem::set_dwpropertycount(::google::protobuf::uint64 value) {
  
  dwpropertycount_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertySubItem.dwpropertycount)
}

// uint64 dwsortid = 4;
inline void tagPropertySubItem::clear_dwsortid() {
  dwsortid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagPropertySubItem::dwsortid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertySubItem.dwsortid)
  return dwsortid_;
}
inline void tagPropertySubItem::set_dwsortid(::google::protobuf::uint64 value) {
  
  dwsortid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertySubItem.dwsortid)
}

// -------------------------------------------------------------------

// tagPropertyTypeItem_s2c

// .NullPmd.response respcmd = 1;
inline bool tagPropertyTypeItem_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
inline void tagPropertyTypeItem_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
inline const ::NullPmd::response& tagPropertyTypeItem_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyTypeItem_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
inline ::NullPmd::response* tagPropertyTypeItem_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyTypeItem_s2c.respcmd)
  return respcmd_;
}
inline ::NullPmd::response* tagPropertyTypeItem_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertyTypeItem_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
inline void tagPropertyTypeItem_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertyTypeItem_s2c.respcmd)
}

// repeated .propertyPmd.tagPropertyTypeItem tagPropertyTypeItem = 2;
inline int tagPropertyTypeItem_s2c::tagpropertytypeitem_size() const {
  return tagpropertytypeitem_.size();
}
inline void tagPropertyTypeItem_s2c::clear_tagpropertytypeitem() {
  tagpropertytypeitem_.Clear();
}
inline const ::propertyPmd::tagPropertyTypeItem& tagPropertyTypeItem_s2c::tagpropertytypeitem(int index) const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyTypeItem_s2c.tagPropertyTypeItem)
  return tagpropertytypeitem_.Get(index);
}
inline ::propertyPmd::tagPropertyTypeItem* tagPropertyTypeItem_s2c::mutable_tagpropertytypeitem(int index) {
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyTypeItem_s2c.tagPropertyTypeItem)
  return tagpropertytypeitem_.Mutable(index);
}
inline ::propertyPmd::tagPropertyTypeItem* tagPropertyTypeItem_s2c::add_tagpropertytypeitem() {
  // @@protoc_insertion_point(field_add:propertyPmd.tagPropertyTypeItem_s2c.tagPropertyTypeItem)
  return tagpropertytypeitem_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyTypeItem >*
tagPropertyTypeItem_s2c::mutable_tagpropertytypeitem() {
  // @@protoc_insertion_point(field_mutable_list:propertyPmd.tagPropertyTypeItem_s2c.tagPropertyTypeItem)
  return &tagpropertytypeitem_;
}
inline const ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyTypeItem >&
tagPropertyTypeItem_s2c::tagpropertytypeitem() const {
  // @@protoc_insertion_point(field_list:propertyPmd.tagPropertyTypeItem_s2c.tagPropertyTypeItem)
  return tagpropertytypeitem_;
}

// -------------------------------------------------------------------

// tagPropertyRelatItem_s2c

// .NullPmd.response respcmd = 1;
inline bool tagPropertyRelatItem_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
inline void tagPropertyRelatItem_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
inline const ::NullPmd::response& tagPropertyRelatItem_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyRelatItem_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
inline ::NullPmd::response* tagPropertyRelatItem_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyRelatItem_s2c.respcmd)
  return respcmd_;
}
inline ::NullPmd::response* tagPropertyRelatItem_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertyRelatItem_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
inline void tagPropertyRelatItem_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertyRelatItem_s2c.respcmd)
}

// repeated .propertyPmd.tagPropertyRelatItem tagPropertyRelatItem = 2;
inline int tagPropertyRelatItem_s2c::tagpropertyrelatitem_size() const {
  return tagpropertyrelatitem_.size();
}
inline void tagPropertyRelatItem_s2c::clear_tagpropertyrelatitem() {
  tagpropertyrelatitem_.Clear();
}
inline const ::propertyPmd::tagPropertyRelatItem& tagPropertyRelatItem_s2c::tagpropertyrelatitem(int index) const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyRelatItem_s2c.tagPropertyRelatItem)
  return tagpropertyrelatitem_.Get(index);
}
inline ::propertyPmd::tagPropertyRelatItem* tagPropertyRelatItem_s2c::mutable_tagpropertyrelatitem(int index) {
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyRelatItem_s2c.tagPropertyRelatItem)
  return tagpropertyrelatitem_.Mutable(index);
}
inline ::propertyPmd::tagPropertyRelatItem* tagPropertyRelatItem_s2c::add_tagpropertyrelatitem() {
  // @@protoc_insertion_point(field_add:propertyPmd.tagPropertyRelatItem_s2c.tagPropertyRelatItem)
  return tagpropertyrelatitem_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyRelatItem >*
tagPropertyRelatItem_s2c::mutable_tagpropertyrelatitem() {
  // @@protoc_insertion_point(field_mutable_list:propertyPmd.tagPropertyRelatItem_s2c.tagPropertyRelatItem)
  return &tagpropertyrelatitem_;
}
inline const ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyRelatItem >&
tagPropertyRelatItem_s2c::tagpropertyrelatitem() const {
  // @@protoc_insertion_point(field_list:propertyPmd.tagPropertyRelatItem_s2c.tagPropertyRelatItem)
  return tagpropertyrelatitem_;
}

// -------------------------------------------------------------------

// tagPropertyItem_s2c

// .NullPmd.response respcmd = 1;
inline bool tagPropertyItem_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
inline void tagPropertyItem_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
inline const ::NullPmd::response& tagPropertyItem_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
inline ::NullPmd::response* tagPropertyItem_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyItem_s2c.respcmd)
  return respcmd_;
}
inline ::NullPmd::response* tagPropertyItem_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertyItem_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
inline void tagPropertyItem_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertyItem_s2c.respcmd)
}

// repeated .propertyPmd.tagPropertyItem tagPropertyItem = 2;
inline int tagPropertyItem_s2c::tagpropertyitem_size() const {
  return tagpropertyitem_.size();
}
inline void tagPropertyItem_s2c::clear_tagpropertyitem() {
  tagpropertyitem_.Clear();
}
inline const ::propertyPmd::tagPropertyItem& tagPropertyItem_s2c::tagpropertyitem(int index) const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem_s2c.tagPropertyItem)
  return tagpropertyitem_.Get(index);
}
inline ::propertyPmd::tagPropertyItem* tagPropertyItem_s2c::mutable_tagpropertyitem(int index) {
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyItem_s2c.tagPropertyItem)
  return tagpropertyitem_.Mutable(index);
}
inline ::propertyPmd::tagPropertyItem* tagPropertyItem_s2c::add_tagpropertyitem() {
  // @@protoc_insertion_point(field_add:propertyPmd.tagPropertyItem_s2c.tagPropertyItem)
  return tagpropertyitem_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyItem >*
tagPropertyItem_s2c::mutable_tagpropertyitem() {
  // @@protoc_insertion_point(field_mutable_list:propertyPmd.tagPropertyItem_s2c.tagPropertyItem)
  return &tagpropertyitem_;
}
inline const ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyItem >&
tagPropertyItem_s2c::tagpropertyitem() const {
  // @@protoc_insertion_point(field_list:propertyPmd.tagPropertyItem_s2c.tagPropertyItem)
  return tagpropertyitem_;
}

// -------------------------------------------------------------------

// tagPropertySubItem_s2c

// .NullPmd.response respcmd = 1;
inline bool tagPropertySubItem_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
inline void tagPropertySubItem_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
inline const ::NullPmd::response& tagPropertySubItem_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertySubItem_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
inline ::NullPmd::response* tagPropertySubItem_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertySubItem_s2c.respcmd)
  return respcmd_;
}
inline ::NullPmd::response* tagPropertySubItem_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertySubItem_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
inline void tagPropertySubItem_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertySubItem_s2c.respcmd)
}

// repeated .propertyPmd.tagPropertySubItem tagPropertySubItem = 2;
inline int tagPropertySubItem_s2c::tagpropertysubitem_size() const {
  return tagpropertysubitem_.size();
}
inline void tagPropertySubItem_s2c::clear_tagpropertysubitem() {
  tagpropertysubitem_.Clear();
}
inline const ::propertyPmd::tagPropertySubItem& tagPropertySubItem_s2c::tagpropertysubitem(int index) const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertySubItem_s2c.tagPropertySubItem)
  return tagpropertysubitem_.Get(index);
}
inline ::propertyPmd::tagPropertySubItem* tagPropertySubItem_s2c::mutable_tagpropertysubitem(int index) {
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertySubItem_s2c.tagPropertySubItem)
  return tagpropertysubitem_.Mutable(index);
}
inline ::propertyPmd::tagPropertySubItem* tagPropertySubItem_s2c::add_tagpropertysubitem() {
  // @@protoc_insertion_point(field_add:propertyPmd.tagPropertySubItem_s2c.tagPropertySubItem)
  return tagpropertysubitem_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertySubItem >*
tagPropertySubItem_s2c::mutable_tagpropertysubitem() {
  // @@protoc_insertion_point(field_mutable_list:propertyPmd.tagPropertySubItem_s2c.tagPropertySubItem)
  return &tagpropertysubitem_;
}
inline const ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertySubItem >&
tagPropertySubItem_s2c::tagpropertysubitem() const {
  // @@protoc_insertion_point(field_list:propertyPmd.tagPropertySubItem_s2c.tagPropertySubItem)
  return tagpropertysubitem_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace propertyPmd

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_propertyPmd_2eproto__INCLUDED
