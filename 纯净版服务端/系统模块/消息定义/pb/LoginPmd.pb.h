// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LoginPmd.proto

#ifndef PROTOBUF_LoginPmd_2eproto__INCLUDED
#define PROTOBUF_LoginPmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "NullPmd.pb.h"
#include "CommonPmd.pb.h"
// @@protoc_insertion_point(includes)
namespace CommonPmd {
class SYSTEMTIME;
class SYSTEMTIMEDefaultTypeInternal;
extern SYSTEMTIMEDefaultTypeInternal _SYSTEMTIME_default_instance_;
class consumptionType;
class consumptionTypeDefaultTypeInternal;
extern consumptionTypeDefaultTypeInternal _consumptionType_default_instance_;
class personinfo;
class personinfoDefaultTypeInternal;
extern personinfoDefaultTypeInternal _personinfo_default_instance_;
}  // namespace CommonPmd
namespace LoginPmd {
class loginbyaccounts_c2s;
class loginbyaccounts_c2sDefaultTypeInternal;
extern loginbyaccounts_c2sDefaultTypeInternal _loginbyaccounts_c2s_default_instance_;
class loginbyid_c2s;
class loginbyid_c2sDefaultTypeInternal;
extern loginbyid_c2sDefaultTypeInternal _loginbyid_c2s_default_instance_;
class loginbyvisitor_c2s;
class loginbyvisitor_c2sDefaultTypeInternal;
extern loginbyvisitor_c2sDefaultTypeInternal _loginbyvisitor_c2s_default_instance_;
class loginfailure_s2c;
class loginfailure_s2cDefaultTypeInternal;
extern loginfailure_s2cDefaultTypeInternal _loginfailure_s2c_default_instance_;
class loginfinish_s2c;
class loginfinish_s2cDefaultTypeInternal;
extern loginfinish_s2cDefaultTypeInternal _loginfinish_s2c_default_instance_;
class loginsuccess_s2c;
class loginsuccess_s2cDefaultTypeInternal;
extern loginsuccess_s2cDefaultTypeInternal _loginsuccess_s2c_default_instance_;
class logonOtherPlatform_c2s;
class logonOtherPlatform_c2sDefaultTypeInternal;
extern logonOtherPlatform_c2sDefaultTypeInternal _logonOtherPlatform_c2s_default_instance_;
}  // namespace LoginPmd
namespace NullPmd {
class command;
class commandDefaultTypeInternal;
extern commandDefaultTypeInternal _command_default_instance_;
class head;
class headDefaultTypeInternal;
extern headDefaultTypeInternal _head_default_instance_;
class indication;
class indicationDefaultTypeInternal;
extern indicationDefaultTypeInternal _indication_default_instance_;
class info;
class infoDefaultTypeInternal;
extern infoDefaultTypeInternal _info_default_instance_;
class message;
class messageDefaultTypeInternal;
extern messageDefaultTypeInternal _message_default_instance_;
class request;
class requestDefaultTypeInternal;
extern requestDefaultTypeInternal _request_default_instance_;
class response;
class responseDefaultTypeInternal;
extern responseDefaultTypeInternal _response_default_instance_;
}  // namespace NullPmd

namespace LoginPmd {

namespace protobuf_LoginPmd_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_LoginPmd_2eproto

// ===================================================================

class loginbyid_c2s : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginPmd.loginbyid_c2s) */ {
 public:
  loginbyid_c2s();
  virtual ~loginbyid_c2s();

  loginbyid_c2s(const loginbyid_c2s& from);

  inline loginbyid_c2s& operator=(const loginbyid_c2s& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const loginbyid_c2s& default_instance();

  static inline const loginbyid_c2s* internal_default_instance() {
    return reinterpret_cast<const loginbyid_c2s*>(
               &_loginbyid_c2s_default_instance_);
  }

  void Swap(loginbyid_c2s* other);

  // implements Message ----------------------------------------------

  inline loginbyid_c2s* New() const PROTOBUF_FINAL { return New(NULL); }

  loginbyid_c2s* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const loginbyid_c2s& from);
  void MergeFrom(const loginbyid_c2s& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(loginbyid_c2s* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string szmachineid = 3;
  void clear_szmachineid();
  static const int kSzmachineidFieldNumber = 3;
  const ::std::string& szmachineid() const;
  void set_szmachineid(const ::std::string& value);
  #if LANG_CXX11
  void set_szmachineid(::std::string&& value);
  #endif
  void set_szmachineid(const char* value);
  void set_szmachineid(const char* value, size_t size);
  ::std::string* mutable_szmachineid();
  ::std::string* release_szmachineid();
  void set_allocated_szmachineid(::std::string* szmachineid);

  // string szpassword = 5;
  void clear_szpassword();
  static const int kSzpasswordFieldNumber = 5;
  const ::std::string& szpassword() const;
  void set_szpassword(const ::std::string& value);
  #if LANG_CXX11
  void set_szpassword(::std::string&& value);
  #endif
  void set_szpassword(const char* value);
  void set_szpassword(const char* value, size_t size);
  ::std::string* mutable_szpassword();
  ::std::string* release_szpassword();
  void set_allocated_szpassword(::std::string* szpassword);

  // .NullPmd.request reqcmd = 1;
  bool has_reqcmd() const;
  void clear_reqcmd();
  static const int kReqcmdFieldNumber = 1;
  const ::NullPmd::request& reqcmd() const;
  ::NullPmd::request* mutable_reqcmd();
  ::NullPmd::request* release_reqcmd();
  void set_allocated_reqcmd(::NullPmd::request* reqcmd);

  // uint64 dwplazaversion = 2;
  void clear_dwplazaversion();
  static const int kDwplazaversionFieldNumber = 2;
  ::google::protobuf::uint64 dwplazaversion() const;
  void set_dwplazaversion(::google::protobuf::uint64 value);

  // uint64 dwgameid = 4;
  void clear_dwgameid();
  static const int kDwgameidFieldNumber = 4;
  ::google::protobuf::uint64 dwgameid() const;
  void set_dwgameid(::google::protobuf::uint64 value);

  // int32 cbvalidateflags = 6;
  void clear_cbvalidateflags();
  static const int kCbvalidateflagsFieldNumber = 6;
  ::google::protobuf::int32 cbvalidateflags() const;
  void set_cbvalidateflags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginPmd.loginbyid_c2s)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr szmachineid_;
  ::google::protobuf::internal::ArenaStringPtr szpassword_;
  ::NullPmd::request* reqcmd_;
  ::google::protobuf::uint64 dwplazaversion_;
  ::google::protobuf::uint64 dwgameid_;
  ::google::protobuf::int32 cbvalidateflags_;
  mutable int _cached_size_;
  friend struct  protobuf_LoginPmd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class loginbyaccounts_c2s : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginPmd.loginbyaccounts_c2s) */ {
 public:
  loginbyaccounts_c2s();
  virtual ~loginbyaccounts_c2s();

  loginbyaccounts_c2s(const loginbyaccounts_c2s& from);

  inline loginbyaccounts_c2s& operator=(const loginbyaccounts_c2s& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const loginbyaccounts_c2s& default_instance();

  static inline const loginbyaccounts_c2s* internal_default_instance() {
    return reinterpret_cast<const loginbyaccounts_c2s*>(
               &_loginbyaccounts_c2s_default_instance_);
  }

  void Swap(loginbyaccounts_c2s* other);

  // implements Message ----------------------------------------------

  inline loginbyaccounts_c2s* New() const PROTOBUF_FINAL { return New(NULL); }

  loginbyaccounts_c2s* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const loginbyaccounts_c2s& from);
  void MergeFrom(const loginbyaccounts_c2s& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(loginbyaccounts_c2s* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string szmachineid = 3;
  void clear_szmachineid();
  static const int kSzmachineidFieldNumber = 3;
  const ::std::string& szmachineid() const;
  void set_szmachineid(const ::std::string& value);
  #if LANG_CXX11
  void set_szmachineid(::std::string&& value);
  #endif
  void set_szmachineid(const char* value);
  void set_szmachineid(const char* value, size_t size);
  ::std::string* mutable_szmachineid();
  ::std::string* release_szmachineid();
  void set_allocated_szmachineid(::std::string* szmachineid);

  // string szpassword = 4;
  void clear_szpassword();
  static const int kSzpasswordFieldNumber = 4;
  const ::std::string& szpassword() const;
  void set_szpassword(const ::std::string& value);
  #if LANG_CXX11
  void set_szpassword(::std::string&& value);
  #endif
  void set_szpassword(const char* value);
  void set_szpassword(const char* value, size_t size);
  ::std::string* mutable_szpassword();
  ::std::string* release_szpassword();
  void set_allocated_szpassword(::std::string* szpassword);

  // string szaccounts = 5;
  void clear_szaccounts();
  static const int kSzaccountsFieldNumber = 5;
  const ::std::string& szaccounts() const;
  void set_szaccounts(const ::std::string& value);
  #if LANG_CXX11
  void set_szaccounts(::std::string&& value);
  #endif
  void set_szaccounts(const char* value);
  void set_szaccounts(const char* value, size_t size);
  ::std::string* mutable_szaccounts();
  ::std::string* release_szaccounts();
  void set_allocated_szaccounts(::std::string* szaccounts);

  // string szpassportid = 6;
  void clear_szpassportid();
  static const int kSzpassportidFieldNumber = 6;
  const ::std::string& szpassportid() const;
  void set_szpassportid(const ::std::string& value);
  #if LANG_CXX11
  void set_szpassportid(::std::string&& value);
  #endif
  void set_szpassportid(const char* value);
  void set_szpassportid(const char* value, size_t size);
  ::std::string* mutable_szpassportid();
  ::std::string* release_szpassportid();
  void set_allocated_szpassportid(::std::string* szpassportid);

  // .NullPmd.request reqcmd = 1;
  bool has_reqcmd() const;
  void clear_reqcmd();
  static const int kReqcmdFieldNumber = 1;
  const ::NullPmd::request& reqcmd() const;
  ::NullPmd::request* mutable_reqcmd();
  ::NullPmd::request* release_reqcmd();
  void set_allocated_reqcmd(::NullPmd::request* reqcmd);

  // uint64 dwplazaversion = 2;
  void clear_dwplazaversion();
  static const int kDwplazaversionFieldNumber = 2;
  ::google::protobuf::uint64 dwplazaversion() const;
  void set_dwplazaversion(::google::protobuf::uint64 value);

  // int32 cbvalidateflags = 7;
  void clear_cbvalidateflags();
  static const int kCbvalidateflagsFieldNumber = 7;
  ::google::protobuf::int32 cbvalidateflags() const;
  void set_cbvalidateflags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginPmd.loginbyaccounts_c2s)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr szmachineid_;
  ::google::protobuf::internal::ArenaStringPtr szpassword_;
  ::google::protobuf::internal::ArenaStringPtr szaccounts_;
  ::google::protobuf::internal::ArenaStringPtr szpassportid_;
  ::NullPmd::request* reqcmd_;
  ::google::protobuf::uint64 dwplazaversion_;
  ::google::protobuf::int32 cbvalidateflags_;
  mutable int _cached_size_;
  friend struct  protobuf_LoginPmd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class logonOtherPlatform_c2s : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginPmd.logonOtherPlatform_c2s) */ {
 public:
  logonOtherPlatform_c2s();
  virtual ~logonOtherPlatform_c2s();

  logonOtherPlatform_c2s(const logonOtherPlatform_c2s& from);

  inline logonOtherPlatform_c2s& operator=(const logonOtherPlatform_c2s& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const logonOtherPlatform_c2s& default_instance();

  static inline const logonOtherPlatform_c2s* internal_default_instance() {
    return reinterpret_cast<const logonOtherPlatform_c2s*>(
               &_logonOtherPlatform_c2s_default_instance_);
  }

  void Swap(logonOtherPlatform_c2s* other);

  // implements Message ----------------------------------------------

  inline logonOtherPlatform_c2s* New() const PROTOBUF_FINAL { return New(NULL); }

  logonOtherPlatform_c2s* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const logonOtherPlatform_c2s& from);
  void MergeFrom(const logonOtherPlatform_c2s& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(logonOtherPlatform_c2s* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string szuseruin = 7;
  void clear_szuseruin();
  static const int kSzuseruinFieldNumber = 7;
  const ::std::string& szuseruin() const;
  void set_szuseruin(const ::std::string& value);
  #if LANG_CXX11
  void set_szuseruin(::std::string&& value);
  #endif
  void set_szuseruin(const char* value);
  void set_szuseruin(const char* value, size_t size);
  ::std::string* mutable_szuseruin();
  ::std::string* release_szuseruin();
  void set_allocated_szuseruin(::std::string* szuseruin);

  // string sznickname = 8;
  void clear_sznickname();
  static const int kSznicknameFieldNumber = 8;
  const ::std::string& sznickname() const;
  void set_sznickname(const ::std::string& value);
  #if LANG_CXX11
  void set_sznickname(::std::string&& value);
  #endif
  void set_sznickname(const char* value);
  void set_sznickname(const char* value, size_t size);
  ::std::string* mutable_sznickname();
  ::std::string* release_sznickname();
  void set_allocated_sznickname(::std::string* sznickname);

  // string szcompellation = 9;
  void clear_szcompellation();
  static const int kSzcompellationFieldNumber = 9;
  const ::std::string& szcompellation() const;
  void set_szcompellation(const ::std::string& value);
  #if LANG_CXX11
  void set_szcompellation(::std::string&& value);
  #endif
  void set_szcompellation(const char* value);
  void set_szcompellation(const char* value, size_t size);
  ::std::string* mutable_szcompellation();
  ::std::string* release_szcompellation();
  void set_allocated_szcompellation(::std::string* szcompellation);

  // string szmachineid = 10;
  void clear_szmachineid();
  static const int kSzmachineidFieldNumber = 10;
  const ::std::string& szmachineid() const;
  void set_szmachineid(const ::std::string& value);
  #if LANG_CXX11
  void set_szmachineid(::std::string&& value);
  #endif
  void set_szmachineid(const char* value);
  void set_szmachineid(const char* value, size_t size);
  ::std::string* mutable_szmachineid();
  ::std::string* release_szmachineid();
  void set_allocated_szmachineid(::std::string* szmachineid);

  // string szmobilephone = 11;
  void clear_szmobilephone();
  static const int kSzmobilephoneFieldNumber = 11;
  const ::std::string& szmobilephone() const;
  void set_szmobilephone(const ::std::string& value);
  #if LANG_CXX11
  void set_szmobilephone(::std::string&& value);
  #endif
  void set_szmobilephone(const char* value);
  void set_szmobilephone(const char* value, size_t size);
  ::std::string* mutable_szmobilephone();
  ::std::string* release_szmobilephone();
  void set_allocated_szmobilephone(::std::string* szmobilephone);

  // string szdevicetoken = 12;
  void clear_szdevicetoken();
  static const int kSzdevicetokenFieldNumber = 12;
  const ::std::string& szdevicetoken() const;
  void set_szdevicetoken(const ::std::string& value);
  #if LANG_CXX11
  void set_szdevicetoken(::std::string&& value);
  #endif
  void set_szdevicetoken(const char* value);
  void set_szdevicetoken(const char* value, size_t size);
  ::std::string* mutable_szdevicetoken();
  ::std::string* release_szdevicetoken();
  void set_allocated_szdevicetoken(::std::string* szdevicetoken);

  // string strfaceurl = 13;
  void clear_strfaceurl();
  static const int kStrfaceurlFieldNumber = 13;
  const ::std::string& strfaceurl() const;
  void set_strfaceurl(const ::std::string& value);
  #if LANG_CXX11
  void set_strfaceurl(::std::string&& value);
  #endif
  void set_strfaceurl(const char* value);
  void set_strfaceurl(const char* value, size_t size);
  ::std::string* mutable_strfaceurl();
  ::std::string* release_strfaceurl();
  void set_allocated_strfaceurl(::std::string* strfaceurl);

  // .NullPmd.request reqcmd = 1;
  bool has_reqcmd() const;
  void clear_reqcmd();
  static const int kReqcmdFieldNumber = 1;
  const ::NullPmd::request& reqcmd() const;
  ::NullPmd::request* mutable_reqcmd();
  ::NullPmd::request* release_reqcmd();
  void set_allocated_reqcmd(::NullPmd::request* reqcmd);

  // uint64 dwplazaversion = 3;
  void clear_dwplazaversion();
  static const int kDwplazaversionFieldNumber = 3;
  ::google::protobuf::uint64 dwplazaversion() const;
  void set_dwplazaversion(::google::protobuf::uint64 value);

  // int32 wmoduleid = 2;
  void clear_wmoduleid();
  static const int kWmoduleidFieldNumber = 2;
  ::google::protobuf::int32 wmoduleid() const;
  void set_wmoduleid(::google::protobuf::int32 value);

  // int32 cbdevicetype = 4;
  void clear_cbdevicetype();
  static const int kCbdevicetypeFieldNumber = 4;
  ::google::protobuf::int32 cbdevicetype() const;
  void set_cbdevicetype(::google::protobuf::int32 value);

  // int32 cbgender = 5;
  void clear_cbgender();
  static const int kCbgenderFieldNumber = 5;
  ::google::protobuf::int32 cbgender() const;
  void set_cbgender(::google::protobuf::int32 value);

  // int32 cbplatformid = 6;
  void clear_cbplatformid();
  static const int kCbplatformidFieldNumber = 6;
  ::google::protobuf::int32 cbplatformid() const;
  void set_cbplatformid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginPmd.logonOtherPlatform_c2s)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr szuseruin_;
  ::google::protobuf::internal::ArenaStringPtr sznickname_;
  ::google::protobuf::internal::ArenaStringPtr szcompellation_;
  ::google::protobuf::internal::ArenaStringPtr szmachineid_;
  ::google::protobuf::internal::ArenaStringPtr szmobilephone_;
  ::google::protobuf::internal::ArenaStringPtr szdevicetoken_;
  ::google::protobuf::internal::ArenaStringPtr strfaceurl_;
  ::NullPmd::request* reqcmd_;
  ::google::protobuf::uint64 dwplazaversion_;
  ::google::protobuf::int32 wmoduleid_;
  ::google::protobuf::int32 cbdevicetype_;
  ::google::protobuf::int32 cbgender_;
  ::google::protobuf::int32 cbplatformid_;
  mutable int _cached_size_;
  friend struct  protobuf_LoginPmd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class loginbyvisitor_c2s : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginPmd.loginbyvisitor_c2s) */ {
 public:
  loginbyvisitor_c2s();
  virtual ~loginbyvisitor_c2s();

  loginbyvisitor_c2s(const loginbyvisitor_c2s& from);

  inline loginbyvisitor_c2s& operator=(const loginbyvisitor_c2s& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const loginbyvisitor_c2s& default_instance();

  static inline const loginbyvisitor_c2s* internal_default_instance() {
    return reinterpret_cast<const loginbyvisitor_c2s*>(
               &_loginbyvisitor_c2s_default_instance_);
  }

  void Swap(loginbyvisitor_c2s* other);

  // implements Message ----------------------------------------------

  inline loginbyvisitor_c2s* New() const PROTOBUF_FINAL { return New(NULL); }

  loginbyvisitor_c2s* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const loginbyvisitor_c2s& from);
  void MergeFrom(const loginbyvisitor_c2s& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(loginbyvisitor_c2s* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string szmachineid = 3;
  void clear_szmachineid();
  static const int kSzmachineidFieldNumber = 3;
  const ::std::string& szmachineid() const;
  void set_szmachineid(const ::std::string& value);
  #if LANG_CXX11
  void set_szmachineid(::std::string&& value);
  #endif
  void set_szmachineid(const char* value);
  void set_szmachineid(const char* value, size_t size);
  ::std::string* mutable_szmachineid();
  ::std::string* release_szmachineid();
  void set_allocated_szmachineid(::std::string* szmachineid);

  // .NullPmd.request reqcmd = 1;
  bool has_reqcmd() const;
  void clear_reqcmd();
  static const int kReqcmdFieldNumber = 1;
  const ::NullPmd::request& reqcmd() const;
  ::NullPmd::request* mutable_reqcmd();
  ::NullPmd::request* release_reqcmd();
  void set_allocated_reqcmd(::NullPmd::request* reqcmd);

  // uint64 dwplazaversion = 2;
  void clear_dwplazaversion();
  static const int kDwplazaversionFieldNumber = 2;
  ::google::protobuf::uint64 dwplazaversion() const;
  void set_dwplazaversion(::google::protobuf::uint64 value);

  // int32 cbvalidateflags = 4;
  void clear_cbvalidateflags();
  static const int kCbvalidateflagsFieldNumber = 4;
  ::google::protobuf::int32 cbvalidateflags() const;
  void set_cbvalidateflags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginPmd.loginbyvisitor_c2s)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr szmachineid_;
  ::NullPmd::request* reqcmd_;
  ::google::protobuf::uint64 dwplazaversion_;
  ::google::protobuf::int32 cbvalidateflags_;
  mutable int _cached_size_;
  friend struct  protobuf_LoginPmd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class loginsuccess_s2c : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginPmd.loginsuccess_s2c) */ {
 public:
  loginsuccess_s2c();
  virtual ~loginsuccess_s2c();

  loginsuccess_s2c(const loginsuccess_s2c& from);

  inline loginsuccess_s2c& operator=(const loginsuccess_s2c& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const loginsuccess_s2c& default_instance();

  static inline const loginsuccess_s2c* internal_default_instance() {
    return reinterpret_cast<const loginsuccess_s2c*>(
               &_loginsuccess_s2c_default_instance_);
  }

  void Swap(loginsuccess_s2c* other);

  // implements Message ----------------------------------------------

  inline loginsuccess_s2c* New() const PROTOBUF_FINAL { return New(NULL); }

  loginsuccess_s2c* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const loginsuccess_s2c& from);
  void MergeFrom(const loginsuccess_s2c& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(loginsuccess_s2c* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NullPmd.response respcmd = 1;
  bool has_respcmd() const;
  void clear_respcmd();
  static const int kRespcmdFieldNumber = 1;
  const ::NullPmd::response& respcmd() const;
  ::NullPmd::response* mutable_respcmd();
  ::NullPmd::response* release_respcmd();
  void set_allocated_respcmd(::NullPmd::response* respcmd);

  // .CommonPmd.personinfo personinfo = 2;
  bool has_personinfo() const;
  void clear_personinfo();
  static const int kPersoninfoFieldNumber = 2;
  const ::CommonPmd::personinfo& personinfo() const;
  ::CommonPmd::personinfo* mutable_personinfo();
  ::CommonPmd::personinfo* release_personinfo();
  void set_allocated_personinfo(::CommonPmd::personinfo* personinfo);

  // @@protoc_insertion_point(class_scope:LoginPmd.loginsuccess_s2c)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NullPmd::response* respcmd_;
  ::CommonPmd::personinfo* personinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_LoginPmd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class loginfinish_s2c : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginPmd.loginfinish_s2c) */ {
 public:
  loginfinish_s2c();
  virtual ~loginfinish_s2c();

  loginfinish_s2c(const loginfinish_s2c& from);

  inline loginfinish_s2c& operator=(const loginfinish_s2c& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const loginfinish_s2c& default_instance();

  static inline const loginfinish_s2c* internal_default_instance() {
    return reinterpret_cast<const loginfinish_s2c*>(
               &_loginfinish_s2c_default_instance_);
  }

  void Swap(loginfinish_s2c* other);

  // implements Message ----------------------------------------------

  inline loginfinish_s2c* New() const PROTOBUF_FINAL { return New(NULL); }

  loginfinish_s2c* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const loginfinish_s2c& from);
  void MergeFrom(const loginfinish_s2c& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(loginfinish_s2c* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NullPmd.response respcmd = 1;
  bool has_respcmd() const;
  void clear_respcmd();
  static const int kRespcmdFieldNumber = 1;
  const ::NullPmd::response& respcmd() const;
  ::NullPmd::response* mutable_respcmd();
  ::NullPmd::response* release_respcmd();
  void set_allocated_respcmd(::NullPmd::response* respcmd);

  // int32 wIntermitTime = 2;
  void clear_wintermittime();
  static const int kWIntermitTimeFieldNumber = 2;
  ::google::protobuf::int32 wintermittime() const;
  void set_wintermittime(::google::protobuf::int32 value);

  // int32 wOnLineCountTime = 3;
  void clear_wonlinecounttime();
  static const int kWOnLineCountTimeFieldNumber = 3;
  ::google::protobuf::int32 wonlinecounttime() const;
  void set_wonlinecounttime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginPmd.loginfinish_s2c)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NullPmd::response* respcmd_;
  ::google::protobuf::int32 wintermittime_;
  ::google::protobuf::int32 wonlinecounttime_;
  mutable int _cached_size_;
  friend struct  protobuf_LoginPmd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class loginfailure_s2c : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginPmd.loginfailure_s2c) */ {
 public:
  loginfailure_s2c();
  virtual ~loginfailure_s2c();

  loginfailure_s2c(const loginfailure_s2c& from);

  inline loginfailure_s2c& operator=(const loginfailure_s2c& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const loginfailure_s2c& default_instance();

  static inline const loginfailure_s2c* internal_default_instance() {
    return reinterpret_cast<const loginfailure_s2c*>(
               &_loginfailure_s2c_default_instance_);
  }

  void Swap(loginfailure_s2c* other);

  // implements Message ----------------------------------------------

  inline loginfailure_s2c* New() const PROTOBUF_FINAL { return New(NULL); }

  loginfailure_s2c* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const loginfailure_s2c& from);
  void MergeFrom(const loginfailure_s2c& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(loginfailure_s2c* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .NullPmd.response respcmd = 1;
  bool has_respcmd() const;
  void clear_respcmd();
  static const int kRespcmdFieldNumber = 1;
  const ::NullPmd::response& respcmd() const;
  ::NullPmd::response* mutable_respcmd();
  ::NullPmd::response* release_respcmd();
  void set_allocated_respcmd(::NullPmd::response* respcmd);

  // @@protoc_insertion_point(class_scope:LoginPmd.loginfailure_s2c)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NullPmd::response* respcmd_;
  mutable int _cached_size_;
  friend struct  protobuf_LoginPmd_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// loginbyid_c2s

// .NullPmd.request reqcmd = 1;
inline bool loginbyid_c2s::has_reqcmd() const {
  return this != internal_default_instance() && reqcmd_ != NULL;
}
inline void loginbyid_c2s::clear_reqcmd() {
  if (GetArenaNoVirtual() == NULL && reqcmd_ != NULL) delete reqcmd_;
  reqcmd_ = NULL;
}
inline const ::NullPmd::request& loginbyid_c2s::reqcmd() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyid_c2s.reqcmd)
  return reqcmd_ != NULL ? *reqcmd_
                         : *::NullPmd::request::internal_default_instance();
}
inline ::NullPmd::request* loginbyid_c2s::mutable_reqcmd() {
  
  if (reqcmd_ == NULL) {
    reqcmd_ = new ::NullPmd::request;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyid_c2s.reqcmd)
  return reqcmd_;
}
inline ::NullPmd::request* loginbyid_c2s::release_reqcmd() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyid_c2s.reqcmd)
  
  ::NullPmd::request* temp = reqcmd_;
  reqcmd_ = NULL;
  return temp;
}
inline void loginbyid_c2s::set_allocated_reqcmd(::NullPmd::request* reqcmd) {
  delete reqcmd_;
  reqcmd_ = reqcmd;
  if (reqcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyid_c2s.reqcmd)
}

// uint64 dwplazaversion = 2;
inline void loginbyid_c2s::clear_dwplazaversion() {
  dwplazaversion_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 loginbyid_c2s::dwplazaversion() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyid_c2s.dwplazaversion)
  return dwplazaversion_;
}
inline void loginbyid_c2s::set_dwplazaversion(::google::protobuf::uint64 value) {
  
  dwplazaversion_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyid_c2s.dwplazaversion)
}

// string szmachineid = 3;
inline void loginbyid_c2s::clear_szmachineid() {
  szmachineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& loginbyid_c2s::szmachineid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyid_c2s.szmachineid)
  return szmachineid_.GetNoArena();
}
inline void loginbyid_c2s::set_szmachineid(const ::std::string& value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyid_c2s.szmachineid)
}
#if LANG_CXX11
inline void loginbyid_c2s::set_szmachineid(::std::string&& value) {
  
  szmachineid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.loginbyid_c2s.szmachineid)
}
#endif
inline void loginbyid_c2s::set_szmachineid(const char* value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.loginbyid_c2s.szmachineid)
}
inline void loginbyid_c2s::set_szmachineid(const char* value, size_t size) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.loginbyid_c2s.szmachineid)
}
inline ::std::string* loginbyid_c2s::mutable_szmachineid() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyid_c2s.szmachineid)
  return szmachineid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* loginbyid_c2s::release_szmachineid() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyid_c2s.szmachineid)
  
  return szmachineid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void loginbyid_c2s::set_allocated_szmachineid(::std::string* szmachineid) {
  if (szmachineid != NULL) {
    
  } else {
    
  }
  szmachineid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szmachineid);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyid_c2s.szmachineid)
}

// uint64 dwgameid = 4;
inline void loginbyid_c2s::clear_dwgameid() {
  dwgameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 loginbyid_c2s::dwgameid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyid_c2s.dwgameid)
  return dwgameid_;
}
inline void loginbyid_c2s::set_dwgameid(::google::protobuf::uint64 value) {
  
  dwgameid_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyid_c2s.dwgameid)
}

// string szpassword = 5;
inline void loginbyid_c2s::clear_szpassword() {
  szpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& loginbyid_c2s::szpassword() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyid_c2s.szpassword)
  return szpassword_.GetNoArena();
}
inline void loginbyid_c2s::set_szpassword(const ::std::string& value) {
  
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyid_c2s.szpassword)
}
#if LANG_CXX11
inline void loginbyid_c2s::set_szpassword(::std::string&& value) {
  
  szpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.loginbyid_c2s.szpassword)
}
#endif
inline void loginbyid_c2s::set_szpassword(const char* value) {
  
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.loginbyid_c2s.szpassword)
}
inline void loginbyid_c2s::set_szpassword(const char* value, size_t size) {
  
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.loginbyid_c2s.szpassword)
}
inline ::std::string* loginbyid_c2s::mutable_szpassword() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyid_c2s.szpassword)
  return szpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* loginbyid_c2s::release_szpassword() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyid_c2s.szpassword)
  
  return szpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void loginbyid_c2s::set_allocated_szpassword(::std::string* szpassword) {
  if (szpassword != NULL) {
    
  } else {
    
  }
  szpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szpassword);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyid_c2s.szpassword)
}

// int32 cbvalidateflags = 6;
inline void loginbyid_c2s::clear_cbvalidateflags() {
  cbvalidateflags_ = 0;
}
inline ::google::protobuf::int32 loginbyid_c2s::cbvalidateflags() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyid_c2s.cbvalidateflags)
  return cbvalidateflags_;
}
inline void loginbyid_c2s::set_cbvalidateflags(::google::protobuf::int32 value) {
  
  cbvalidateflags_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyid_c2s.cbvalidateflags)
}

// -------------------------------------------------------------------

// loginbyaccounts_c2s

// .NullPmd.request reqcmd = 1;
inline bool loginbyaccounts_c2s::has_reqcmd() const {
  return this != internal_default_instance() && reqcmd_ != NULL;
}
inline void loginbyaccounts_c2s::clear_reqcmd() {
  if (GetArenaNoVirtual() == NULL && reqcmd_ != NULL) delete reqcmd_;
  reqcmd_ = NULL;
}
inline const ::NullPmd::request& loginbyaccounts_c2s::reqcmd() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyaccounts_c2s.reqcmd)
  return reqcmd_ != NULL ? *reqcmd_
                         : *::NullPmd::request::internal_default_instance();
}
inline ::NullPmd::request* loginbyaccounts_c2s::mutable_reqcmd() {
  
  if (reqcmd_ == NULL) {
    reqcmd_ = new ::NullPmd::request;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyaccounts_c2s.reqcmd)
  return reqcmd_;
}
inline ::NullPmd::request* loginbyaccounts_c2s::release_reqcmd() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyaccounts_c2s.reqcmd)
  
  ::NullPmd::request* temp = reqcmd_;
  reqcmd_ = NULL;
  return temp;
}
inline void loginbyaccounts_c2s::set_allocated_reqcmd(::NullPmd::request* reqcmd) {
  delete reqcmd_;
  reqcmd_ = reqcmd;
  if (reqcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyaccounts_c2s.reqcmd)
}

// uint64 dwplazaversion = 2;
inline void loginbyaccounts_c2s::clear_dwplazaversion() {
  dwplazaversion_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 loginbyaccounts_c2s::dwplazaversion() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyaccounts_c2s.dwplazaversion)
  return dwplazaversion_;
}
inline void loginbyaccounts_c2s::set_dwplazaversion(::google::protobuf::uint64 value) {
  
  dwplazaversion_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyaccounts_c2s.dwplazaversion)
}

// string szmachineid = 3;
inline void loginbyaccounts_c2s::clear_szmachineid() {
  szmachineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& loginbyaccounts_c2s::szmachineid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyaccounts_c2s.szmachineid)
  return szmachineid_.GetNoArena();
}
inline void loginbyaccounts_c2s::set_szmachineid(const ::std::string& value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyaccounts_c2s.szmachineid)
}
#if LANG_CXX11
inline void loginbyaccounts_c2s::set_szmachineid(::std::string&& value) {
  
  szmachineid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.loginbyaccounts_c2s.szmachineid)
}
#endif
inline void loginbyaccounts_c2s::set_szmachineid(const char* value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.loginbyaccounts_c2s.szmachineid)
}
inline void loginbyaccounts_c2s::set_szmachineid(const char* value, size_t size) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.loginbyaccounts_c2s.szmachineid)
}
inline ::std::string* loginbyaccounts_c2s::mutable_szmachineid() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyaccounts_c2s.szmachineid)
  return szmachineid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* loginbyaccounts_c2s::release_szmachineid() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyaccounts_c2s.szmachineid)
  
  return szmachineid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void loginbyaccounts_c2s::set_allocated_szmachineid(::std::string* szmachineid) {
  if (szmachineid != NULL) {
    
  } else {
    
  }
  szmachineid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szmachineid);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyaccounts_c2s.szmachineid)
}

// string szpassword = 4;
inline void loginbyaccounts_c2s::clear_szpassword() {
  szpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& loginbyaccounts_c2s::szpassword() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyaccounts_c2s.szpassword)
  return szpassword_.GetNoArena();
}
inline void loginbyaccounts_c2s::set_szpassword(const ::std::string& value) {
  
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyaccounts_c2s.szpassword)
}
#if LANG_CXX11
inline void loginbyaccounts_c2s::set_szpassword(::std::string&& value) {
  
  szpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.loginbyaccounts_c2s.szpassword)
}
#endif
inline void loginbyaccounts_c2s::set_szpassword(const char* value) {
  
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.loginbyaccounts_c2s.szpassword)
}
inline void loginbyaccounts_c2s::set_szpassword(const char* value, size_t size) {
  
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.loginbyaccounts_c2s.szpassword)
}
inline ::std::string* loginbyaccounts_c2s::mutable_szpassword() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyaccounts_c2s.szpassword)
  return szpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* loginbyaccounts_c2s::release_szpassword() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyaccounts_c2s.szpassword)
  
  return szpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void loginbyaccounts_c2s::set_allocated_szpassword(::std::string* szpassword) {
  if (szpassword != NULL) {
    
  } else {
    
  }
  szpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szpassword);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyaccounts_c2s.szpassword)
}

// string szaccounts = 5;
inline void loginbyaccounts_c2s::clear_szaccounts() {
  szaccounts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& loginbyaccounts_c2s::szaccounts() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyaccounts_c2s.szaccounts)
  return szaccounts_.GetNoArena();
}
inline void loginbyaccounts_c2s::set_szaccounts(const ::std::string& value) {
  
  szaccounts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyaccounts_c2s.szaccounts)
}
#if LANG_CXX11
inline void loginbyaccounts_c2s::set_szaccounts(::std::string&& value) {
  
  szaccounts_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.loginbyaccounts_c2s.szaccounts)
}
#endif
inline void loginbyaccounts_c2s::set_szaccounts(const char* value) {
  
  szaccounts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.loginbyaccounts_c2s.szaccounts)
}
inline void loginbyaccounts_c2s::set_szaccounts(const char* value, size_t size) {
  
  szaccounts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.loginbyaccounts_c2s.szaccounts)
}
inline ::std::string* loginbyaccounts_c2s::mutable_szaccounts() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyaccounts_c2s.szaccounts)
  return szaccounts_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* loginbyaccounts_c2s::release_szaccounts() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyaccounts_c2s.szaccounts)
  
  return szaccounts_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void loginbyaccounts_c2s::set_allocated_szaccounts(::std::string* szaccounts) {
  if (szaccounts != NULL) {
    
  } else {
    
  }
  szaccounts_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szaccounts);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyaccounts_c2s.szaccounts)
}

// string szpassportid = 6;
inline void loginbyaccounts_c2s::clear_szpassportid() {
  szpassportid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& loginbyaccounts_c2s::szpassportid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyaccounts_c2s.szpassportid)
  return szpassportid_.GetNoArena();
}
inline void loginbyaccounts_c2s::set_szpassportid(const ::std::string& value) {
  
  szpassportid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyaccounts_c2s.szpassportid)
}
#if LANG_CXX11
inline void loginbyaccounts_c2s::set_szpassportid(::std::string&& value) {
  
  szpassportid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.loginbyaccounts_c2s.szpassportid)
}
#endif
inline void loginbyaccounts_c2s::set_szpassportid(const char* value) {
  
  szpassportid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.loginbyaccounts_c2s.szpassportid)
}
inline void loginbyaccounts_c2s::set_szpassportid(const char* value, size_t size) {
  
  szpassportid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.loginbyaccounts_c2s.szpassportid)
}
inline ::std::string* loginbyaccounts_c2s::mutable_szpassportid() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyaccounts_c2s.szpassportid)
  return szpassportid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* loginbyaccounts_c2s::release_szpassportid() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyaccounts_c2s.szpassportid)
  
  return szpassportid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void loginbyaccounts_c2s::set_allocated_szpassportid(::std::string* szpassportid) {
  if (szpassportid != NULL) {
    
  } else {
    
  }
  szpassportid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szpassportid);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyaccounts_c2s.szpassportid)
}

// int32 cbvalidateflags = 7;
inline void loginbyaccounts_c2s::clear_cbvalidateflags() {
  cbvalidateflags_ = 0;
}
inline ::google::protobuf::int32 loginbyaccounts_c2s::cbvalidateflags() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyaccounts_c2s.cbvalidateflags)
  return cbvalidateflags_;
}
inline void loginbyaccounts_c2s::set_cbvalidateflags(::google::protobuf::int32 value) {
  
  cbvalidateflags_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyaccounts_c2s.cbvalidateflags)
}

// -------------------------------------------------------------------

// logonOtherPlatform_c2s

// .NullPmd.request reqcmd = 1;
inline bool logonOtherPlatform_c2s::has_reqcmd() const {
  return this != internal_default_instance() && reqcmd_ != NULL;
}
inline void logonOtherPlatform_c2s::clear_reqcmd() {
  if (GetArenaNoVirtual() == NULL && reqcmd_ != NULL) delete reqcmd_;
  reqcmd_ = NULL;
}
inline const ::NullPmd::request& logonOtherPlatform_c2s::reqcmd() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.reqcmd)
  return reqcmd_ != NULL ? *reqcmd_
                         : *::NullPmd::request::internal_default_instance();
}
inline ::NullPmd::request* logonOtherPlatform_c2s::mutable_reqcmd() {
  
  if (reqcmd_ == NULL) {
    reqcmd_ = new ::NullPmd::request;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.reqcmd)
  return reqcmd_;
}
inline ::NullPmd::request* logonOtherPlatform_c2s::release_reqcmd() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.reqcmd)
  
  ::NullPmd::request* temp = reqcmd_;
  reqcmd_ = NULL;
  return temp;
}
inline void logonOtherPlatform_c2s::set_allocated_reqcmd(::NullPmd::request* reqcmd) {
  delete reqcmd_;
  reqcmd_ = reqcmd;
  if (reqcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.reqcmd)
}

// int32 wmoduleid = 2;
inline void logonOtherPlatform_c2s::clear_wmoduleid() {
  wmoduleid_ = 0;
}
inline ::google::protobuf::int32 logonOtherPlatform_c2s::wmoduleid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.wmoduleid)
  return wmoduleid_;
}
inline void logonOtherPlatform_c2s::set_wmoduleid(::google::protobuf::int32 value) {
  
  wmoduleid_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.wmoduleid)
}

// uint64 dwplazaversion = 3;
inline void logonOtherPlatform_c2s::clear_dwplazaversion() {
  dwplazaversion_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 logonOtherPlatform_c2s::dwplazaversion() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.dwplazaversion)
  return dwplazaversion_;
}
inline void logonOtherPlatform_c2s::set_dwplazaversion(::google::protobuf::uint64 value) {
  
  dwplazaversion_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.dwplazaversion)
}

// int32 cbdevicetype = 4;
inline void logonOtherPlatform_c2s::clear_cbdevicetype() {
  cbdevicetype_ = 0;
}
inline ::google::protobuf::int32 logonOtherPlatform_c2s::cbdevicetype() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.cbdevicetype)
  return cbdevicetype_;
}
inline void logonOtherPlatform_c2s::set_cbdevicetype(::google::protobuf::int32 value) {
  
  cbdevicetype_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.cbdevicetype)
}

// int32 cbgender = 5;
inline void logonOtherPlatform_c2s::clear_cbgender() {
  cbgender_ = 0;
}
inline ::google::protobuf::int32 logonOtherPlatform_c2s::cbgender() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.cbgender)
  return cbgender_;
}
inline void logonOtherPlatform_c2s::set_cbgender(::google::protobuf::int32 value) {
  
  cbgender_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.cbgender)
}

// int32 cbplatformid = 6;
inline void logonOtherPlatform_c2s::clear_cbplatformid() {
  cbplatformid_ = 0;
}
inline ::google::protobuf::int32 logonOtherPlatform_c2s::cbplatformid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.cbplatformid)
  return cbplatformid_;
}
inline void logonOtherPlatform_c2s::set_cbplatformid(::google::protobuf::int32 value) {
  
  cbplatformid_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.cbplatformid)
}

// string szuseruin = 7;
inline void logonOtherPlatform_c2s::clear_szuseruin() {
  szuseruin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& logonOtherPlatform_c2s::szuseruin() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.szuseruin)
  return szuseruin_.GetNoArena();
}
inline void logonOtherPlatform_c2s::set_szuseruin(const ::std::string& value) {
  
  szuseruin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.szuseruin)
}
#if LANG_CXX11
inline void logonOtherPlatform_c2s::set_szuseruin(::std::string&& value) {
  
  szuseruin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.logonOtherPlatform_c2s.szuseruin)
}
#endif
inline void logonOtherPlatform_c2s::set_szuseruin(const char* value) {
  
  szuseruin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.logonOtherPlatform_c2s.szuseruin)
}
inline void logonOtherPlatform_c2s::set_szuseruin(const char* value, size_t size) {
  
  szuseruin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.logonOtherPlatform_c2s.szuseruin)
}
inline ::std::string* logonOtherPlatform_c2s::mutable_szuseruin() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.szuseruin)
  return szuseruin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* logonOtherPlatform_c2s::release_szuseruin() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.szuseruin)
  
  return szuseruin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void logonOtherPlatform_c2s::set_allocated_szuseruin(::std::string* szuseruin) {
  if (szuseruin != NULL) {
    
  } else {
    
  }
  szuseruin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szuseruin);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.szuseruin)
}

// string sznickname = 8;
inline void logonOtherPlatform_c2s::clear_sznickname() {
  sznickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& logonOtherPlatform_c2s::sznickname() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.sznickname)
  return sznickname_.GetNoArena();
}
inline void logonOtherPlatform_c2s::set_sznickname(const ::std::string& value) {
  
  sznickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.sznickname)
}
#if LANG_CXX11
inline void logonOtherPlatform_c2s::set_sznickname(::std::string&& value) {
  
  sznickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.logonOtherPlatform_c2s.sznickname)
}
#endif
inline void logonOtherPlatform_c2s::set_sznickname(const char* value) {
  
  sznickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.logonOtherPlatform_c2s.sznickname)
}
inline void logonOtherPlatform_c2s::set_sznickname(const char* value, size_t size) {
  
  sznickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.logonOtherPlatform_c2s.sznickname)
}
inline ::std::string* logonOtherPlatform_c2s::mutable_sznickname() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.sznickname)
  return sznickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* logonOtherPlatform_c2s::release_sznickname() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.sznickname)
  
  return sznickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void logonOtherPlatform_c2s::set_allocated_sznickname(::std::string* sznickname) {
  if (sznickname != NULL) {
    
  } else {
    
  }
  sznickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sznickname);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.sznickname)
}

// string szcompellation = 9;
inline void logonOtherPlatform_c2s::clear_szcompellation() {
  szcompellation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& logonOtherPlatform_c2s::szcompellation() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.szcompellation)
  return szcompellation_.GetNoArena();
}
inline void logonOtherPlatform_c2s::set_szcompellation(const ::std::string& value) {
  
  szcompellation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.szcompellation)
}
#if LANG_CXX11
inline void logonOtherPlatform_c2s::set_szcompellation(::std::string&& value) {
  
  szcompellation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.logonOtherPlatform_c2s.szcompellation)
}
#endif
inline void logonOtherPlatform_c2s::set_szcompellation(const char* value) {
  
  szcompellation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.logonOtherPlatform_c2s.szcompellation)
}
inline void logonOtherPlatform_c2s::set_szcompellation(const char* value, size_t size) {
  
  szcompellation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.logonOtherPlatform_c2s.szcompellation)
}
inline ::std::string* logonOtherPlatform_c2s::mutable_szcompellation() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.szcompellation)
  return szcompellation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* logonOtherPlatform_c2s::release_szcompellation() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.szcompellation)
  
  return szcompellation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void logonOtherPlatform_c2s::set_allocated_szcompellation(::std::string* szcompellation) {
  if (szcompellation != NULL) {
    
  } else {
    
  }
  szcompellation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szcompellation);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.szcompellation)
}

// string szmachineid = 10;
inline void logonOtherPlatform_c2s::clear_szmachineid() {
  szmachineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& logonOtherPlatform_c2s::szmachineid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.szmachineid)
  return szmachineid_.GetNoArena();
}
inline void logonOtherPlatform_c2s::set_szmachineid(const ::std::string& value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.szmachineid)
}
#if LANG_CXX11
inline void logonOtherPlatform_c2s::set_szmachineid(::std::string&& value) {
  
  szmachineid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.logonOtherPlatform_c2s.szmachineid)
}
#endif
inline void logonOtherPlatform_c2s::set_szmachineid(const char* value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.logonOtherPlatform_c2s.szmachineid)
}
inline void logonOtherPlatform_c2s::set_szmachineid(const char* value, size_t size) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.logonOtherPlatform_c2s.szmachineid)
}
inline ::std::string* logonOtherPlatform_c2s::mutable_szmachineid() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.szmachineid)
  return szmachineid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* logonOtherPlatform_c2s::release_szmachineid() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.szmachineid)
  
  return szmachineid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void logonOtherPlatform_c2s::set_allocated_szmachineid(::std::string* szmachineid) {
  if (szmachineid != NULL) {
    
  } else {
    
  }
  szmachineid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szmachineid);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.szmachineid)
}

// string szmobilephone = 11;
inline void logonOtherPlatform_c2s::clear_szmobilephone() {
  szmobilephone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& logonOtherPlatform_c2s::szmobilephone() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
  return szmobilephone_.GetNoArena();
}
inline void logonOtherPlatform_c2s::set_szmobilephone(const ::std::string& value) {
  
  szmobilephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
}
#if LANG_CXX11
inline void logonOtherPlatform_c2s::set_szmobilephone(::std::string&& value) {
  
  szmobilephone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
}
#endif
inline void logonOtherPlatform_c2s::set_szmobilephone(const char* value) {
  
  szmobilephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
}
inline void logonOtherPlatform_c2s::set_szmobilephone(const char* value, size_t size) {
  
  szmobilephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
}
inline ::std::string* logonOtherPlatform_c2s::mutable_szmobilephone() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
  return szmobilephone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* logonOtherPlatform_c2s::release_szmobilephone() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
  
  return szmobilephone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void logonOtherPlatform_c2s::set_allocated_szmobilephone(::std::string* szmobilephone) {
  if (szmobilephone != NULL) {
    
  } else {
    
  }
  szmobilephone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szmobilephone);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.szmobilephone)
}

// string szdevicetoken = 12;
inline void logonOtherPlatform_c2s::clear_szdevicetoken() {
  szdevicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& logonOtherPlatform_c2s::szdevicetoken() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
  return szdevicetoken_.GetNoArena();
}
inline void logonOtherPlatform_c2s::set_szdevicetoken(const ::std::string& value) {
  
  szdevicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
}
#if LANG_CXX11
inline void logonOtherPlatform_c2s::set_szdevicetoken(::std::string&& value) {
  
  szdevicetoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
}
#endif
inline void logonOtherPlatform_c2s::set_szdevicetoken(const char* value) {
  
  szdevicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
}
inline void logonOtherPlatform_c2s::set_szdevicetoken(const char* value, size_t size) {
  
  szdevicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
}
inline ::std::string* logonOtherPlatform_c2s::mutable_szdevicetoken() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
  return szdevicetoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* logonOtherPlatform_c2s::release_szdevicetoken() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
  
  return szdevicetoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void logonOtherPlatform_c2s::set_allocated_szdevicetoken(::std::string* szdevicetoken) {
  if (szdevicetoken != NULL) {
    
  } else {
    
  }
  szdevicetoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szdevicetoken);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.szdevicetoken)
}

// string strfaceurl = 13;
inline void logonOtherPlatform_c2s::clear_strfaceurl() {
  strfaceurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& logonOtherPlatform_c2s::strfaceurl() const {
  // @@protoc_insertion_point(field_get:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
  return strfaceurl_.GetNoArena();
}
inline void logonOtherPlatform_c2s::set_strfaceurl(const ::std::string& value) {
  
  strfaceurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
}
#if LANG_CXX11
inline void logonOtherPlatform_c2s::set_strfaceurl(::std::string&& value) {
  
  strfaceurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
}
#endif
inline void logonOtherPlatform_c2s::set_strfaceurl(const char* value) {
  
  strfaceurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
}
inline void logonOtherPlatform_c2s::set_strfaceurl(const char* value, size_t size) {
  
  strfaceurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
}
inline ::std::string* logonOtherPlatform_c2s::mutable_strfaceurl() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
  return strfaceurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* logonOtherPlatform_c2s::release_strfaceurl() {
  // @@protoc_insertion_point(field_release:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
  
  return strfaceurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void logonOtherPlatform_c2s::set_allocated_strfaceurl(::std::string* strfaceurl) {
  if (strfaceurl != NULL) {
    
  } else {
    
  }
  strfaceurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfaceurl);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.logonOtherPlatform_c2s.strfaceurl)
}

// -------------------------------------------------------------------

// loginbyvisitor_c2s

// .NullPmd.request reqcmd = 1;
inline bool loginbyvisitor_c2s::has_reqcmd() const {
  return this != internal_default_instance() && reqcmd_ != NULL;
}
inline void loginbyvisitor_c2s::clear_reqcmd() {
  if (GetArenaNoVirtual() == NULL && reqcmd_ != NULL) delete reqcmd_;
  reqcmd_ = NULL;
}
inline const ::NullPmd::request& loginbyvisitor_c2s::reqcmd() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyvisitor_c2s.reqcmd)
  return reqcmd_ != NULL ? *reqcmd_
                         : *::NullPmd::request::internal_default_instance();
}
inline ::NullPmd::request* loginbyvisitor_c2s::mutable_reqcmd() {
  
  if (reqcmd_ == NULL) {
    reqcmd_ = new ::NullPmd::request;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyvisitor_c2s.reqcmd)
  return reqcmd_;
}
inline ::NullPmd::request* loginbyvisitor_c2s::release_reqcmd() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyvisitor_c2s.reqcmd)
  
  ::NullPmd::request* temp = reqcmd_;
  reqcmd_ = NULL;
  return temp;
}
inline void loginbyvisitor_c2s::set_allocated_reqcmd(::NullPmd::request* reqcmd) {
  delete reqcmd_;
  reqcmd_ = reqcmd;
  if (reqcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyvisitor_c2s.reqcmd)
}

// uint64 dwplazaversion = 2;
inline void loginbyvisitor_c2s::clear_dwplazaversion() {
  dwplazaversion_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 loginbyvisitor_c2s::dwplazaversion() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyvisitor_c2s.dwplazaversion)
  return dwplazaversion_;
}
inline void loginbyvisitor_c2s::set_dwplazaversion(::google::protobuf::uint64 value) {
  
  dwplazaversion_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyvisitor_c2s.dwplazaversion)
}

// string szmachineid = 3;
inline void loginbyvisitor_c2s::clear_szmachineid() {
  szmachineid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& loginbyvisitor_c2s::szmachineid() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyvisitor_c2s.szmachineid)
  return szmachineid_.GetNoArena();
}
inline void loginbyvisitor_c2s::set_szmachineid(const ::std::string& value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyvisitor_c2s.szmachineid)
}
#if LANG_CXX11
inline void loginbyvisitor_c2s::set_szmachineid(::std::string&& value) {
  
  szmachineid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginPmd.loginbyvisitor_c2s.szmachineid)
}
#endif
inline void loginbyvisitor_c2s::set_szmachineid(const char* value) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginPmd.loginbyvisitor_c2s.szmachineid)
}
inline void loginbyvisitor_c2s::set_szmachineid(const char* value, size_t size) {
  
  szmachineid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginPmd.loginbyvisitor_c2s.szmachineid)
}
inline ::std::string* loginbyvisitor_c2s::mutable_szmachineid() {
  
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginbyvisitor_c2s.szmachineid)
  return szmachineid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* loginbyvisitor_c2s::release_szmachineid() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginbyvisitor_c2s.szmachineid)
  
  return szmachineid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void loginbyvisitor_c2s::set_allocated_szmachineid(::std::string* szmachineid) {
  if (szmachineid != NULL) {
    
  } else {
    
  }
  szmachineid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szmachineid);
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginbyvisitor_c2s.szmachineid)
}

// int32 cbvalidateflags = 4;
inline void loginbyvisitor_c2s::clear_cbvalidateflags() {
  cbvalidateflags_ = 0;
}
inline ::google::protobuf::int32 loginbyvisitor_c2s::cbvalidateflags() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginbyvisitor_c2s.cbvalidateflags)
  return cbvalidateflags_;
}
inline void loginbyvisitor_c2s::set_cbvalidateflags(::google::protobuf::int32 value) {
  
  cbvalidateflags_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginbyvisitor_c2s.cbvalidateflags)
}

// -------------------------------------------------------------------

// loginsuccess_s2c

// .NullPmd.response respcmd = 1;
inline bool loginsuccess_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
inline void loginsuccess_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
inline const ::NullPmd::response& loginsuccess_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginsuccess_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
inline ::NullPmd::response* loginsuccess_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginsuccess_s2c.respcmd)
  return respcmd_;
}
inline ::NullPmd::response* loginsuccess_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginsuccess_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
inline void loginsuccess_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginsuccess_s2c.respcmd)
}

// .CommonPmd.personinfo personinfo = 2;
inline bool loginsuccess_s2c::has_personinfo() const {
  return this != internal_default_instance() && personinfo_ != NULL;
}
inline void loginsuccess_s2c::clear_personinfo() {
  if (GetArenaNoVirtual() == NULL && personinfo_ != NULL) delete personinfo_;
  personinfo_ = NULL;
}
inline const ::CommonPmd::personinfo& loginsuccess_s2c::personinfo() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginsuccess_s2c.personinfo)
  return personinfo_ != NULL ? *personinfo_
                         : *::CommonPmd::personinfo::internal_default_instance();
}
inline ::CommonPmd::personinfo* loginsuccess_s2c::mutable_personinfo() {
  
  if (personinfo_ == NULL) {
    personinfo_ = new ::CommonPmd::personinfo;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginsuccess_s2c.personinfo)
  return personinfo_;
}
inline ::CommonPmd::personinfo* loginsuccess_s2c::release_personinfo() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginsuccess_s2c.personinfo)
  
  ::CommonPmd::personinfo* temp = personinfo_;
  personinfo_ = NULL;
  return temp;
}
inline void loginsuccess_s2c::set_allocated_personinfo(::CommonPmd::personinfo* personinfo) {
  delete personinfo_;
  personinfo_ = personinfo;
  if (personinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginsuccess_s2c.personinfo)
}

// -------------------------------------------------------------------

// loginfinish_s2c

// .NullPmd.response respcmd = 1;
inline bool loginfinish_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
inline void loginfinish_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
inline const ::NullPmd::response& loginfinish_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginfinish_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
inline ::NullPmd::response* loginfinish_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginfinish_s2c.respcmd)
  return respcmd_;
}
inline ::NullPmd::response* loginfinish_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginfinish_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
inline void loginfinish_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginfinish_s2c.respcmd)
}

// int32 wIntermitTime = 2;
inline void loginfinish_s2c::clear_wintermittime() {
  wintermittime_ = 0;
}
inline ::google::protobuf::int32 loginfinish_s2c::wintermittime() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginfinish_s2c.wIntermitTime)
  return wintermittime_;
}
inline void loginfinish_s2c::set_wintermittime(::google::protobuf::int32 value) {
  
  wintermittime_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginfinish_s2c.wIntermitTime)
}

// int32 wOnLineCountTime = 3;
inline void loginfinish_s2c::clear_wonlinecounttime() {
  wonlinecounttime_ = 0;
}
inline ::google::protobuf::int32 loginfinish_s2c::wonlinecounttime() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginfinish_s2c.wOnLineCountTime)
  return wonlinecounttime_;
}
inline void loginfinish_s2c::set_wonlinecounttime(::google::protobuf::int32 value) {
  
  wonlinecounttime_ = value;
  // @@protoc_insertion_point(field_set:LoginPmd.loginfinish_s2c.wOnLineCountTime)
}

// -------------------------------------------------------------------

// loginfailure_s2c

// .NullPmd.response respcmd = 1;
inline bool loginfailure_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
inline void loginfailure_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
inline const ::NullPmd::response& loginfailure_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:LoginPmd.loginfailure_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
inline ::NullPmd::response* loginfailure_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:LoginPmd.loginfailure_s2c.respcmd)
  return respcmd_;
}
inline ::NullPmd::response* loginfailure_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:LoginPmd.loginfailure_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
inline void loginfailure_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LoginPmd.loginfailure_s2c.respcmd)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace LoginPmd

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LoginPmd_2eproto__INCLUDED
