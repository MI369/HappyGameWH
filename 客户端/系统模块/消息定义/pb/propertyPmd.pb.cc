// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: propertyPmd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "propertyPmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace propertyPmd {
class tagPropertyTypeItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<tagPropertyTypeItem> {
} _tagPropertyTypeItem_default_instance_;
class tagPropertyRelatItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<tagPropertyRelatItem> {
} _tagPropertyRelatItem_default_instance_;
class tagPropertyItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<tagPropertyItem> {
} _tagPropertyItem_default_instance_;
class tagPropertySubItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<tagPropertySubItem> {
} _tagPropertySubItem_default_instance_;
class tagPropertyTypeItem_s2cDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<tagPropertyTypeItem_s2c> {
} _tagPropertyTypeItem_s2c_default_instance_;
class tagPropertyRelatItem_s2cDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<tagPropertyRelatItem_s2c> {
} _tagPropertyRelatItem_s2c_default_instance_;
class tagPropertyItem_s2cDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<tagPropertyItem_s2c> {
} _tagPropertyItem_s2c_default_instance_;
class tagPropertySubItem_s2cDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<tagPropertySubItem_s2c> {
} _tagPropertySubItem_s2c_default_instance_;

namespace protobuf_propertyPmd_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyTypeItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyTypeItem, dwtypeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyTypeItem, dwsortid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyTypeItem, sztypename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyRelatItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyRelatItem, respcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyRelatItem, dwpropertyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyRelatItem, dwtypeid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, dwpropertyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, dwpropertykind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, cbusearea_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, cbservicearea_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, cbrecommend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, dwexchangeratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, lpropertydiamond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, lpropertygold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, dpropertycash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, lpropertyusermedal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, lpropertyloveliness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, lsendloveliness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, lrecvloveliness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, luseresultsgold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, dwuseresultsvalidtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, dwuseresultsvalidtimescoremultiple_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, dwuseresultsgiftpackage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, dwsortid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, szname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem, szregulationsinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertySubItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertySubItem, dwpropertyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertySubItem, dwownerpropertyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertySubItem, dwpropertycount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertySubItem, dwsortid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyTypeItem_s2c, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyTypeItem_s2c, respcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyTypeItem_s2c, tagpropertytypeitem_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyRelatItem_s2c, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyRelatItem_s2c, respcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyRelatItem_s2c, tagpropertyrelatitem_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem_s2c, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem_s2c, respcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertyItem_s2c, tagpropertyitem_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertySubItem_s2c, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertySubItem_s2c, respcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tagPropertySubItem_s2c, tagpropertysubitem_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(tagPropertyTypeItem)},
  { 7, -1, sizeof(tagPropertyRelatItem)},
  { 14, -1, sizeof(tagPropertyItem)},
  { 38, -1, sizeof(tagPropertySubItem)},
  { 46, -1, sizeof(tagPropertyTypeItem_s2c)},
  { 52, -1, sizeof(tagPropertyRelatItem_s2c)},
  { 58, -1, sizeof(tagPropertyItem_s2c)},
  { 64, -1, sizeof(tagPropertySubItem_s2c)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_tagPropertyTypeItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_tagPropertyRelatItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_tagPropertyItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_tagPropertySubItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_tagPropertyTypeItem_s2c_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_tagPropertyRelatItem_s2c_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_tagPropertyItem_s2c_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_tagPropertySubItem_s2c_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "propertyPmd.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace

void TableStruct::Shutdown() {
  _tagPropertyTypeItem_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _tagPropertyRelatItem_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _tagPropertyItem_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _tagPropertySubItem_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _tagPropertyTypeItem_s2c_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _tagPropertyRelatItem_s2c_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _tagPropertyItem_s2c_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _tagPropertySubItem_s2c_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::NullPmd::protobuf_NullPmd_2eproto::InitDefaults();
  _tagPropertyTypeItem_default_instance_.DefaultConstruct();
  _tagPropertyRelatItem_default_instance_.DefaultConstruct();
  _tagPropertyItem_default_instance_.DefaultConstruct();
  _tagPropertySubItem_default_instance_.DefaultConstruct();
  _tagPropertyTypeItem_s2c_default_instance_.DefaultConstruct();
  _tagPropertyRelatItem_s2c_default_instance_.DefaultConstruct();
  _tagPropertyItem_s2c_default_instance_.DefaultConstruct();
  _tagPropertySubItem_s2c_default_instance_.DefaultConstruct();
  _tagPropertyRelatItem_default_instance_.get_mutable()->respcmd_ = const_cast< ::NullPmd::response*>(
      ::NullPmd::response::internal_default_instance());
  _tagPropertyTypeItem_s2c_default_instance_.get_mutable()->respcmd_ = const_cast< ::NullPmd::response*>(
      ::NullPmd::response::internal_default_instance());
  _tagPropertyRelatItem_s2c_default_instance_.get_mutable()->respcmd_ = const_cast< ::NullPmd::response*>(
      ::NullPmd::response::internal_default_instance());
  _tagPropertyItem_s2c_default_instance_.get_mutable()->respcmd_ = const_cast< ::NullPmd::response*>(
      ::NullPmd::response::internal_default_instance());
  _tagPropertySubItem_s2c_default_instance_.get_mutable()->respcmd_ = const_cast< ::NullPmd::response*>(
      ::NullPmd::response::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\021propertyPmd.proto\022\013propertyPmd\032\rNullPm"
      "d.proto\"M\n\023tagPropertyTypeItem\022\020\n\010dwtype"
      "id\030\001 \001(\004\022\020\n\010dwsortid\030\002 \001(\004\022\022\n\nsztypename"
      "\030\003 \001(\t\"b\n\024tagPropertyRelatItem\022\"\n\007respcm"
      "d\030\001 \001(\0132\021.NullPmd.response\022\024\n\014dwproperty"
      "id\030\002 \001(\004\022\020\n\010dwtypeid\030\003 \001(\004\"\214\004\n\017tagProper"
      "tyItem\022\024\n\014dwpropertyid\030\001 \001(\004\022\026\n\016dwproper"
      "tykind\030\002 \001(\004\022\021\n\tcbusearea\030\003 \001(\005\022\025\n\rcbser"
      "vicearea\030\004 \001(\005\022\023\n\013cbrecommend\030\005 \001(\005\022\027\n\017d"
      "wexchangeratio\030\006 \001(\004\022\030\n\020lpropertydiamond"
      "\030\007 \001(\004\022\025\n\rlpropertygold\030\010 \001(\004\022\025\n\rdproper"
      "tycash\030\t \001(\001\022\032\n\022lpropertyusermedal\030\n \001(\004"
      "\022\033\n\023lpropertyloveliness\030\013 \001(\004\022\027\n\017lsendlo"
      "veliness\030\014 \001(\004\022\027\n\017lrecvloveliness\030\r \001(\004\022"
      "\027\n\017luseresultsgold\030\016 \001(\004\022\035\n\025dwuseresults"
      "validtime\030\017 \001(\004\022*\n\"dwuseresultsvalidtime"
      "scoremultiple\030\020 \001(\004\022\037\n\027dwuseresultsgiftp"
      "ackage\030\021 \001(\004\022\020\n\010dwsortid\030\022 \001(\004\022\016\n\006szname"
      "\030\023 \001(\t\022\031\n\021szregulationsinfo\030\024 \001(\t\"p\n\022tag"
      "PropertySubItem\022\024\n\014dwpropertyid\030\001 \001(\004\022\031\n"
      "\021dwownerpropertyid\030\002 \001(\004\022\027\n\017dwpropertyco"
      "unt\030\003 \001(\004\022\020\n\010dwsortid\030\004 \001(\004\"|\n\027tagProper"
      "tyTypeItem_s2c\022\"\n\007respcmd\030\001 \001(\0132\021.NullPm"
      "d.response\022=\n\023tagPropertyTypeItem\030\002 \003(\0132"
      " .propertyPmd.tagPropertyTypeItem\"\177\n\030tag"
      "PropertyRelatItem_s2c\022\"\n\007respcmd\030\001 \001(\0132\021"
      ".NullPmd.response\022\?\n\024tagPropertyRelatIte"
      "m\030\002 \003(\0132!.propertyPmd.tagPropertyRelatIt"
      "em\"p\n\023tagPropertyItem_s2c\022\"\n\007respcmd\030\001 \001"
      "(\0132\021.NullPmd.response\0225\n\017tagPropertyItem"
      "\030\002 \003(\0132\034.propertyPmd.tagPropertyItem\"y\n\026"
      "tagPropertySubItem_s2c\022\"\n\007respcmd\030\001 \001(\0132"
      "\021.NullPmd.response\022;\n\022tagPropertySubItem"
      "\030\002 \003(\0132\037.propertyPmd.tagPropertySubItemb"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1367);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "propertyPmd.proto", &protobuf_RegisterTypes);
  ::NullPmd::protobuf_NullPmd_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_propertyPmd_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tagPropertyTypeItem::kDwtypeidFieldNumber;
const int tagPropertyTypeItem::kDwsortidFieldNumber;
const int tagPropertyTypeItem::kSztypenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tagPropertyTypeItem::tagPropertyTypeItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_propertyPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:propertyPmd.tagPropertyTypeItem)
}
tagPropertyTypeItem::tagPropertyTypeItem(const tagPropertyTypeItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sztypename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sztypename().size() > 0) {
    sztypename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sztypename_);
  }
  ::memcpy(&dwtypeid_, &from.dwtypeid_,
    reinterpret_cast<char*>(&dwsortid_) -
    reinterpret_cast<char*>(&dwtypeid_) + sizeof(dwsortid_));
  // @@protoc_insertion_point(copy_constructor:propertyPmd.tagPropertyTypeItem)
}

void tagPropertyTypeItem::SharedCtor() {
  sztypename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dwtypeid_, 0, reinterpret_cast<char*>(&dwsortid_) -
    reinterpret_cast<char*>(&dwtypeid_) + sizeof(dwsortid_));
  _cached_size_ = 0;
}

tagPropertyTypeItem::~tagPropertyTypeItem() {
  // @@protoc_insertion_point(destructor:propertyPmd.tagPropertyTypeItem)
  SharedDtor();
}

void tagPropertyTypeItem::SharedDtor() {
  sztypename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tagPropertyTypeItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tagPropertyTypeItem::descriptor() {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[0].descriptor;
}

const tagPropertyTypeItem& tagPropertyTypeItem::default_instance() {
  protobuf_propertyPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

tagPropertyTypeItem* tagPropertyTypeItem::New(::google::protobuf::Arena* arena) const {
  tagPropertyTypeItem* n = new tagPropertyTypeItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tagPropertyTypeItem::Clear() {
// @@protoc_insertion_point(message_clear_start:propertyPmd.tagPropertyTypeItem)
  sztypename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dwtypeid_, 0, reinterpret_cast<char*>(&dwsortid_) -
    reinterpret_cast<char*>(&dwtypeid_) + sizeof(dwsortid_));
}

bool tagPropertyTypeItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:propertyPmd.tagPropertyTypeItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 dwtypeid = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwtypeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwsortid = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwsortid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sztypename = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sztypename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sztypename().data(), this->sztypename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "propertyPmd.tagPropertyTypeItem.sztypename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:propertyPmd.tagPropertyTypeItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:propertyPmd.tagPropertyTypeItem)
  return false;
#undef DO_
}

void tagPropertyTypeItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:propertyPmd.tagPropertyTypeItem)
  // uint64 dwtypeid = 1;
  if (this->dwtypeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dwtypeid(), output);
  }

  // uint64 dwsortid = 2;
  if (this->dwsortid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dwsortid(), output);
  }

  // string sztypename = 3;
  if (this->sztypename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sztypename().data(), this->sztypename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "propertyPmd.tagPropertyTypeItem.sztypename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sztypename(), output);
  }

  // @@protoc_insertion_point(serialize_end:propertyPmd.tagPropertyTypeItem)
}

::google::protobuf::uint8* tagPropertyTypeItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:propertyPmd.tagPropertyTypeItem)
  // uint64 dwtypeid = 1;
  if (this->dwtypeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->dwtypeid(), target);
  }

  // uint64 dwsortid = 2;
  if (this->dwsortid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dwsortid(), target);
  }

  // string sztypename = 3;
  if (this->sztypename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sztypename().data(), this->sztypename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "propertyPmd.tagPropertyTypeItem.sztypename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sztypename(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:propertyPmd.tagPropertyTypeItem)
  return target;
}

size_t tagPropertyTypeItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:propertyPmd.tagPropertyTypeItem)
  size_t total_size = 0;

  // string sztypename = 3;
  if (this->sztypename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sztypename());
  }

  // uint64 dwtypeid = 1;
  if (this->dwtypeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwtypeid());
  }

  // uint64 dwsortid = 2;
  if (this->dwsortid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwsortid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tagPropertyTypeItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:propertyPmd.tagPropertyTypeItem)
  GOOGLE_DCHECK_NE(&from, this);
  const tagPropertyTypeItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tagPropertyTypeItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:propertyPmd.tagPropertyTypeItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:propertyPmd.tagPropertyTypeItem)
    MergeFrom(*source);
  }
}

void tagPropertyTypeItem::MergeFrom(const tagPropertyTypeItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:propertyPmd.tagPropertyTypeItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.sztypename().size() > 0) {

    sztypename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sztypename_);
  }
  if (from.dwtypeid() != 0) {
    set_dwtypeid(from.dwtypeid());
  }
  if (from.dwsortid() != 0) {
    set_dwsortid(from.dwsortid());
  }
}

void tagPropertyTypeItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:propertyPmd.tagPropertyTypeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tagPropertyTypeItem::CopyFrom(const tagPropertyTypeItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:propertyPmd.tagPropertyTypeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tagPropertyTypeItem::IsInitialized() const {
  return true;
}

void tagPropertyTypeItem::Swap(tagPropertyTypeItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tagPropertyTypeItem::InternalSwap(tagPropertyTypeItem* other) {
  sztypename_.Swap(&other->sztypename_);
  std::swap(dwtypeid_, other->dwtypeid_);
  std::swap(dwsortid_, other->dwsortid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tagPropertyTypeItem::GetMetadata() const {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// tagPropertyTypeItem

// uint64 dwtypeid = 1;
void tagPropertyTypeItem::clear_dwtypeid() {
  dwtypeid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyTypeItem::dwtypeid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyTypeItem.dwtypeid)
  return dwtypeid_;
}
void tagPropertyTypeItem::set_dwtypeid(::google::protobuf::uint64 value) {
  
  dwtypeid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyTypeItem.dwtypeid)
}

// uint64 dwsortid = 2;
void tagPropertyTypeItem::clear_dwsortid() {
  dwsortid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyTypeItem::dwsortid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyTypeItem.dwsortid)
  return dwsortid_;
}
void tagPropertyTypeItem::set_dwsortid(::google::protobuf::uint64 value) {
  
  dwsortid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyTypeItem.dwsortid)
}

// string sztypename = 3;
void tagPropertyTypeItem::clear_sztypename() {
  sztypename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tagPropertyTypeItem::sztypename() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyTypeItem.sztypename)
  return sztypename_.GetNoArena();
}
void tagPropertyTypeItem::set_sztypename(const ::std::string& value) {
  
  sztypename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyTypeItem.sztypename)
}
#if LANG_CXX11
void tagPropertyTypeItem::set_sztypename(::std::string&& value) {
  
  sztypename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:propertyPmd.tagPropertyTypeItem.sztypename)
}
#endif
void tagPropertyTypeItem::set_sztypename(const char* value) {
  
  sztypename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:propertyPmd.tagPropertyTypeItem.sztypename)
}
void tagPropertyTypeItem::set_sztypename(const char* value, size_t size) {
  
  sztypename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:propertyPmd.tagPropertyTypeItem.sztypename)
}
::std::string* tagPropertyTypeItem::mutable_sztypename() {
  
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyTypeItem.sztypename)
  return sztypename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tagPropertyTypeItem::release_sztypename() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertyTypeItem.sztypename)
  
  return sztypename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tagPropertyTypeItem::set_allocated_sztypename(::std::string* sztypename) {
  if (sztypename != NULL) {
    
  } else {
    
  }
  sztypename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sztypename);
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertyTypeItem.sztypename)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tagPropertyRelatItem::kRespcmdFieldNumber;
const int tagPropertyRelatItem::kDwpropertyidFieldNumber;
const int tagPropertyRelatItem::kDwtypeidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tagPropertyRelatItem::tagPropertyRelatItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_propertyPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:propertyPmd.tagPropertyRelatItem)
}
tagPropertyRelatItem::tagPropertyRelatItem(const tagPropertyRelatItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_respcmd()) {
    respcmd_ = new ::NullPmd::response(*from.respcmd_);
  } else {
    respcmd_ = NULL;
  }
  ::memcpy(&dwpropertyid_, &from.dwpropertyid_,
    reinterpret_cast<char*>(&dwtypeid_) -
    reinterpret_cast<char*>(&dwpropertyid_) + sizeof(dwtypeid_));
  // @@protoc_insertion_point(copy_constructor:propertyPmd.tagPropertyRelatItem)
}

void tagPropertyRelatItem::SharedCtor() {
  ::memset(&respcmd_, 0, reinterpret_cast<char*>(&dwtypeid_) -
    reinterpret_cast<char*>(&respcmd_) + sizeof(dwtypeid_));
  _cached_size_ = 0;
}

tagPropertyRelatItem::~tagPropertyRelatItem() {
  // @@protoc_insertion_point(destructor:propertyPmd.tagPropertyRelatItem)
  SharedDtor();
}

void tagPropertyRelatItem::SharedDtor() {
  if (this != internal_default_instance()) {
    delete respcmd_;
  }
}

void tagPropertyRelatItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tagPropertyRelatItem::descriptor() {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[1].descriptor;
}

const tagPropertyRelatItem& tagPropertyRelatItem::default_instance() {
  protobuf_propertyPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

tagPropertyRelatItem* tagPropertyRelatItem::New(::google::protobuf::Arena* arena) const {
  tagPropertyRelatItem* n = new tagPropertyRelatItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tagPropertyRelatItem::Clear() {
// @@protoc_insertion_point(message_clear_start:propertyPmd.tagPropertyRelatItem)
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) {
    delete respcmd_;
  }
  respcmd_ = NULL;
  ::memset(&dwpropertyid_, 0, reinterpret_cast<char*>(&dwtypeid_) -
    reinterpret_cast<char*>(&dwpropertyid_) + sizeof(dwtypeid_));
}

bool tagPropertyRelatItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:propertyPmd.tagPropertyRelatItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NullPmd.response respcmd = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_respcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwpropertyid = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwpropertyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwtypeid = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwtypeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:propertyPmd.tagPropertyRelatItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:propertyPmd.tagPropertyRelatItem)
  return false;
#undef DO_
}

void tagPropertyRelatItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:propertyPmd.tagPropertyRelatItem)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->respcmd_, output);
  }

  // uint64 dwpropertyid = 2;
  if (this->dwpropertyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dwpropertyid(), output);
  }

  // uint64 dwtypeid = 3;
  if (this->dwtypeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->dwtypeid(), output);
  }

  // @@protoc_insertion_point(serialize_end:propertyPmd.tagPropertyRelatItem)
}

::google::protobuf::uint8* tagPropertyRelatItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:propertyPmd.tagPropertyRelatItem)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->respcmd_, false, target);
  }

  // uint64 dwpropertyid = 2;
  if (this->dwpropertyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dwpropertyid(), target);
  }

  // uint64 dwtypeid = 3;
  if (this->dwtypeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->dwtypeid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:propertyPmd.tagPropertyRelatItem)
  return target;
}

size_t tagPropertyRelatItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:propertyPmd.tagPropertyRelatItem)
  size_t total_size = 0;

  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->respcmd_);
  }

  // uint64 dwpropertyid = 2;
  if (this->dwpropertyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwpropertyid());
  }

  // uint64 dwtypeid = 3;
  if (this->dwtypeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwtypeid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tagPropertyRelatItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:propertyPmd.tagPropertyRelatItem)
  GOOGLE_DCHECK_NE(&from, this);
  const tagPropertyRelatItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tagPropertyRelatItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:propertyPmd.tagPropertyRelatItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:propertyPmd.tagPropertyRelatItem)
    MergeFrom(*source);
  }
}

void tagPropertyRelatItem::MergeFrom(const tagPropertyRelatItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:propertyPmd.tagPropertyRelatItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_respcmd()) {
    mutable_respcmd()->::NullPmd::response::MergeFrom(from.respcmd());
  }
  if (from.dwpropertyid() != 0) {
    set_dwpropertyid(from.dwpropertyid());
  }
  if (from.dwtypeid() != 0) {
    set_dwtypeid(from.dwtypeid());
  }
}

void tagPropertyRelatItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:propertyPmd.tagPropertyRelatItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tagPropertyRelatItem::CopyFrom(const tagPropertyRelatItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:propertyPmd.tagPropertyRelatItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tagPropertyRelatItem::IsInitialized() const {
  return true;
}

void tagPropertyRelatItem::Swap(tagPropertyRelatItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tagPropertyRelatItem::InternalSwap(tagPropertyRelatItem* other) {
  std::swap(respcmd_, other->respcmd_);
  std::swap(dwpropertyid_, other->dwpropertyid_);
  std::swap(dwtypeid_, other->dwtypeid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tagPropertyRelatItem::GetMetadata() const {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// tagPropertyRelatItem

// .NullPmd.response respcmd = 1;
bool tagPropertyRelatItem::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
void tagPropertyRelatItem::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
const ::NullPmd::response& tagPropertyRelatItem::respcmd() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyRelatItem.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
::NullPmd::response* tagPropertyRelatItem::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyRelatItem.respcmd)
  return respcmd_;
}
::NullPmd::response* tagPropertyRelatItem::release_respcmd() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertyRelatItem.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
void tagPropertyRelatItem::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertyRelatItem.respcmd)
}

// uint64 dwpropertyid = 2;
void tagPropertyRelatItem::clear_dwpropertyid() {
  dwpropertyid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyRelatItem::dwpropertyid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyRelatItem.dwpropertyid)
  return dwpropertyid_;
}
void tagPropertyRelatItem::set_dwpropertyid(::google::protobuf::uint64 value) {
  
  dwpropertyid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyRelatItem.dwpropertyid)
}

// uint64 dwtypeid = 3;
void tagPropertyRelatItem::clear_dwtypeid() {
  dwtypeid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyRelatItem::dwtypeid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyRelatItem.dwtypeid)
  return dwtypeid_;
}
void tagPropertyRelatItem::set_dwtypeid(::google::protobuf::uint64 value) {
  
  dwtypeid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyRelatItem.dwtypeid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tagPropertyItem::kDwpropertyidFieldNumber;
const int tagPropertyItem::kDwpropertykindFieldNumber;
const int tagPropertyItem::kCbuseareaFieldNumber;
const int tagPropertyItem::kCbserviceareaFieldNumber;
const int tagPropertyItem::kCbrecommendFieldNumber;
const int tagPropertyItem::kDwexchangeratioFieldNumber;
const int tagPropertyItem::kLpropertydiamondFieldNumber;
const int tagPropertyItem::kLpropertygoldFieldNumber;
const int tagPropertyItem::kDpropertycashFieldNumber;
const int tagPropertyItem::kLpropertyusermedalFieldNumber;
const int tagPropertyItem::kLpropertylovelinessFieldNumber;
const int tagPropertyItem::kLsendlovelinessFieldNumber;
const int tagPropertyItem::kLrecvlovelinessFieldNumber;
const int tagPropertyItem::kLuseresultsgoldFieldNumber;
const int tagPropertyItem::kDwuseresultsvalidtimeFieldNumber;
const int tagPropertyItem::kDwuseresultsvalidtimescoremultipleFieldNumber;
const int tagPropertyItem::kDwuseresultsgiftpackageFieldNumber;
const int tagPropertyItem::kDwsortidFieldNumber;
const int tagPropertyItem::kSznameFieldNumber;
const int tagPropertyItem::kSzregulationsinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tagPropertyItem::tagPropertyItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_propertyPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:propertyPmd.tagPropertyItem)
}
tagPropertyItem::tagPropertyItem(const tagPropertyItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szname().size() > 0) {
    szname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szname_);
  }
  szregulationsinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szregulationsinfo().size() > 0) {
    szregulationsinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szregulationsinfo_);
  }
  ::memcpy(&dwpropertyid_, &from.dwpropertyid_,
    reinterpret_cast<char*>(&cbrecommend_) -
    reinterpret_cast<char*>(&dwpropertyid_) + sizeof(cbrecommend_));
  // @@protoc_insertion_point(copy_constructor:propertyPmd.tagPropertyItem)
}

void tagPropertyItem::SharedCtor() {
  szname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szregulationsinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dwpropertyid_, 0, reinterpret_cast<char*>(&cbrecommend_) -
    reinterpret_cast<char*>(&dwpropertyid_) + sizeof(cbrecommend_));
  _cached_size_ = 0;
}

tagPropertyItem::~tagPropertyItem() {
  // @@protoc_insertion_point(destructor:propertyPmd.tagPropertyItem)
  SharedDtor();
}

void tagPropertyItem::SharedDtor() {
  szname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szregulationsinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tagPropertyItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tagPropertyItem::descriptor() {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[2].descriptor;
}

const tagPropertyItem& tagPropertyItem::default_instance() {
  protobuf_propertyPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

tagPropertyItem* tagPropertyItem::New(::google::protobuf::Arena* arena) const {
  tagPropertyItem* n = new tagPropertyItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tagPropertyItem::Clear() {
// @@protoc_insertion_point(message_clear_start:propertyPmd.tagPropertyItem)
  szname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szregulationsinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dwpropertyid_, 0, reinterpret_cast<char*>(&cbrecommend_) -
    reinterpret_cast<char*>(&dwpropertyid_) + sizeof(cbrecommend_));
}

bool tagPropertyItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:propertyPmd.tagPropertyItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 dwpropertyid = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwpropertyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwpropertykind = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwpropertykind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cbusearea = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbusearea_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cbservicearea = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbservicearea_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cbrecommend = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cbrecommend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwexchangeratio = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwexchangeratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 lpropertydiamond = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lpropertydiamond_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 lpropertygold = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lpropertygold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dpropertycash = 9;
      case 9: {
        if (tag == 73u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dpropertycash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 lpropertyusermedal = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lpropertyusermedal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 lpropertyloveliness = 11;
      case 11: {
        if (tag == 88u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lpropertyloveliness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 lsendloveliness = 12;
      case 12: {
        if (tag == 96u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lsendloveliness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 lrecvloveliness = 13;
      case 13: {
        if (tag == 104u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lrecvloveliness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 luseresultsgold = 14;
      case 14: {
        if (tag == 112u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &luseresultsgold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwuseresultsvalidtime = 15;
      case 15: {
        if (tag == 120u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwuseresultsvalidtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwuseresultsvalidtimescoremultiple = 16;
      case 16: {
        if (tag == 128u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwuseresultsvalidtimescoremultiple_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwuseresultsgiftpackage = 17;
      case 17: {
        if (tag == 136u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwuseresultsgiftpackage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwsortid = 18;
      case 18: {
        if (tag == 144u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwsortid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szname = 19;
      case 19: {
        if (tag == 154u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szname().data(), this->szname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "propertyPmd.tagPropertyItem.szname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string szregulationsinfo = 20;
      case 20: {
        if (tag == 162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szregulationsinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->szregulationsinfo().data(), this->szregulationsinfo().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "propertyPmd.tagPropertyItem.szregulationsinfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:propertyPmd.tagPropertyItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:propertyPmd.tagPropertyItem)
  return false;
#undef DO_
}

void tagPropertyItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:propertyPmd.tagPropertyItem)
  // uint64 dwpropertyid = 1;
  if (this->dwpropertyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dwpropertyid(), output);
  }

  // uint64 dwpropertykind = 2;
  if (this->dwpropertykind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dwpropertykind(), output);
  }

  // int32 cbusearea = 3;
  if (this->cbusearea() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cbusearea(), output);
  }

  // int32 cbservicearea = 4;
  if (this->cbservicearea() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cbservicearea(), output);
  }

  // int32 cbrecommend = 5;
  if (this->cbrecommend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cbrecommend(), output);
  }

  // uint64 dwexchangeratio = 6;
  if (this->dwexchangeratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->dwexchangeratio(), output);
  }

  // uint64 lpropertydiamond = 7;
  if (this->lpropertydiamond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->lpropertydiamond(), output);
  }

  // uint64 lpropertygold = 8;
  if (this->lpropertygold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->lpropertygold(), output);
  }

  // double dpropertycash = 9;
  if (this->dpropertycash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->dpropertycash(), output);
  }

  // uint64 lpropertyusermedal = 10;
  if (this->lpropertyusermedal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->lpropertyusermedal(), output);
  }

  // uint64 lpropertyloveliness = 11;
  if (this->lpropertyloveliness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->lpropertyloveliness(), output);
  }

  // uint64 lsendloveliness = 12;
  if (this->lsendloveliness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->lsendloveliness(), output);
  }

  // uint64 lrecvloveliness = 13;
  if (this->lrecvloveliness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->lrecvloveliness(), output);
  }

  // uint64 luseresultsgold = 14;
  if (this->luseresultsgold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->luseresultsgold(), output);
  }

  // uint64 dwuseresultsvalidtime = 15;
  if (this->dwuseresultsvalidtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->dwuseresultsvalidtime(), output);
  }

  // uint64 dwuseresultsvalidtimescoremultiple = 16;
  if (this->dwuseresultsvalidtimescoremultiple() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->dwuseresultsvalidtimescoremultiple(), output);
  }

  // uint64 dwuseresultsgiftpackage = 17;
  if (this->dwuseresultsgiftpackage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(17, this->dwuseresultsgiftpackage(), output);
  }

  // uint64 dwsortid = 18;
  if (this->dwsortid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(18, this->dwsortid(), output);
  }

  // string szname = 19;
  if (this->szname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szname().data(), this->szname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "propertyPmd.tagPropertyItem.szname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->szname(), output);
  }

  // string szregulationsinfo = 20;
  if (this->szregulationsinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szregulationsinfo().data(), this->szregulationsinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "propertyPmd.tagPropertyItem.szregulationsinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->szregulationsinfo(), output);
  }

  // @@protoc_insertion_point(serialize_end:propertyPmd.tagPropertyItem)
}

::google::protobuf::uint8* tagPropertyItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:propertyPmd.tagPropertyItem)
  // uint64 dwpropertyid = 1;
  if (this->dwpropertyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->dwpropertyid(), target);
  }

  // uint64 dwpropertykind = 2;
  if (this->dwpropertykind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dwpropertykind(), target);
  }

  // int32 cbusearea = 3;
  if (this->cbusearea() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cbusearea(), target);
  }

  // int32 cbservicearea = 4;
  if (this->cbservicearea() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cbservicearea(), target);
  }

  // int32 cbrecommend = 5;
  if (this->cbrecommend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cbrecommend(), target);
  }

  // uint64 dwexchangeratio = 6;
  if (this->dwexchangeratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->dwexchangeratio(), target);
  }

  // uint64 lpropertydiamond = 7;
  if (this->lpropertydiamond() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->lpropertydiamond(), target);
  }

  // uint64 lpropertygold = 8;
  if (this->lpropertygold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->lpropertygold(), target);
  }

  // double dpropertycash = 9;
  if (this->dpropertycash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->dpropertycash(), target);
  }

  // uint64 lpropertyusermedal = 10;
  if (this->lpropertyusermedal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->lpropertyusermedal(), target);
  }

  // uint64 lpropertyloveliness = 11;
  if (this->lpropertyloveliness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->lpropertyloveliness(), target);
  }

  // uint64 lsendloveliness = 12;
  if (this->lsendloveliness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->lsendloveliness(), target);
  }

  // uint64 lrecvloveliness = 13;
  if (this->lrecvloveliness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->lrecvloveliness(), target);
  }

  // uint64 luseresultsgold = 14;
  if (this->luseresultsgold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->luseresultsgold(), target);
  }

  // uint64 dwuseresultsvalidtime = 15;
  if (this->dwuseresultsvalidtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->dwuseresultsvalidtime(), target);
  }

  // uint64 dwuseresultsvalidtimescoremultiple = 16;
  if (this->dwuseresultsvalidtimescoremultiple() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->dwuseresultsvalidtimescoremultiple(), target);
  }

  // uint64 dwuseresultsgiftpackage = 17;
  if (this->dwuseresultsgiftpackage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(17, this->dwuseresultsgiftpackage(), target);
  }

  // uint64 dwsortid = 18;
  if (this->dwsortid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(18, this->dwsortid(), target);
  }

  // string szname = 19;
  if (this->szname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szname().data(), this->szname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "propertyPmd.tagPropertyItem.szname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->szname(), target);
  }

  // string szregulationsinfo = 20;
  if (this->szregulationsinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->szregulationsinfo().data(), this->szregulationsinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "propertyPmd.tagPropertyItem.szregulationsinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->szregulationsinfo(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:propertyPmd.tagPropertyItem)
  return target;
}

size_t tagPropertyItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:propertyPmd.tagPropertyItem)
  size_t total_size = 0;

  // string szname = 19;
  if (this->szname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szname());
  }

  // string szregulationsinfo = 20;
  if (this->szregulationsinfo().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szregulationsinfo());
  }

  // uint64 dwpropertyid = 1;
  if (this->dwpropertyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwpropertyid());
  }

  // uint64 dwpropertykind = 2;
  if (this->dwpropertykind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwpropertykind());
  }

  // int32 cbusearea = 3;
  if (this->cbusearea() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbusearea());
  }

  // int32 cbservicearea = 4;
  if (this->cbservicearea() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbservicearea());
  }

  // uint64 dwexchangeratio = 6;
  if (this->dwexchangeratio() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwexchangeratio());
  }

  // uint64 lpropertydiamond = 7;
  if (this->lpropertydiamond() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lpropertydiamond());
  }

  // uint64 lpropertygold = 8;
  if (this->lpropertygold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lpropertygold());
  }

  // double dpropertycash = 9;
  if (this->dpropertycash() != 0) {
    total_size += 1 + 8;
  }

  // uint64 lpropertyusermedal = 10;
  if (this->lpropertyusermedal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lpropertyusermedal());
  }

  // uint64 lpropertyloveliness = 11;
  if (this->lpropertyloveliness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lpropertyloveliness());
  }

  // uint64 lsendloveliness = 12;
  if (this->lsendloveliness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lsendloveliness());
  }

  // uint64 lrecvloveliness = 13;
  if (this->lrecvloveliness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lrecvloveliness());
  }

  // uint64 luseresultsgold = 14;
  if (this->luseresultsgold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->luseresultsgold());
  }

  // uint64 dwuseresultsvalidtime = 15;
  if (this->dwuseresultsvalidtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwuseresultsvalidtime());
  }

  // uint64 dwuseresultsvalidtimescoremultiple = 16;
  if (this->dwuseresultsvalidtimescoremultiple() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwuseresultsvalidtimescoremultiple());
  }

  // uint64 dwuseresultsgiftpackage = 17;
  if (this->dwuseresultsgiftpackage() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwuseresultsgiftpackage());
  }

  // uint64 dwsortid = 18;
  if (this->dwsortid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwsortid());
  }

  // int32 cbrecommend = 5;
  if (this->cbrecommend() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cbrecommend());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tagPropertyItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:propertyPmd.tagPropertyItem)
  GOOGLE_DCHECK_NE(&from, this);
  const tagPropertyItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tagPropertyItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:propertyPmd.tagPropertyItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:propertyPmd.tagPropertyItem)
    MergeFrom(*source);
  }
}

void tagPropertyItem::MergeFrom(const tagPropertyItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:propertyPmd.tagPropertyItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.szname().size() > 0) {

    szname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szname_);
  }
  if (from.szregulationsinfo().size() > 0) {

    szregulationsinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szregulationsinfo_);
  }
  if (from.dwpropertyid() != 0) {
    set_dwpropertyid(from.dwpropertyid());
  }
  if (from.dwpropertykind() != 0) {
    set_dwpropertykind(from.dwpropertykind());
  }
  if (from.cbusearea() != 0) {
    set_cbusearea(from.cbusearea());
  }
  if (from.cbservicearea() != 0) {
    set_cbservicearea(from.cbservicearea());
  }
  if (from.dwexchangeratio() != 0) {
    set_dwexchangeratio(from.dwexchangeratio());
  }
  if (from.lpropertydiamond() != 0) {
    set_lpropertydiamond(from.lpropertydiamond());
  }
  if (from.lpropertygold() != 0) {
    set_lpropertygold(from.lpropertygold());
  }
  if (from.dpropertycash() != 0) {
    set_dpropertycash(from.dpropertycash());
  }
  if (from.lpropertyusermedal() != 0) {
    set_lpropertyusermedal(from.lpropertyusermedal());
  }
  if (from.lpropertyloveliness() != 0) {
    set_lpropertyloveliness(from.lpropertyloveliness());
  }
  if (from.lsendloveliness() != 0) {
    set_lsendloveliness(from.lsendloveliness());
  }
  if (from.lrecvloveliness() != 0) {
    set_lrecvloveliness(from.lrecvloveliness());
  }
  if (from.luseresultsgold() != 0) {
    set_luseresultsgold(from.luseresultsgold());
  }
  if (from.dwuseresultsvalidtime() != 0) {
    set_dwuseresultsvalidtime(from.dwuseresultsvalidtime());
  }
  if (from.dwuseresultsvalidtimescoremultiple() != 0) {
    set_dwuseresultsvalidtimescoremultiple(from.dwuseresultsvalidtimescoremultiple());
  }
  if (from.dwuseresultsgiftpackage() != 0) {
    set_dwuseresultsgiftpackage(from.dwuseresultsgiftpackage());
  }
  if (from.dwsortid() != 0) {
    set_dwsortid(from.dwsortid());
  }
  if (from.cbrecommend() != 0) {
    set_cbrecommend(from.cbrecommend());
  }
}

void tagPropertyItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:propertyPmd.tagPropertyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tagPropertyItem::CopyFrom(const tagPropertyItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:propertyPmd.tagPropertyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tagPropertyItem::IsInitialized() const {
  return true;
}

void tagPropertyItem::Swap(tagPropertyItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tagPropertyItem::InternalSwap(tagPropertyItem* other) {
  szname_.Swap(&other->szname_);
  szregulationsinfo_.Swap(&other->szregulationsinfo_);
  std::swap(dwpropertyid_, other->dwpropertyid_);
  std::swap(dwpropertykind_, other->dwpropertykind_);
  std::swap(cbusearea_, other->cbusearea_);
  std::swap(cbservicearea_, other->cbservicearea_);
  std::swap(dwexchangeratio_, other->dwexchangeratio_);
  std::swap(lpropertydiamond_, other->lpropertydiamond_);
  std::swap(lpropertygold_, other->lpropertygold_);
  std::swap(dpropertycash_, other->dpropertycash_);
  std::swap(lpropertyusermedal_, other->lpropertyusermedal_);
  std::swap(lpropertyloveliness_, other->lpropertyloveliness_);
  std::swap(lsendloveliness_, other->lsendloveliness_);
  std::swap(lrecvloveliness_, other->lrecvloveliness_);
  std::swap(luseresultsgold_, other->luseresultsgold_);
  std::swap(dwuseresultsvalidtime_, other->dwuseresultsvalidtime_);
  std::swap(dwuseresultsvalidtimescoremultiple_, other->dwuseresultsvalidtimescoremultiple_);
  std::swap(dwuseresultsgiftpackage_, other->dwuseresultsgiftpackage_);
  std::swap(dwsortid_, other->dwsortid_);
  std::swap(cbrecommend_, other->cbrecommend_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tagPropertyItem::GetMetadata() const {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// tagPropertyItem

// uint64 dwpropertyid = 1;
void tagPropertyItem::clear_dwpropertyid() {
  dwpropertyid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyItem::dwpropertyid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dwpropertyid)
  return dwpropertyid_;
}
void tagPropertyItem::set_dwpropertyid(::google::protobuf::uint64 value) {
  
  dwpropertyid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dwpropertyid)
}

// uint64 dwpropertykind = 2;
void tagPropertyItem::clear_dwpropertykind() {
  dwpropertykind_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyItem::dwpropertykind() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dwpropertykind)
  return dwpropertykind_;
}
void tagPropertyItem::set_dwpropertykind(::google::protobuf::uint64 value) {
  
  dwpropertykind_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dwpropertykind)
}

// int32 cbusearea = 3;
void tagPropertyItem::clear_cbusearea() {
  cbusearea_ = 0;
}
::google::protobuf::int32 tagPropertyItem::cbusearea() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.cbusearea)
  return cbusearea_;
}
void tagPropertyItem::set_cbusearea(::google::protobuf::int32 value) {
  
  cbusearea_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.cbusearea)
}

// int32 cbservicearea = 4;
void tagPropertyItem::clear_cbservicearea() {
  cbservicearea_ = 0;
}
::google::protobuf::int32 tagPropertyItem::cbservicearea() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.cbservicearea)
  return cbservicearea_;
}
void tagPropertyItem::set_cbservicearea(::google::protobuf::int32 value) {
  
  cbservicearea_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.cbservicearea)
}

// int32 cbrecommend = 5;
void tagPropertyItem::clear_cbrecommend() {
  cbrecommend_ = 0;
}
::google::protobuf::int32 tagPropertyItem::cbrecommend() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.cbrecommend)
  return cbrecommend_;
}
void tagPropertyItem::set_cbrecommend(::google::protobuf::int32 value) {
  
  cbrecommend_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.cbrecommend)
}

// uint64 dwexchangeratio = 6;
void tagPropertyItem::clear_dwexchangeratio() {
  dwexchangeratio_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyItem::dwexchangeratio() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dwexchangeratio)
  return dwexchangeratio_;
}
void tagPropertyItem::set_dwexchangeratio(::google::protobuf::uint64 value) {
  
  dwexchangeratio_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dwexchangeratio)
}

// uint64 lpropertydiamond = 7;
void tagPropertyItem::clear_lpropertydiamond() {
  lpropertydiamond_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyItem::lpropertydiamond() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.lpropertydiamond)
  return lpropertydiamond_;
}
void tagPropertyItem::set_lpropertydiamond(::google::protobuf::uint64 value) {
  
  lpropertydiamond_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.lpropertydiamond)
}

// uint64 lpropertygold = 8;
void tagPropertyItem::clear_lpropertygold() {
  lpropertygold_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyItem::lpropertygold() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.lpropertygold)
  return lpropertygold_;
}
void tagPropertyItem::set_lpropertygold(::google::protobuf::uint64 value) {
  
  lpropertygold_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.lpropertygold)
}

// double dpropertycash = 9;
void tagPropertyItem::clear_dpropertycash() {
  dpropertycash_ = 0;
}
double tagPropertyItem::dpropertycash() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dpropertycash)
  return dpropertycash_;
}
void tagPropertyItem::set_dpropertycash(double value) {
  
  dpropertycash_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dpropertycash)
}

// uint64 lpropertyusermedal = 10;
void tagPropertyItem::clear_lpropertyusermedal() {
  lpropertyusermedal_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyItem::lpropertyusermedal() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.lpropertyusermedal)
  return lpropertyusermedal_;
}
void tagPropertyItem::set_lpropertyusermedal(::google::protobuf::uint64 value) {
  
  lpropertyusermedal_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.lpropertyusermedal)
}

// uint64 lpropertyloveliness = 11;
void tagPropertyItem::clear_lpropertyloveliness() {
  lpropertyloveliness_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyItem::lpropertyloveliness() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.lpropertyloveliness)
  return lpropertyloveliness_;
}
void tagPropertyItem::set_lpropertyloveliness(::google::protobuf::uint64 value) {
  
  lpropertyloveliness_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.lpropertyloveliness)
}

// uint64 lsendloveliness = 12;
void tagPropertyItem::clear_lsendloveliness() {
  lsendloveliness_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyItem::lsendloveliness() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.lsendloveliness)
  return lsendloveliness_;
}
void tagPropertyItem::set_lsendloveliness(::google::protobuf::uint64 value) {
  
  lsendloveliness_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.lsendloveliness)
}

// uint64 lrecvloveliness = 13;
void tagPropertyItem::clear_lrecvloveliness() {
  lrecvloveliness_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyItem::lrecvloveliness() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.lrecvloveliness)
  return lrecvloveliness_;
}
void tagPropertyItem::set_lrecvloveliness(::google::protobuf::uint64 value) {
  
  lrecvloveliness_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.lrecvloveliness)
}

// uint64 luseresultsgold = 14;
void tagPropertyItem::clear_luseresultsgold() {
  luseresultsgold_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyItem::luseresultsgold() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.luseresultsgold)
  return luseresultsgold_;
}
void tagPropertyItem::set_luseresultsgold(::google::protobuf::uint64 value) {
  
  luseresultsgold_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.luseresultsgold)
}

// uint64 dwuseresultsvalidtime = 15;
void tagPropertyItem::clear_dwuseresultsvalidtime() {
  dwuseresultsvalidtime_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyItem::dwuseresultsvalidtime() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dwuseresultsvalidtime)
  return dwuseresultsvalidtime_;
}
void tagPropertyItem::set_dwuseresultsvalidtime(::google::protobuf::uint64 value) {
  
  dwuseresultsvalidtime_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dwuseresultsvalidtime)
}

// uint64 dwuseresultsvalidtimescoremultiple = 16;
void tagPropertyItem::clear_dwuseresultsvalidtimescoremultiple() {
  dwuseresultsvalidtimescoremultiple_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyItem::dwuseresultsvalidtimescoremultiple() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dwuseresultsvalidtimescoremultiple)
  return dwuseresultsvalidtimescoremultiple_;
}
void tagPropertyItem::set_dwuseresultsvalidtimescoremultiple(::google::protobuf::uint64 value) {
  
  dwuseresultsvalidtimescoremultiple_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dwuseresultsvalidtimescoremultiple)
}

// uint64 dwuseresultsgiftpackage = 17;
void tagPropertyItem::clear_dwuseresultsgiftpackage() {
  dwuseresultsgiftpackage_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyItem::dwuseresultsgiftpackage() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dwuseresultsgiftpackage)
  return dwuseresultsgiftpackage_;
}
void tagPropertyItem::set_dwuseresultsgiftpackage(::google::protobuf::uint64 value) {
  
  dwuseresultsgiftpackage_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dwuseresultsgiftpackage)
}

// uint64 dwsortid = 18;
void tagPropertyItem::clear_dwsortid() {
  dwsortid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertyItem::dwsortid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.dwsortid)
  return dwsortid_;
}
void tagPropertyItem::set_dwsortid(::google::protobuf::uint64 value) {
  
  dwsortid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.dwsortid)
}

// string szname = 19;
void tagPropertyItem::clear_szname() {
  szname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tagPropertyItem::szname() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.szname)
  return szname_.GetNoArena();
}
void tagPropertyItem::set_szname(const ::std::string& value) {
  
  szname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.szname)
}
#if LANG_CXX11
void tagPropertyItem::set_szname(::std::string&& value) {
  
  szname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:propertyPmd.tagPropertyItem.szname)
}
#endif
void tagPropertyItem::set_szname(const char* value) {
  
  szname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:propertyPmd.tagPropertyItem.szname)
}
void tagPropertyItem::set_szname(const char* value, size_t size) {
  
  szname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:propertyPmd.tagPropertyItem.szname)
}
::std::string* tagPropertyItem::mutable_szname() {
  
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyItem.szname)
  return szname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tagPropertyItem::release_szname() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertyItem.szname)
  
  return szname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tagPropertyItem::set_allocated_szname(::std::string* szname) {
  if (szname != NULL) {
    
  } else {
    
  }
  szname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szname);
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertyItem.szname)
}

// string szregulationsinfo = 20;
void tagPropertyItem::clear_szregulationsinfo() {
  szregulationsinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tagPropertyItem::szregulationsinfo() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem.szregulationsinfo)
  return szregulationsinfo_.GetNoArena();
}
void tagPropertyItem::set_szregulationsinfo(const ::std::string& value) {
  
  szregulationsinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertyItem.szregulationsinfo)
}
#if LANG_CXX11
void tagPropertyItem::set_szregulationsinfo(::std::string&& value) {
  
  szregulationsinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:propertyPmd.tagPropertyItem.szregulationsinfo)
}
#endif
void tagPropertyItem::set_szregulationsinfo(const char* value) {
  
  szregulationsinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:propertyPmd.tagPropertyItem.szregulationsinfo)
}
void tagPropertyItem::set_szregulationsinfo(const char* value, size_t size) {
  
  szregulationsinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:propertyPmd.tagPropertyItem.szregulationsinfo)
}
::std::string* tagPropertyItem::mutable_szregulationsinfo() {
  
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyItem.szregulationsinfo)
  return szregulationsinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tagPropertyItem::release_szregulationsinfo() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertyItem.szregulationsinfo)
  
  return szregulationsinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tagPropertyItem::set_allocated_szregulationsinfo(::std::string* szregulationsinfo) {
  if (szregulationsinfo != NULL) {
    
  } else {
    
  }
  szregulationsinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szregulationsinfo);
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertyItem.szregulationsinfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tagPropertySubItem::kDwpropertyidFieldNumber;
const int tagPropertySubItem::kDwownerpropertyidFieldNumber;
const int tagPropertySubItem::kDwpropertycountFieldNumber;
const int tagPropertySubItem::kDwsortidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tagPropertySubItem::tagPropertySubItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_propertyPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:propertyPmd.tagPropertySubItem)
}
tagPropertySubItem::tagPropertySubItem(const tagPropertySubItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dwpropertyid_, &from.dwpropertyid_,
    reinterpret_cast<char*>(&dwsortid_) -
    reinterpret_cast<char*>(&dwpropertyid_) + sizeof(dwsortid_));
  // @@protoc_insertion_point(copy_constructor:propertyPmd.tagPropertySubItem)
}

void tagPropertySubItem::SharedCtor() {
  ::memset(&dwpropertyid_, 0, reinterpret_cast<char*>(&dwsortid_) -
    reinterpret_cast<char*>(&dwpropertyid_) + sizeof(dwsortid_));
  _cached_size_ = 0;
}

tagPropertySubItem::~tagPropertySubItem() {
  // @@protoc_insertion_point(destructor:propertyPmd.tagPropertySubItem)
  SharedDtor();
}

void tagPropertySubItem::SharedDtor() {
}

void tagPropertySubItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tagPropertySubItem::descriptor() {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[3].descriptor;
}

const tagPropertySubItem& tagPropertySubItem::default_instance() {
  protobuf_propertyPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

tagPropertySubItem* tagPropertySubItem::New(::google::protobuf::Arena* arena) const {
  tagPropertySubItem* n = new tagPropertySubItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tagPropertySubItem::Clear() {
// @@protoc_insertion_point(message_clear_start:propertyPmd.tagPropertySubItem)
  ::memset(&dwpropertyid_, 0, reinterpret_cast<char*>(&dwsortid_) -
    reinterpret_cast<char*>(&dwpropertyid_) + sizeof(dwsortid_));
}

bool tagPropertySubItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:propertyPmd.tagPropertySubItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 dwpropertyid = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwpropertyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwownerpropertyid = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwownerpropertyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwpropertycount = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwpropertycount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dwsortid = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dwsortid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:propertyPmd.tagPropertySubItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:propertyPmd.tagPropertySubItem)
  return false;
#undef DO_
}

void tagPropertySubItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:propertyPmd.tagPropertySubItem)
  // uint64 dwpropertyid = 1;
  if (this->dwpropertyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dwpropertyid(), output);
  }

  // uint64 dwownerpropertyid = 2;
  if (this->dwownerpropertyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dwownerpropertyid(), output);
  }

  // uint64 dwpropertycount = 3;
  if (this->dwpropertycount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->dwpropertycount(), output);
  }

  // uint64 dwsortid = 4;
  if (this->dwsortid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->dwsortid(), output);
  }

  // @@protoc_insertion_point(serialize_end:propertyPmd.tagPropertySubItem)
}

::google::protobuf::uint8* tagPropertySubItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:propertyPmd.tagPropertySubItem)
  // uint64 dwpropertyid = 1;
  if (this->dwpropertyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->dwpropertyid(), target);
  }

  // uint64 dwownerpropertyid = 2;
  if (this->dwownerpropertyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dwownerpropertyid(), target);
  }

  // uint64 dwpropertycount = 3;
  if (this->dwpropertycount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->dwpropertycount(), target);
  }

  // uint64 dwsortid = 4;
  if (this->dwsortid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->dwsortid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:propertyPmd.tagPropertySubItem)
  return target;
}

size_t tagPropertySubItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:propertyPmd.tagPropertySubItem)
  size_t total_size = 0;

  // uint64 dwpropertyid = 1;
  if (this->dwpropertyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwpropertyid());
  }

  // uint64 dwownerpropertyid = 2;
  if (this->dwownerpropertyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwownerpropertyid());
  }

  // uint64 dwpropertycount = 3;
  if (this->dwpropertycount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwpropertycount());
  }

  // uint64 dwsortid = 4;
  if (this->dwsortid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dwsortid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tagPropertySubItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:propertyPmd.tagPropertySubItem)
  GOOGLE_DCHECK_NE(&from, this);
  const tagPropertySubItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tagPropertySubItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:propertyPmd.tagPropertySubItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:propertyPmd.tagPropertySubItem)
    MergeFrom(*source);
  }
}

void tagPropertySubItem::MergeFrom(const tagPropertySubItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:propertyPmd.tagPropertySubItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.dwpropertyid() != 0) {
    set_dwpropertyid(from.dwpropertyid());
  }
  if (from.dwownerpropertyid() != 0) {
    set_dwownerpropertyid(from.dwownerpropertyid());
  }
  if (from.dwpropertycount() != 0) {
    set_dwpropertycount(from.dwpropertycount());
  }
  if (from.dwsortid() != 0) {
    set_dwsortid(from.dwsortid());
  }
}

void tagPropertySubItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:propertyPmd.tagPropertySubItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tagPropertySubItem::CopyFrom(const tagPropertySubItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:propertyPmd.tagPropertySubItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tagPropertySubItem::IsInitialized() const {
  return true;
}

void tagPropertySubItem::Swap(tagPropertySubItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tagPropertySubItem::InternalSwap(tagPropertySubItem* other) {
  std::swap(dwpropertyid_, other->dwpropertyid_);
  std::swap(dwownerpropertyid_, other->dwownerpropertyid_);
  std::swap(dwpropertycount_, other->dwpropertycount_);
  std::swap(dwsortid_, other->dwsortid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tagPropertySubItem::GetMetadata() const {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// tagPropertySubItem

// uint64 dwpropertyid = 1;
void tagPropertySubItem::clear_dwpropertyid() {
  dwpropertyid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertySubItem::dwpropertyid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertySubItem.dwpropertyid)
  return dwpropertyid_;
}
void tagPropertySubItem::set_dwpropertyid(::google::protobuf::uint64 value) {
  
  dwpropertyid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertySubItem.dwpropertyid)
}

// uint64 dwownerpropertyid = 2;
void tagPropertySubItem::clear_dwownerpropertyid() {
  dwownerpropertyid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertySubItem::dwownerpropertyid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertySubItem.dwownerpropertyid)
  return dwownerpropertyid_;
}
void tagPropertySubItem::set_dwownerpropertyid(::google::protobuf::uint64 value) {
  
  dwownerpropertyid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertySubItem.dwownerpropertyid)
}

// uint64 dwpropertycount = 3;
void tagPropertySubItem::clear_dwpropertycount() {
  dwpropertycount_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertySubItem::dwpropertycount() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertySubItem.dwpropertycount)
  return dwpropertycount_;
}
void tagPropertySubItem::set_dwpropertycount(::google::protobuf::uint64 value) {
  
  dwpropertycount_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertySubItem.dwpropertycount)
}

// uint64 dwsortid = 4;
void tagPropertySubItem::clear_dwsortid() {
  dwsortid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 tagPropertySubItem::dwsortid() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertySubItem.dwsortid)
  return dwsortid_;
}
void tagPropertySubItem::set_dwsortid(::google::protobuf::uint64 value) {
  
  dwsortid_ = value;
  // @@protoc_insertion_point(field_set:propertyPmd.tagPropertySubItem.dwsortid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tagPropertyTypeItem_s2c::kRespcmdFieldNumber;
const int tagPropertyTypeItem_s2c::kTagPropertyTypeItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tagPropertyTypeItem_s2c::tagPropertyTypeItem_s2c()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_propertyPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:propertyPmd.tagPropertyTypeItem_s2c)
}
tagPropertyTypeItem_s2c::tagPropertyTypeItem_s2c(const tagPropertyTypeItem_s2c& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tagpropertytypeitem_(from.tagpropertytypeitem_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_respcmd()) {
    respcmd_ = new ::NullPmd::response(*from.respcmd_);
  } else {
    respcmd_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:propertyPmd.tagPropertyTypeItem_s2c)
}

void tagPropertyTypeItem_s2c::SharedCtor() {
  respcmd_ = NULL;
  _cached_size_ = 0;
}

tagPropertyTypeItem_s2c::~tagPropertyTypeItem_s2c() {
  // @@protoc_insertion_point(destructor:propertyPmd.tagPropertyTypeItem_s2c)
  SharedDtor();
}

void tagPropertyTypeItem_s2c::SharedDtor() {
  if (this != internal_default_instance()) {
    delete respcmd_;
  }
}

void tagPropertyTypeItem_s2c::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tagPropertyTypeItem_s2c::descriptor() {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[4].descriptor;
}

const tagPropertyTypeItem_s2c& tagPropertyTypeItem_s2c::default_instance() {
  protobuf_propertyPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

tagPropertyTypeItem_s2c* tagPropertyTypeItem_s2c::New(::google::protobuf::Arena* arena) const {
  tagPropertyTypeItem_s2c* n = new tagPropertyTypeItem_s2c;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tagPropertyTypeItem_s2c::Clear() {
// @@protoc_insertion_point(message_clear_start:propertyPmd.tagPropertyTypeItem_s2c)
  tagpropertytypeitem_.Clear();
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) {
    delete respcmd_;
  }
  respcmd_ = NULL;
}

bool tagPropertyTypeItem_s2c::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:propertyPmd.tagPropertyTypeItem_s2c)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NullPmd.response respcmd = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_respcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .propertyPmd.tagPropertyTypeItem tagPropertyTypeItem = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tagpropertytypeitem()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:propertyPmd.tagPropertyTypeItem_s2c)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:propertyPmd.tagPropertyTypeItem_s2c)
  return false;
#undef DO_
}

void tagPropertyTypeItem_s2c::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:propertyPmd.tagPropertyTypeItem_s2c)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->respcmd_, output);
  }

  // repeated .propertyPmd.tagPropertyTypeItem tagPropertyTypeItem = 2;
  for (unsigned int i = 0, n = this->tagpropertytypeitem_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->tagpropertytypeitem(i), output);
  }

  // @@protoc_insertion_point(serialize_end:propertyPmd.tagPropertyTypeItem_s2c)
}

::google::protobuf::uint8* tagPropertyTypeItem_s2c::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:propertyPmd.tagPropertyTypeItem_s2c)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->respcmd_, false, target);
  }

  // repeated .propertyPmd.tagPropertyTypeItem tagPropertyTypeItem = 2;
  for (unsigned int i = 0, n = this->tagpropertytypeitem_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->tagpropertytypeitem(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:propertyPmd.tagPropertyTypeItem_s2c)
  return target;
}

size_t tagPropertyTypeItem_s2c::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:propertyPmd.tagPropertyTypeItem_s2c)
  size_t total_size = 0;

  // repeated .propertyPmd.tagPropertyTypeItem tagPropertyTypeItem = 2;
  {
    unsigned int count = this->tagpropertytypeitem_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tagpropertytypeitem(i));
    }
  }

  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->respcmd_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tagPropertyTypeItem_s2c::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:propertyPmd.tagPropertyTypeItem_s2c)
  GOOGLE_DCHECK_NE(&from, this);
  const tagPropertyTypeItem_s2c* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tagPropertyTypeItem_s2c>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:propertyPmd.tagPropertyTypeItem_s2c)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:propertyPmd.tagPropertyTypeItem_s2c)
    MergeFrom(*source);
  }
}

void tagPropertyTypeItem_s2c::MergeFrom(const tagPropertyTypeItem_s2c& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:propertyPmd.tagPropertyTypeItem_s2c)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tagpropertytypeitem_.MergeFrom(from.tagpropertytypeitem_);
  if (from.has_respcmd()) {
    mutable_respcmd()->::NullPmd::response::MergeFrom(from.respcmd());
  }
}

void tagPropertyTypeItem_s2c::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:propertyPmd.tagPropertyTypeItem_s2c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tagPropertyTypeItem_s2c::CopyFrom(const tagPropertyTypeItem_s2c& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:propertyPmd.tagPropertyTypeItem_s2c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tagPropertyTypeItem_s2c::IsInitialized() const {
  return true;
}

void tagPropertyTypeItem_s2c::Swap(tagPropertyTypeItem_s2c* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tagPropertyTypeItem_s2c::InternalSwap(tagPropertyTypeItem_s2c* other) {
  tagpropertytypeitem_.UnsafeArenaSwap(&other->tagpropertytypeitem_);
  std::swap(respcmd_, other->respcmd_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tagPropertyTypeItem_s2c::GetMetadata() const {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// tagPropertyTypeItem_s2c

// .NullPmd.response respcmd = 1;
bool tagPropertyTypeItem_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
void tagPropertyTypeItem_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
const ::NullPmd::response& tagPropertyTypeItem_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyTypeItem_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
::NullPmd::response* tagPropertyTypeItem_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyTypeItem_s2c.respcmd)
  return respcmd_;
}
::NullPmd::response* tagPropertyTypeItem_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertyTypeItem_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
void tagPropertyTypeItem_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertyTypeItem_s2c.respcmd)
}

// repeated .propertyPmd.tagPropertyTypeItem tagPropertyTypeItem = 2;
int tagPropertyTypeItem_s2c::tagpropertytypeitem_size() const {
  return tagpropertytypeitem_.size();
}
void tagPropertyTypeItem_s2c::clear_tagpropertytypeitem() {
  tagpropertytypeitem_.Clear();
}
const ::propertyPmd::tagPropertyTypeItem& tagPropertyTypeItem_s2c::tagpropertytypeitem(int index) const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyTypeItem_s2c.tagPropertyTypeItem)
  return tagpropertytypeitem_.Get(index);
}
::propertyPmd::tagPropertyTypeItem* tagPropertyTypeItem_s2c::mutable_tagpropertytypeitem(int index) {
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyTypeItem_s2c.tagPropertyTypeItem)
  return tagpropertytypeitem_.Mutable(index);
}
::propertyPmd::tagPropertyTypeItem* tagPropertyTypeItem_s2c::add_tagpropertytypeitem() {
  // @@protoc_insertion_point(field_add:propertyPmd.tagPropertyTypeItem_s2c.tagPropertyTypeItem)
  return tagpropertytypeitem_.Add();
}
::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyTypeItem >*
tagPropertyTypeItem_s2c::mutable_tagpropertytypeitem() {
  // @@protoc_insertion_point(field_mutable_list:propertyPmd.tagPropertyTypeItem_s2c.tagPropertyTypeItem)
  return &tagpropertytypeitem_;
}
const ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyTypeItem >&
tagPropertyTypeItem_s2c::tagpropertytypeitem() const {
  // @@protoc_insertion_point(field_list:propertyPmd.tagPropertyTypeItem_s2c.tagPropertyTypeItem)
  return tagpropertytypeitem_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tagPropertyRelatItem_s2c::kRespcmdFieldNumber;
const int tagPropertyRelatItem_s2c::kTagPropertyRelatItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tagPropertyRelatItem_s2c::tagPropertyRelatItem_s2c()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_propertyPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:propertyPmd.tagPropertyRelatItem_s2c)
}
tagPropertyRelatItem_s2c::tagPropertyRelatItem_s2c(const tagPropertyRelatItem_s2c& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tagpropertyrelatitem_(from.tagpropertyrelatitem_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_respcmd()) {
    respcmd_ = new ::NullPmd::response(*from.respcmd_);
  } else {
    respcmd_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:propertyPmd.tagPropertyRelatItem_s2c)
}

void tagPropertyRelatItem_s2c::SharedCtor() {
  respcmd_ = NULL;
  _cached_size_ = 0;
}

tagPropertyRelatItem_s2c::~tagPropertyRelatItem_s2c() {
  // @@protoc_insertion_point(destructor:propertyPmd.tagPropertyRelatItem_s2c)
  SharedDtor();
}

void tagPropertyRelatItem_s2c::SharedDtor() {
  if (this != internal_default_instance()) {
    delete respcmd_;
  }
}

void tagPropertyRelatItem_s2c::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tagPropertyRelatItem_s2c::descriptor() {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[5].descriptor;
}

const tagPropertyRelatItem_s2c& tagPropertyRelatItem_s2c::default_instance() {
  protobuf_propertyPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

tagPropertyRelatItem_s2c* tagPropertyRelatItem_s2c::New(::google::protobuf::Arena* arena) const {
  tagPropertyRelatItem_s2c* n = new tagPropertyRelatItem_s2c;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tagPropertyRelatItem_s2c::Clear() {
// @@protoc_insertion_point(message_clear_start:propertyPmd.tagPropertyRelatItem_s2c)
  tagpropertyrelatitem_.Clear();
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) {
    delete respcmd_;
  }
  respcmd_ = NULL;
}

bool tagPropertyRelatItem_s2c::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:propertyPmd.tagPropertyRelatItem_s2c)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NullPmd.response respcmd = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_respcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .propertyPmd.tagPropertyRelatItem tagPropertyRelatItem = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tagpropertyrelatitem()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:propertyPmd.tagPropertyRelatItem_s2c)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:propertyPmd.tagPropertyRelatItem_s2c)
  return false;
#undef DO_
}

void tagPropertyRelatItem_s2c::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:propertyPmd.tagPropertyRelatItem_s2c)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->respcmd_, output);
  }

  // repeated .propertyPmd.tagPropertyRelatItem tagPropertyRelatItem = 2;
  for (unsigned int i = 0, n = this->tagpropertyrelatitem_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->tagpropertyrelatitem(i), output);
  }

  // @@protoc_insertion_point(serialize_end:propertyPmd.tagPropertyRelatItem_s2c)
}

::google::protobuf::uint8* tagPropertyRelatItem_s2c::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:propertyPmd.tagPropertyRelatItem_s2c)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->respcmd_, false, target);
  }

  // repeated .propertyPmd.tagPropertyRelatItem tagPropertyRelatItem = 2;
  for (unsigned int i = 0, n = this->tagpropertyrelatitem_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->tagpropertyrelatitem(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:propertyPmd.tagPropertyRelatItem_s2c)
  return target;
}

size_t tagPropertyRelatItem_s2c::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:propertyPmd.tagPropertyRelatItem_s2c)
  size_t total_size = 0;

  // repeated .propertyPmd.tagPropertyRelatItem tagPropertyRelatItem = 2;
  {
    unsigned int count = this->tagpropertyrelatitem_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tagpropertyrelatitem(i));
    }
  }

  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->respcmd_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tagPropertyRelatItem_s2c::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:propertyPmd.tagPropertyRelatItem_s2c)
  GOOGLE_DCHECK_NE(&from, this);
  const tagPropertyRelatItem_s2c* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tagPropertyRelatItem_s2c>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:propertyPmd.tagPropertyRelatItem_s2c)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:propertyPmd.tagPropertyRelatItem_s2c)
    MergeFrom(*source);
  }
}

void tagPropertyRelatItem_s2c::MergeFrom(const tagPropertyRelatItem_s2c& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:propertyPmd.tagPropertyRelatItem_s2c)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tagpropertyrelatitem_.MergeFrom(from.tagpropertyrelatitem_);
  if (from.has_respcmd()) {
    mutable_respcmd()->::NullPmd::response::MergeFrom(from.respcmd());
  }
}

void tagPropertyRelatItem_s2c::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:propertyPmd.tagPropertyRelatItem_s2c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tagPropertyRelatItem_s2c::CopyFrom(const tagPropertyRelatItem_s2c& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:propertyPmd.tagPropertyRelatItem_s2c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tagPropertyRelatItem_s2c::IsInitialized() const {
  return true;
}

void tagPropertyRelatItem_s2c::Swap(tagPropertyRelatItem_s2c* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tagPropertyRelatItem_s2c::InternalSwap(tagPropertyRelatItem_s2c* other) {
  tagpropertyrelatitem_.UnsafeArenaSwap(&other->tagpropertyrelatitem_);
  std::swap(respcmd_, other->respcmd_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tagPropertyRelatItem_s2c::GetMetadata() const {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// tagPropertyRelatItem_s2c

// .NullPmd.response respcmd = 1;
bool tagPropertyRelatItem_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
void tagPropertyRelatItem_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
const ::NullPmd::response& tagPropertyRelatItem_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyRelatItem_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
::NullPmd::response* tagPropertyRelatItem_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyRelatItem_s2c.respcmd)
  return respcmd_;
}
::NullPmd::response* tagPropertyRelatItem_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertyRelatItem_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
void tagPropertyRelatItem_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertyRelatItem_s2c.respcmd)
}

// repeated .propertyPmd.tagPropertyRelatItem tagPropertyRelatItem = 2;
int tagPropertyRelatItem_s2c::tagpropertyrelatitem_size() const {
  return tagpropertyrelatitem_.size();
}
void tagPropertyRelatItem_s2c::clear_tagpropertyrelatitem() {
  tagpropertyrelatitem_.Clear();
}
const ::propertyPmd::tagPropertyRelatItem& tagPropertyRelatItem_s2c::tagpropertyrelatitem(int index) const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyRelatItem_s2c.tagPropertyRelatItem)
  return tagpropertyrelatitem_.Get(index);
}
::propertyPmd::tagPropertyRelatItem* tagPropertyRelatItem_s2c::mutable_tagpropertyrelatitem(int index) {
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyRelatItem_s2c.tagPropertyRelatItem)
  return tagpropertyrelatitem_.Mutable(index);
}
::propertyPmd::tagPropertyRelatItem* tagPropertyRelatItem_s2c::add_tagpropertyrelatitem() {
  // @@protoc_insertion_point(field_add:propertyPmd.tagPropertyRelatItem_s2c.tagPropertyRelatItem)
  return tagpropertyrelatitem_.Add();
}
::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyRelatItem >*
tagPropertyRelatItem_s2c::mutable_tagpropertyrelatitem() {
  // @@protoc_insertion_point(field_mutable_list:propertyPmd.tagPropertyRelatItem_s2c.tagPropertyRelatItem)
  return &tagpropertyrelatitem_;
}
const ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyRelatItem >&
tagPropertyRelatItem_s2c::tagpropertyrelatitem() const {
  // @@protoc_insertion_point(field_list:propertyPmd.tagPropertyRelatItem_s2c.tagPropertyRelatItem)
  return tagpropertyrelatitem_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tagPropertyItem_s2c::kRespcmdFieldNumber;
const int tagPropertyItem_s2c::kTagPropertyItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tagPropertyItem_s2c::tagPropertyItem_s2c()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_propertyPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:propertyPmd.tagPropertyItem_s2c)
}
tagPropertyItem_s2c::tagPropertyItem_s2c(const tagPropertyItem_s2c& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tagpropertyitem_(from.tagpropertyitem_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_respcmd()) {
    respcmd_ = new ::NullPmd::response(*from.respcmd_);
  } else {
    respcmd_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:propertyPmd.tagPropertyItem_s2c)
}

void tagPropertyItem_s2c::SharedCtor() {
  respcmd_ = NULL;
  _cached_size_ = 0;
}

tagPropertyItem_s2c::~tagPropertyItem_s2c() {
  // @@protoc_insertion_point(destructor:propertyPmd.tagPropertyItem_s2c)
  SharedDtor();
}

void tagPropertyItem_s2c::SharedDtor() {
  if (this != internal_default_instance()) {
    delete respcmd_;
  }
}

void tagPropertyItem_s2c::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tagPropertyItem_s2c::descriptor() {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[6].descriptor;
}

const tagPropertyItem_s2c& tagPropertyItem_s2c::default_instance() {
  protobuf_propertyPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

tagPropertyItem_s2c* tagPropertyItem_s2c::New(::google::protobuf::Arena* arena) const {
  tagPropertyItem_s2c* n = new tagPropertyItem_s2c;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tagPropertyItem_s2c::Clear() {
// @@protoc_insertion_point(message_clear_start:propertyPmd.tagPropertyItem_s2c)
  tagpropertyitem_.Clear();
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) {
    delete respcmd_;
  }
  respcmd_ = NULL;
}

bool tagPropertyItem_s2c::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:propertyPmd.tagPropertyItem_s2c)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NullPmd.response respcmd = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_respcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .propertyPmd.tagPropertyItem tagPropertyItem = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tagpropertyitem()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:propertyPmd.tagPropertyItem_s2c)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:propertyPmd.tagPropertyItem_s2c)
  return false;
#undef DO_
}

void tagPropertyItem_s2c::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:propertyPmd.tagPropertyItem_s2c)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->respcmd_, output);
  }

  // repeated .propertyPmd.tagPropertyItem tagPropertyItem = 2;
  for (unsigned int i = 0, n = this->tagpropertyitem_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->tagpropertyitem(i), output);
  }

  // @@protoc_insertion_point(serialize_end:propertyPmd.tagPropertyItem_s2c)
}

::google::protobuf::uint8* tagPropertyItem_s2c::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:propertyPmd.tagPropertyItem_s2c)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->respcmd_, false, target);
  }

  // repeated .propertyPmd.tagPropertyItem tagPropertyItem = 2;
  for (unsigned int i = 0, n = this->tagpropertyitem_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->tagpropertyitem(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:propertyPmd.tagPropertyItem_s2c)
  return target;
}

size_t tagPropertyItem_s2c::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:propertyPmd.tagPropertyItem_s2c)
  size_t total_size = 0;

  // repeated .propertyPmd.tagPropertyItem tagPropertyItem = 2;
  {
    unsigned int count = this->tagpropertyitem_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tagpropertyitem(i));
    }
  }

  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->respcmd_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tagPropertyItem_s2c::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:propertyPmd.tagPropertyItem_s2c)
  GOOGLE_DCHECK_NE(&from, this);
  const tagPropertyItem_s2c* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tagPropertyItem_s2c>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:propertyPmd.tagPropertyItem_s2c)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:propertyPmd.tagPropertyItem_s2c)
    MergeFrom(*source);
  }
}

void tagPropertyItem_s2c::MergeFrom(const tagPropertyItem_s2c& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:propertyPmd.tagPropertyItem_s2c)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tagpropertyitem_.MergeFrom(from.tagpropertyitem_);
  if (from.has_respcmd()) {
    mutable_respcmd()->::NullPmd::response::MergeFrom(from.respcmd());
  }
}

void tagPropertyItem_s2c::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:propertyPmd.tagPropertyItem_s2c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tagPropertyItem_s2c::CopyFrom(const tagPropertyItem_s2c& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:propertyPmd.tagPropertyItem_s2c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tagPropertyItem_s2c::IsInitialized() const {
  return true;
}

void tagPropertyItem_s2c::Swap(tagPropertyItem_s2c* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tagPropertyItem_s2c::InternalSwap(tagPropertyItem_s2c* other) {
  tagpropertyitem_.UnsafeArenaSwap(&other->tagpropertyitem_);
  std::swap(respcmd_, other->respcmd_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tagPropertyItem_s2c::GetMetadata() const {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// tagPropertyItem_s2c

// .NullPmd.response respcmd = 1;
bool tagPropertyItem_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
void tagPropertyItem_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
const ::NullPmd::response& tagPropertyItem_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
::NullPmd::response* tagPropertyItem_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyItem_s2c.respcmd)
  return respcmd_;
}
::NullPmd::response* tagPropertyItem_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertyItem_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
void tagPropertyItem_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertyItem_s2c.respcmd)
}

// repeated .propertyPmd.tagPropertyItem tagPropertyItem = 2;
int tagPropertyItem_s2c::tagpropertyitem_size() const {
  return tagpropertyitem_.size();
}
void tagPropertyItem_s2c::clear_tagpropertyitem() {
  tagpropertyitem_.Clear();
}
const ::propertyPmd::tagPropertyItem& tagPropertyItem_s2c::tagpropertyitem(int index) const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertyItem_s2c.tagPropertyItem)
  return tagpropertyitem_.Get(index);
}
::propertyPmd::tagPropertyItem* tagPropertyItem_s2c::mutable_tagpropertyitem(int index) {
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertyItem_s2c.tagPropertyItem)
  return tagpropertyitem_.Mutable(index);
}
::propertyPmd::tagPropertyItem* tagPropertyItem_s2c::add_tagpropertyitem() {
  // @@protoc_insertion_point(field_add:propertyPmd.tagPropertyItem_s2c.tagPropertyItem)
  return tagpropertyitem_.Add();
}
::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyItem >*
tagPropertyItem_s2c::mutable_tagpropertyitem() {
  // @@protoc_insertion_point(field_mutable_list:propertyPmd.tagPropertyItem_s2c.tagPropertyItem)
  return &tagpropertyitem_;
}
const ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertyItem >&
tagPropertyItem_s2c::tagpropertyitem() const {
  // @@protoc_insertion_point(field_list:propertyPmd.tagPropertyItem_s2c.tagPropertyItem)
  return tagpropertyitem_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tagPropertySubItem_s2c::kRespcmdFieldNumber;
const int tagPropertySubItem_s2c::kTagPropertySubItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tagPropertySubItem_s2c::tagPropertySubItem_s2c()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_propertyPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:propertyPmd.tagPropertySubItem_s2c)
}
tagPropertySubItem_s2c::tagPropertySubItem_s2c(const tagPropertySubItem_s2c& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tagpropertysubitem_(from.tagpropertysubitem_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_respcmd()) {
    respcmd_ = new ::NullPmd::response(*from.respcmd_);
  } else {
    respcmd_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:propertyPmd.tagPropertySubItem_s2c)
}

void tagPropertySubItem_s2c::SharedCtor() {
  respcmd_ = NULL;
  _cached_size_ = 0;
}

tagPropertySubItem_s2c::~tagPropertySubItem_s2c() {
  // @@protoc_insertion_point(destructor:propertyPmd.tagPropertySubItem_s2c)
  SharedDtor();
}

void tagPropertySubItem_s2c::SharedDtor() {
  if (this != internal_default_instance()) {
    delete respcmd_;
  }
}

void tagPropertySubItem_s2c::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tagPropertySubItem_s2c::descriptor() {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[7].descriptor;
}

const tagPropertySubItem_s2c& tagPropertySubItem_s2c::default_instance() {
  protobuf_propertyPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

tagPropertySubItem_s2c* tagPropertySubItem_s2c::New(::google::protobuf::Arena* arena) const {
  tagPropertySubItem_s2c* n = new tagPropertySubItem_s2c;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tagPropertySubItem_s2c::Clear() {
// @@protoc_insertion_point(message_clear_start:propertyPmd.tagPropertySubItem_s2c)
  tagpropertysubitem_.Clear();
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) {
    delete respcmd_;
  }
  respcmd_ = NULL;
}

bool tagPropertySubItem_s2c::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:propertyPmd.tagPropertySubItem_s2c)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NullPmd.response respcmd = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_respcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .propertyPmd.tagPropertySubItem tagPropertySubItem = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tagpropertysubitem()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:propertyPmd.tagPropertySubItem_s2c)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:propertyPmd.tagPropertySubItem_s2c)
  return false;
#undef DO_
}

void tagPropertySubItem_s2c::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:propertyPmd.tagPropertySubItem_s2c)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->respcmd_, output);
  }

  // repeated .propertyPmd.tagPropertySubItem tagPropertySubItem = 2;
  for (unsigned int i = 0, n = this->tagpropertysubitem_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->tagpropertysubitem(i), output);
  }

  // @@protoc_insertion_point(serialize_end:propertyPmd.tagPropertySubItem_s2c)
}

::google::protobuf::uint8* tagPropertySubItem_s2c::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:propertyPmd.tagPropertySubItem_s2c)
  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->respcmd_, false, target);
  }

  // repeated .propertyPmd.tagPropertySubItem tagPropertySubItem = 2;
  for (unsigned int i = 0, n = this->tagpropertysubitem_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->tagpropertysubitem(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:propertyPmd.tagPropertySubItem_s2c)
  return target;
}

size_t tagPropertySubItem_s2c::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:propertyPmd.tagPropertySubItem_s2c)
  size_t total_size = 0;

  // repeated .propertyPmd.tagPropertySubItem tagPropertySubItem = 2;
  {
    unsigned int count = this->tagpropertysubitem_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tagpropertysubitem(i));
    }
  }

  // .NullPmd.response respcmd = 1;
  if (this->has_respcmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->respcmd_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tagPropertySubItem_s2c::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:propertyPmd.tagPropertySubItem_s2c)
  GOOGLE_DCHECK_NE(&from, this);
  const tagPropertySubItem_s2c* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tagPropertySubItem_s2c>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:propertyPmd.tagPropertySubItem_s2c)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:propertyPmd.tagPropertySubItem_s2c)
    MergeFrom(*source);
  }
}

void tagPropertySubItem_s2c::MergeFrom(const tagPropertySubItem_s2c& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:propertyPmd.tagPropertySubItem_s2c)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tagpropertysubitem_.MergeFrom(from.tagpropertysubitem_);
  if (from.has_respcmd()) {
    mutable_respcmd()->::NullPmd::response::MergeFrom(from.respcmd());
  }
}

void tagPropertySubItem_s2c::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:propertyPmd.tagPropertySubItem_s2c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tagPropertySubItem_s2c::CopyFrom(const tagPropertySubItem_s2c& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:propertyPmd.tagPropertySubItem_s2c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tagPropertySubItem_s2c::IsInitialized() const {
  return true;
}

void tagPropertySubItem_s2c::Swap(tagPropertySubItem_s2c* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tagPropertySubItem_s2c::InternalSwap(tagPropertySubItem_s2c* other) {
  tagpropertysubitem_.UnsafeArenaSwap(&other->tagpropertysubitem_);
  std::swap(respcmd_, other->respcmd_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tagPropertySubItem_s2c::GetMetadata() const {
  protobuf_propertyPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_propertyPmd_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// tagPropertySubItem_s2c

// .NullPmd.response respcmd = 1;
bool tagPropertySubItem_s2c::has_respcmd() const {
  return this != internal_default_instance() && respcmd_ != NULL;
}
void tagPropertySubItem_s2c::clear_respcmd() {
  if (GetArenaNoVirtual() == NULL && respcmd_ != NULL) delete respcmd_;
  respcmd_ = NULL;
}
const ::NullPmd::response& tagPropertySubItem_s2c::respcmd() const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertySubItem_s2c.respcmd)
  return respcmd_ != NULL ? *respcmd_
                         : *::NullPmd::response::internal_default_instance();
}
::NullPmd::response* tagPropertySubItem_s2c::mutable_respcmd() {
  
  if (respcmd_ == NULL) {
    respcmd_ = new ::NullPmd::response;
  }
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertySubItem_s2c.respcmd)
  return respcmd_;
}
::NullPmd::response* tagPropertySubItem_s2c::release_respcmd() {
  // @@protoc_insertion_point(field_release:propertyPmd.tagPropertySubItem_s2c.respcmd)
  
  ::NullPmd::response* temp = respcmd_;
  respcmd_ = NULL;
  return temp;
}
void tagPropertySubItem_s2c::set_allocated_respcmd(::NullPmd::response* respcmd) {
  delete respcmd_;
  respcmd_ = respcmd;
  if (respcmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:propertyPmd.tagPropertySubItem_s2c.respcmd)
}

// repeated .propertyPmd.tagPropertySubItem tagPropertySubItem = 2;
int tagPropertySubItem_s2c::tagpropertysubitem_size() const {
  return tagpropertysubitem_.size();
}
void tagPropertySubItem_s2c::clear_tagpropertysubitem() {
  tagpropertysubitem_.Clear();
}
const ::propertyPmd::tagPropertySubItem& tagPropertySubItem_s2c::tagpropertysubitem(int index) const {
  // @@protoc_insertion_point(field_get:propertyPmd.tagPropertySubItem_s2c.tagPropertySubItem)
  return tagpropertysubitem_.Get(index);
}
::propertyPmd::tagPropertySubItem* tagPropertySubItem_s2c::mutable_tagpropertysubitem(int index) {
  // @@protoc_insertion_point(field_mutable:propertyPmd.tagPropertySubItem_s2c.tagPropertySubItem)
  return tagpropertysubitem_.Mutable(index);
}
::propertyPmd::tagPropertySubItem* tagPropertySubItem_s2c::add_tagpropertysubitem() {
  // @@protoc_insertion_point(field_add:propertyPmd.tagPropertySubItem_s2c.tagPropertySubItem)
  return tagpropertysubitem_.Add();
}
::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertySubItem >*
tagPropertySubItem_s2c::mutable_tagpropertysubitem() {
  // @@protoc_insertion_point(field_mutable_list:propertyPmd.tagPropertySubItem_s2c.tagPropertySubItem)
  return &tagpropertysubitem_;
}
const ::google::protobuf::RepeatedPtrField< ::propertyPmd::tagPropertySubItem >&
tagPropertySubItem_s2c::tagpropertysubitem() const {
  // @@protoc_insertion_point(field_list:propertyPmd.tagPropertySubItem_s2c.tagPropertySubItem)
  return tagpropertysubitem_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace propertyPmd

// @@protoc_insertion_point(global_scope)
