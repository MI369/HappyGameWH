// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlatPmd.proto

#ifndef PROTOBUF_PlatPmd_2eproto__INCLUDED
#define PROTOBUF_PlatPmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
namespace PlatPmd {
}  // namespace PlatPmd

namespace PlatPmd {

namespace protobuf_PlatPmd_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_PlatPmd_2eproto

enum PlatPmdCommand {
  param_NullPmd = 0,
  param_CommonPmd = 16,
  param_LoginPmd = 1,
  param_GamePmd = 3,
  param_DdzPmd = 4,
  PlatPmdCommand_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlatPmdCommand_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlatPmdCommand_IsValid(int value);
const PlatPmdCommand PlatPmdCommand_MIN = param_NullPmd;
const PlatPmdCommand PlatPmdCommand_MAX = param_CommonPmd;
const int PlatPmdCommand_ARRAYSIZE = PlatPmdCommand_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlatPmdCommand_descriptor();
inline const ::std::string& PlatPmdCommand_Name(PlatPmdCommand value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlatPmdCommand_descriptor(), value);
}
inline bool PlatPmdCommand_Parse(
    const ::std::string& name, PlatPmdCommand* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlatPmdCommand>(
    PlatPmdCommand_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace PlatPmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PlatPmd::PlatPmdCommand> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PlatPmd::PlatPmdCommand>() {
  return ::PlatPmd::PlatPmdCommand_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PlatPmd_2eproto__INCLUDED
