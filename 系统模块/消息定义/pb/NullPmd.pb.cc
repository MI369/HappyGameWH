// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NullPmd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "NullPmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NullPmd {
class requestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<request> {
} _request_default_instance_;
class responseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<response> {
} _response_default_instance_;
class indicationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<indication> {
} _indication_default_instance_;
class commandDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<command> {
} _command_default_instance_;
class infoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<info> {
} _info_default_instance_;
class headDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<head> {
} _head_default_instance_;
class messageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<message> {
} _message_default_instance_;

namespace protobuf_NullPmd_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(response, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(response, errordescription_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(indication, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(command, mainid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(command, subid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(info, cbdatakind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(info, cbcheckcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(info, wpacketsize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(head, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(head, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(head, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(message, data_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(request)},
  { 4, -1, sizeof(response)},
  { 10, -1, sizeof(indication)},
  { 14, -1, sizeof(command)},
  { 20, -1, sizeof(info)},
  { 27, -1, sizeof(head)},
  { 33, -1, sizeof(message)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_indication_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_command_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_head_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_message_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "NullPmd.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace

void TableStruct::Shutdown() {
  _request_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _response_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _indication_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _command_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _info_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _head_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _message_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _request_default_instance_.DefaultConstruct();
  _response_default_instance_.DefaultConstruct();
  _indication_default_instance_.DefaultConstruct();
  _command_default_instance_.DefaultConstruct();
  _info_default_instance_.DefaultConstruct();
  _head_default_instance_.DefaultConstruct();
  _message_default_instance_.DefaultConstruct();
  _head_default_instance_.get_mutable()->command_ = const_cast< ::NullPmd::command*>(
      ::NullPmd::command::internal_default_instance());
  _head_default_instance_.get_mutable()->info_ = const_cast< ::NullPmd::info*>(
      ::NullPmd::info::internal_default_instance());
  _message_default_instance_.get_mutable()->head_ = const_cast< ::NullPmd::head*>(
      ::NullPmd::head::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rNullPmd.proto\022\007NullPmd\"\t\n\007request\"4\n\010r"
      "esponse\022\016\n\006result\030\001 \001(\005\022\030\n\020errordescript"
      "ion\030\002 \001(\t\"\014\n\nindication\"(\n\007command\022\016\n\006ma"
      "inid\030\001 \001(\004\022\r\n\005subid\030\002 \001(\004\"D\n\004info\022\022\n\ncbd"
      "atakind\030\001 \001(\004\022\023\n\013cbcheckcode\030\002 \001(\004\022\023\n\013wp"
      "acketsize\030\003 \001(\004\"F\n\004head\022!\n\007command\030\001 \001(\013"
      "2\020.NullPmd.command\022\033\n\004info\030\002 \001(\0132\r.NullP"
      "md.info\"4\n\007message\022\033\n\004head\030\001 \001(\0132\r.NullP"
      "md.head\022\014\n\004data\030\002 \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 349);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "NullPmd.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_NullPmd_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

request::request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_NullPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NullPmd.request)
}
request::request(const request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NullPmd.request)
}

void request::SharedCtor() {
  _cached_size_ = 0;
}

request::~request() {
  // @@protoc_insertion_point(destructor:NullPmd.request)
  SharedDtor();
}

void request::SharedDtor() {
}

void request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* request::descriptor() {
  protobuf_NullPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NullPmd_2eproto::file_level_metadata[0].descriptor;
}

const request& request::default_instance() {
  protobuf_NullPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

request* request::New(::google::protobuf::Arena* arena) const {
  request* n = new request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void request::Clear() {
// @@protoc_insertion_point(message_clear_start:NullPmd.request)
}

bool request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NullPmd.request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:NullPmd.request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NullPmd.request)
  return false;
#undef DO_
}

void request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NullPmd.request)
  // @@protoc_insertion_point(serialize_end:NullPmd.request)
}

::google::protobuf::uint8* request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NullPmd.request)
  // @@protoc_insertion_point(serialize_to_array_end:NullPmd.request)
  return target;
}

size_t request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NullPmd.request)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NullPmd.request)
  GOOGLE_DCHECK_NE(&from, this);
  const request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NullPmd.request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NullPmd.request)
    MergeFrom(*source);
  }
}

void request::MergeFrom(const request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NullPmd.request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NullPmd.request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void request::CopyFrom(const request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NullPmd.request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool request::IsInitialized() const {
  return true;
}

void request::Swap(request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void request::InternalSwap(request* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata request::GetMetadata() const {
  protobuf_NullPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NullPmd_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// request

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int response::kResultFieldNumber;
const int response::kErrordescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

response::response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_NullPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NullPmd.response)
}
response::response(const response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errordescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errordescription().size() > 0) {
    errordescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errordescription_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NullPmd.response)
}

void response::SharedCtor() {
  errordescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _cached_size_ = 0;
}

response::~response() {
  // @@protoc_insertion_point(destructor:NullPmd.response)
  SharedDtor();
}

void response::SharedDtor() {
  errordescription_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* response::descriptor() {
  protobuf_NullPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NullPmd_2eproto::file_level_metadata[1].descriptor;
}

const response& response::default_instance() {
  protobuf_NullPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

response* response::New(::google::protobuf::Arena* arena) const {
  response* n = new response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void response::Clear() {
// @@protoc_insertion_point(message_clear_start:NullPmd.response)
  errordescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

bool response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NullPmd.response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errordescription = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errordescription()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errordescription().data(), this->errordescription().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NullPmd.response.errordescription"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NullPmd.response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NullPmd.response)
  return false;
#undef DO_
}

void response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NullPmd.response)
  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // string errordescription = 2;
  if (this->errordescription().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errordescription().data(), this->errordescription().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NullPmd.response.errordescription");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errordescription(), output);
  }

  // @@protoc_insertion_point(serialize_end:NullPmd.response)
}

::google::protobuf::uint8* response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NullPmd.response)
  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // string errordescription = 2;
  if (this->errordescription().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errordescription().data(), this->errordescription().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NullPmd.response.errordescription");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errordescription(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NullPmd.response)
  return target;
}

size_t response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NullPmd.response)
  size_t total_size = 0;

  // string errordescription = 2;
  if (this->errordescription().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errordescription());
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NullPmd.response)
  GOOGLE_DCHECK_NE(&from, this);
  const response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NullPmd.response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NullPmd.response)
    MergeFrom(*source);
  }
}

void response::MergeFrom(const response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NullPmd.response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.errordescription().size() > 0) {

    errordescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errordescription_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NullPmd.response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void response::CopyFrom(const response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NullPmd.response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool response::IsInitialized() const {
  return true;
}

void response::Swap(response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void response::InternalSwap(response* other) {
  errordescription_.Swap(&other->errordescription_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata response::GetMetadata() const {
  protobuf_NullPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NullPmd_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// response

// int32 result = 1;
void response::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 response::result() const {
  // @@protoc_insertion_point(field_get:NullPmd.response.result)
  return result_;
}
void response::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:NullPmd.response.result)
}

// string errordescription = 2;
void response::clear_errordescription() {
  errordescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& response::errordescription() const {
  // @@protoc_insertion_point(field_get:NullPmd.response.errordescription)
  return errordescription_.GetNoArena();
}
void response::set_errordescription(const ::std::string& value) {
  
  errordescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NullPmd.response.errordescription)
}
#if LANG_CXX11
void response::set_errordescription(::std::string&& value) {
  
  errordescription_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NullPmd.response.errordescription)
}
#endif
void response::set_errordescription(const char* value) {
  
  errordescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NullPmd.response.errordescription)
}
void response::set_errordescription(const char* value, size_t size) {
  
  errordescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NullPmd.response.errordescription)
}
::std::string* response::mutable_errordescription() {
  
  // @@protoc_insertion_point(field_mutable:NullPmd.response.errordescription)
  return errordescription_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* response::release_errordescription() {
  // @@protoc_insertion_point(field_release:NullPmd.response.errordescription)
  
  return errordescription_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void response::set_allocated_errordescription(::std::string* errordescription) {
  if (errordescription != NULL) {
    
  } else {
    
  }
  errordescription_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errordescription);
  // @@protoc_insertion_point(field_set_allocated:NullPmd.response.errordescription)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

indication::indication()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_NullPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NullPmd.indication)
}
indication::indication(const indication& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NullPmd.indication)
}

void indication::SharedCtor() {
  _cached_size_ = 0;
}

indication::~indication() {
  // @@protoc_insertion_point(destructor:NullPmd.indication)
  SharedDtor();
}

void indication::SharedDtor() {
}

void indication::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* indication::descriptor() {
  protobuf_NullPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NullPmd_2eproto::file_level_metadata[2].descriptor;
}

const indication& indication::default_instance() {
  protobuf_NullPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

indication* indication::New(::google::protobuf::Arena* arena) const {
  indication* n = new indication;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void indication::Clear() {
// @@protoc_insertion_point(message_clear_start:NullPmd.indication)
}

bool indication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NullPmd.indication)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:NullPmd.indication)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NullPmd.indication)
  return false;
#undef DO_
}

void indication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NullPmd.indication)
  // @@protoc_insertion_point(serialize_end:NullPmd.indication)
}

::google::protobuf::uint8* indication::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NullPmd.indication)
  // @@protoc_insertion_point(serialize_to_array_end:NullPmd.indication)
  return target;
}

size_t indication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NullPmd.indication)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void indication::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NullPmd.indication)
  GOOGLE_DCHECK_NE(&from, this);
  const indication* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const indication>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NullPmd.indication)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NullPmd.indication)
    MergeFrom(*source);
  }
}

void indication::MergeFrom(const indication& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NullPmd.indication)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void indication::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NullPmd.indication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void indication::CopyFrom(const indication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NullPmd.indication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool indication::IsInitialized() const {
  return true;
}

void indication::Swap(indication* other) {
  if (other == this) return;
  InternalSwap(other);
}
void indication::InternalSwap(indication* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata indication::GetMetadata() const {
  protobuf_NullPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NullPmd_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// indication

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int command::kMainidFieldNumber;
const int command::kSubidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

command::command()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_NullPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NullPmd.command)
}
command::command(const command& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mainid_, &from.mainid_,
    reinterpret_cast<char*>(&subid_) -
    reinterpret_cast<char*>(&mainid_) + sizeof(subid_));
  // @@protoc_insertion_point(copy_constructor:NullPmd.command)
}

void command::SharedCtor() {
  ::memset(&mainid_, 0, reinterpret_cast<char*>(&subid_) -
    reinterpret_cast<char*>(&mainid_) + sizeof(subid_));
  _cached_size_ = 0;
}

command::~command() {
  // @@protoc_insertion_point(destructor:NullPmd.command)
  SharedDtor();
}

void command::SharedDtor() {
}

void command::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* command::descriptor() {
  protobuf_NullPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NullPmd_2eproto::file_level_metadata[3].descriptor;
}

const command& command::default_instance() {
  protobuf_NullPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

command* command::New(::google::protobuf::Arena* arena) const {
  command* n = new command;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void command::Clear() {
// @@protoc_insertion_point(message_clear_start:NullPmd.command)
  ::memset(&mainid_, 0, reinterpret_cast<char*>(&subid_) -
    reinterpret_cast<char*>(&mainid_) + sizeof(subid_));
}

bool command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NullPmd.command)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 mainid = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mainid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 subid = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &subid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NullPmd.command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NullPmd.command)
  return false;
#undef DO_
}

void command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NullPmd.command)
  // uint64 mainid = 1;
  if (this->mainid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mainid(), output);
  }

  // uint64 subid = 2;
  if (this->subid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->subid(), output);
  }

  // @@protoc_insertion_point(serialize_end:NullPmd.command)
}

::google::protobuf::uint8* command::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NullPmd.command)
  // uint64 mainid = 1;
  if (this->mainid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mainid(), target);
  }

  // uint64 subid = 2;
  if (this->subid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->subid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NullPmd.command)
  return target;
}

size_t command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NullPmd.command)
  size_t total_size = 0;

  // uint64 mainid = 1;
  if (this->mainid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mainid());
  }

  // uint64 subid = 2;
  if (this->subid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->subid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void command::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NullPmd.command)
  GOOGLE_DCHECK_NE(&from, this);
  const command* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const command>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NullPmd.command)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NullPmd.command)
    MergeFrom(*source);
  }
}

void command::MergeFrom(const command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NullPmd.command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.mainid() != 0) {
    set_mainid(from.mainid());
  }
  if (from.subid() != 0) {
    set_subid(from.subid());
  }
}

void command::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NullPmd.command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void command::CopyFrom(const command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NullPmd.command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool command::IsInitialized() const {
  return true;
}

void command::Swap(command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void command::InternalSwap(command* other) {
  std::swap(mainid_, other->mainid_);
  std::swap(subid_, other->subid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata command::GetMetadata() const {
  protobuf_NullPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NullPmd_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// command

// uint64 mainid = 1;
void command::clear_mainid() {
  mainid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 command::mainid() const {
  // @@protoc_insertion_point(field_get:NullPmd.command.mainid)
  return mainid_;
}
void command::set_mainid(::google::protobuf::uint64 value) {
  
  mainid_ = value;
  // @@protoc_insertion_point(field_set:NullPmd.command.mainid)
}

// uint64 subid = 2;
void command::clear_subid() {
  subid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 command::subid() const {
  // @@protoc_insertion_point(field_get:NullPmd.command.subid)
  return subid_;
}
void command::set_subid(::google::protobuf::uint64 value) {
  
  subid_ = value;
  // @@protoc_insertion_point(field_set:NullPmd.command.subid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int info::kCbdatakindFieldNumber;
const int info::kCbcheckcodeFieldNumber;
const int info::kWpacketsizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

info::info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_NullPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NullPmd.info)
}
info::info(const info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cbdatakind_, &from.cbdatakind_,
    reinterpret_cast<char*>(&wpacketsize_) -
    reinterpret_cast<char*>(&cbdatakind_) + sizeof(wpacketsize_));
  // @@protoc_insertion_point(copy_constructor:NullPmd.info)
}

void info::SharedCtor() {
  ::memset(&cbdatakind_, 0, reinterpret_cast<char*>(&wpacketsize_) -
    reinterpret_cast<char*>(&cbdatakind_) + sizeof(wpacketsize_));
  _cached_size_ = 0;
}

info::~info() {
  // @@protoc_insertion_point(destructor:NullPmd.info)
  SharedDtor();
}

void info::SharedDtor() {
}

void info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* info::descriptor() {
  protobuf_NullPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NullPmd_2eproto::file_level_metadata[4].descriptor;
}

const info& info::default_instance() {
  protobuf_NullPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

info* info::New(::google::protobuf::Arena* arena) const {
  info* n = new info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void info::Clear() {
// @@protoc_insertion_point(message_clear_start:NullPmd.info)
  ::memset(&cbdatakind_, 0, reinterpret_cast<char*>(&wpacketsize_) -
    reinterpret_cast<char*>(&cbdatakind_) + sizeof(wpacketsize_));
}

bool info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NullPmd.info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 cbdatakind = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cbdatakind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cbcheckcode = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cbcheckcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 wpacketsize = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &wpacketsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NullPmd.info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NullPmd.info)
  return false;
#undef DO_
}

void info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NullPmd.info)
  // uint64 cbdatakind = 1;
  if (this->cbdatakind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->cbdatakind(), output);
  }

  // uint64 cbcheckcode = 2;
  if (this->cbcheckcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->cbcheckcode(), output);
  }

  // uint64 wpacketsize = 3;
  if (this->wpacketsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->wpacketsize(), output);
  }

  // @@protoc_insertion_point(serialize_end:NullPmd.info)
}

::google::protobuf::uint8* info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NullPmd.info)
  // uint64 cbdatakind = 1;
  if (this->cbdatakind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->cbdatakind(), target);
  }

  // uint64 cbcheckcode = 2;
  if (this->cbcheckcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->cbcheckcode(), target);
  }

  // uint64 wpacketsize = 3;
  if (this->wpacketsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->wpacketsize(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NullPmd.info)
  return target;
}

size_t info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NullPmd.info)
  size_t total_size = 0;

  // uint64 cbdatakind = 1;
  if (this->cbdatakind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cbdatakind());
  }

  // uint64 cbcheckcode = 2;
  if (this->cbcheckcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cbcheckcode());
  }

  // uint64 wpacketsize = 3;
  if (this->wpacketsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->wpacketsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NullPmd.info)
  GOOGLE_DCHECK_NE(&from, this);
  const info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NullPmd.info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NullPmd.info)
    MergeFrom(*source);
  }
}

void info::MergeFrom(const info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NullPmd.info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.cbdatakind() != 0) {
    set_cbdatakind(from.cbdatakind());
  }
  if (from.cbcheckcode() != 0) {
    set_cbcheckcode(from.cbcheckcode());
  }
  if (from.wpacketsize() != 0) {
    set_wpacketsize(from.wpacketsize());
  }
}

void info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NullPmd.info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void info::CopyFrom(const info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NullPmd.info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool info::IsInitialized() const {
  return true;
}

void info::Swap(info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void info::InternalSwap(info* other) {
  std::swap(cbdatakind_, other->cbdatakind_);
  std::swap(cbcheckcode_, other->cbcheckcode_);
  std::swap(wpacketsize_, other->wpacketsize_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata info::GetMetadata() const {
  protobuf_NullPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NullPmd_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// info

// uint64 cbdatakind = 1;
void info::clear_cbdatakind() {
  cbdatakind_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 info::cbdatakind() const {
  // @@protoc_insertion_point(field_get:NullPmd.info.cbdatakind)
  return cbdatakind_;
}
void info::set_cbdatakind(::google::protobuf::uint64 value) {
  
  cbdatakind_ = value;
  // @@protoc_insertion_point(field_set:NullPmd.info.cbdatakind)
}

// uint64 cbcheckcode = 2;
void info::clear_cbcheckcode() {
  cbcheckcode_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 info::cbcheckcode() const {
  // @@protoc_insertion_point(field_get:NullPmd.info.cbcheckcode)
  return cbcheckcode_;
}
void info::set_cbcheckcode(::google::protobuf::uint64 value) {
  
  cbcheckcode_ = value;
  // @@protoc_insertion_point(field_set:NullPmd.info.cbcheckcode)
}

// uint64 wpacketsize = 3;
void info::clear_wpacketsize() {
  wpacketsize_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 info::wpacketsize() const {
  // @@protoc_insertion_point(field_get:NullPmd.info.wpacketsize)
  return wpacketsize_;
}
void info::set_wpacketsize(::google::protobuf::uint64 value) {
  
  wpacketsize_ = value;
  // @@protoc_insertion_point(field_set:NullPmd.info.wpacketsize)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int head::kCommandFieldNumber;
const int head::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

head::head()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_NullPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NullPmd.head)
}
head::head(const head& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_command()) {
    command_ = new ::NullPmd::command(*from.command_);
  } else {
    command_ = NULL;
  }
  if (from.has_info()) {
    info_ = new ::NullPmd::info(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NullPmd.head)
}

void head::SharedCtor() {
  ::memset(&command_, 0, reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&command_) + sizeof(info_));
  _cached_size_ = 0;
}

head::~head() {
  // @@protoc_insertion_point(destructor:NullPmd.head)
  SharedDtor();
}

void head::SharedDtor() {
  if (this != internal_default_instance()) {
    delete command_;
  }
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void head::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* head::descriptor() {
  protobuf_NullPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NullPmd_2eproto::file_level_metadata[5].descriptor;
}

const head& head::default_instance() {
  protobuf_NullPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

head* head::New(::google::protobuf::Arena* arena) const {
  head* n = new head;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void head::Clear() {
// @@protoc_insertion_point(message_clear_start:NullPmd.head)
  if (GetArenaNoVirtual() == NULL && command_ != NULL) {
    delete command_;
  }
  command_ = NULL;
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool head::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NullPmd.head)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NullPmd.command command = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_command()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NullPmd.info info = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NullPmd.head)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NullPmd.head)
  return false;
#undef DO_
}

void head::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NullPmd.head)
  // .NullPmd.command command = 1;
  if (this->has_command()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->command_, output);
  }

  // .NullPmd.info info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:NullPmd.head)
}

::google::protobuf::uint8* head::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NullPmd.head)
  // .NullPmd.command command = 1;
  if (this->has_command()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->command_, false, target);
  }

  // .NullPmd.info info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NullPmd.head)
  return target;
}

size_t head::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NullPmd.head)
  size_t total_size = 0;

  // .NullPmd.command command = 1;
  if (this->has_command()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->command_);
  }

  // .NullPmd.info info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void head::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NullPmd.head)
  GOOGLE_DCHECK_NE(&from, this);
  const head* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const head>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NullPmd.head)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NullPmd.head)
    MergeFrom(*source);
  }
}

void head::MergeFrom(const head& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NullPmd.head)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_command()) {
    mutable_command()->::NullPmd::command::MergeFrom(from.command());
  }
  if (from.has_info()) {
    mutable_info()->::NullPmd::info::MergeFrom(from.info());
  }
}

void head::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NullPmd.head)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void head::CopyFrom(const head& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NullPmd.head)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool head::IsInitialized() const {
  return true;
}

void head::Swap(head* other) {
  if (other == this) return;
  InternalSwap(other);
}
void head::InternalSwap(head* other) {
  std::swap(command_, other->command_);
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata head::GetMetadata() const {
  protobuf_NullPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NullPmd_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// head

// .NullPmd.command command = 1;
bool head::has_command() const {
  return this != internal_default_instance() && command_ != NULL;
}
void head::clear_command() {
  if (GetArenaNoVirtual() == NULL && command_ != NULL) delete command_;
  command_ = NULL;
}
const ::NullPmd::command& head::command() const {
  // @@protoc_insertion_point(field_get:NullPmd.head.command)
  return command_ != NULL ? *command_
                         : *::NullPmd::command::internal_default_instance();
}
::NullPmd::command* head::mutable_command() {
  
  if (command_ == NULL) {
    command_ = new ::NullPmd::command;
  }
  // @@protoc_insertion_point(field_mutable:NullPmd.head.command)
  return command_;
}
::NullPmd::command* head::release_command() {
  // @@protoc_insertion_point(field_release:NullPmd.head.command)
  
  ::NullPmd::command* temp = command_;
  command_ = NULL;
  return temp;
}
void head::set_allocated_command(::NullPmd::command* command) {
  delete command_;
  command_ = command;
  if (command) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NullPmd.head.command)
}

// .NullPmd.info info = 2;
bool head::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void head::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::NullPmd::info& head::info() const {
  // @@protoc_insertion_point(field_get:NullPmd.head.info)
  return info_ != NULL ? *info_
                         : *::NullPmd::info::internal_default_instance();
}
::NullPmd::info* head::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::NullPmd::info;
  }
  // @@protoc_insertion_point(field_mutable:NullPmd.head.info)
  return info_;
}
::NullPmd::info* head::release_info() {
  // @@protoc_insertion_point(field_release:NullPmd.head.info)
  
  ::NullPmd::info* temp = info_;
  info_ = NULL;
  return temp;
}
void head::set_allocated_info(::NullPmd::info* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NullPmd.head.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message::kHeadFieldNumber;
const int message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message::message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_NullPmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NullPmd.message)
}
message::message(const message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_head()) {
    head_ = new ::NullPmd::head(*from.head_);
  } else {
    head_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NullPmd.message)
}

void message::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_ = NULL;
  _cached_size_ = 0;
}

message::~message() {
  // @@protoc_insertion_point(destructor:NullPmd.message)
  SharedDtor();
}

void message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete head_;
  }
}

void message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* message::descriptor() {
  protobuf_NullPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NullPmd_2eproto::file_level_metadata[6].descriptor;
}

const message& message::default_instance() {
  protobuf_NullPmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

message* message::New(::google::protobuf::Arena* arena) const {
  message* n = new message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void message::Clear() {
// @@protoc_insertion_point(message_clear_start:NullPmd.message)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
}

bool message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NullPmd.message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NullPmd.head head = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NullPmd.message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NullPmd.message)
  return false;
#undef DO_
}

void message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NullPmd.message)
  // .NullPmd.head head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->head_, output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:NullPmd.message)
}

::google::protobuf::uint8* message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NullPmd.message)
  // .NullPmd.head head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->head_, false, target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NullPmd.message)
  return target;
}

size_t message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NullPmd.message)
  size_t total_size = 0;

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .NullPmd.head head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->head_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NullPmd.message)
  GOOGLE_DCHECK_NE(&from, this);
  const message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NullPmd.message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NullPmd.message)
    MergeFrom(*source);
  }
}

void message::MergeFrom(const message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NullPmd.message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_head()) {
    mutable_head()->::NullPmd::head::MergeFrom(from.head());
  }
}

void message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NullPmd.message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void message::CopyFrom(const message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NullPmd.message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool message::IsInitialized() const {
  return true;
}

void message::Swap(message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void message::InternalSwap(message* other) {
  data_.Swap(&other->data_);
  std::swap(head_, other->head_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata message::GetMetadata() const {
  protobuf_NullPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NullPmd_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// message

// .NullPmd.head head = 1;
bool message::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
void message::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
const ::NullPmd::head& message::head() const {
  // @@protoc_insertion_point(field_get:NullPmd.message.head)
  return head_ != NULL ? *head_
                         : *::NullPmd::head::internal_default_instance();
}
::NullPmd::head* message::mutable_head() {
  
  if (head_ == NULL) {
    head_ = new ::NullPmd::head;
  }
  // @@protoc_insertion_point(field_mutable:NullPmd.message.head)
  return head_;
}
::NullPmd::head* message::release_head() {
  // @@protoc_insertion_point(field_release:NullPmd.message.head)
  
  ::NullPmd::head* temp = head_;
  head_ = NULL;
  return temp;
}
void message::set_allocated_head(::NullPmd::head* head) {
  delete head_;
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NullPmd.message.head)
}

// bytes data = 2;
void message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& message::data() const {
  // @@protoc_insertion_point(field_get:NullPmd.message.data)
  return data_.GetNoArena();
}
void message::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NullPmd.message.data)
}
#if LANG_CXX11
void message::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NullPmd.message.data)
}
#endif
void message::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NullPmd.message.data)
}
void message::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NullPmd.message.data)
}
::std::string* message::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:NullPmd.message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* message::release_data() {
  // @@protoc_insertion_point(field_release:NullPmd.message.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:NullPmd.message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace NullPmd

// @@protoc_insertion_point(global_scope)
