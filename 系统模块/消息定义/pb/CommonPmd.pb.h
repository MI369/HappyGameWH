// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonPmd.proto

#ifndef PROTOBUF_CommonPmd_2eproto__INCLUDED
#define PROTOBUF_CommonPmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace PlatPmd {
class CommonPmdCommand;
class CommonPmdCommandDefaultTypeInternal;
extern CommonPmdCommandDefaultTypeInternal _CommonPmdCommand_default_instance_;
class common_personinfo;
class common_personinfoDefaultTypeInternal;
extern common_personinfoDefaultTypeInternal _common_personinfo_default_instance_;
}  // namespace PlatPmd

namespace PlatPmd {

namespace protobuf_CommonPmd_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_CommonPmd_2eproto

enum CommonPmdCommand_CommonPmdEnum {
  CommonPmdCommand_CommonPmdEnum_param_nullmessage = 0,
  CommonPmdCommand_CommonPmdEnum_param_common_personinfo = 1,
  CommonPmdCommand_CommonPmdEnum_CommonPmdCommand_CommonPmdEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CommonPmdCommand_CommonPmdEnum_CommonPmdCommand_CommonPmdEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CommonPmdCommand_CommonPmdEnum_IsValid(int value);
const CommonPmdCommand_CommonPmdEnum CommonPmdCommand_CommonPmdEnum_CommonPmdEnum_MIN = CommonPmdCommand_CommonPmdEnum_param_nullmessage;
const CommonPmdCommand_CommonPmdEnum CommonPmdCommand_CommonPmdEnum_CommonPmdEnum_MAX = CommonPmdCommand_CommonPmdEnum_param_common_personinfo;
const int CommonPmdCommand_CommonPmdEnum_CommonPmdEnum_ARRAYSIZE = CommonPmdCommand_CommonPmdEnum_CommonPmdEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommonPmdCommand_CommonPmdEnum_descriptor();
inline const ::std::string& CommonPmdCommand_CommonPmdEnum_Name(CommonPmdCommand_CommonPmdEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommonPmdCommand_CommonPmdEnum_descriptor(), value);
}
inline bool CommonPmdCommand_CommonPmdEnum_Parse(
    const ::std::string& name, CommonPmdCommand_CommonPmdEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommonPmdCommand_CommonPmdEnum>(
    CommonPmdCommand_CommonPmdEnum_descriptor(), name, value);
}
// ===================================================================

class CommonPmdCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlatPmd.CommonPmdCommand) */ {
 public:
  CommonPmdCommand();
  virtual ~CommonPmdCommand();

  CommonPmdCommand(const CommonPmdCommand& from);

  inline CommonPmdCommand& operator=(const CommonPmdCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonPmdCommand& default_instance();

  static inline const CommonPmdCommand* internal_default_instance() {
    return reinterpret_cast<const CommonPmdCommand*>(
               &_CommonPmdCommand_default_instance_);
  }

  void Swap(CommonPmdCommand* other);

  // implements Message ----------------------------------------------

  inline CommonPmdCommand* New() const PROTOBUF_FINAL { return New(NULL); }

  CommonPmdCommand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommonPmdCommand& from);
  void MergeFrom(const CommonPmdCommand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommonPmdCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CommonPmdCommand_CommonPmdEnum CommonPmdEnum;
  static const CommonPmdEnum param_nullmessage =
    CommonPmdCommand_CommonPmdEnum_param_nullmessage;
  static const CommonPmdEnum param_common_personinfo =
    CommonPmdCommand_CommonPmdEnum_param_common_personinfo;
  static inline bool CommonPmdEnum_IsValid(int value) {
    return CommonPmdCommand_CommonPmdEnum_IsValid(value);
  }
  static const CommonPmdEnum CommonPmdEnum_MIN =
    CommonPmdCommand_CommonPmdEnum_CommonPmdEnum_MIN;
  static const CommonPmdEnum CommonPmdEnum_MAX =
    CommonPmdCommand_CommonPmdEnum_CommonPmdEnum_MAX;
  static const int CommonPmdEnum_ARRAYSIZE =
    CommonPmdCommand_CommonPmdEnum_CommonPmdEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CommonPmdEnum_descriptor() {
    return CommonPmdCommand_CommonPmdEnum_descriptor();
  }
  static inline const ::std::string& CommonPmdEnum_Name(CommonPmdEnum value) {
    return CommonPmdCommand_CommonPmdEnum_Name(value);
  }
  static inline bool CommonPmdEnum_Parse(const ::std::string& name,
      CommonPmdEnum* value) {
    return CommonPmdCommand_CommonPmdEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PlatPmd.CommonPmdCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_CommonPmd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class common_personinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlatPmd.common_personinfo) */ {
 public:
  common_personinfo();
  virtual ~common_personinfo();

  common_personinfo(const common_personinfo& from);

  inline common_personinfo& operator=(const common_personinfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const common_personinfo& default_instance();

  static inline const common_personinfo* internal_default_instance() {
    return reinterpret_cast<const common_personinfo*>(
               &_common_personinfo_default_instance_);
  }

  void Swap(common_personinfo* other);

  // implements Message ----------------------------------------------

  inline common_personinfo* New() const PROTOBUF_FINAL { return New(NULL); }

  common_personinfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const common_personinfo& from);
  void MergeFrom(const common_personinfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(common_personinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes cbgender = 12;
  void clear_cbgender();
  static const int kCbgenderFieldNumber = 12;
  const ::std::string& cbgender() const;
  void set_cbgender(const ::std::string& value);
  #if LANG_CXX11
  void set_cbgender(::std::string&& value);
  #endif
  void set_cbgender(const char* value);
  void set_cbgender(const void* value, size_t size);
  ::std::string* mutable_cbgender();
  ::std::string* release_cbgender();
  void set_allocated_cbgender(::std::string* cbgender);

  // bytes cbmoormachine = 13;
  void clear_cbmoormachine();
  static const int kCbmoormachineFieldNumber = 13;
  const ::std::string& cbmoormachine() const;
  void set_cbmoormachine(const ::std::string& value);
  #if LANG_CXX11
  void set_cbmoormachine(::std::string&& value);
  #endif
  void set_cbmoormachine(const char* value);
  void set_cbmoormachine(const void* value, size_t size);
  ::std::string* mutable_cbmoormachine();
  ::std::string* release_cbmoormachine();
  void set_allocated_cbmoormachine(::std::string* cbmoormachine);

  // string szaccounts = 14;
  void clear_szaccounts();
  static const int kSzaccountsFieldNumber = 14;
  const ::std::string& szaccounts() const;
  void set_szaccounts(const ::std::string& value);
  #if LANG_CXX11
  void set_szaccounts(::std::string&& value);
  #endif
  void set_szaccounts(const char* value);
  void set_szaccounts(const char* value, size_t size);
  ::std::string* mutable_szaccounts();
  ::std::string* release_szaccounts();
  void set_allocated_szaccounts(::std::string* szaccounts);

  // string sznickname = 15;
  void clear_sznickname();
  static const int kSznicknameFieldNumber = 15;
  const ::std::string& sznickname() const;
  void set_sznickname(const ::std::string& value);
  #if LANG_CXX11
  void set_sznickname(::std::string&& value);
  #endif
  void set_sznickname(const char* value);
  void set_sznickname(const char* value, size_t size);
  ::std::string* mutable_sznickname();
  ::std::string* release_sznickname();
  void set_allocated_sznickname(::std::string* sznickname);

  // string szdynamicpass = 16;
  void clear_szdynamicpass();
  static const int kSzdynamicpassFieldNumber = 16;
  const ::std::string& szdynamicpass() const;
  void set_szdynamicpass(const ::std::string& value);
  #if LANG_CXX11
  void set_szdynamicpass(::std::string&& value);
  #endif
  void set_szdynamicpass(const char* value);
  void set_szdynamicpass(const char* value, size_t size);
  ::std::string* mutable_szdynamicpass();
  ::std::string* release_szdynamicpass();
  void set_allocated_szdynamicpass(::std::string* szdynamicpass);

  // string szgroupname = 17;
  void clear_szgroupname();
  static const int kSzgroupnameFieldNumber = 17;
  const ::std::string& szgroupname() const;
  void set_szgroupname(const ::std::string& value);
  #if LANG_CXX11
  void set_szgroupname(::std::string&& value);
  #endif
  void set_szgroupname(const char* value);
  void set_szgroupname(const char* value, size_t size);
  ::std::string* mutable_szgroupname();
  ::std::string* release_szgroupname();
  void set_allocated_szgroupname(::std::string* szgroupname);

  // bytes cbinsureenabled = 18;
  void clear_cbinsureenabled();
  static const int kCbinsureenabledFieldNumber = 18;
  const ::std::string& cbinsureenabled() const;
  void set_cbinsureenabled(const ::std::string& value);
  #if LANG_CXX11
  void set_cbinsureenabled(::std::string&& value);
  #endif
  void set_cbinsureenabled(const char* value);
  void set_cbinsureenabled(const void* value, size_t size);
  ::std::string* mutable_cbinsureenabled();
  ::std::string* release_cbinsureenabled();
  void set_allocated_cbinsureenabled(::std::string* cbinsureenabled);

  // bytes cbshowserverstatus = 19;
  void clear_cbshowserverstatus();
  static const int kCbshowserverstatusFieldNumber = 19;
  const ::std::string& cbshowserverstatus() const;
  void set_cbshowserverstatus(const ::std::string& value);
  #if LANG_CXX11
  void set_cbshowserverstatus(::std::string&& value);
  #endif
  void set_cbshowserverstatus(const char* value);
  void set_cbshowserverstatus(const void* value, size_t size);
  ::std::string* mutable_cbshowserverstatus();
  ::std::string* release_cbshowserverstatus();
  void set_allocated_cbshowserverstatus(::std::string* cbshowserverstatus);

  // bytes cbisagent = 20;
  void clear_cbisagent();
  static const int kCbisagentFieldNumber = 20;
  const ::std::string& cbisagent() const;
  void set_cbisagent(const ::std::string& value);
  #if LANG_CXX11
  void set_cbisagent(::std::string&& value);
  #endif
  void set_cbisagent(const char* value);
  void set_cbisagent(const void* value, size_t size);
  ::std::string* mutable_cbisagent();
  ::std::string* release_cbisagent();
  void set_allocated_cbisagent(::std::string* cbisagent);

  // int32 wfaceid = 1;
  void clear_wfaceid();
  static const int kWfaceidFieldNumber = 1;
  ::google::protobuf::int32 wfaceid() const;
  void set_wfaceid(::google::protobuf::int32 value);

  // uint32 dwuserid = 2;
  void clear_dwuserid();
  static const int kDwuseridFieldNumber = 2;
  ::google::protobuf::uint32 dwuserid() const;
  void set_dwuserid(::google::protobuf::uint32 value);

  // uint32 dwgameid = 3;
  void clear_dwgameid();
  static const int kDwgameidFieldNumber = 3;
  ::google::protobuf::uint32 dwgameid() const;
  void set_dwgameid(::google::protobuf::uint32 value);

  // uint32 dwgroupid = 4;
  void clear_dwgroupid();
  static const int kDwgroupidFieldNumber = 4;
  ::google::protobuf::uint32 dwgroupid() const;
  void set_dwgroupid(::google::protobuf::uint32 value);

  // uint32 dwcustomid = 5;
  void clear_dwcustomid();
  static const int kDwcustomidFieldNumber = 5;
  ::google::protobuf::uint32 dwcustomid() const;
  void set_dwcustomid(::google::protobuf::uint32 value);

  // uint32 dwexperience = 6;
  void clear_dwexperience();
  static const int kDwexperienceFieldNumber = 6;
  ::google::protobuf::uint32 dwexperience() const;
  void set_dwexperience(::google::protobuf::uint32 value);

  // uint64 lloveliness = 7;
  void clear_lloveliness();
  static const int kLlovelinessFieldNumber = 7;
  ::google::protobuf::uint64 lloveliness() const;
  void set_lloveliness(::google::protobuf::uint64 value);

  // uint64 luserscore = 8;
  void clear_luserscore();
  static const int kLuserscoreFieldNumber = 8;
  ::google::protobuf::uint64 luserscore() const;
  void set_luserscore(::google::protobuf::uint64 value);

  // uint64 luserinsure = 9;
  void clear_luserinsure();
  static const int kLuserinsureFieldNumber = 9;
  ::google::protobuf::uint64 luserinsure() const;
  void set_luserinsure(::google::protobuf::uint64 value);

  // uint64 luseringot = 10;
  void clear_luseringot();
  static const int kLuseringotFieldNumber = 10;
  ::google::protobuf::uint64 luseringot() const;
  void set_luseringot(::google::protobuf::uint64 value);

  // double duserbeans = 11;
  void clear_duserbeans();
  static const int kDuserbeansFieldNumber = 11;
  double duserbeans() const;
  void set_duserbeans(double value);

  // @@protoc_insertion_point(class_scope:PlatPmd.common_personinfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cbgender_;
  ::google::protobuf::internal::ArenaStringPtr cbmoormachine_;
  ::google::protobuf::internal::ArenaStringPtr szaccounts_;
  ::google::protobuf::internal::ArenaStringPtr sznickname_;
  ::google::protobuf::internal::ArenaStringPtr szdynamicpass_;
  ::google::protobuf::internal::ArenaStringPtr szgroupname_;
  ::google::protobuf::internal::ArenaStringPtr cbinsureenabled_;
  ::google::protobuf::internal::ArenaStringPtr cbshowserverstatus_;
  ::google::protobuf::internal::ArenaStringPtr cbisagent_;
  ::google::protobuf::int32 wfaceid_;
  ::google::protobuf::uint32 dwuserid_;
  ::google::protobuf::uint32 dwgameid_;
  ::google::protobuf::uint32 dwgroupid_;
  ::google::protobuf::uint32 dwcustomid_;
  ::google::protobuf::uint32 dwexperience_;
  ::google::protobuf::uint64 lloveliness_;
  ::google::protobuf::uint64 luserscore_;
  ::google::protobuf::uint64 luserinsure_;
  ::google::protobuf::uint64 luseringot_;
  double duserbeans_;
  mutable int _cached_size_;
  friend struct  protobuf_CommonPmd_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CommonPmdCommand

// -------------------------------------------------------------------

// common_personinfo

// int32 wfaceid = 1;
inline void common_personinfo::clear_wfaceid() {
  wfaceid_ = 0;
}
inline ::google::protobuf::int32 common_personinfo::wfaceid() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.wfaceid)
  return wfaceid_;
}
inline void common_personinfo::set_wfaceid(::google::protobuf::int32 value) {
  
  wfaceid_ = value;
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.wfaceid)
}

// uint32 dwuserid = 2;
inline void common_personinfo::clear_dwuserid() {
  dwuserid_ = 0u;
}
inline ::google::protobuf::uint32 common_personinfo::dwuserid() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.dwuserid)
  return dwuserid_;
}
inline void common_personinfo::set_dwuserid(::google::protobuf::uint32 value) {
  
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.dwuserid)
}

// uint32 dwgameid = 3;
inline void common_personinfo::clear_dwgameid() {
  dwgameid_ = 0u;
}
inline ::google::protobuf::uint32 common_personinfo::dwgameid() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.dwgameid)
  return dwgameid_;
}
inline void common_personinfo::set_dwgameid(::google::protobuf::uint32 value) {
  
  dwgameid_ = value;
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.dwgameid)
}

// uint32 dwgroupid = 4;
inline void common_personinfo::clear_dwgroupid() {
  dwgroupid_ = 0u;
}
inline ::google::protobuf::uint32 common_personinfo::dwgroupid() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.dwgroupid)
  return dwgroupid_;
}
inline void common_personinfo::set_dwgroupid(::google::protobuf::uint32 value) {
  
  dwgroupid_ = value;
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.dwgroupid)
}

// uint32 dwcustomid = 5;
inline void common_personinfo::clear_dwcustomid() {
  dwcustomid_ = 0u;
}
inline ::google::protobuf::uint32 common_personinfo::dwcustomid() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.dwcustomid)
  return dwcustomid_;
}
inline void common_personinfo::set_dwcustomid(::google::protobuf::uint32 value) {
  
  dwcustomid_ = value;
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.dwcustomid)
}

// uint32 dwexperience = 6;
inline void common_personinfo::clear_dwexperience() {
  dwexperience_ = 0u;
}
inline ::google::protobuf::uint32 common_personinfo::dwexperience() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.dwexperience)
  return dwexperience_;
}
inline void common_personinfo::set_dwexperience(::google::protobuf::uint32 value) {
  
  dwexperience_ = value;
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.dwexperience)
}

// uint64 lloveliness = 7;
inline void common_personinfo::clear_lloveliness() {
  lloveliness_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 common_personinfo::lloveliness() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.lloveliness)
  return lloveliness_;
}
inline void common_personinfo::set_lloveliness(::google::protobuf::uint64 value) {
  
  lloveliness_ = value;
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.lloveliness)
}

// uint64 luserscore = 8;
inline void common_personinfo::clear_luserscore() {
  luserscore_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 common_personinfo::luserscore() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.luserscore)
  return luserscore_;
}
inline void common_personinfo::set_luserscore(::google::protobuf::uint64 value) {
  
  luserscore_ = value;
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.luserscore)
}

// uint64 luserinsure = 9;
inline void common_personinfo::clear_luserinsure() {
  luserinsure_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 common_personinfo::luserinsure() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.luserinsure)
  return luserinsure_;
}
inline void common_personinfo::set_luserinsure(::google::protobuf::uint64 value) {
  
  luserinsure_ = value;
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.luserinsure)
}

// uint64 luseringot = 10;
inline void common_personinfo::clear_luseringot() {
  luseringot_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 common_personinfo::luseringot() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.luseringot)
  return luseringot_;
}
inline void common_personinfo::set_luseringot(::google::protobuf::uint64 value) {
  
  luseringot_ = value;
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.luseringot)
}

// double duserbeans = 11;
inline void common_personinfo::clear_duserbeans() {
  duserbeans_ = 0;
}
inline double common_personinfo::duserbeans() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.duserbeans)
  return duserbeans_;
}
inline void common_personinfo::set_duserbeans(double value) {
  
  duserbeans_ = value;
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.duserbeans)
}

// bytes cbgender = 12;
inline void common_personinfo::clear_cbgender() {
  cbgender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& common_personinfo::cbgender() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.cbgender)
  return cbgender_.GetNoArena();
}
inline void common_personinfo::set_cbgender(const ::std::string& value) {
  
  cbgender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.cbgender)
}
#if LANG_CXX11
inline void common_personinfo::set_cbgender(::std::string&& value) {
  
  cbgender_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlatPmd.common_personinfo.cbgender)
}
#endif
inline void common_personinfo::set_cbgender(const char* value) {
  
  cbgender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlatPmd.common_personinfo.cbgender)
}
inline void common_personinfo::set_cbgender(const void* value, size_t size) {
  
  cbgender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlatPmd.common_personinfo.cbgender)
}
inline ::std::string* common_personinfo::mutable_cbgender() {
  
  // @@protoc_insertion_point(field_mutable:PlatPmd.common_personinfo.cbgender)
  return cbgender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* common_personinfo::release_cbgender() {
  // @@protoc_insertion_point(field_release:PlatPmd.common_personinfo.cbgender)
  
  return cbgender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void common_personinfo::set_allocated_cbgender(::std::string* cbgender) {
  if (cbgender != NULL) {
    
  } else {
    
  }
  cbgender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cbgender);
  // @@protoc_insertion_point(field_set_allocated:PlatPmd.common_personinfo.cbgender)
}

// bytes cbmoormachine = 13;
inline void common_personinfo::clear_cbmoormachine() {
  cbmoormachine_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& common_personinfo::cbmoormachine() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.cbmoormachine)
  return cbmoormachine_.GetNoArena();
}
inline void common_personinfo::set_cbmoormachine(const ::std::string& value) {
  
  cbmoormachine_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.cbmoormachine)
}
#if LANG_CXX11
inline void common_personinfo::set_cbmoormachine(::std::string&& value) {
  
  cbmoormachine_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlatPmd.common_personinfo.cbmoormachine)
}
#endif
inline void common_personinfo::set_cbmoormachine(const char* value) {
  
  cbmoormachine_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlatPmd.common_personinfo.cbmoormachine)
}
inline void common_personinfo::set_cbmoormachine(const void* value, size_t size) {
  
  cbmoormachine_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlatPmd.common_personinfo.cbmoormachine)
}
inline ::std::string* common_personinfo::mutable_cbmoormachine() {
  
  // @@protoc_insertion_point(field_mutable:PlatPmd.common_personinfo.cbmoormachine)
  return cbmoormachine_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* common_personinfo::release_cbmoormachine() {
  // @@protoc_insertion_point(field_release:PlatPmd.common_personinfo.cbmoormachine)
  
  return cbmoormachine_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void common_personinfo::set_allocated_cbmoormachine(::std::string* cbmoormachine) {
  if (cbmoormachine != NULL) {
    
  } else {
    
  }
  cbmoormachine_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cbmoormachine);
  // @@protoc_insertion_point(field_set_allocated:PlatPmd.common_personinfo.cbmoormachine)
}

// string szaccounts = 14;
inline void common_personinfo::clear_szaccounts() {
  szaccounts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& common_personinfo::szaccounts() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.szaccounts)
  return szaccounts_.GetNoArena();
}
inline void common_personinfo::set_szaccounts(const ::std::string& value) {
  
  szaccounts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.szaccounts)
}
#if LANG_CXX11
inline void common_personinfo::set_szaccounts(::std::string&& value) {
  
  szaccounts_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlatPmd.common_personinfo.szaccounts)
}
#endif
inline void common_personinfo::set_szaccounts(const char* value) {
  
  szaccounts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlatPmd.common_personinfo.szaccounts)
}
inline void common_personinfo::set_szaccounts(const char* value, size_t size) {
  
  szaccounts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlatPmd.common_personinfo.szaccounts)
}
inline ::std::string* common_personinfo::mutable_szaccounts() {
  
  // @@protoc_insertion_point(field_mutable:PlatPmd.common_personinfo.szaccounts)
  return szaccounts_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* common_personinfo::release_szaccounts() {
  // @@protoc_insertion_point(field_release:PlatPmd.common_personinfo.szaccounts)
  
  return szaccounts_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void common_personinfo::set_allocated_szaccounts(::std::string* szaccounts) {
  if (szaccounts != NULL) {
    
  } else {
    
  }
  szaccounts_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szaccounts);
  // @@protoc_insertion_point(field_set_allocated:PlatPmd.common_personinfo.szaccounts)
}

// string sznickname = 15;
inline void common_personinfo::clear_sznickname() {
  sznickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& common_personinfo::sznickname() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.sznickname)
  return sznickname_.GetNoArena();
}
inline void common_personinfo::set_sznickname(const ::std::string& value) {
  
  sznickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.sznickname)
}
#if LANG_CXX11
inline void common_personinfo::set_sznickname(::std::string&& value) {
  
  sznickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlatPmd.common_personinfo.sznickname)
}
#endif
inline void common_personinfo::set_sznickname(const char* value) {
  
  sznickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlatPmd.common_personinfo.sznickname)
}
inline void common_personinfo::set_sznickname(const char* value, size_t size) {
  
  sznickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlatPmd.common_personinfo.sznickname)
}
inline ::std::string* common_personinfo::mutable_sznickname() {
  
  // @@protoc_insertion_point(field_mutable:PlatPmd.common_personinfo.sznickname)
  return sznickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* common_personinfo::release_sznickname() {
  // @@protoc_insertion_point(field_release:PlatPmd.common_personinfo.sznickname)
  
  return sznickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void common_personinfo::set_allocated_sznickname(::std::string* sznickname) {
  if (sznickname != NULL) {
    
  } else {
    
  }
  sznickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sznickname);
  // @@protoc_insertion_point(field_set_allocated:PlatPmd.common_personinfo.sznickname)
}

// string szdynamicpass = 16;
inline void common_personinfo::clear_szdynamicpass() {
  szdynamicpass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& common_personinfo::szdynamicpass() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.szdynamicpass)
  return szdynamicpass_.GetNoArena();
}
inline void common_personinfo::set_szdynamicpass(const ::std::string& value) {
  
  szdynamicpass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.szdynamicpass)
}
#if LANG_CXX11
inline void common_personinfo::set_szdynamicpass(::std::string&& value) {
  
  szdynamicpass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlatPmd.common_personinfo.szdynamicpass)
}
#endif
inline void common_personinfo::set_szdynamicpass(const char* value) {
  
  szdynamicpass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlatPmd.common_personinfo.szdynamicpass)
}
inline void common_personinfo::set_szdynamicpass(const char* value, size_t size) {
  
  szdynamicpass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlatPmd.common_personinfo.szdynamicpass)
}
inline ::std::string* common_personinfo::mutable_szdynamicpass() {
  
  // @@protoc_insertion_point(field_mutable:PlatPmd.common_personinfo.szdynamicpass)
  return szdynamicpass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* common_personinfo::release_szdynamicpass() {
  // @@protoc_insertion_point(field_release:PlatPmd.common_personinfo.szdynamicpass)
  
  return szdynamicpass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void common_personinfo::set_allocated_szdynamicpass(::std::string* szdynamicpass) {
  if (szdynamicpass != NULL) {
    
  } else {
    
  }
  szdynamicpass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szdynamicpass);
  // @@protoc_insertion_point(field_set_allocated:PlatPmd.common_personinfo.szdynamicpass)
}

// string szgroupname = 17;
inline void common_personinfo::clear_szgroupname() {
  szgroupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& common_personinfo::szgroupname() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.szgroupname)
  return szgroupname_.GetNoArena();
}
inline void common_personinfo::set_szgroupname(const ::std::string& value) {
  
  szgroupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.szgroupname)
}
#if LANG_CXX11
inline void common_personinfo::set_szgroupname(::std::string&& value) {
  
  szgroupname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlatPmd.common_personinfo.szgroupname)
}
#endif
inline void common_personinfo::set_szgroupname(const char* value) {
  
  szgroupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlatPmd.common_personinfo.szgroupname)
}
inline void common_personinfo::set_szgroupname(const char* value, size_t size) {
  
  szgroupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlatPmd.common_personinfo.szgroupname)
}
inline ::std::string* common_personinfo::mutable_szgroupname() {
  
  // @@protoc_insertion_point(field_mutable:PlatPmd.common_personinfo.szgroupname)
  return szgroupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* common_personinfo::release_szgroupname() {
  // @@protoc_insertion_point(field_release:PlatPmd.common_personinfo.szgroupname)
  
  return szgroupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void common_personinfo::set_allocated_szgroupname(::std::string* szgroupname) {
  if (szgroupname != NULL) {
    
  } else {
    
  }
  szgroupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szgroupname);
  // @@protoc_insertion_point(field_set_allocated:PlatPmd.common_personinfo.szgroupname)
}

// bytes cbinsureenabled = 18;
inline void common_personinfo::clear_cbinsureenabled() {
  cbinsureenabled_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& common_personinfo::cbinsureenabled() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.cbinsureenabled)
  return cbinsureenabled_.GetNoArena();
}
inline void common_personinfo::set_cbinsureenabled(const ::std::string& value) {
  
  cbinsureenabled_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.cbinsureenabled)
}
#if LANG_CXX11
inline void common_personinfo::set_cbinsureenabled(::std::string&& value) {
  
  cbinsureenabled_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlatPmd.common_personinfo.cbinsureenabled)
}
#endif
inline void common_personinfo::set_cbinsureenabled(const char* value) {
  
  cbinsureenabled_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlatPmd.common_personinfo.cbinsureenabled)
}
inline void common_personinfo::set_cbinsureenabled(const void* value, size_t size) {
  
  cbinsureenabled_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlatPmd.common_personinfo.cbinsureenabled)
}
inline ::std::string* common_personinfo::mutable_cbinsureenabled() {
  
  // @@protoc_insertion_point(field_mutable:PlatPmd.common_personinfo.cbinsureenabled)
  return cbinsureenabled_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* common_personinfo::release_cbinsureenabled() {
  // @@protoc_insertion_point(field_release:PlatPmd.common_personinfo.cbinsureenabled)
  
  return cbinsureenabled_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void common_personinfo::set_allocated_cbinsureenabled(::std::string* cbinsureenabled) {
  if (cbinsureenabled != NULL) {
    
  } else {
    
  }
  cbinsureenabled_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cbinsureenabled);
  // @@protoc_insertion_point(field_set_allocated:PlatPmd.common_personinfo.cbinsureenabled)
}

// bytes cbshowserverstatus = 19;
inline void common_personinfo::clear_cbshowserverstatus() {
  cbshowserverstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& common_personinfo::cbshowserverstatus() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.cbshowserverstatus)
  return cbshowserverstatus_.GetNoArena();
}
inline void common_personinfo::set_cbshowserverstatus(const ::std::string& value) {
  
  cbshowserverstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.cbshowserverstatus)
}
#if LANG_CXX11
inline void common_personinfo::set_cbshowserverstatus(::std::string&& value) {
  
  cbshowserverstatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlatPmd.common_personinfo.cbshowserverstatus)
}
#endif
inline void common_personinfo::set_cbshowserverstatus(const char* value) {
  
  cbshowserverstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlatPmd.common_personinfo.cbshowserverstatus)
}
inline void common_personinfo::set_cbshowserverstatus(const void* value, size_t size) {
  
  cbshowserverstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlatPmd.common_personinfo.cbshowserverstatus)
}
inline ::std::string* common_personinfo::mutable_cbshowserverstatus() {
  
  // @@protoc_insertion_point(field_mutable:PlatPmd.common_personinfo.cbshowserverstatus)
  return cbshowserverstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* common_personinfo::release_cbshowserverstatus() {
  // @@protoc_insertion_point(field_release:PlatPmd.common_personinfo.cbshowserverstatus)
  
  return cbshowserverstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void common_personinfo::set_allocated_cbshowserverstatus(::std::string* cbshowserverstatus) {
  if (cbshowserverstatus != NULL) {
    
  } else {
    
  }
  cbshowserverstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cbshowserverstatus);
  // @@protoc_insertion_point(field_set_allocated:PlatPmd.common_personinfo.cbshowserverstatus)
}

// bytes cbisagent = 20;
inline void common_personinfo::clear_cbisagent() {
  cbisagent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& common_personinfo::cbisagent() const {
  // @@protoc_insertion_point(field_get:PlatPmd.common_personinfo.cbisagent)
  return cbisagent_.GetNoArena();
}
inline void common_personinfo::set_cbisagent(const ::std::string& value) {
  
  cbisagent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlatPmd.common_personinfo.cbisagent)
}
#if LANG_CXX11
inline void common_personinfo::set_cbisagent(::std::string&& value) {
  
  cbisagent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlatPmd.common_personinfo.cbisagent)
}
#endif
inline void common_personinfo::set_cbisagent(const char* value) {
  
  cbisagent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlatPmd.common_personinfo.cbisagent)
}
inline void common_personinfo::set_cbisagent(const void* value, size_t size) {
  
  cbisagent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlatPmd.common_personinfo.cbisagent)
}
inline ::std::string* common_personinfo::mutable_cbisagent() {
  
  // @@protoc_insertion_point(field_mutable:PlatPmd.common_personinfo.cbisagent)
  return cbisagent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* common_personinfo::release_cbisagent() {
  // @@protoc_insertion_point(field_release:PlatPmd.common_personinfo.cbisagent)
  
  return cbisagent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void common_personinfo::set_allocated_cbisagent(::std::string* cbisagent) {
  if (cbisagent != NULL) {
    
  } else {
    
  }
  cbisagent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cbisagent);
  // @@protoc_insertion_point(field_set_allocated:PlatPmd.common_personinfo.cbisagent)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace PlatPmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PlatPmd::CommonPmdCommand_CommonPmdEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PlatPmd::CommonPmdCommand_CommonPmdEnum>() {
  return ::PlatPmd::CommonPmdCommand_CommonPmdEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CommonPmd_2eproto__INCLUDED
